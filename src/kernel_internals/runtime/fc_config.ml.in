(**************************************************************************)
(*                                                                        *)
(*  This file is part of Frama-C.                                         *)
(*                                                                        *)
(*  Copyright (C) 2007-2024                                               *)
(*    CEA (Commissariat à l'énergie atomique et aux énergies              *)
(*         alternatives)                                                  *)
(*                                                                        *)
(*  you can redistribute it and/or modify it under the terms of the GNU   *)
(*  Lesser General Public License as published by the Free Software       *)
(*  Foundation, version 2.1.                                              *)
(*                                                                        *)
(*  It is distributed in the hope that it will be useful,                 *)
(*  but WITHOUT ANY WARRANTY; without even the implied warranty of        *)
(*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *)
(*  GNU Lesser General Public License for more details.                   *)
(*                                                                        *)
(*  See the GNU Lesser General Public License version 2.1                 *)
(*  for more details (enclosed in the file licenses/LGPLv2.1).            *)
(*                                                                        *)
(**************************************************************************)

# 24 "src/kernel_internals/runtime/fc_config.ml.in"

let version = "@VERSION@"
let codename = "@VERSION_CODENAME@"
let version_and_codename = version ^ " (" ^ codename ^ ")"

let major_version = @MAJOR_VERSION@

let minor_version = @MINOR_VERSION@

let is_gui = Frama_c_very_first.Gui_init.is_gui

let datadirs = (List.map Filepath.Normalized.of_string Config_data.Sites.share)
let datadir = List.hd (List.rev datadirs)

let libdirs = (List.map Filepath.Normalized.of_string Config_data.Sites.lib)
let libdir = List.hd (List.rev libdirs)

let plugin_dir = List.map Filepath.Normalized.of_string Config_data.Sites.plugins

let plugin_path =
  String.concat ":" (Filepath.Normalized.to_string_list plugin_dir)

let framac_libc = Filepath.Normalized.concat datadir "libc"

let () = Filepath.add_symbolic_dir_list "FRAMAC_SHARE" datadirs
let () = Filepath.add_symbolic_dir_list "FRAMAC_PLUGIN" plugin_dir

let default_cpp = "@FRAMAC_DEFAULT_CPP@"

let default_cpp_args = " @FRAMAC_DEFAULT_CPP_ARGS@"

let env_or_default f vdefault =
  try
    let env = Sys.getenv "CPP" ^ default_cpp_args in
    if env=default_cpp then vdefault else f env
  with Not_found -> vdefault

let preprocessor = env_or_default (fun x -> x) default_cpp

let using_default_cpp = env_or_default (fun _ -> false) true

let preprocessor_is_gnu_like =
  env_or_default
    (fun _ ->
       (* be more lenient when trying to determine if the preprocessor
          is gnu-like: in Cygwin, for instance, CC is "<prefix>-gcc" but
          CPP is "<prefix>-cpp", so this extra test allows proper detection. *)
       let env = Sys.getenv "CC" ^ default_cpp_args in
       env=default_cpp) @FRAMAC_GNU_CPP@

let preprocessor_supported_arch_options = [@DEFAULT_CPP_SUPPORTED_ARCH_OPTS@]

let preprocessor_keep_comments =
  env_or_default (fun _ -> true) @DEFAULT_CPP_KEEP_COMMENTS@
