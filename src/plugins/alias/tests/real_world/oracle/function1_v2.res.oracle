[kernel] Parsing function1_v2.c (with preprocessing)
[alias] analysing function: alias
[alias] analysing instruction: *x = *y;
[alias] May-aliases after instruction  *x = *y;  are  { x; y }  { *x; *y }
[alias] May-alias graph after instruction  *x = *y;  is
  0:{ x } → 1:{  }   1:{  } → 2:{  }   3:{ y } → 1:{  }
[alias] May-aliases at the end of function alias: { x; y }  { *x; *y }
[alias] May-alias graph at the end of function alias:
  0:{ x } → 1:{  }   1:{  } → 2:{  }   3:{ y } → 1:{  }
[alias] Summary of function alias:
  formals: x  y    returns: <none>    state: { x; y }  { *x; *y }
[alias] analysing function: main
[alias] analysing instruction: int *a = malloc(sizeof(int));
[alias] May-aliases after instruction  int *a = malloc(sizeof(int));  are  <none>
[alias] May-alias graph after instruction  int *a = malloc(sizeof(int));  is
  6:{ a } → 7:{  }
[alias] analysing instruction: *a = 0;
[alias] May-aliases after instruction  *a = 0;  are  <none>
[alias] May-alias graph after instruction  *a = 0;  is    6:{ a } → 7:{  }
[alias] analysing instruction: int *b = malloc(sizeof(int));
[alias] May-aliases after instruction  int *b = malloc(sizeof(int));  are  <none>
[alias] May-alias graph after instruction  int *b = malloc(sizeof(int));  is
  6:{ a } → 7:{  }   8:{ b } → 9:{  }
[alias] analysing instruction: *b = 42;
[alias] May-aliases after instruction  *b = 42;  are  <none>
[alias] May-alias graph after instruction  *b = 42;  is
  6:{ a } → 7:{  }   8:{ b } → 9:{  }
[alias] analysing instruction: alias(& a,& b);
[alias] May-aliases after instruction  alias(& a,& b);  are  { a; b }
[alias] May-alias graph after instruction  alias(& a,& b);  is
  6:{ a; b } → 7:{  }   14:{  } → 6:{ a; b }   15:{  } → 6:{ a; b }
[alias] analysing instruction: *a = 7;
[alias] May-aliases after instruction  *a = 7;  are  { a; b }
[alias] May-alias graph after instruction  *a = 7;  is
  6:{ a; b } → 7:{  }   14:{  } → 6:{ a; b }   15:{  } → 6:{ a; b }
[alias] analysing instruction: __retres = 0;
[alias] May-aliases after instruction  __retres = 0;  are  { a; b }
[alias] May-alias graph after instruction  __retres = 0;  is
  6:{ a; b } → 7:{  }   14:{  } → 6:{ a; b }   15:{  } → 6:{ a; b }
[alias] May-aliases at the end of function main: { a; b }
[alias] May-alias graph at the end of function main:
  6:{ a; b } → 7:{  }   14:{  } → 6:{ a; b }   15:{  } → 6:{ a; b }
[alias] Summary of function main:
  formals:     returns: __retres    state: { a; b }
[alias] Analysis complete
