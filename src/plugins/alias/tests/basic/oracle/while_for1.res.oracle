[kernel] Parsing while_for1.c (with preprocessing)
[alias] analysing function: main
[alias] analysing instruction: int *s = (int *)0;
[alias] May-aliases after instruction  int *s = (int *)0;  are  <none>
[alias] May-alias graph after instruction  int *s = (int *)0;  is    <empty>
[alias] analysing instruction: int idx = 0;
[alias] May-aliases after instruction  int idx = 0;  are  <none>
[alias] May-alias graph after instruction  int idx = 0;  is    <empty>
[alias] analysing instruction: s = (int *)malloc((size_t)idx);
[alias] May-aliases after instruction  s = (int *)malloc((size_t)idx);  are  <none>
[alias] May-alias graph after instruction  s = (int *)malloc((size_t)idx);  is
  0:{ s } → 1:{  }
[alias] analysing instruction: idx ++;
[alias] May-aliases after instruction  idx ++;  are  <none>
[alias] May-alias graph after instruction  idx ++;  is    0:{ s } → 1:{  }
[alias] analysing instruction: s = (int *)malloc((size_t)idx);
[alias] May-aliases after instruction  s = (int *)malloc((size_t)idx);  are  <none>
[alias] May-alias graph after instruction  s = (int *)malloc((size_t)idx);  is
  0:{ s } → 1:{  }
[alias] analysing instruction: __retres = 0;
[alias] May-aliases after instruction  __retres = 0;  are  <none>
[alias] May-alias graph after instruction  __retres = 0;  is    0:{ s } → 1:{  }
[alias] May-aliases at the end of function main: <none>
[alias] May-alias graph at the end of function main:
  0:{ s } → 1:{  }
[alias] Summary of function main:
  formals:     returns: __retres    state: <none>
[alias] Analysis complete
