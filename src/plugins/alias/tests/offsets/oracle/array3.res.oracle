[kernel] Parsing array3.c (with preprocessing)
[alias] analysing function: main
[alias] analysing instruction: int *x = malloc((unsigned long)4 * sizeof(int));
[alias] May-aliases after instruction
  int *x = malloc((unsigned long)4 * sizeof(int));  are  <none>
[alias] May-alias graph after instruction
  int *x = malloc((unsigned long)4 * sizeof(int));  is    0:{ x } → 1:{  }
[alias] analysing instruction: int *y = malloc((unsigned long)4 * sizeof(int));
[alias] May-aliases after instruction
  int *y = malloc((unsigned long)4 * sizeof(int));  are  <none>
[alias] May-alias graph after instruction
  int *y = malloc((unsigned long)4 * sizeof(int));  is
  0:{ x } → 1:{  }   2:{ y } → 3:{  }
[alias] analysing instruction: x = mat[0];
[alias] May-aliases after instruction  x = mat[0];  are  { mat[0..]; x }
[alias] May-alias graph after instruction  x = mat[0];  is
  0:{ x } → 1:{  }   2:{ y } → 3:{  }   4:{ mat } → 0:{ x }
[alias] analysing instruction: y = mat[1];
[alias] May-aliases after instruction  y = mat[1];  are  { mat[0..]; x; y }
[alias] May-alias graph after instruction  y = mat[1];  is
  2:{ x; y } → 3:{  }   4:{ mat } → 2:{ x; y }
[alias] analysing instruction: __retres = 0;
[alias] May-aliases after instruction  __retres = 0;  are  { mat[0..]; x; y }
[alias] May-alias graph after instruction  __retres = 0;  is
  2:{ x; y } → 3:{  }   4:{ mat } → 2:{ x; y }
[alias] May-aliases at the end of function main: { mat[0..]; x; y }
[alias] May-alias graph at the end of function main:
  2:{ x; y } → 3:{  }   4:{ mat } → 2:{ x; y }
[alias] Summary of function main:
  formals:     returns: __retres    state: { mat[0..]; x; y }
[alias] Analysis complete
