[kernel] Parsing structure5.c (with preprocessing)
[alias] analysing function: main
[alias] analysing instruction: st_1_t x1 = {.a = 0, .b = 1};
[alias] May-aliases after instruction  st_1_t x1 = {.a = 0, .b = 1};  are  <none>
[alias] May-alias graph after instruction  st_1_t x1 = {.a = 0, .b = 1};  is
  <empty>
[alias] analysing instruction: st_1_t x2 = {.a = 1, .b = 2};
[alias] May-aliases after instruction  st_1_t x2 = {.a = 1, .b = 2};  are  <none>
[alias] May-alias graph after instruction  st_1_t x2 = {.a = 1, .b = 2};  is
  <empty>
[alias] analysing instruction: st_1_t *y1 = malloc(sizeof(st_1_t));
[alias] May-aliases after instruction  st_1_t *y1 = malloc(sizeof(st_1_t));  are
  <none>
[alias] May-alias graph after instruction  st_1_t *y1 = malloc(sizeof(st_1_t));
  is    0:{ y1 } → 1:{  }
[alias] analysing instruction: st_2_t *z = malloc(sizeof(st_2_t));
[alias] May-aliases after instruction  st_2_t *z = malloc(sizeof(st_2_t));  are
  <none>
[alias] May-alias graph after instruction  st_2_t *z = malloc(sizeof(st_2_t));  is
  0:{ y1 } → 1:{  }   2:{ z } → 3:{  }
[alias] analysing instruction: st_3_t *t = malloc(sizeof(st_3_t));
[alias] May-aliases after instruction  st_3_t *t = malloc(sizeof(st_3_t));  are
  <none>
[alias] May-alias graph after instruction  st_3_t *t = malloc(sizeof(st_3_t));  is
  0:{ y1 } → 1:{  }   2:{ z } → 3:{  }   4:{ t } → 5:{  }
[alias] analysing instruction: int *a = malloc(sizeof(int));
[alias] May-aliases after instruction  int *a = malloc(sizeof(int));  are  <none>
[alias] May-alias graph after instruction  int *a = malloc(sizeof(int));  is
  0:{ y1 } → 1:{  }   2:{ z } → 3:{  }   4:{ t } → 5:{  }
  6:{ a } → 7:{  }
[alias] analysing instruction: *a = 0;
[alias] May-aliases after instruction  *a = 0;  are  <none>
[alias] May-alias graph after instruction  *a = 0;  is
  0:{ y1 } → 1:{  }   2:{ z } → 3:{  }   4:{ t } → 5:{  }
  6:{ a } → 7:{  }
[alias] analysing instruction: y1 = & x1;
[alias] May-aliases after instruction  y1 = & x1;  are  <none>
[alias] May-alias graph after instruction  y1 = & x1;  is
  0:{ y1 } → 1:{ x1 }   2:{ z } → 3:{  }   4:{ t } → 5:{  }
  6:{ a } → 7:{  }
[alias] analysing instruction: z->s = (struct struct_1_t *)y1;
[alias:unsafe-cast] structure5.c:41: Warning: 
  unsafe cast from st_1_t * to struct struct_1_t *; analysis may be unsound
[alias] May-aliases after instruction  z->s = (struct struct_1_t *)y1;  are
  { z->s; y1 }
[alias] May-alias graph after instruction  z->s = (struct struct_1_t *)y1;  is
  2:{ z } → 3:{  }   3:{  } -s→ 10:{ y1 }   4:{ t } → 5:{  }
  6:{ a } → 7:{  }   10:{ y1 } → 1:{ x1 }
[alias] analysing instruction: z->c = a;
[alias] May-aliases after instruction  z->c = a;  are  { z->s; y1 }  { z->c; a }
[alias] May-alias graph after instruction  z->c = a;  is
  2:{ z } → 3:{  }   3:{  } -s→ 10:{ y1 }   3:{  } -c→ 11:{ a }
  4:{ t } → 5:{  }   10:{ y1 } → 1:{ x1 }   11:{ a } → 7:{  }
[alias] analysing instruction: t->t = (struct struct_2_t *)z;
[alias:unsafe-cast] structure5.c:43: Warning: 
  unsafe cast from st_2_t * to struct struct_2_t *; analysis may be unsound
[alias] May-aliases after instruction  t->t = (struct struct_2_t *)z;  are
  { (t->t)->s; z->s; y1 }  { t->t; z }  { (t->t)->c; z->c; a }
[alias] May-alias graph after instruction  t->t = (struct struct_2_t *)z;  is
  3:{  } -s→ 10:{ y1 }   3:{  } -c→ 11:{ a }   4:{ t } → 5:{  }
  5:{  } -t→ 12:{ z }   10:{ y1 } → 1:{ x1 }   11:{ a } → 7:{  }
  12:{ z } → 3:{  }
[alias] analysing instruction: t->d = a;
[alias] May-aliases after instruction  t->d = a;  are
  { (t->t)->s; z->s; y1 }  { t->t; z }  { (t->t)->c; z->c; t->d; a }
[alias] May-alias graph after instruction  t->d = a;  is
  3:{  } -s→ 10:{ y1 }   3:{  } -c→ 13:{ a }   4:{ t } → 5:{  }
  5:{  } -t→ 12:{ z }   5:{  } -d→ 13:{ a }   10:{ y1 } → 1:{ x1 }
  12:{ z } → 3:{  }   13:{ a } → 7:{  }
[alias] analysing instruction: __retres = 0;
[alias] May-aliases after instruction  __retres = 0;  are
  { (t->t)->s; z->s; y1 }  { t->t; z }  { (t->t)->c; z->c; t->d; a }
[alias] May-alias graph after instruction  __retres = 0;  is
  3:{  } -s→ 10:{ y1 }   3:{  } -c→ 13:{ a }   4:{ t } → 5:{  }
  5:{  } -t→ 12:{ z }   5:{  } -d→ 13:{ a }   10:{ y1 } → 1:{ x1 }
  12:{ z } → 3:{  }   13:{ a } → 7:{  }
[alias] May-aliases at the end of function main:
  { (t->t)->s; z->s; y1 }  { t->t; z }  { (t->t)->c; z->c; t->d; a }
[alias] May-alias graph at the end of function main:
  3:{  } -s→ 10:{ y1 }   3:{  } -c→ 13:{ a }   4:{ t } → 5:{  }
  5:{  } -t→ 12:{ z }   5:{  } -d→ 13:{ a }   10:{ y1 } → 1:{ x1 }
  12:{ z } → 3:{  }   13:{ a } → 7:{  }
[alias] Summary of function main:
  formals:     returns: __retres
  state: { (t->t)->s; z->s; y1 }  { t->t; z }  { (t->t)->c; z->c; t->d; a }
[alias] Analysis complete
