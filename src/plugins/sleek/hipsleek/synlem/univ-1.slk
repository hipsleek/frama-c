data node {
	int val; 
	node next;	
}.

pred lseg<p:node,n> == 
     self=p & n=0
  or self::node<_,q> * q::lseg<p,n-1>
  inv n>=0.

lemma_safe "xx" 
   self::lseg<p,n> & n=a+b & a>=0 & b>=0  
    <-> self::lseg<q2,a> * q2::lseg<p,b> 
.
// wrong if we use <- for complex lemma
checkentail self::rlseg<p1>* p1::node<_,p> |- self::node<_,q>*q::rlseg<p> .

