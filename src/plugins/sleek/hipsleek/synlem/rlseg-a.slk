data node {
     int val;
     node next;
}.

// this is unusual predicate definition

pred rlseg<p:node> == self=p
  or self::node<_,q> * q::rlseg<p>.

lemma_safe "two" self::rlseg<p1>*p1::rlseg<p> <-> self::rlseg<p>.

lemma_safe "one" self::rlseg<p1> * p1::node<_,p> <-> self::rlseg<p>.

/*
# rlseg-a.slk

WARNING below is inaccurate. it should be <==
Should improve this

!!! WARNING : split equiv lemma into two -> lemmas 
Entailing lemma one: Fail. Details below:
	 "==>" implication: : Valid.
	 "==>" implication: : Fail. (must) cause: residue is forbidden.(2)
*/