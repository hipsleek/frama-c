data node {
 int val;
 node next
 }.

 
pred ll<n> == self = null & n = 0
	or self::node<_,r> * r::ll<n - 1>
	inv n >= 0.


checkentail x::ll<n>* y::ll<m> & n>0 & m>0  |- x!=y.
print residue.

/*
  above fails; does specialization handle it?

checkentail x::ll<n>* x::ll<m> & n>0 & m>0  |- false.
print residue.

*/

/*
checkentail x::node<_,_>* y::node<_,_>  |- x!=y.
print residue.

checkentail x::ll<n> & n=1  |- x::node<v,r>.
print residue.

*/


checkentail x::node<v,r> & r=null  |- x::ll<n>.
print residue.
