data node { int val ; node next }.

pred ll<n> == self = null & n = 0
	or self::node<next = r> * r::ll<n - 1>
	inv n >= 0.


// may failure
checkentail x::ll<n> & n > 1|- x::ll<m> & m > 3.
print residue.

// must failure
checkentail x=null  |- x::node<_,_>.
print residue.

// must failure
checkentail x::node<_,_> |- x=null.
print residue.

// may failure
checkentail x::ll<_> |- x=null.
print residue.

// must failure
checkentail x::ll<n> & n>0 |- x=null.
print residue.

// may failure
checkentail x::ll<n> |- x::ll<m> & m>3.
print residue.

// must failure
checkentail x::ll<n> & n=1 |- x::ll<m> & m>3.
print residue.

// must failure
checkentail x::ll<n> & n > 1 |- x::ll<m> & m < 2.
print residue.

// valid
checkentail n > 1 or n > 3 |- n > 1.
//print residue.

