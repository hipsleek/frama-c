# e1.slk

//(2)
checkentail x::node<_,p_1234> * y::node<_,p1> * z::node<_,p1_3> |- true.
print residue.
/*
 name clash!
  <1>x::node<p> * y::node<_,p1> * z::node<_,p1>&{FLOW,(21,22)=__norm}[]
*/

//(3)
checkentail x::node<_,p_1234> * y::node<_,p_1> * z::node<_,p_3> |- true.
print residue.
// <1>x::node<p> * y::node<p2> * z::node<p3>&{FLOW,(21,22)=__norm}[]

//(4) FIXED
checkentail x::node<_,p> & p=q |- true.
print residue.

/*
Got:
 <1>x::node<_,q>&{FLOW,(21,22)=__norm}[]
Do not drop var equality, unless it is known to be
an intermediate var.

Expect:
 <1>x::node<_,q> & p=q&{FLOW,(21,22)=__norm}[]
*/

//(5) FIXED
checkentail x::node<_,p> & p=null |- true.
print residue.
/*
 why p became p4?
 should reset with each entail
 <1>x::node<p4>&p4=null&{FLOW,(21,22)=__norm}[]
*/

checkentail x::node<v,_> & v=2 |- true.
print residue.
// <1>x::node<v,_>&v=2&{FLOW,(21,22)=__norm}[]

checkentail x::node<2,null>  |- true.
print residue.
/*
  <1>x::node<flted1,flted>&flted=null & flted1=2&{FLOW,(21,22)=__norm}[]

  Good to keep type info:
  <1>x::node<flted_int,flted_node>&flted_node=null & flted_int=2&{FLOW,(21,22)=__norm}[]

or better use (assuming flted_x is intermediate.
  <1>x::node<2,null>&{FLOW,(21,22)=__norm}[]
===================================================================
# fact2.ss

--dis-print-tidy

id: 2; caller: []; line: 15; classic: false; kind: PRE; hec_num: 1; evars: []; infer_vars: []; c_heap: emp
 checkentail emp&x'=x & x'!=0 & !(v_bool_14_1111') & x'!=0 & !(v_bool_14_1111') & 
v_int_15_1109'=1 & v_int_15_1106'=1&{FLOW,(24,25)=__norm}[]
 |-  emp&{FLOW,(24,25)=__norm}[]. 
res:  1[
   emp&x'=x & x'!=0 & !(v_bool_14_1111') & x'!=0 & !(v_bool_14_1111') & v_int_15_1109'=1 & v_int_15_1106'=1&{FLOW,(24,25)=__norm}[]
   ]

(i) remove duplicates
(ii) keep x'=x



id: 2; caller: []; line: 15; classic: false; kind: PRE; hec_num: 1; evars: []; infer_vars: []; c_heap: emp
 checkentail emp&x!=0 & !(v4') & v3'=1 & v2'=1&{FLOW,(24,25)=__norm}[]
 |-  emp&{FLOW,(24,25)=__norm}[]. 
res:  1[
   emp&v2'=1 & v3'=1 & !(v4') & x!=0&{FLOW,(24,25)=__norm}[]
   ]
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
===================================================================
