# i-sim2-loop.ss

Why so complex and with some MayLoop?

loop:  requires true & truecase {
                      x<=y -> requires emp & Term[66,1]
     ensures true & true;
                      
                      y<x & x<=0 & y<=(0-2) -> requires emp & Loop
                      { 8:4}[]
     ensures false & false; 
                      y<=(0-2) & 
                      1<=x -> case {
                               ((3<=x & x<=((0-y)-2)) | (x=2 & y<=(0-
                               2))) -> requires emp & MayLoop[]
     ensures true & true;
/*
i-sim2-loop.ss

Why so complex and with some MayLoop?

loop:  requires true & truecase {
                      x<=y -> requires emp & Term[66,1]
     ensures true & true;
                      
                      y<x & x<=0 & y<=(0-2) -> requires emp & Loop
                      { 8:4}[]
     ensures false & false; 
                      y<=(0-2) & 
                      1<=x -> case {
                               ((3<=x & x<=((0-y)-2)) | (x=2 & y<=(0-
                               2))) -> requires emp & MayLoop[]
     ensures true & true;

=========================================================
# bugs-ex21a-clist-lemma.slk

lemma_safe self::ls<n,q> * q::node<_,self>
   -> self::node<_,q1>*q1::ls<n,self>.

This is going into an infinite loop too.
Similarly, for bugs-ex21b, bugs-ex21c.
This infinite loop is also with
case-defn.

=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
=========================================================
