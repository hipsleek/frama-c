data node{
  int val;
  node next;
}.

relation P(int n).
relation Q(int n,int r).

pred ll<n> == emp & self=null & n=0
  or (exists v,q: self::node<v,q>*q::ll<n-1>)
  inv n>=0.

infer[P] P(n) & n=1+r |- r>3.
print residue.

infer[Q] n>5 & n=r+1 |- Q(n,r).
print residue.

infer[P] x::ll<n> & P(n) 
    |- x::node<_,q>*q::ll<r> & r>3.
print residue.

infer[Q] x::ll<n> & n>5
    |- x::node<_,q>*q::ll<r> & Q(n,r).
print residue.




