data node {
  int val;
  node next;
}.



pred ls_nt<p> == emp & self=p
  or self::node<_,q>*q::ls_nt<p> & self!=p
  inv true.

pred PP<p> == emp & self=p
  or self::node<_,q>*q::PP<p> & self!=p
  inv true.

lemma_safe "1" self::ls_nt<p> <-> self::PP<p>.

lemma_unsafe "1" self::ls_nt<p> <-> self::PP<p>.


//1
//checkentail  emp & self=p |- self::PP<p>.

//2
checkentail self::node<_,b>*b::ls_nt<ppp> & self!=ppp |- self::PP<ppp>.
print residue.
