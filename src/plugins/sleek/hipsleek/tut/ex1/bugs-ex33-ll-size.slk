data node {
  int val;
  node next;
}.

pred ll<n> == emp & self=null & n=0
  or (exists v,q: self::node<v,q>*q::ll<n-1>)
  inv n>=0.

// (1)
checkentail x=null |- [nnn] x::ll<nnn>.
print residue.

// (2)
//checkentail x::node<_,q>*q::node<_,null> |- [n] x::ll<n>.
//print residue.

/*
# bugs-ex33-ll-size.slk

Why explicit instantiation not working for predicate!
Can trace why gen_expl_vars is empty?

!!! elim ante_evars:[n]
!!! elim gen_expl_vars:[]
!!! elim evars:[]

Entail 1: Valid. 
Residue:
 <1>emp&x=null&{FLOW,(4,5)=__norm#E}[]
[[ COND ==>  BaseCaseFold ==> ]]

Good to trace with -dd gave:
 es_gen_expl_vars: [n]
 es_gen_impl_vars: [n]

*/

