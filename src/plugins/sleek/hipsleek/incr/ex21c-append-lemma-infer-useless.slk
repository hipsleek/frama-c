/* singly linked lists */

/* representation of a node */

data node {
	int val; 
	node next;	
}.

pred ll<> == self = null 
	or self::node<_, q> * q::ll<> 
  inv true.

pred lseg<p> == self = null 
	or self::node<_, q> * q::lseg<p> 
  inv true.

pred app2<y> == self::node<_,null> 
	or self::node<_, q> * q::app2<y> & q!=null 
  inv self!=null.

pred app3<> == self::node<_,null> 
	or self::node<_, q> * q::app3<> & q!=null 
  inv self!=null.

HeapPred U(node x).
HeapPred U2(node x,node y).

/*
lemma_infer [U,classic]
  self::app3<> -> self::node<_,q>*U(q).
print residue.
*/

lemma_infer [U2,classic]
  self::app3<> <- U2(self,q) * q::node<_,null>.

print residue.


/*
# ex21c.slk

# why is search incomplete?

# disjunctive result .. how to represent?

 Temp Lemma(s) inferred is valid in current context.
Residue:

 <1>emp&{FLOW,(20,21)=__norm#E}[]
 inferred hprel: [
 U2(self_lem_19,q_154)&
  true |#| q_154::node<Anon_155,flted_36_153>@M&
  flted_36_153=null --> emp&self_lem_19=q_154]
[[ SEARCH ==>  BaseCaseUnfold ==>  Match(q_154,self_lem_19)]]

<2>emp&{FLOW,(20,21)=__norm#E}[]
inferred hprel: [
  HP_179(q_146,q_169@NI,self_lem_19@NI)&true --> emp&
                  q_146!=null; 
  HP_179(q_146,q_169@NI,self_lem_19@NI)&
                  true --> U2(q_146,q_169)&true; 
  U2(self_lem_19,q_169)&
   true |#| q_169::node<Anon_170,flted_36_168>@M&
   flted_36_168=null --> self_lem_19::node<Anon_177,q_178>@M * 
       HP_179(q_178,q_169@NI,self_lem_19@NI)&
                  true

]
[[ SEARCH ==>  InferUnfold  ==>  COND ==>  (Lemma <== lem_19(q_178,q_146)) ==>  InferUnfold  ==>  Match(q_169,q_185)]]



*/
