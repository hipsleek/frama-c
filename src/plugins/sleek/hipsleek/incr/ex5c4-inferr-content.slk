data node {
 int val;
 node next;
}.

relation R1(int n).
relation R2(int n).

pred  ll<> == self=null or self::node<_,q>*q::ll<>.

pred lseg_ones<p> == self=p or self::node<v,q>*q::lseg_ones<p> & R1(v).

pred ll_not_one<> == self=null or self::node<v,q>*q::ll<> & R2(v).

pred lseg_ones_X<p> == self=p or self::node<v,q>*q::lseg_ones_X<p> & v=1.

pred ll_not_one_X<> == self=null or self::node<v,q>*q::ll<> & v!=1.

infer [R1,R2] (exists p_1488: x'::node<Anon_1471,q_1472>@M * 
                 q_1472::lseg_ones<p_1488>@M * p_1488::ll_not_one<>@M&
res=v_boolean_34_1447' & 
(((!(v_boolean_34_1447') & p_1488!=null) | 
  (p_1488=null & v_boolean_34_1447'))) & 
Anon_1471=1 & x'=x & x'!=null & !(v_bool_31_1450') & v_bool_34_1449' )
 |-  x::lseg_ones<p>@M * p::ll_not_one<>@M&
((!(res) & p!=null) | (p=null & res)). 
print residue.

/*
infer [] (exists p_1488: x'::node<Anon_1471,q_1472>@M * 
                 q_1472::lseg_ones_X<p_1488>@M * p_1488::ll_not_one<>@M&
res=v_boolean_34_1447' & 
(((!(v_boolean_34_1447') & p_1488!=null) | 
  (p_1488=null & v_boolean_34_1447'))) & 
Anon_1471=1 & x'=x & x'!=null & !(v_bool_31_1450') & v_bool_34_1449' )
 |-  x::lseg_ones_X<p>@M * p::ll_not_one<>@M&
((!(res) & p!=null) | (p=null & res)). 
print residue.
*/
/*
# ex5c4.slk

!!! **infer.ml#2213:RelInferred (simplified):
   [RELDEFN R1: ( v_112=1) -->  R1(v_112)]


# Why is R1, R2 undefined? Where is this message printed?

ERROR: at _0:0_0:0
Message: R1 is undefined

Last Proving Location: ex5c4-inferr-content.slk_11:31_11:70

ERROR: at _0:0_0:0
Message: R2 is undefined
#####infer_pure_m_x 5

# ex5c4.slk

ERROR: at _0:0_0:0
Message: R1 is undefined (8)

  try 
    (x_add (get_spec_var_type_list ~lprime:p) v d_tt pos)
  with _ ->
    let vtyp, check = get_var_type v in
    (* WN TODO : this is a quick patch to type infer problem *)
    (* if check = false then *)
    (*   Err.report_error { Err.error_loc = pos; *)
    (*                      Err.error_text = v ^ " is not found in both sides"; } *)
    (* else *)
    match vtyp with
    | UNK -> Err.report_error { Err.error_loc = pos;
                                Err.error_text = v ^ " is undefined (9)"; }
    | t -> CP.SpecVar (t, v, p (* Unprimed *))

(==typeinfer.ml#1376==)
get_spec_var_type_list@20@19
get_spec_var_type_list inp1 :R1
get_spec_var_type_list@20 EXIT ExceptionFailure("R1 is undefined (8)")Occurred!

!!! **typeinfer.ml#1379:TODO: fix quick patch to type infer:R1

-------------------

 checkentail (exists p_1488: x'::node<Anon_1471,q_1472>@M * 
                 q_1472::lseg_ones<p_1488>@M * p_1488::ll_not_one<>@M&
res=v_boolean_34_1447' & 
(((not(v_boolean_34_1447') & p_1488!=null) | 
  (p_1488=null & v_boolean_34_1447'))) & 
Anon_1471=1 & x'=x & x'!=null & not(v_bool_31_1450') & v_bool_34_1449' & 
MayLoop[]&{FLOW,(4,5)=__norm#E}[]
 |-  (exists : x::lseg_ones<p>@M * p::ll_not_one<>@M&
((not(res) & p!=null) | (p=null & res))&{FLOW,(4,5)=__norm#E}[]. 
pure rel_ass: [RELDEFN R1(__norm#E): ( v_1495=1) -->  R1(v_1495),
RELDEFN R1(__norm#E): ( v_1495=1) -->  R1(v_1495)]
*/
