/* singly linked lists */

/* representation of a node */

data node {
	int val; 
	node next;	
}.

pred ll<> == self = null 
	or self::node<_, q> * q::ll<> 
  inv true.

pred lseg<p> == self = null 
	or self::node<_, q> * q::lseg<p> 
  inv true.

pred app3<> == self::node<_,null> 
	or self::node<_, q> * q::app3<> & q!=null 
  inv self!=null.

HeapPred U(node x).
HeapPred U2(node x,node y).
HeapPred U3(node x,node y).


lemma_infer [U2,classic]
  self::app3<> -> U2(self,q) * q::node<_,null>.

print sleek_cmd.
/*
# ex21d3a.slk (Muoi : can we generate sleek-output.

lemma_infer [U2,classic]
  self::app3<> -> U2(self,q) * q::node<_,null>.

print sleek_cmd.

data node {
	int val; 
	node next;	
}.

HeapPred U2(node x,node y).
HeapPred GP_133(node x,node y,node y).

relAssume
 emp&self_lem_17=q_112 --> U2(self_lem_17,q_112).

relAssume
 U2(q_128,q_131)& q_128!=null |#| 
   q_131::node<Anon_140,flted_29_138>@M&flted_29_138=null 
   --> GP_133(q_128,q_131,self_lem_17@NI).

relAssume
 self_lem_17::node<Anon_127,q_128>@M * 
   GP_133(q_128,q_131,self_lem_17@NI)&q_128!=null 
   --> U2(self_lem_17,q_131).


*/
