/* singly linked lists */

/* representation of a node */

data node {
	int val; 
	node next;	
}.

pred ll<> == self = null 
	or self::node<_, q> * q::ll<> 
  inv true.

pred lseg<p> == self = null 
	or self::node<_, q> * q::lseg<p> 
  inv true.

pred app2<y> == self::node<_,null> 
	or self::node<_, q> * q::app2<y> & q!=null 
  inv self!=null.

pred app3<> == self::node<_,null> 
	or self::node<_, q> * q::app3<> & q!=null 
  inv self!=null.

HeapPred U(node x).
HeapPred U2(node x,node y).
HeapPred U2a(node x,node y).

/*
lemma_infer [U,classic]
  self::app3<> -> self::node<_,q>*U(q).
print residue.
*/

lemma_unsafe 
  self::app3<> <- U2(self,q) * q::node<_,null>.


//infer [U2,@classic] U2(self,q) * q::node<_,null> |- self::app3<>.
//print residue.

infer [U2a,@classic] U2a(self,q) * q::node<_,null> 
           |- self::node<_, null>.

print residue.

/*
# ex21c5a.slk

infer [U2a,@classic] U2a(self,q) * q::node<_,null> 
           |- self::node<_, null>.


 <1>emp&self=q & Anon_21=Anon_20&{FLOW,(20,21)=__norm#E}[]
 inferred hprel: [U2a(self,q)&true |#| q::node<Anon_20,flted_43_148>@M&
                   flted_43_148=null --> emp&self=q]
[[ SEARCH ==>  BaseCaseUnfold ==>  Match(q,self)]]


*/
