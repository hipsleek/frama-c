/* singly linked lists */

/* representation of a node */

data node {
	int val; 
	node next;	
}.

pred ll<> == self = null 
	or self::node<_, q> * q::ll<> 
  inv true.

pred lseg<p> == self = null 
	or self::node<_, q> * q::lseg<p> 
  inv true.

pred app3<> == self::node<_,null> 
	or self::node<_, q> * q::app3<> & q!=null 
  inv self!=null.

HeapPred U(node x).
HeapPred U2(node x,node y).
HeapPred U3(node x,node y).


lemma_infer [U3,classic]
  self::app3<> <- U3(self,q) * q::node<_,null>.

print residue.


/*
# ex21d4.slk (Chanh..)

# Chanh to work on pred-sythesis

Residue:

 <1>emp&{FLOW,(20,21)=__norm#E}[]
 inferred hprel: [U3(self_lem_19,q_156)&
                   true |#| q_156::node<Anon_157,flted_32_155>@M&
                   flted_32_155=null --> emp&self_lem_19=q_156]
[[ SEARCH ==>  BaseCaseUnfold ==>  Match(q_156,self_lem_19)]]

<2>emp&{FLOW,(20,21)=__norm#E}[]
inferred hprel: [HP_181(q_148,q_171@NI,self_lem_19@NI)&true --> emp& q_148!=null; 
                 HP_181(q_148,q_171@NI,self_lem_19@NI)& true --> U3(q_148,q_171)&true; 
                 U3(self_lem_19,q_171)&
                  true |#| q_171::node<Anon_172,flted_32_170>@M&
                  flted_32_170=null --> self_lem_19::node<Anon_179,q_180>@M * 
                                        HP_181(q_180,q_171@NI,self_lem_19@NI)&
                  true]
[[ SEARCH ==>  InferUnfold  ==>  COND ==>  (Lemma <== lem_19(q_180,q_148)) ==>  InferUnfold  ==>  Match(q_171,q_187)]]
==========================================

  HP_181(q_148,q_171@NI,self_lem_19@NI)&true --> emp& q_148!=null; 
  HP_181(q_148,q_171@NI,self_lem_19@NI)& true --> U3(q_148,q_171)&true; 

  HP_181(q_148,q_171@NI,self_lem_19@NI) --> U3(q_148,q_171)&true &q_148!=null

  HP_181(q_148,q_171@NI,self_lem_19@NI) == U3(q_148,q_171)&true &q_148!=null

========================

 U3(self_lem_19,q_156)& true |#| q_156::node<Anon_157,flted_32_155>@M& flted_32_155=null 
          --> emp&self_lem_19=q_156]
 // drop guard
 U3(self_lem_19,q_156) --> emp&self_lem_19=q_156]

 U3(self_lem_19,q_171)& true |#| q_171::node<Anon_172,flted_32_170>@M& flted_32_170=null 
     --> self_lem_19::node<Anon_179,q_180>@M *  HP_181(q_180,q_171@NI,self_lem_19@NI)&
 // unfold HP
 U3(self_lem_19,q_171)& true |#| q_171::node<Anon_172,flted_32_170>@M& flted_32_170=null 
     --> self_lem_19::node<Anon_179,q_180>@M *  U3(q_148,q_171)&true &q_148!=null
 // drop guard
 U3(self_lem_19,q_171)& true 
     --> self_lem_19::node<Anon_179,q_180>@M *  U3(q_148,q_171)&true &q_148!=null

 Combine
 =======
 U3(self_lem_19,q_156) --> emp&self_lem_19=q_156]
 \/  U3(self_lem_19,q_171)& true 
     --> self_lem_19::node<Anon_179,q_180>@M *  U3(q_148,q_171)&true &q_148!=null
 // combine
 U3(self_lem_19,q_156) --> emp&self_lem_19=q_156]
   or self_lem_19::node<Anon_179,q_180>@M *  U3(q_148,q_171)&true &q_148!=null
 // form defn
 U3(self_lem_19,q_156) == emp&self_lem_19=q_156]
   or self_lem_19::node<Anon_179,q_180>@M *  U3(q_148,q_171)&true &q_148!=null

----------------------------------
# --old-pred-synthesis

*********************************************************
*******relational definition********
*********************************************************
[ HP_431(q_424) |#| emp&flted_41_313!=null & flted_41_313=null
                   or emp&flted_41_313=null
                   or emp&flted_41_313=null
                   or emp&flted_41_313!=null & flted_41_313=null
                    ::= q_424::node<Anon_427,q_323>@M * HP_431(q_323)
 or q_424::node<Anon_428,q_323>@M * HP_431(q_323)
 or q_424::node<Anon_429,q_323>@M * HP_431(q_323)
 or q_424::node<Anon_430,q_323>@M * HP_431(q_323)
 or emp&q_424!=null
 (20,21),
 U3(self_lem_391,q_392) |#| q_392::node<Anon_315,flted_41_313>@M&
                            flted_41_313=null
                            or q_392::node<Anon_300,flted_41_298>@M&
                               flted_41_298=null
                             ::= self_lem_391::node<Anon_393,q_323>@M * HP_431(q_323)
 or emp&self_lem_391=q_392
 (20,21)]
*************************************



*/
