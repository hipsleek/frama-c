# ex8d9.slk

checkentail tt::node<1,p>@M * ppp::rev_lseg<tt>@M
 |-  ppp::rev_lseg<p>
.

# Can we make it work by scheduling a "fold" operation?
  for such rev-lseg specification?

  self preds: [rev_lseg]

# Can we also include a fold at priority 2?

compute_actions@1 EXIT: COND =>[
  Prio:1
  Match =>
    LHS: ppp::rev_lseg<tt>@M
    RHS: ppp::rev_lseg<p_42>@M;
  Prio:3
  BaseCaseUnfold =>
    LHS: ppp::rev_lseg<tt>@M
    RHS: ppp::rev_lseg<p_42>@M
  ]
======================================================================
--en-self-fold
All test results were as expected.
Total verification time: 22.29 second
	Time spent in main process: 7.44 second
	Time spent in child processes: 14.85 second
	Number of false contexts: 90

Total verification time: 119.29 second
	Time spent in main process: 77.23 second
	Time spent in child processes: 42.06 second
	Number of false contexts: 414

without --en-self-fold

All test results were as expected.
Total verification time: 24.82 second
	Time spent in main process: 8.49 second
	Time spent in child processes: 16.33 second
	Number of false contexts: 90

Total verification time: 123.24 second
	Time spent in main process: 80.02 second
	Time spent in child processes: 43.22 second
	Number of false contexts: 414
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
======================================================================
