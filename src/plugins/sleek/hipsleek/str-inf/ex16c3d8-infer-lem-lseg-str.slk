data char_star {
  int val;
  char_star next;
}.

pred WSS<p> ==
  self::WFSeg<q>*q::char_star<0,p> 
  inv self!=null.

pred WFSeg<p> ==
  self=p 
  or self::char_star<v,q>*q::WFSeg<p> & v!=0
  inv true.

pred WFG<p> ==
  self::char_star<0,p>
  or self::char_star<v,q>*q::WFG<p> & v!=0
  inv self!=null.

  //lemma_safe self::WFG<p> -> self::WFSeg<q>*q::char_star<0,p>.
  //lemma_safe self::WFG<p> <- self::WFSeg<q>*q::char_star<0,p>.

  HeapPred U(char_star x,char_star y).
  HeapPred U2(char_star x,char_star y).

// lemma_unsafe self::WFG<p> <- U(self,q)*q::char_star<0,p>.


//(8)
infer [U2] U2(q3,q)*q::char_star<0,p>  |- q3::WFG<p> .
print residue.
expect Fail.

/*
infer [U2] U2(q3,q)*q::char_star<0,p>  |- q3::WFG<qqq> .
expect Valid.
*/

/*
WRONG : why is there a q=p in the relational assumption?

 <1>q::char_star<flted_83_218,p>@M * HP_232(p,q3)&flted_83_218=0&{FLOW,(20,21)=__norm#E}[]
 inferred hprel: [U2(q3,p)&q=p |#| q::char_star<flted_83_218,p>@M&
                   true --> q3::WFG<p>@M * HP_232(p,q3@NI)&true]
[[ InferUnfold ]]
*/

