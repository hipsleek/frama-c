data char_star {
  int val;
  char_star next;
}.

pred WSS<p> ==
  self::WFSeg<q>*q::char_star<0,p> 
  inv self!=null.

pred WFSeg<p> ==
  self=p 
  or self::char_star<v,q>*q::WFSeg<p> & v!=0
  inv true.

pred WFG<p> ==
  self::char_star<0,p>
  or self::char_star<v,q>*q::WFG<p> & v!=0
  inv self!=null.

  //lemma_safe self::WFG<p> -> self::WFSeg<q>*q::char_star<0,p>.
  //lemma_safe self::WFG<p> <- self::WFSeg<q>*q::char_star<0,p>.

  HeapPred U(char_star x,char_star y).

  //lemma_infer_pred [U] self::WFG<p> <- U(self,q)*q::char_star<0,p>.
  //lemma_infer [U,@classic] self::WFG<p> <- self::WFSeg<q>*U(q,p).
  // Failed to inferred for lem_12:<== (invalid lemma encountered)
  lemma_infer [U,@classic,@pure_field] self::WFG<p> -> self::WFSeg<q>*U(q,p).
  //lemma_infer_pred [U,@classic] self::WFG<p> -> self::WFSeg<q>*U(q,p).
  print residue.

  infer [U,@classic,@pure_field] 
   self::char_star<0,p> |- self::WFSeg<q>*U(q,p) .
  print residue.
 
/*
# ex14e.slk

  lemma_infer [U,@classic,@pure_field] self::WFG<p> -> self::WFSeg<q>*U(q,p).
  //lemma_infer_pred [U,@classic] self::WFG<p> <- self::WFSeg<q>*U(q,p).

# residue problem?

 Temp Lemma(s) inferred is valid in current context.
Residue:

 <1>emp&{FLOW,(20,21)=__norm#E}[]
    or emp&{FLOW,(20,21)=__norm#E}[]
    
 inferred hprel: [q_128::char_star<flted_16_127,p>@M&
                   true |#|3  --> U(q_128,p)&true; 
                  q_139::char_star<v_137,q_138>@M * q_138::WFG<p>@M&
                   true |#|3  --> U(q_139,p)&true]
[[ Fold ==>  COND ==>  InferHeap ==> ||OR|| ==>  Fold ==>  COND ==>  InferHeap]]

<2>emp&{FLOW,(20,21)=__norm#E}[]
   or emp&{FLOW,(20,21)=__norm#E}[]
   
inferred hprel: [q_128::char_star<flted_16_127,p>@M&
                  true |#|3  --> U(q_128,p)&true]
[[ Fold ==>  SEARCH ==>  Match(self_lem_12,self_lem_12) ==>  SEARCH ==>  (Lemma ==> lem_12(q_138,q_141)) ==> (left: lem_12) ==>  COND ==>  Match(q_138,q_141) ==>  COND ==>  InferHeap ==> ||OR|| ==>  Fold ==>  COND ==>  InferHeap]]




*/
