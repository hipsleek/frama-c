data char_star {
  int val;
  char_star next;
}.

pred WSS<p> ==
  self::WFSeg<q>*q::char_star<0,p> 
  inv self!=null.

pred WFSeg<p> ==
  self=p 
  or self::char_star<v,q>*q::WFSeg<p> & v!=0
  inv true.

pred WFG<p> ==
  self::char_star<0,p>
  or self::char_star<v,q>*q::WFG<p> & v!=0
  inv self!=null.

  //lemma_safe self::WFG<p> -> self::WFSeg<q>*q::char_star<0,p>.
  //lemma_safe self::WFG<p> <- self::WFSeg<q>*q::char_star<0,p>.

  HeapPred U(char_star x,char_star y).
  HeapPred U2(char_star x,char_star y).
  HeapPred U2a(char_star x,char_star y).
  HeapPred U3(char_star x,char_star y,char_star z).

HeapPred U3a(char_star x,char_star@NI y,char_star@NI z).

 lemma_unsafe self::WFG<p> <- U(self,q)*q::char_star<0,p>.

infer [U,@pure_field,classic] qqq::char_star<0,p> & q2=qqq   |- q2::WFG<p>.
 print residue.


 infer [U,@pure_field,classic] U3a(q2,qqq,_)*qqq::char_star<0,p>  |- q2::WFG<p>.
 print residue.

/*
Entail (1) : Fail.(may) cause:**solver.ml#13318:infer_collect_hp_rel

Residue:

 MaybeErr Context:
   fe_kind: MAY
   fe_name: separation entailment
   fe_locs: {
     fc_message: infer_heap_node
     fc_current_lhs_flow: {FLOW,(20,21)=__norm#E}
   }
 [[ InferUnfold ]]
 CEX:true


*/
