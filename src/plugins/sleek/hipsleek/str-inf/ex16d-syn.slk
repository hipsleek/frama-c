data char_star {
  int val;
  char_star next;
}.

pred WSS<p> ==
  self::WFSeg<q>*q::char_star<0,p> 
  inv self!=null.

pred WFSeg<p> ==
  self=p 
  or self::char_star<v,q>*q::WFSeg<p> & v!=0
  inv true.

pred WFG<p> ==
  self::char_star<0,p>
  or self::char_star<v,q>*q::WFG<p> & v!=0
  inv self!=null.

  //lemma_safe self::WFG<p> -> self::WFSeg<q>*q::char_star<0,p>.
  //lemma_safe self::WFG<p> <- self::WFSeg<q>*q::char_star<0,p>.

  HeapPred U(char_star x,char_star y).
  HeapPred U2(char_star x,char_star y).

 lemma_infer_pred [U,@pure_field,@classic] self::WFG<p> -> U(self,q)*q::char_star<0,p>.

print residue.

/*
(exists p_135,flted_16_136,
 p_127: self_lem_12::char_star<flted_16_136,p_135>@M&
 flted_16_136=0 & p_135=p_127 & p_127=p&{FLOW,(20,21)=__norm#E}[])
 or (exists p_137,v_138,q_139,
    p_127: self_lem_12::char_star<v_138,q_139>@M * q_139::WFG<p_137>@M&
    v_138!=0 & p_137=p_127 & p_127=p&{FLOW,(20,21)=__norm#E}[])
  [U] |-  EBase 
   exists (Impl)[q](exists p_116,flted_26_115,
   q: U(self_lem_12,q) * q::char_star<flted_26_115,p_116>@M&
   flted_26_115=0 & p_116=p&{FLOW,(20,21)=__norm#E}[])
*/

/*
infer [U] self_lem_12::char_star<flted_16_136,p_135>@M&
 flted_16_136=0 & p_135=p_127 & p_127=p
  |-  U(self_lem_12,q) * q::char_star<flted_26_115,p_116>@M&
   flted_26_115=0 & p_116=p.
 print residue.
*/
/*
infer [U] self_lem_12::char_star<v_138,q_139>@M * q_139::WFG<p>@M & v_138!=0
  |-  U(self_lem_12,q) * q::char_star<flted_26_115,p>@M & flted_26_115=0 .

 print residue.
*/
