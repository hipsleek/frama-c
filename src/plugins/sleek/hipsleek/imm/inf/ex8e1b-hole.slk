
data cell {
  int val;
}.

relation P1(ann a, int b).

/*
id: 0; caller: []; line: 15; classic: false; kind: BIND; hec_num: 1; evars: []; infer_vars: [ P1,P2]; c_heap: emp; others: [] globals: [@dis_err]
 checkentail c::cell<v>@a&P1(a,v) & c'=c & MayLoop[]&{FLOW,(4,5)=__norm#E}[]
 |-  c'::cell<fst_15_1443'>@L&{FLOW,(1,28)=__flow#E}[]. 
pure rel_ass: [RELASS [P1]: ( P1(a,v)) -->  a<:@L]
ho_vars: nothing?
res:  1[
   Hole[1489]&P1(a,v) & c'=c & fst_15_1443'=v & a<:@L&{FLOW,(4,5)=__norm#E}[]
   ]
*/

infer [P1] c::cell<v>@a&P1(a,v) & c'=c 
 |-  c'::cell<fst_15_1443'>@L.
print residue.
expect Valid.

/*
# ex8e1b.slk

Perhaps HOLE has not been substituted?
Can we print HOLE in the sleek logging?

Residue:
 <1>c::cell<v>@a&c'=c & P1(a,v) & fst_15_1443'=v & a<:@L&{FLOW,(20,21)=__norm#E}[]
 inferred rel: [RELASS [P1]: ( P1(a,v)) -->  a<:@L]
[[ SEARCH ==>  Match(c,c') ==> ]]

*/
