data cell {
  int val;
}.



checkentail x::cell<a>@u & u=@M |- x::cell<b>@v & v<:@A.
print residue.
expect Valid.

checkentail x::cell<a>@u & u=@M |- (exists v: x::cell<b>@v & v<:@A).
print residue.
expect Valid.
/*
ex3d8a.slk

 <1>(exists v_21: x::cell<a>@[@M, @v_21]&u=@M & b=a&{FLOW,(20,21)=__norm#E}[]

  Can we have v_21<:A in the eventual instantiation?

*/


checkentail x::cell<a>@u & u=@M |- (exists v: x::cell<b>@v & v=@M).
print residue.
expect Valid.
/*

ex3d8a.slk

 <1>(exists v_33: x::cell<a>@[@M, @v_33]&u=@M & b=a&{FLOW,(20,21)=__norm#E}[]

  Can we have v_33=@M in the instantiation?

*/

/*
checkentail x::cell<a>@u & u=@M |- (exists v: x::cell<b>@v & v=@A).
print residue.
expect Valid.
*/

/**
ex3d8a.slk


*/

checkentail x::cell<a> |- (exists b: x::cell<b>).
print residue.
expect Valid.


checkentail x::cell<_>@M |- (exists v: x::cell<_>@v &v=@M).
print residue.

/*
checkentail x::cell<_>@w |- (exists v: x::cell<_>@v & w=v & v=@M).
print residue.
*/
