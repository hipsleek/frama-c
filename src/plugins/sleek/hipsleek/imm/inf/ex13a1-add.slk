

checkentail x=@A+b & b=@M |- x=@M.
print residue.
expect Valid.


checkentail y=x+z & z=@A+d & x=@A+b & b=@M & d=@A+@A|- y=@M.
print residue.
expect Valid.


checkentail x=@M+b & b=@M |- x=@M.
print residue.
expect Valid.
// expect_infer I{} R{hfalse&false}


checkentail x=@A+b & b=@M |- x=@L.
print residue.
expect Fail.

checkentail x=@A+b & b=@M |- x=@A.
print residue.
expect Fail.

checkentail x=@A+b & y=@A+b & z=b+@A |- x=y.
print residue.
expect Valid.

checkentail x=@M+b & y=@M+b & z=b+@M |- x=y.
print residue.
expect Valid.

checkentail x=@M+b & y=@M+b & z=b+@M |- x=z.
print residue.
expect Valid.

checkentail x=@M+b+@A & y=@M+b & z=b+@M |- x=z.
print residue.
expect Valid.

checkentail x=@M+b+@A & y=@M+@A+b & z=b+@M |- x=z & x=y.
print residue.
expect Valid.

checkentail x=@M+b+@A & y=@M+@A+b & z=b+@M |- z=@M+b.
print residue.
expect Valid.

checkentail x=@M+b+@A & y=@M+@A+b & z=b+@M |- z=x+@A.
print residue.
expect Valid.

checkentail x=@M+b+@A & y=@M+@A+b & z=b+@M |- z=@M+@A.
print residue.
expect Fail.


/**


FIXED

imm_summation@624
imm_summation inp1 :emap[]
imm_summation inp2 : b:AnnT+@M+@A
imm_summation@624 EXIT ExceptionFailure("expectiv imm expression")Occurred!
Exception(f_b_imm_addition):Failure("expectiv imm expression")
Exception(simplify_imm_addition):Failure("expectiv imm expression")
Exception(cnv_ptr_to_int):Failure("expectiv imm expression")
Exception(cnv_ptr_to_int#2):Failure("expectiv imm expression")
Exception(norm_pure_input):Failure("expectiv imm expression")
Exception(norm_var_name):Failure("expectiv imm expression")
Exception(sat_cache):Failure("expectiv imm expression")
*/