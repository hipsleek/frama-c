// pass-by-value
struct pair {
  int x;
  int y;
};

Consider a simple C-program:

int goo(pair* q)
// pass by value
/*@
  requires q::pair*<r> * r::pair<a,b>
  ensures q::pair*<r> * r::pair<a,b> & res=a;
*/
{
  return q->x;
}

The above requires pair_star in the translation.
However, an alternative translation is to use:

int goo(pair *q)
// pass by ptr
/*@
  requires *q::pair<a,b>
  ensures *q::pair<a,b> & res=a;
*/
{
  return *q.x;
}

To translate to SS-program, we can use:

 goo(q) ==> goo@P(*q)
 *q --> q@P

int goo(pair *q)
  requires *q::pair<a,b>
  ensures *q::pair<a,b> & res=a;
{
  return *q.x;
}
==>
int goo@P(pair q@P)
  requires q@P::pair<a,b>
  ensures q@P::pair<a,b> & res=a;
{
  return q@P.x;
}

subsequently, we can translate:
  id@P ==> id_ptr
without any problem.

*/


