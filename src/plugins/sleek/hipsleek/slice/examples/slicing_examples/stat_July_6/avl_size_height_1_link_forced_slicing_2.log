/usr/local/bin/mona
/usr/local/bin/oc

Processing file "avl_size_height_1_link.ss"
Parsing...
Parsing...
Starting Omega... 
Translating global variables to procedure parameters...
Translating to core language...

 warning avl_size_height_1_link.ss_223_9 quantifying: n1

 warning avl_size_height_1_link.ss_162_9 quantifying: n1
Checking procedure merge$node~node... 
Procedure merge$node~node SUCCESS
Checking procedure insert_inline$node~int... 
Procedure insert_inline$node~int SUCCESS
Checking procedure insert$node~int... 
dprint: avl_size_height_1_link.ss:181: ctx:  List of Failesc Context: [FEC(0, 1, 1)]

Successful States:
[Label: [(499:,0 ); (499:,0 ); (496:,0 ); (496:,0 ); (439:,0 ); (439:,0 ); 
          (438:,1 ); (438:,1 )]
 State:es_formula: 
        SS 1910:q_4493::avl<n2_4494,h2_4495>@M[Orig]@ rem br[{681,680}] * 
        SS 1909:p_4595::avl<n1_4596,h1_4597>@M[Orig]@ rem br[{681}] * 
        x'::node<Anon_4489,n,v_node_175_4524,q_4493>@M[] * 
        v_node_175_4524::node<Anon_4594,h_4593,p_4595,q_4598>@M[] * 
        SS 1906:q_4598::avl<n2_4599,h2_4600>@M[Orig]@ rem br[{681,680}] & (
        ([v_bool_179_1565'][null!=p_4595][<IL, 22, []>n_4614<=m_4613]
         [<IL, 22, []>h2_4600<=n2_4599 & <IL, 22, []>h2_4600<=n2_4599]
         [<IL, 22, []>n_4603<=m_4602][v_bool_177_1567']
         [<IL, 22, []>n_4536<=m_4535]
         [<IL, 22, []>h2_4495<=n2_4494 & <IL, 22, []>h2_4495<=n2_4494]
         [<IL, 22, []>n_4506<=m_4505][<IL, 22, []>n1_4520<=flted_162_4519]
         [tmp_281'=p_4490][x=x' & x'!=null][<IL, 22, []>h1_4492<=n1_4491]
         [null=tmp_282'][<IL, 22, []>n<=m][1793:!(v_bool_168_1718')]
         [a=a' & <, 126, []>a'<=Anon_4489][v_bool_172_1717']
         [<IL, 22, []>n1_4520<=m_4526][<IL, 22, []>n_4527<=m_4526]
         [<IL, 22, []>h1_4597<=n1_4596 & <IL, 22, []>h1_4597<=n1_4596]
         [n_4614=h2_4600 & n_4603=h1_4597 & n1_4520=n_4527 & 
           n1_4520=h_4593 & n_4506=h1_4492 & h_4488=n & h2_4495=n_4536 & 
           (1795:<, 2129, []>h1_4492+1=n & <, 2128, []>h2_4495<n | 
           <, 2127, []>h2_4495+1=n & <, 2126, []>(h1_4492+2)<=n) & 
           (1863:<, 2129, []>h1_4597+1=n1_4520 & 
           <, 2128, []>h2_4600<n1_4520 | <, 2127, []>h2_4600+1=n1_4520 & 
           <, 2126, []>(h1_4597+2)<=n1_4520) & (-1+n1_4520)<=n_4506 & 
           0!=h1_4597 & <, 16, []>(-1+h2_4600)<=h1_4597 & 
           <, 20, []>0<=h1_4597 & <, 37, []>n_4506<=n1_4520 & <, 17, []>(-1+
           h1_4492)<=h2_4495 & <, 20, []>0<=n1_4520 & <, 20, []>0<=h1_4492 & 
           <, 20, []>0<=h2_4495 & <, 130, []>(1+h2_4600)<=h1_4597 & 
           <, 20, []>0<=n & <, 16, []>(-1+h2_4495)<=h1_4492 & <, 17, []>(-1+
           h1_4597)<=h2_4600 & 0!=n1_4520 & <, 45, []>h2_4495+2=n1_4520 & 
           <, 20, []>0<=h2_4600 & 0!=n]
         [m_4613=n2_4599 & m_4602=n1_4596 & m_4526=flted_162_4519 & 
           n1_4491=m_4505 & n2_4494=m_4535 & 0!=n1_4596 & <, 15, []>m_4526=1+
           n1_4596+n2_4599 & <, 19, []>0<=m & 0!=m & <, 19, []>0<=n2_4599 & 
           <, 19, []>0<=n2_4494 & <, 279, []>-1+flted_162_4519=m_4505 & 
           <, 19, []>0<=n1_4596 & 0!=m_4526 & <, 19, []>0<=n1_4491 & 
           <, 15, []>m=1+n1_4491+n2_4494 & <, 19, []>0<=flted_162_4519]
         [v_node_175_4524!=null])) &
        {FLOW,(191,191)=__norm,}
       es_pure: (())
       es_heap: true
       es_aux_conseq: true
       es_must_error: None
       es_var_label: None]

Procedure insert$node~int SUCCESS
Checking procedure build_avl2$node~node~node... 
Procedure build_avl2$node~node~node SUCCESS
Checking procedure build_avl1$node~node... 
Procedure build_avl1$node~node SUCCESS
Checking procedure rotate_double_right$node~node~node~node~int~int~int... 
Procedure rotate_double_right$node~node~node~node~int~int~int SUCCESS
Checking procedure rotate_double_left$node~node~node~node~int~int~int... 
Procedure rotate_double_left$node~node~node~node~int~int~int SUCCESS
Checking procedure get_max$int~int... 
Procedure get_max$int~int SUCCESS
Checking procedure rotate_right$node~node~node... 
Procedure rotate_right$node~node~node SUCCESS
Checking procedure rotate_left$node~node~node... 
Procedure rotate_left$node~node~node SUCCESS
Checking procedure height$node... 
Procedure height$node SUCCESS
Stop Omega... 3302 invocations 
20 false contexts at: ( (214,4)  (210,6)  (193,11)  (189,6)  (347,4)  (343,6)  (287,4)  (283,6)  (468,17)  (468,24)  (472,3)  (472,22)  (472,10)  (471,15)  (471,27)  (471,8)  (470,14)  (470,25)  (470,8)  (470,3) )

Total verification time: 7.93 second(s)
	Time spent in main process: 6.22 second(s)
	Time spent in child processes: 1.71 second(s)
Counters: 
 cnt_--opt-imply 2 = 758
cnt_Overall = 1
cnt_Parsing = 2
cnt_Preprocessing = 1
cnt_TP.imply_timeout = 4388
cnt_Translating global var = 1
cnt_Translating to Core = 1
cnt_add_pure = 3386
cnt_elim_exists = 92
cnt_elim_redundant_ctr = 25
cnt_empty_predicate_testing = 123
cnt_entail_prune = 141
cnt_erc_imply = 161
cnt_fast_imply = 6728
cnt_filter_dupl_memo = 7349
cnt_heap_entail_one_context_struc#2 = 142
cnt_heap_entail_one_context_struc#4 = 131
cnt_heap_entail_one_context_struc#fold = 33
cnt_imply = 4388
cnt_imply_proc_one_full = 142
cnt_imply_proc_one_ncplx = 616
cnt_is_sat = 6052
cnt_memo_imply = 123
cnt_memo_norm = 3489
cnt_merge_mems_r_dups = 3013
cnt_method build_avl1$node~node = 1
cnt_method build_avl2$node~node~node = 1
cnt_method get_max$int~int = 1
cnt_method height$node = 1
cnt_method insert$node~int = 1
cnt_method insert_inline$node~int = 1
cnt_method merge$node~node = 2
cnt_method rotate_double_left$node~node~node~node~int~int~int = 1
cnt_method rotate_double_right$node~node~node~node~int~int~int = 1
cnt_method rotate_left$node~node~node = 1
cnt_method rotate_right$node~node~node = 1
cnt_normalize_max_renaming_list_failesc_context = 375
cnt_pred_inference = 1
cnt_proof_after_base_case = 1
cnt_prune_imply = 3333
cnt_prune_preds = 660
cnt_prune_preds_filter = 660
cnt_push_exists_slicing = 382
cnt_simplify = 31
cnt_slow_imply = 161
cnt_unfold_unsat = 127
consumed_nodes_counter = 425
consumed_specialized_nodes = 71
dropped_branches = 42
false_imply_count = 3786
fast_imply_success = 41
impl_cache_count = 3995
impl_conseq_count = 1241
impl_proof_count = 2250
imply_sem_prun_false = 3309
imply_sem_prun_true = 24
prune_cnt = 42
sat_cache_count = 6044
sat_proof_count = 1028
stat_count_imply = 4388
stat_count_sat = 6052
stat_disj_count_imply = 12627
stat_disj_count_sat = 7173
stat_size_count_imply = 81023
stat_size_count_sat = 18573
syn_memo_count = 3374
syn_memo_hit = 41
total_unfold_disjs = 60
true_imply_count = 602
with_disj_cnt_0_s = 474
with_disj_cnt_2_f = 54
with_disj_cnt_2_s = 88
z_stat_disj_imply = 5010
z_stat_disj_sat = 6532

 profile results: there where 46 keys 
 
(--opt-imply 2,0.,758,0.,[],  0.%) 
(Overall,7.92,1,7.92,[7.92],  100.%) 
(Parsing,0.01,2,0.,[],  0.25%) 
(Preprocessing,0.15,1,0.15,[],  1.89%) 
(TP.imply_timeout,0.,4388,0.,[],  0.%) 
(Translating global var,0.02,1,0.02,[],  0.25%) 
(Translating to Core,0.11,1,0.11,[],  1.38%) 
(add_pure,0.03,3386,0.,[],  0.37%) 
(elim_exists,0.,92,0.,[],  0.%) 
(elim_redundant_ctr,0.01,25,0.,[],  0.12%) 
(empty_predicate_testing,0.72,123,0.,[],  9.21%) 
(entail_prune,0.47,141,0.,[],  6.06%) 
(erc_imply,0.,161,0.,[],  0.%) 
(fast_imply,0.01,6728,0.,[],  0.25%) 
(filter_dupl_memo,0.,7349,0.,[],  0.12%) 
(heap_entail_one_context_struc#2,2.79,142,0.01,[],  35.22%) 
(heap_entail_one_context_struc#4,0.98,131,0.,[],  12.37%) 
(heap_entail_one_context_struc#fold,1.37,23,0.05,[],  17.42%) 
(imply,2.76,4388,0.,[],  34.97%) 
(imply_proc_one_full,0.51,142,0.,[],  6.43%) 
(imply_proc_one_ncplx,0.68,616,0.,[],  8.71%) 
(is_sat,0.93,6052,0.,[],  11.74%) 
(memo_imply,0.69,123,0.,[],  8.83%) 
(memo_norm,0.,3489,0.,[],  0.%) 
(merge_mems_r_dups,0.,3013,0.,[],  0.%) 
(method build_avl1$node~node,0.05,1,0.05,[],  0.75%) 
(method build_avl2$node~node~node,0.08,1,0.08,[],  1.13%) 
(method get_max$int~int,0.,1,0.,[],  0.12%) 
(method height$node,0.04,1,0.04,[],  0.5%) 
(method insert$node~int,1.46,1,1.46,[1.46],  18.43%) 
(method insert_inline$node~int,3.52,1,3.52,[3.52],  44.44%) 
(method merge$node~node,0.11,2,0.05,[],  1.38%) 
(method rotate_double_left$node~node~node~node~int~int~int,0.34,1,0.34,[],  4.41%) 
(method rotate_double_right$node~node~node~node~int~int~int,0.33,1,0.33,[],  4.16%) 
(method rotate_left$node~node~node,0.04,1,0.04,[],  0.5%) 
(method rotate_right$node~node~node,0.04,1,0.04,[],  0.63%) 
(normalize_max_renaming_list_failesc_context,0.07,375,0.,[],  1.01%) 
(pred_inference,0.05,1,0.05,[],  0.75%) 
(proof_after_base_case,0.,1,0.,[],  0.%) 
(prune_imply,0.01,3333,0.,[],  0.12%) 
(prune_preds,0.91,660,0.,[],  11.61%) 
(prune_preds_filter,0.,660,0.,[],  0.12%) 
(push_exists_slicing,0.,382,0.,[],  0.%) 
(simplify,0.05,31,0.,[],  0.63%) 
(slow_imply,0.,161,0.,[],  0.%) 
(unfold_unsat,0.,127,0.,[],  0.%)
