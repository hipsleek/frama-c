data node { int val ; node next }.
 
pred lseg<p> == self = p 
or self::node<_,r> * r::lseg<p> & self!=p inv true.

// Goes through with added equalities 
/*
checkentail
x6::lseg<x2> *
x4::lseg<x2> *
x1::lseg<x6> * x1::lseg<x3> * x1::lseg<x2> *
x3::lseg<x6> * x3::lseg<x4> *
x2::lseg<x5> *
x5::lseg<x6>
//& (x1=x6 | x1=x3 | x1=x2)
//& (x3=x6 | x3=x4)
& x4 != x6
|- false.
*/

// Goes through with --eps

checkentail
x6::lseg<x2> *
x1::lseg<x4> *
x3::lseg<x1> *
x7::lseg<x6> * x7::lseg<x1> * x7::lseg<x3> * x7::lseg<x2> * x7::lseg<x5> *
x2::lseg<x6> *
x5::lseg<x1> * x5::lseg<x4>
//& (x5 != x1 | x5 != x4)
& $ (x4 != x5)
//& x4 != x6
//& x1 != x2
|- false.

checkentail
x1::lseg<x4> * 
x5::lseg<x1> * x5::lseg<x4>
& x5 != x4
|- false.


// Goes through with both added equalities and --eps
/*
checkentail
x6::lseg<x8> * x6::lseg<x1> * x8::lseg<x1> * x8::lseg<x5> * x4::lseg<x3> * x4::lseg<x2> * x3::lseg<x7> * x7::lseg<x1> * x7::lseg<x3> * x2::lseg<x4> * x2::lseg<x3> * x5::lseg<x4> * x5::lseg<x7>
& (x6=x8 | x6=x1)
& (x8=x1 | x8=x5)
& (x4=x3 | x4=x2)
& (x7=x1 | x7=x3)
& (x2=x4 | x2=x3)
& (x5 = x4 | x5 = x7)
& x5 != x6 & x2 != x4 & x2 != x6 & x7 != x8 & x3 != x4 & x1 != x5 |- false .
*/

// Doesn't go through - timeouts 
//checkentail x1::lseg<x2> * x2::lseg<x3> |- x1::lseg<x3>.


checkentail
//  x3::lseg<x10>


  x2::lseg<x1>

//* x2::lseg<x10>

* x2::lseg<x5>
* x5::lseg<x7>
* x7::lseg<x6>
* x6::lseg<x9>
* x9::lseg<x1>

//& (x2 = x10 | x2 = x5 | x2 = x1)
//& ($ x2 != x7) & ($ x2 != x3) & ($ x2 != x6) & ($ x7 != x10) & ($ x3 != x8) & ($ x4 != x9) & ($ x4 != x7) & ($ x4 != x8)
//& ($ x1 != x10)
//& (x1 != x10)
//& (x1 != x2)
//& ($ x1 != x6)
//& (x1 != x6)
|- x1 = x2.

/*
checkentail
  x1::lseg<x2>

* x1::lseg<x3>
* x3::lseg<x2>

|- x1 = x2.

checkentail
  x1::lseg<x3>
* x3::lseg<x2>
|- true.

checkentail
x=2 & (y=z | y!=z & y!=null) |- (x=z | x!=z & x!=null).


checkentail
  x1::node<_, x2> * x2::lseg<x3>
  |- x1::lseg<x3>.
//|- (x1 = x3) | (x1 != x3).

checkentail
x=2 & (y=z | y!=z & y!=null) |- (x=z | x!=z & x!=null).
*/

/*
checkentail
  x1::node<_, x2> * x2::lseg<x1>
  |- x1::lseg<x1>.
*/



