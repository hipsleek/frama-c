data node { int val ; node next }.

pred lseg<p> == self = p
or self::node<_,r> * r::lseg<p> & self!=p inv true.

checkentail
  x8::lseg<x2>
* x1::lseg<x4> * x1::lseg<x3>
* x3::lseg<x9> * x3::lseg<x2>
* x7::lseg<x2>
* x10::lseg<x3> * x10::lseg<x9>
* x2::lseg<x10>
* x5::lseg<x8> * x5::lseg<x2>
& x2 != x9 & x2 != x3 & x2 != x8
& x2 != x3
& x3 != x8
& x4 != x5
& x4 != x9
& x6 != x9 & x6 != x7
|- false.

print residue.

/*
Answer: Valid (UNSAT)

x3::lseg<x9> * x3::lseg<x2> & x2 != x3 => x3 = x9
x1::lseg<x4> * x1::lseg<x3> & x4 != x9 ->
	not (x1 = x4 = {x3, x9})
	x1 != x4 & x1 = x3 -> x1 != x2 => false
	x1 = x4 & x1 != x3 ->
		x5::lseg<x8> * x5::lseg<x2> & x8 != x2 =>
			not (x5 = x8 = x2)
			x5 = x2 & x5 != x8 -> x2 = x10 = {x3, x9} => false (x2 != x9)
			x5 != x2 & x5 = x8 -> x5::lseg<x2> * x8::lseg<x2> & x5 = x8 & x5 != x2 & x8 != x2 => false
			
*/