data node { int val ; node next }.

pred lseg<p> == self = p
or self::node<_,r> * r::lseg<p> & self!=p inv true.

checkentail x6::lseg<x7> * x6::lseg<x9> * x3::lseg<x10> * x7::lseg<x10> * x9::lseg<x4> * x2::lseg<x7> * x8::lseg<x1> * x4::lseg<x5> * x10::lseg<x3> * x10::lseg<x7> * x10::lseg<x2> * x5::lseg<x10> & x5 != x9 & x5 != x8 & x5 != x6 & x4 != x9 & x4 != x10 & x4 != x8 & x8 != x9 & x2 != x6 & x7 != x8 & x3 != x7 & x6 != x10 |- false.

checkentail x6::lseg<x7> * x6::lseg<x9> * x3::lseg<x10> * x7::lseg<x10> * x9::lseg<x4> * x2::lseg<x7> * x8::lseg<x1> * x4::lseg<x5> * x10::lseg<x3> * x10::lseg<x7> * x10::lseg<x2> * x5::lseg<x10> & x5 != x9 & x5 != x8 & x5 != x6 & x4 != x9 & x4 != x10 & x4 != x8 & x8 != x9 & x2 != x6 & x7 != x8 & x3 != x7 & x6 != x10 |- (x10 = x3 | x10 = x7).

checkentail x6::lseg<x7> * x6::lseg<x9> * x3::lseg<x10> * x7::lseg<x10> * x9::lseg<x4> * x2::lseg<x7> * x8::lseg<x1> * x4::lseg<x5> * x10::lseg<x3> * x10::lseg<x7> * x10::lseg<x2> * x5::lseg<x10> & x5 != x9 & x5 != x8 & x5 != x6 & x4 != x9 & x4 != x10 & x4 != x8 & x8 != x9 & x2 != x6 & x7 != x8 & x3 != x7 & x6 != x10 |- x10 = x2.

/*
Answer: Valid (UNSAT)

x10::lseg<x3> * x10::lseg<x7> * x10::lseg<x2> & x3 != x7 => x10 = x2

x2::lseg<x7> * x10::lseg<x7> & x10 != x7 & x10 = x2 -> false => x10 = x7 & x10 != x3

x6::lseg<x7> * x6::lseg<x9> & x6 != {x10, x2, x7} => x6 = x9

{x6, x9} != {x4} & {x6, x9} != {x10, x2, x7} => false 
*/


