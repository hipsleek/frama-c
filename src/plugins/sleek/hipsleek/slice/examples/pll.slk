data node {
	int val; 
	node next;	
}.

pred pll<n,s> ==
	self = null & n = 0 & s = 0  or
   self::node<v,p> * p::pll<n1,s1> & n = 1 + n1 & v > 0 & s = v + s1 
  inv n >= 0 & s >= 0.

/*
 this is similar 
   forall a,b: x::lseg<n,p> & n=a+b 
       <==> x::lseg<a,q>*q::lseg<b,p>

  forall v,s1. 
   self::node<v,p> * p::pll<n1,s1> & n = 1 + n1 & v > 0 & s = v + s1  
*/
checkentail x::pll<n,10> & n>0 |- x::node<v,q> & v>0.

//fail but should succeed
checkentail x::pll<n,10> & n>0 |- x::node<3,q>.

checkentail x::node<3, q> * q::pll<_, 7> |- x::pll<_, 10>.

//fail but should succeed
checkentail x::pll<n,10> & n>0 |- x::node<v,q> & v>3.

checkentail x::pll<n,10> & n=1 |- x::node<v,q> & v>3.

pred pll1<n,s> ==
	self = null & n = 0 & s = 0  or
	self::node<v,p> * p::pll1<n1,s1> & n = 1 + n1 & v > 0 & v <= 5 & s = v + s1 
	inv n >= 0 & s >= 0.

checkentail x::pll1<n,10> |- n >= 2.
