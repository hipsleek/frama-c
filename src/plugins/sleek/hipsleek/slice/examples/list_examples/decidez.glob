Fdecidez
R76 Coq.ZArith.ZArith <> <> lib
R83 Coq.Lists.List <> <> lib
R88 Coq.FSets.FSets <> <> lib
R111 Coq.FSets.FSetAVL <> <> modtype
R116 Coq.FSets.OrderedTypeEx <> <> modtype
mod 102 <> ZSets
prf 249 <> cons_eq_nil
R321 Coq.Init.Logic "A <-> B" not
R310 Coq.Init.Logic "x = y" not
R305 Coq.Lists.List "x :: y" not
R314 Coq.Lists.List <> nil constr
R325 Coq.Init.Logic <> False ind
R294 Coq.Lists.List <> list ind
R410 Coq.Lists.List <> nil_cons thm
R410 Coq.Lists.List <> nil_cons thm
prf 459 <> nil_eq_cons
R531 Coq.Init.Logic "A <-> B" not
R520 Coq.Init.Logic "x = y" not
R515 Coq.Lists.List <> nil constr
R526 Coq.Lists.List "x :: y" not
R535 Coq.Init.Logic <> False ind
R504 Coq.Lists.List <> list ind
R605 Coq.Lists.List <> nil_cons thm
R605 Coq.Lists.List <> nil_cons thm
prf 654 <> cons_eq_cons
R731 Coq.Init.Logic "A <-> B" not
R721 Coq.Init.Logic "x = y" not
R715 Coq.Lists.List "x :: y" not
R725 Coq.Lists.List "x :: y" not
R738 Coq.Init.Logic "x = y" not
R704 Coq.Lists.List <> list ind
R704 Coq.Lists.List <> list ind
prf 867 <> simpl_x_cons_app
R946 Coq.Init.Logic "x = y" not
R938 Coq.Lists.List "x ++ y" not
R933 Coq.Lists.List "x :: y" not
R950 Coq.Lists.List "x :: y" not
R956 Coq.Lists.List "x ++ y" not
R913 Coq.Lists.List <> list ind
R913 Coq.Lists.List <> list ind
R993 Coq.Init.Logic <> refl_equal constr
R993 Coq.Init.Logic <> refl_equal constr
prf 1017 <> simpl_app_nil
R1079 Coq.Init.Logic "x = y" not
R1067 Coq.Lists.List "x ++ y" not
R1072 Coq.Lists.List <> nil constr
R1056 Coq.Lists.List <> list ind
R1116 Coq.Lists.List <> app_nil_end thm
R1116 Coq.Lists.List <> app_nil_end thm
prf 1141 <> simpl_nil_app
R1203 Coq.Init.Logic "x = y" not
R1196 Coq.Lists.List "x ++ y" not
R1191 Coq.Lists.List <> nil constr
R1180 Coq.Lists.List <> list ind
R1238 Coq.Init.Logic <> refl_equal constr
R1238 Coq.Init.Logic <> refl_equal constr
prf 1262 <> list_app_eq_nil
R1336 Coq.Init.Logic "A <-> B" not
R1325 Coq.Init.Logic "x = y" not
R1319 Coq.Lists.List "x ++ y" not
R1329 Coq.Lists.List <> nil constr
R1354 Coq.Init.Logic "A /\ B" not
R1343 Coq.Init.Logic "x = y" not
R1347 Coq.Lists.List <> nil constr
R1360 Coq.Init.Logic "x = y" not
R1364 Coq.Lists.List <> nil constr
R1307 Coq.Lists.List <> list ind
R1307 Coq.Lists.List <> list ind
R1430 Coq.Lists.List <> app_eq_nil thm
R1430 Coq.Lists.List <> app_eq_nil thm
R1496 Coq.Init.Logic <> refl_equal constr
R1496 Coq.Init.Logic <> refl_equal constr
prf 1520 <> nil_eq_list_app
R1594 Coq.Init.Logic "A <-> B" not
R1581 Coq.Init.Logic "x = y" not
R1576 Coq.Lists.List <> nil constr
R1588 Coq.Lists.List "x ++ y" not
R1612 Coq.Init.Logic "A /\ B" not
R1601 Coq.Init.Logic "x = y" not
R1605 Coq.Lists.List <> nil constr
R1618 Coq.Init.Logic "x = y" not
R1622 Coq.Lists.List <> nil constr
R1565 Coq.Lists.List <> list ind
R1565 Coq.Lists.List <> list ind
R1703 Coq.Lists.List <> app_eq_nil thm
R1703 Coq.Lists.List <> app_eq_nil thm
R1769 Coq.Init.Logic <> refl_equal constr
R1769 Coq.Init.Logic <> refl_equal constr
prf 1793 <> simpl_head_cons
R1867 Coq.Init.Logic "x = y" not
R1853 Coq.Lists.List <> hd def
R1861 Coq.Lists.List "x :: y" not
R1834 Coq.Lists.List <> list ind
R1902 Coq.Init.Logic <> refl_equal constr
R1902 Coq.Init.Logic <> refl_equal constr
prf 1926 <> simpl_tail_nil
R1976 Coq.Init.Logic "x = y" not
R1962 Coq.Lists.List <> tail def
R1969 Coq.Lists.List <> nil constr
R1980 Coq.Lists.List <> nil constr
R2018 Coq.Init.Logic <> refl_equal constr
R2018 Coq.Init.Logic <> refl_equal constr
prf 2042 <> simpl_tail_cons
R2114 Coq.Init.Logic "x = y" not
R2100 Coq.Lists.List <> tail def
R2108 Coq.Lists.List "x :: y" not
R2083 Coq.Lists.List <> list ind
R2149 Coq.Init.Logic <> refl_equal constr
R2149 Coq.Init.Logic <> refl_equal constr
prf 2173 <> simpl_length_nil
R2227 Coq.Init.Logic "x = y" not
R2211 Coq.Lists.List <> length def
R2220 Coq.Lists.List <> nil constr
R2229 Coq.Init.Datatypes "" not
R2262 Coq.Init.Logic <> refl_equal constr
R2262 Coq.Init.Logic <> refl_equal constr
prf 2286 <> simpl_length_not_nil
R2355 Coq.Init.Logic "A <-> B" not
R2343 Coq.Init.Logic "x <> y" not
R2348 Coq.Lists.List <> nil constr
R2370 Coq.Init.Peano "x > y" not
R2359 Coq.Lists.List <> length def
R2372 Coq.Init.Datatypes "" not
R2332 Coq.Lists.List <> list ind
prf 2405 <> simpl_length_cons
R2481 Coq.Init.Logic "x = y" not
R2465 Coq.Lists.List <> length def
R2475 Coq.Lists.List "x :: y" not
R2485 Coq.Init.Peano "n + m" not
R2483 Coq.Init.Datatypes "" not
R2487 Coq.Lists.List <> length def
R2448 Coq.Lists.List <> list ind
R2527 Coq.Init.Logic <> refl_equal constr
R2527 Coq.Init.Logic <> refl_equal constr
prf 2551 <> simpl_rev_nil
R2599 Coq.Init.Logic "x = y" not
R2586 Coq.Lists.List <> rev def
R2592 Coq.Lists.List <> nil constr
R2603 Coq.Lists.List <> nil constr
R2641 Coq.Init.Logic <> refl_equal constr
R2641 Coq.Init.Logic <> refl_equal constr
prf 2665 <> simpl_rev_cons
R2734 Coq.Init.Logic "x = y" not
R2722 Coq.Lists.List <> rev def
R2728 Coq.Lists.List "x :: y" not
R2742 Coq.Lists.List "x ++ y" not
R2736 Coq.Lists.List <> rev def
R2747 Coq.Lists.List "x :: y" not
R2752 Coq.Lists.List <> nil constr
R2705 Coq.Lists.List <> list ind
R2790 Coq.Init.Logic <> refl_equal constr
R2790 Coq.Init.Logic <> refl_equal constr
prf 2814 <> in_x_cons
R2882 Coq.Init.Logic "A <-> B" not
R2868 Coq.Lists.List <> In def
R2876 Coq.Lists.List "x :: y" not
R2892 Coq.Init.Logic "A \/ B" not
R2888 Coq.Init.Logic "x = y" not
R2895 Coq.Lists.List <> In def
R2859 Coq.Lists.List <> list ind
R3019 Coq.Lists.List <> Permutation_nil thm
R3037 Coq.Lists.List <> Permutation_nil_cons thm
R3061 Coq.Lists.List <> Permutation_refl thm
R3080 Coq.Lists.List <> Permutation_sym thm
R3098 Coq.Lists.List <> Permutation_trans thm
R3118 Coq.Lists.List <> Permutation_in thm
R3135 Coq.Lists.List <> Permutation_app thm
R3153 Coq.Lists.List <> Permutation_app_swap thm
R3176 Coq.Lists.List <> Permutation_cons_app thm
R3199 Coq.Lists.List <> Permutation_length thm
R3220 Coq.Lists.List <> Permutation_rev thm
R3238 Coq.Lists.List <> Permutation_app_inv thm
R3260 Coq.Lists.List <> Permutation_cons_inv thm
R3283 Coq.Lists.List <> Permutation_cons_app_inv thm
R3310 Coq.Lists.List <> Permutation_app_inv_l thm
R3334 Coq.Lists.List <> Permutation_app_inv_r thm
prf 3496 <> count_occ_le_len
R3567 Coq.Init.Peano "n <= m" not
R3544 Coq.Lists.List <> count_occ def
R3554 Coq.ZArith.ZArith_dec <> Z_eq_dec def
R3570 Coq.Lists.List <> length def
R3540 Coq.ZArith.BinInt <> Z ind
R3527 Coq.Lists.List <> list ind
R3532 Coq.ZArith.BinInt <> Z ind
R3642 Coq.Init.Peano <> le_n constr
R3642 Coq.Init.Peano <> le_n constr
R3659 Coq.Lists.List <> length def
R3669 Coq.Lists.List "x :: y" not
R3689 Coq.ZArith.ZArith_dec <> Z_eq_dec def
R3659 Coq.Lists.List <> length def
R3669 Coq.Lists.List "x :: y" not
R3689 Coq.ZArith.ZArith_dec <> Z_eq_dec def
R3751 Coq.Lists.List <> count_occ_cons_eq thm
R3751 Coq.Lists.List <> count_occ_cons_eq thm
R3816 Coq.Lists.List <> count_occ_cons_neq thm
R3816 Coq.Lists.List <> count_occ_cons_neq thm
prf 3881 <> count_occ_cons_eq_len
R3999 Coq.Init.Logic "A /\ B" not
R3995 Coq.Init.Logic "x = y" not
R4025 Coq.Init.Logic "x = y" not
R4002 Coq.Lists.List <> count_occ def
R4012 Coq.ZArith.ZArith_dec <> Z_eq_dec def
R4027 Coq.Lists.List <> length def
R3972 Coq.Init.Logic "x = y" not
R3942 Coq.Lists.List <> count_occ def
R3964 Coq.Lists.List "x :: y" not
R3952 Coq.ZArith.ZArith_dec <> Z_eq_dec def
R3974 Coq.Lists.List <> length def
R3984 Coq.Lists.List "x :: y" not
R3938 Coq.ZArith.BinInt <> Z ind
R3925 Coq.Lists.List <> list ind
R3930 Coq.ZArith.BinInt <> Z ind
R3917 Coq.ZArith.BinInt <> Z ind
R4069 Coq.Lists.List <> length def
R4079 Coq.Lists.List "x :: y" not
R4104 Coq.ZArith.ZArith_dec <> Z_eq_dec def
R4069 Coq.Lists.List <> length def
R4079 Coq.Lists.List "x :: y" not
R4104 Coq.ZArith.ZArith_dec <> Z_eq_dec def
R4196 Coq.Lists.List <> count_occ_cons_eq thm
R4196 Coq.Lists.List <> count_occ_cons_eq thm
R4241 Coq.Init.Peano <> eq_add_S thm
R4241 Coq.Init.Peano <> eq_add_S thm
R4290 Coq.Lists.List <> count_occ_cons_neq thm
R4290 Coq.Lists.List <> count_occ_cons_neq thm
R4333 decidez <> count_occ_le_len thm
R4333 decidez <> count_occ_le_len thm
def 4406 <> alln
R4458 Coq.Init.Logic "x = y" not
R4435 Coq.Lists.List <> count_occ def
R4445 Coq.ZArith.ZArith_dec <> Z_eq_dec def
R4460 Coq.Lists.List <> length def
R4429 Coq.ZArith.BinInt <> Z ind
R4416 Coq.Lists.List <> list ind
R4421 Coq.ZArith.BinInt <> Z ind
prf 4479 <> alln_nil
R4506 decidez <> alln def
R4513 Coq.Lists.List <> nil constr
R4517 Coq.ZArith.BinInt <> Z ind
R4502 Coq.ZArith.BinInt <> Z ind
R4567 Coq.Init.Logic <> refl_equal constr
R4567 Coq.Init.Logic <> refl_equal constr
prf 4593 <> alln_cons
R4658 Coq.Init.Logic "A <-> B" not
R4642 decidez <> alln def
R4650 Coq.Lists.List "x :: y" not
R4668 Coq.Init.Logic "A /\ B" not
R4664 Coq.Init.Logic "x = y" not
R4671 decidez <> alln def
R4638 Coq.ZArith.BinInt <> Z ind
R4625 Coq.Lists.List <> list ind
R4630 Coq.ZArith.BinInt <> Z ind
R4617 Coq.ZArith.BinInt <> Z ind
R4748 decidez <> count_occ_cons_eq_len thm
R4748 decidez <> count_occ_cons_eq_len thm
R4888 Coq.Lists.List <> count_occ_cons_eq thm
R4888 Coq.Lists.List <> count_occ_cons_eq thm
R4920 Coq.Lists.List <> length def
R4930 Coq.Lists.List "x :: y" not
R4920 Coq.Lists.List <> length def
R4930 Coq.Lists.List "x :: y" not
prf 4986 <> alln_app
R5059 Coq.Init.Logic "A <-> B" not
R5041 decidez <> alln def
R5050 Coq.Lists.List "x ++ y" not
R5073 Coq.Init.Logic "A /\ B" not
R5063 decidez <> alln def
R5076 decidez <> alln def
R5037 Coq.ZArith.BinInt <> Z ind
R5024 Coq.Lists.List <> list ind
R5029 Coq.ZArith.BinInt <> Z ind
R5010 Coq.Lists.List <> list ind
R5015 Coq.ZArith.BinInt <> Z ind
R5197 decidez <> alln_nil thm
R5197 decidez <> alln_nil thm
R5250 decidez <> alln_cons thm
R5250 decidez <> alln_cons thm
R5346 decidez <> alln_cons thm
R5346 decidez <> alln_cons thm
R5521 decidez <> alln_cons thm
R5540 decidez <> alln_cons thm
R5521 decidez <> alln_cons thm
R5540 decidez <> alln_cons thm
prf 5653 <> alln_rev
R5708 Coq.Init.Logic "A <-> B" not
R5693 decidez <> alln def
R5699 Coq.Lists.List <> rev def
R5712 decidez <> alln def
R5689 Coq.ZArith.BinInt <> Z ind
R5676 Coq.Lists.List <> list ind
R5681 Coq.ZArith.BinInt <> Z ind
R5803 decidez <> alln_nil thm
R5803 decidez <> alln_nil thm
R5853 Coq.Lists.List "x ++ y" not
R5847 Coq.Lists.List <> rev def
R5858 Coq.Lists.List "x :: y" not
R5861 Coq.Lists.List <> nil constr
R5827 Coq.Lists.List <> rev def
R5834 Coq.Lists.List "x :: y" not
R5880 decidez <> alln_app thm
R5923 decidez <> alln_cons thm
R5853 Coq.Lists.List "x ++ y" not
R5847 Coq.Lists.List <> rev def
R5858 Coq.Lists.List "x :: y" not
R5861 Coq.Lists.List <> nil constr
R5827 Coq.Lists.List <> rev def
R5834 Coq.Lists.List "x :: y" not
R5880 decidez <> alln_app thm
R5923 decidez <> alln_cons thm
R5957 decidez <> alln_cons thm
R5957 decidez <> alln_cons thm
R6108 decidez <> alln_cons thm
R6178 Coq.Lists.List "x ++ y" not
R6172 Coq.Lists.List <> rev def
R6183 Coq.Lists.List "x :: y" not
R6186 Coq.Lists.List <> nil constr
R6152 Coq.Lists.List <> rev def
R6159 Coq.Lists.List "x :: y" not
R6200 decidez <> alln_app thm
R6108 decidez <> alln_cons thm
R6178 Coq.Lists.List "x ++ y" not
R6172 Coq.Lists.List <> rev def
R6183 Coq.Lists.List "x :: y" not
R6186 Coq.Lists.List <> nil constr
R6152 Coq.Lists.List <> rev def
R6159 Coq.Lists.List "x :: y" not
R6200 decidez <> alln_app thm
R6261 decidez <> alln_cons thm
R6261 decidez <> alln_cons thm
R6315 decidez <> alln_nil thm
R6315 decidez <> alln_nil thm
R6344 decidez <> alln_nil thm
R6532 decidez <> cons_eq_nil thm
R6546 decidez <> nil_eq_cons thm
R6560 decidez <> cons_eq_cons thm
R6575 Coq.Lists.List <> rev_unit thm
R6586 Coq.Lists.List <> app_ass thm
R6596 decidez <> simpl_x_cons_app thm
R6615 decidez <> simpl_app_nil thm
R6631 decidez <> simpl_nil_app thm
R6647 decidez <> list_app_eq_nil thm
R6665 decidez <> nil_eq_list_app thm
R6683 decidez <> simpl_head_cons thm
R6701 decidez <> simpl_tail_nil thm
R6718 decidez <> simpl_tail_cons thm
R6736 decidez <> simpl_length_nil thm
R6755 decidez <> simpl_length_cons thm
R6775 Coq.Lists.List <> app_length thm
R6788 Coq.Lists.List <> rev_length thm
R6801 decidez <> simpl_rev_nil thm
R6817 decidez <> simpl_rev_cons thm
R6834 Coq.Lists.List <> distr_rev thm
R6846 Coq.Lists.List <> rev_involutive thm
R6863 Coq.ZArith.Znat <> inj_0 thm
R6871 Coq.ZArith.Znat <> inj_S thm
R6879 Coq.ZArith.Znat <> inj_plus thm
R6890 decidez <> in_x_cons thm
R6902 decidez <> alln_cons thm
R6914 decidez <> alln_app thm
R6925 decidez <> alln_rev thm
R7130 Coq.Init.Logic "x = y" not
R7125 Coq.Lists.List "x :: y" not
R7134 Coq.Lists.List <> nil constr
R7138 Coq.ZArith.BinInt <> Z ind
R7198 Coq.Init.Logic "x = y" not
R7193 Coq.Lists.List <> nil constr
R7197 Coq.ZArith.BinInt <> Z ind
R7204 Coq.Lists.List "x :: y" not
R7267 Coq.Init.Logic "x = y" not
R7262 Coq.Lists.List "x :: y" not
R7272 Coq.Lists.List "x :: y" not
R7328 Coq.Lists.List <> rev def
R7336 Coq.Lists.List "x ++ y" not
R7342 Coq.Lists.List "x :: y" not
R7347 Coq.Lists.List <> nil constr
R7351 Coq.ZArith.BinInt <> Z ind
R7413 Coq.Lists.List "x ++ y" not
R7407 Coq.Lists.List "x ++ y" not
R7478 Coq.Lists.List "x ++ y" not
R7472 Coq.Lists.List "x :: y" not
R7545 Coq.Lists.List "x ++ y" not
R7550 Coq.Lists.List <> nil constr
R7554 Coq.ZArith.BinInt <> Z ind
R7616 Coq.Lists.List "x ++ y" not
R7611 Coq.Lists.List <> nil constr
R7615 Coq.ZArith.BinInt <> Z ind
R7687 Coq.Init.Logic "x = y" not
R7680 Coq.Lists.List "x ++ y" not
R7691 Coq.Lists.List <> nil constr
R7695 Coq.ZArith.BinInt <> Z ind
R7759 Coq.Init.Logic "x = y" not
R7754 Coq.Lists.List <> nil constr
R7758 Coq.ZArith.BinInt <> Z ind
R7767 Coq.Lists.List "x ++ y" not
R7828 Coq.Lists.List <> hd def
R7839 Coq.Lists.List "x :: y" not
R7831 Coq.ZArith.BinInt "" not
R7900 Coq.Lists.List <> tail def
R7907 Coq.Lists.List <> nil constr
R7911 Coq.ZArith.BinInt <> Z ind
R7967 Coq.Lists.List <> tail def
R7976 Coq.Lists.List "x :: y" not
R8037 Coq.Lists.List <> length def
R8046 Coq.Lists.List <> nil constr
R8050 Coq.ZArith.BinInt <> Z ind
R8108 Coq.Lists.List <> length def
R8119 Coq.Lists.List "x :: y" not
R8182 Coq.Lists.List <> length def
R8194 Coq.Lists.List "x ++ y" not
R8251 Coq.Lists.List <> length def
R8259 Coq.Lists.List <> rev def
R8316 Coq.Lists.List <> rev def
R8322 Coq.Lists.List <> nil constr
R8326 Coq.ZArith.BinInt <> Z ind
R8381 Coq.Lists.List <> rev def
R8389 Coq.Lists.List "x :: y" not
R8449 Coq.Lists.List <> rev def
R8458 Coq.Lists.List "x ++ y" not
R8514 Coq.Lists.List <> rev def
R8519 Coq.Lists.List <> rev def
R8580 Coq.ZArith.BinInt <> Z_of_nat def
R8589 Coq.Init.Datatypes "" not
R8668 Coq.ZArith.BinInt <> Z_of_nat def
R8678 Coq.Init.Datatypes <> S constr
R8765 Coq.ZArith.BinInt <> Z_of_nat def
R8779 Coq.Init.Peano "n + m" not
R8833 Coq.Lists.List <> In def
R8843 Coq.Lists.List "x :: y" not
R8898 decidez <> alln def
R8907 Coq.Lists.List "x :: y" not
R8965 decidez <> alln def
R8975 Coq.Lists.List "x ++ y" not
R9033 decidez <> alln def
R9039 Coq.Lists.List <> rev def
R9110 Coq.Init.Logic "x = y" not
R9105 Coq.Lists.List "x :: y" not
R9114 Coq.Lists.List <> nil constr
R9118 Coq.ZArith.BinInt <> Z ind
R9214 Coq.Init.Logic "x = y" not
R9209 Coq.Lists.List <> nil constr
R9213 Coq.ZArith.BinInt <> Z ind
R9220 Coq.Lists.List "x :: y" not
R9314 Coq.Init.Logic "x = y" not
R9309 Coq.Lists.List "x :: y" not
R9319 Coq.Lists.List "x :: y" not
R9377 Coq.Lists.List <> rev def
R9385 Coq.Lists.List "x ++ y" not
R9391 Coq.Lists.List "x :: y" not
R9396 Coq.Lists.List <> nil constr
R9400 Coq.ZArith.BinInt <> Z ind
R9464 Coq.Lists.List "x ++ y" not
R9458 Coq.Lists.List "x ++ y" not
R9531 Coq.Lists.List "x ++ y" not
R9525 Coq.Lists.List "x :: y" not
R9600 Coq.Lists.List "x ++ y" not
R9605 Coq.Lists.List <> nil constr
R9609 Coq.ZArith.BinInt <> Z ind
R9673 Coq.Lists.List "x ++ y" not
R9668 Coq.Lists.List <> nil constr
R9672 Coq.ZArith.BinInt <> Z ind
R9746 Coq.Init.Logic "x = y" not
R9739 Coq.Lists.List "x ++ y" not
R9750 Coq.Lists.List <> nil constr
R9754 Coq.ZArith.BinInt <> Z ind
R9820 Coq.Init.Logic "x = y" not
R9815 Coq.Lists.List <> nil constr
R9819 Coq.ZArith.BinInt <> Z ind
R9828 Coq.Lists.List "x ++ y" not
R9891 Coq.Lists.List <> hd def
R9902 Coq.Lists.List "x :: y" not
R9894 Coq.ZArith.BinInt "" not
R9965 Coq.Lists.List <> tail def
R9972 Coq.Lists.List <> nil constr
R9976 Coq.ZArith.BinInt <> Z ind
R10034 Coq.Lists.List <> tail def
R10043 Coq.Lists.List "x :: y" not
R10106 Coq.Lists.List <> length def
R10115 Coq.Lists.List <> nil constr
R10119 Coq.ZArith.BinInt <> Z ind
R10179 Coq.Lists.List <> length def
R10190 Coq.Lists.List "x :: y" not
R10255 Coq.Lists.List <> length def
R10267 Coq.Lists.List "x ++ y" not
R10326 Coq.Lists.List <> length def
R10334 Coq.Lists.List <> rev def
R10393 Coq.Lists.List <> rev def
R10399 Coq.Lists.List <> nil constr
R10403 Coq.ZArith.BinInt <> Z ind
R10460 Coq.Lists.List <> rev def
R10468 Coq.Lists.List "x :: y" not
R10530 Coq.Lists.List <> rev def
R10539 Coq.Lists.List "x ++ y" not
R10597 Coq.Lists.List <> rev def
R10602 Coq.Lists.List <> rev def
R10665 Coq.ZArith.BinInt <> Z_of_nat def
R10674 Coq.Init.Datatypes "" not
R10752 Coq.ZArith.BinInt <> Z_of_nat def
R10762 Coq.Init.Datatypes <> S constr
R10848 Coq.ZArith.BinInt <> Z_of_nat def
R10862 Coq.Init.Peano "n + m" not
R10918 Coq.Lists.List <> In def
R10928 Coq.Lists.List "x :: y" not
R10985 decidez <> alln def
R10994 Coq.Lists.List "x :: y" not
R11054 decidez <> alln def
R11064 Coq.Lists.List "x ++ y" not
R11124 decidez <> alln def
R11130 Coq.Lists.List <> rev def
R11158 decidez <> alln_rev thm
R11092 decidez <> alln_app thm
R11021 decidez <> alln_cons thm
R10952 decidez <> in_x_cons thm
R10886 Coq.ZArith.Znat <> inj_plus thm
R10784 Coq.ZArith.BinInt <> Z_of_nat def
R10794 Coq.Init.Datatypes <> S constr
R10692 Coq.ZArith.BinInt <> Z_of_nat def
R10701 Coq.Init.Datatypes "" not
R10627 Coq.Lists.List <> rev_involutive thm
R10564 Coq.Lists.List <> distr_rev thm
R10492 decidez <> simpl_rev_cons thm
R10423 decidez <> simpl_rev_nil thm
R10359 Coq.Lists.List <> rev_length thm
R10292 Coq.Lists.List <> app_length thm
R10214 decidez <> simpl_length_cons thm
R10139 decidez <> simpl_length_nil thm
R10067 decidez <> simpl_tail_cons thm
R9996 decidez <> simpl_tail_nil thm
R9926 decidez <> simpl_head_cons thm
R9852 decidez <> nil_eq_list_app thm
R9774 decidez <> list_app_eq_nil thm
R9698 decidez <> simpl_nil_app thm
R9629 decidez <> simpl_app_nil thm
R9557 decidez <> simpl_x_cons_app thm
R9490 Coq.Lists.List <> app_ass thm
R9421 Coq.Lists.List <> rev_unit thm
R9341 decidez <> cons_eq_cons thm
R9247 decidez <> nil_eq_cons thm
R9143 decidez <> cons_eq_nil thm
R9062 decidez <> alln_rev thm
R8998 decidez <> alln_app thm
R8929 decidez <> alln_cons thm
R8862 decidez <> in_x_cons thm
R8798 Coq.ZArith.Znat <> inj_plus thm
R8695 Coq.ZArith.BinInt <> Z_of_nat def
R8705 Coq.Init.Datatypes <> S constr
R8602 Coq.ZArith.BinInt <> Z_of_nat def
R8611 Coq.Init.Datatypes "" not
R8539 Coq.Lists.List <> rev_involutive thm
R8478 Coq.Lists.List <> distr_rev thm
R8408 decidez <> simpl_rev_cons thm
R8341 decidez <> simpl_rev_nil thm
R8279 Coq.Lists.List <> rev_length thm
R8214 Coq.Lists.List <> app_length thm
R8138 decidez <> simpl_length_cons thm
R8065 decidez <> simpl_length_nil thm
R7995 decidez <> simpl_tail_cons thm
R7926 decidez <> simpl_tail_nil thm
R7858 decidez <> simpl_head_cons thm
R7786 decidez <> nil_eq_list_app thm
R7710 decidez <> list_app_eq_nil thm
R7636 decidez <> simpl_nil_app thm
R7569 decidez <> simpl_app_nil thm
R7499 decidez <> simpl_x_cons_app thm
R7434 Coq.Lists.List <> app_ass thm
R7367 Coq.Lists.List <> rev_unit thm
R7289 decidez <> cons_eq_cons thm
R7221 decidez <> nil_eq_cons thm
R7153 decidez <> cons_eq_nil thm
R11389 Coq.Init.Logic "~ x" not
R11442 Coq.Init.Logic "'exists' x : t , p" not
R11491 Coq.Init.Logic "A /\ B" not
R11527 Coq.Init.Logic "A \/ B" not
R11563 Coq.Init.Logic "A /\ B" not
R11588 Coq.Init.Logic "A \/ B" not
R11656 Coq.Init.Logic <> False ind
R11726 Coq.Init.Logic <> ex ind
R12028 Coq.Init.Logic <> False ind
