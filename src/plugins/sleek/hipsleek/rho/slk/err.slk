//CountDownLatch
data cell{ int v; }.

pred_prim LatchIn{-%P@Split}<>.

pred_prim LatchOut{+%P@Split}<>.

pred_prim CNT<n:int>
  inv n>=(-1).
  
// Normalization lemma
lemma_prop "idemp-CNT" self::CNT<a> * self::CNT<(-1)> & a<=0 -> self::CNT<(-1)>.

lemma_prop "combine-CNT" self::CNT<a> * self::CNT<b> & a,b>=0 -> self::CNT<a+b>.

// Lemma to trigger error
lemma "ERR-1" self::LatchIn{- %P}<> * self::CNT<a> & a<0 -> emp & flow __Fail.

lemma "ERR-2" self::CNT<a> * self::CNT<b> & a>0 & b<0 -> emp & flow __Fail.

checkentail c::LatchIn{- x::cell<_>}<> * c::CNT<(-1)> & flow __norm |- emp & flow __Fail.
print residue.

//checkentail c::CNT<(-1)> |- emp & flow __Fail.

check_normalize c::CNT<(-1)> * c::CNT<1>.

checkentail c::CNT<1> * c::CNT<(-1)> |- emp & flow __Fail.

checkentail
 (exists flted_38_1954,flted_44_1953: 
  c_40'::CNT{}<flted_38_1954> * c_40'::CNT{}<flted_20_1958> & 
  v_int_53_1698=b_1722+0 & 0<=b_1722 & v_int_53_1698=2 & 0<v_int_53_1698 & 0<=b_1852 & b_1722=b_1852+2 & flted_43_1763=0 & 0<=flted_43_1763 & flted_56_1759=b_1764+flted_43_1763 & 0<v_int_53_1762 & v_int_53_1762=2 & 0<v_int_53_1760 & v_int_53_1760=2 & 0<=b_1761 & v_int_53_1760=b_1761+0 & flted_56_1759=0 & 0<=b_1764 & flted_56_1759=b_1764+0 & 0<=(a_1765+1) & flted_44_1953+1=0 & exists(flted_43_53:0<=(flted_43_53+1)) & flted_20_1777+1=0 & 0<v_int_53_1898 & v_int_53_1898=2 & v_int_53_1895=b_1896+0 & 0<=b_1896 & v_int_53_1895=2 & 0<v_int_53_1895 & 0<=b_1897 & 0<=2 & b_1896=b_1897+2 & flted_59_1894=2 & 0<=(b_1899+1) & b_1899<flted_59_1894 & 0<n & 0<=n & 0<=b_1899 & flted_59_1894=b_1899+n & 0<=(a_1900+1) & flted_38_1954+1=n & 0<=(n+1) & c_40'=c_40' & flted_20_1958+1=0)
 |- emp & flow __Fail.


