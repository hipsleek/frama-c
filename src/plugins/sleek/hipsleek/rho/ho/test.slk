// x::R<..>  "_prim_pred_R"
// x::R<..> * y::G<..> & x=y
pred_prim threadR{F,G}<>
 inv true.

data cell {
  int x;
}.

//lemma t::threadR{P * Q,G}<> ==> t::thrd{P,G}<> * t::thrd[Q,G]<> .

checkentail x::cell<111> |- x::cell<222>.
print residue.

/*
checkentail t::threadR {y::cell<1>*x::cell<b> & a=4 & b=5,G} <> 
    |- t::threadR{x::cell<a> & true,_}<>.
print residue.


checkentail t::threadR<y::cell<5>> |- t::threadR<P>.
print residue.

checkentail t::threadR<y::cell<5>*x::cell<4>> 
    |- t::threadR<x::cell<a>>.
print residue.

checkentail t::thrd<# y::cell<5>*x::cell<4> & true #> 
    |- t::thrd<#x::cell<a> & true #>.
print residue.
*/

