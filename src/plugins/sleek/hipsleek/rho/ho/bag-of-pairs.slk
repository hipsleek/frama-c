/*

 Need: "-tp mona"

 Simple entailments for bags of pairs

 A & v1=tup2(a1,a2) |- B & v2=tup2(b1,b2) & v1=v2
       ==translate==>
 A & (a1=b1 & a2=b2 => v1=v2) &
     (a1!=b1 | a2!=b2 => v1!=v2)  |- B & v1=v2.

*/


/*
S = union(S1,{tup2(c1,c2)}) 
  |- S = union(S1,{tup2(c1,c2)}).
    ==translate
S = union(S1,{v1}) & (c1=c1 & c2=c2 => v1=v2) //& v1=tup2(c1,c2)
                   & (c1!=c1 | c2!=c2 => v1!=v2) 
  |- S = union(S1,(v2}). // v2=tup2(c1,c2)

checkentail S = union(S1,{v1}) & (c1!=c1 | c2!=c2 | v1=v2)
                               & ((c1=c1 & c2=c2) | v1!=v2)
            |- S = union(S1,{v2}).
expect Valid.
print residue.
*/

//(1)
checkentail v1=tup2(1,2) & v1=v2 |- v2 = tup2(1,2) .
expect Valid.
print residue.

//(2)
checkentail S = union(S1,{tup2(1,2)}) |- S = union(S1,{tup2(1,2)}).
expect Valid.
print residue.

//(3)
checkentail S = union(S1,{tup2(c1,c2)}) |- S = union(S1,{tup2(c1,c2)}).
expect Valid.
print residue.

//(4)
checkentail S = union(S1,{tup2(a1,a2)}) & a1=b1 & a2=b2|- S = union(S1,{tup2(b1,b2)}).
expect Valid.
print residue.

//(5)
checkentail S = union(S1,{tup2(c1,c2)}) |- S = union(S1,{tup2(c2,c1)}).
expect Fail.
print residue.

//(6), contradition
checkentail v1=tup2(1,2) & v1=tup2(2,1) |- false.
expect Valid.
print residue.

//(7), contradition
checkentail v1=tup2(1,2) & v2=tup2(2,1) &v1=v2 |- false.
expect Valid.
print residue.