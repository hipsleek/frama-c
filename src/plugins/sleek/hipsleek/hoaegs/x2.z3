(set-logic AUFNIA)
(declare-fun l () Int)
(declare-fun h () Int)
(declare-fun x_42' () Int)
(declare-fun a () (Array Int Int))
(declare-fun l_297 () Int)
(declare-fun h_298 () Int)
(declare-fun l_316 () Int)
(declare-fun h_317 () Int)
(declare-fun a_342 () (Array Int Int))
(declare-fun i () Int)
(declare-fun k_40' () Int)
(declare-fun a' () (Array Int Int))
(declare-fun t_41' () Int)
(declare-fun j () Int)
(declare-fun bnd ((Array Int Int) Int Int Int Int) Bool)
(declare-fun alleqs ((Array Int Int) Int Int Int) Bool)
(declare-fun sorted ((Array Int Int) Int Int) Bool)
(declare-fun idexc ((Array Int Int) (Array Int Int) Int Int) Bool)
(assert (forall (a (Array Int Int)) (i Int) (j Int) (low Int) (high Int) (= (bnd a i j low high) (or (> i j) (and (<= i j) (forall (?k Int) (or (or (< ?k i) (> ?k j)) (and (<= low (select a ?k)) (<= (select a ?k) high)))))))))
(assert (forall (a (Array Int Int)) (i Int) (j Int) (s Int) (= (alleqs a i j s) (or (> i j) (and (<= i j) (forall (?k Int) (or (or (< ?k i) (> ?k j)) (= (select a ?k) s))))))))
(assert (forall (a (Array Int Int)) (i Int) (j Int) (= (sorted a i j) (or (>= i j) (and (< i j) (forall (?k Int) (or (or (< ?k i) (>= ?k j)) (<= (select a ?k) (select a (+ ?k 1))))))))))
(assert (forall (a (Array Int Int)) (b (Array Int Int)) (i Int) (j Int) (= (idexc a b i j) (forall (?k Int) (or (and (<= i ?k) (<= ?k j)) (= (select a ?k) (select b ?k)))))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (< i k_40') (bnd a_342 i k_40' l_297 (- x_42' 1))) (<= i (+ k_40' 1))) (bnd a i j l h)) (< i j)) (= x_42' (select a i))) (<= k_40' j)) (alleqs a_342 (+ k_40' 1) (- t_41' 1) x_42')) (<= i t_41')) (<= t_41' (+ 1 j))) (bnd a_342 t_41' j (+ x_42' 1) h_298)) (idexc a_342 a i j)) (bnd a_342 i j l_297 h_298)) (<= i j)) (bnd a' i k_40' l_316 h_317)) (sorted a' i k_40')) (idexc a' a_342 i k_40')) (< t_41' j)))
; below works !
(assert (not (bnd a' t_41' j (+ 1 x_42') h_298)))
(check-sat)
