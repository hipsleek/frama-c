data node {
	int val;
	node next
}.


pred ll2<i,j,aaa> == self = null & i=j
  or self::node<v, r> * r::ll2<i+1,j,aaa> & aaa[i]=v 
  inv i<=j.

//(2)
checkentail x::node<v,q>*q::ll2<i+1,j,aa> & aa[i]=v 
   |- x::ll2<i,j,bxx>.
print residue.


/*
checkentail x::node<v,q>*q::ll2<i+1,j,aa> & aa[i]=v
   |- x::ll2<i,j,bxx>.
print residue.

inst aa to bxx:
 <1>(exists flted_28_103: emp&flted_28_103=1+i & v=aa[i] & v=v_106 & q=r_107 & exists(i_104:v_106=aa[i_104] & flted_28_103=i_104+1) & exists(j_105:j=j_105) & exists(i_104:flted_28_103=1+i_104 & v_106=bxx[i_104]) & aa=bxx&{FLOW,(21,22)=__norm})[]
*/


/*
WHY rhs still contains an "aa"? Is there a
substitution problem during folding?

ntail 1: Fail.(may) cause: (((flted_24_55<j & q!=null) | (q=null & flted_24_55=j))) & v_59=bxx[i] & 
flted_24_55=1+i |-  exists(i_56:flted_24_55=1+i_56 & v_59=aa[i_56]). LOCS:[1;8;24;0] (may-bug)

*/


