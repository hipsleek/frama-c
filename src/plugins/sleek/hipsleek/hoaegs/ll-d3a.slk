data node {
	int val;
	node next
}.

relation dm(int[] a, int low, int high).

axiom dm(a,low,high) & low<=l & h<=high ==> dm(a,l,h).
//axiom dm(a,l+1,h) & dm(a,l,l+1)  ==> dm(a,l,h).
//axiom dm(a,l,h-1) & dm(a,h-1,h) ==> dm(a,l,h).
axiom l>=h ==> dm(a,l,h).
axiom dm(a,l,k) & dm(a,k,h) ==> dm(a,l,h).

pred ll2<i,j,aaa> == self = null & i=j //& dm(aaa,i,j)
  or self::node<v, r> * r::ll2<i+1,j,aaa> & aaa[i]=v
      & dm(aaa,i,i+1) 
     inv i<=j & dm(aaa,i,j).

checkentail
  x::node<v,q>
  * q::ll2<i+1,j,bbb> & forall(k:!(i+1<=k<j)|bbb[k]=aaa[k]+1)
  & v=aaa[i]+1 & dm(aaa,i,i+1)
  & bbb[i]=v & dm(bbb,i,i+1) // missing ctr
  |- x::ll2<i,j,bbb>  & forall(k:!(i<=k<j)|bbb[k]=aaa[k]+1)
.

/*
checkentail
  x::node<v,q>*q::ll2<i+1,j,bbb> 
  & bbb[i]=v & dm(bbb,i,i+1)
  |- x::ll2<i,j,bbb>  
.
//valid

checkentail
 forall(k:!(i+1<=k<j)|bbb[k]=aaa[k]+1)
  & v=aaa[i]+1 & bbb[i]=v
  |- forall(k:!(i<=k<j)|bbb[k]=aaa[k]+1)
.
//valid
*/