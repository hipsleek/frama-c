data arr {
  int val;
}.

pred arr_seg<i:int,n:int> ==
  emp & i=n & n>=0
  or x::arr<_> * self::arr_seg<i+1,n> & x=self+i & 0<=i<n
  inv n>=i & i>=0.


checkentail y::arr<_> * z::arr<_> & z=y+1 & y=x+2 & i=2
   |- [n] x::arr_seg<i,n>.
print residue.
expect Valid.

/*
# ex1e6d1.slk

checkentail y::arr<_> * z::arr<_> & z=y+1 & y=x+2 & i=2
   |- [n] x::arr_seg<i,n>.
print residue.
expect Valid.

# recursive folding appeared to have failed.
  Can we order the matches?

 <1>y::arr<Anon_13>@M * z::arr<Anon_14>@M&i=2 & y=2+x & z=1+y & 0<=n & i=n&{FLOW,(20,21)=__norm#E}[]
[[ Fold]]


*/

