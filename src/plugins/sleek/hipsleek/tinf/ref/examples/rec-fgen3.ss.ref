
!!!Full processing file "examples/rec-fgen3.ss"
Parsing file "examples/rec-fgen3.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

Checking procedure f$int~int... 
Procedure f$int~int SUCCESS.

Checking procedure f$int~int... 

*****************************
*** TERMINATION INFERENCE ***
*****************************
Temporal Assumptions:
 termAssume res=v_int_15_1127' & n'<k' & k'=k & n'=n & !(v_bool_14_1128') & 
n'<k' & !(v_bool_14_1128') & v_int_15_1182=1+
n' & fpost_1123(v_int_15_1182,k') & fpost_1123(v_int_15_1126',k') --> fpost_1123(n,k).

 termAssume k'<=n' & k'=k & n'=n & v_bool_14_1128' & k'<=n' & 
v_bool_14_1128' & res=n' --> fpost_1123(n,k).

 termAssume v_int_15_1182=1+n' & !(v_bool_14_1128') & n'<k' & 
!(v_bool_14_1128') & n'=n & k'=k & 
n'<k' & fpre_0(n,k) --> fpre_0(v_int_15_1126',k').

 termAssume n'<k' & k'=k & n'=n & !(v_bool_14_1128') & n'<k' & 
!(v_bool_14_1128') & v_int_15_1125'=1+
n' & fpre_0(n,k) --> fpre_0(v_int_15_1125',k').


Base/Rec Case Splitting:
[	f: [[3] k<=n@B,[4] n<k@R]
]
Termination Inference Result:
f:  case {
  k<=n -> requires emp & Term[29,1]
 ensures emp & true; 
  n<k -> requires emp & MayLoop[]
 ensures emp & true; 
  }

0 false contexts at: ()
