
!!!Full processing file "slk/mult1.ss"
Parsing file "slk/mult1.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

Checking procedure f$int... 
Procedure f$int SUCCESS.

Checking procedure f$int... 

*****************************
*** TERMINATION INFERENCE ***
*****************************
Temporal Assumptions:
 termAssume v_int_12_1192=1+x' & 0<=x' & x'=x & !(v_bool_11_1132') & 0<=x' & 
!(v_bool_11_1132') & v_int_12_1179+1=x' & v_int_12_1131'=v_int_12_1197+
v_int_12_1196 & 
res=v_int_12_1131' & fpost_1122(v_int_12_1179) & fpost_1122(v_int_12_1192) --> fpost_1122(x).

 termAssume x'<0 & x'=x & v_bool_11_1132' & x'<0 & v_bool_11_1132' & 
v_int_11_1124'=0 & res=v_int_11_1124' --> fpost_1122(x).

 termAssume v_int_12_1179+1=x' & !(v_bool_11_1132') & 0<=x' & 
!(v_bool_11_1132') & x'=x & 0<=x' & v_int_12_1128'=1+
x' & fpre_0(x) --> fpre_0(v_int_12_1128').

 termAssume 0<=x' & x'=x & !(v_bool_11_1132') & 0<=x' & !(v_bool_11_1132') & 
v_int_12_1126'+1=x' & fpre_0(x) --> fpre_0(v_int_12_1126').


Base/Rec Case Splitting:
[	f: [[3] x<=(0-1)@B,[4] 0<=x@R]
]
Termination Inference Result:
f:  case {
  x<=(0-1) -> requires emp & Term[30,1]
 ensures emp & true; 
  0<=x -> requires emp & Loop[]
 ensures false & false; 
  }

0 false contexts at: ()
