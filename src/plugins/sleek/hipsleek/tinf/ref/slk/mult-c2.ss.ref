
!!!Full processing file "slk/mult-c2.ss"
Parsing file "slk/mult-c2.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

Checking procedure f$int... 
Procedure f$int SUCCESS.

Checking procedure f$int... 

*****************************
*** TERMINATION INFERENCE ***
*****************************
Temporal Assumptions:
 termAssume v_int_13_1209=1+x' & 0<x' & x'=x & !(v_bool_6_1133') & 0<x' & 
!(v_bool_6_1133') & !(v_bool_8_1130') & v_int_11_1197=1+
x' & fpost_1124(v_int_11_1197) & fpost_1124(v_int_13_1209) --> fpost_1124(x).

 termAssume v_int_13_1208=1+x' & 0<x' & x'=x & !(v_bool_6_1133') & 0<x' & 
!(v_bool_6_1133') & v_bool_8_1130' & v_int_9_1194+
1=x' & fpost_1124(v_int_9_1194) & fpost_1124(v_int_13_1208) --> fpost_1124(x).

 termAssume x'<=0 & x'=x & v_bool_6_1133' & x'<=0 & 
v_bool_6_1133' --> fpost_1124(x).

 termAssume v_int_11_1197=1+x' & !(v_bool_8_1130') & !(v_bool_6_1133') & 
0<x' & !(v_bool_6_1133') & x'=x & 0<x' & v_int_13_1132'=1+
x' & fpre_0(x) --> fpre_0(v_int_13_1132').

 termAssume v_int_9_1194+1=x' & v_bool_8_1130' & !(v_bool_6_1133') & 0<x' & 
!(v_bool_6_1133') & x'=x & 0<x' & v_int_13_1132'=1+
x' & fpre_0(x) --> fpre_0(v_int_13_1132').

 termAssume 0<x' & x'=x & !(v_bool_6_1133') & 0<x' & !(v_bool_6_1133') & 
!(v_bool_8_1130') & v_int_11_1129'=1+
x' & fpre_0(x) --> fpre_0(v_int_11_1129').

 termAssume 0<x' & x'=x & !(v_bool_6_1133') & 0<x' & !(v_bool_6_1133') & 
v_bool_8_1130' & v_int_9_1127'+1=x' & fpre_0(x) --> fpre_0(v_int_9_1127').


Base/Rec Case Splitting:
[	f: [[5] x<=0@B,[6] 1<=x@R,[7] 1<=x@R]
]
Termination Inference Result:
f:  case {
  x<=0 -> requires emp & Term[31,1]
 ensures emp & true; 
  1<=x -> requires emp & Loop[]
 ensures false & false; 
  1<=x -> requires emp & MayLoop[]
 ensures emp & true; 
  }

0 false contexts at: ()
