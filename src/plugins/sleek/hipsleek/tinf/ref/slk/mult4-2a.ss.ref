
!!!Full processing file "slk/mult4-2a.ss"
Parsing file "slk/mult4-2a.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

Checking procedure f$int~int... 
Procedure f$int~int SUCCESS.

Checking procedure f$int~int... 

*****************************
*** TERMINATION INFERENCE ***
*****************************
Temporal Assumptions:
 termAssume v_int_12_1217=1+x' & !(v_bool_11_1130') & b'<=1 & 
!(v_bool_11_1130') & b'<=1 & !(v_bool_9_1131') & 0<=x' & !(v_bool_9_1131') & 
x'=x & b'=b & 0<=x' & fpost_1123(v_int_12_1217,b') --> fpost_1123(x,b).

 termAssume v_int_11_1216+1=x' & v_bool_11_1130' & 1<b' & v_bool_11_1130' & 
1<b' & !(v_bool_9_1131') & 0<=x' & !(v_bool_9_1131') & x'=x & b'=b & 
0<=x' & fpost_1123(v_int_11_1216,b') --> fpost_1123(x,b).

 termAssume x'<0 & b'=b & x'=x & v_bool_9_1131' & x'<0 & 
v_bool_9_1131' --> fpost_1123(x,b).

 termAssume 0<=x' & b'=b & x'=x & !(v_bool_9_1131') & 0<=x' & 
!(v_bool_9_1131') & b'<=1 & !(v_bool_11_1130') & b'<=1 & 
!(v_bool_11_1130') & v_int_12_1129'=1+
x' & fpre_0(x,b) --> fpre_0(v_int_12_1129',b').

 termAssume 0<=x' & b'=b & x'=x & !(v_bool_9_1131') & 0<=x' & 
!(v_bool_9_1131') & 1<b' & v_bool_11_1130' & 1<b' & v_bool_11_1130' & 
v_int_11_1127'+1=x' & fpre_0(x,b) --> fpre_0(v_int_11_1127',b').


Base/Rec Case Splitting:
[	f: [[3] x<=(0-1)@B,[4] b<=1 & 0<=x@R,[5] 0<=x & 2<=b@R]
]
Termination Inference Result:
f:  case {
  x<=(0-1) -> requires emp & Term[31,1]
 ensures emp & true; 
  b<=1 & 0<=x -> requires emp & Loop[]
 ensures false & false; 
  0<=x & 2<=b -> requires emp & Term[31,2,0+(1*x)+(0*b)]
 ensures emp & true; 
  }

0 false contexts at: ()
