
!!!Full processing file "slk/mult4-2.ss"
Parsing file "slk/mult4-2.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

Checking procedure f$int~boolean... 
Procedure f$int~boolean SUCCESS.

Checking procedure f$int~boolean... 

*****************************
*** TERMINATION INFERENCE ***
*****************************
Temporal Assumptions:
 termAssume v_int_13_1200=1+x' & !(bbb') & !(v_bool_10_1129') & 0<=x' & 
!(v_bool_10_1129') & x'=x & bbb'=bbb & 
0<=x' & fpost_1123(v_int_13_1200,bbb') --> fpost_1123(x,bbb).

 termAssume v_int_12_1199+1=x' & bbb' & !(v_bool_10_1129') & 0<=x' & 
!(v_bool_10_1129') & x'=x & bbb'=bbb & 
0<=x' & fpost_1123(v_int_12_1199,bbb') --> fpost_1123(x,bbb).

 termAssume x'<0 & bbb'=bbb & x'=x & v_bool_10_1129' & x'<0 & 
v_bool_10_1129' --> fpost_1123(x,bbb).

 termAssume 0<=x' & bbb'=bbb & x'=x & !(v_bool_10_1129') & 0<=x' & 
!(v_bool_10_1129') & !(bbb') & v_int_13_1128'=1+
x' & fpre_0(x,bbb) --> fpre_0(v_int_13_1128',bbb').

 termAssume 0<=x' & bbb'=bbb & x'=x & !(v_bool_10_1129') & 0<=x' & 
!(v_bool_10_1129') & bbb' & v_int_12_1126'+
1=x' & fpre_0(x,bbb) --> fpre_0(v_int_12_1126',bbb').


Base/Rec Case Splitting:
[	f: [[3] x<=(0-1)@B,[4] !(bbb) & 0<=x@R,[5] 0<=x & bbb@R]
]
Termination Inference Result:
f:  case {
  x<=(0-1) -> requires emp & Term[30,1]
 ensures emp & true; 
  !(bbb) & 0<=x -> requires emp & Loop[]
 ensures false & false; 
  0<=x & bbb -> requires emp & Term[30,2,0+(1*x)]
 ensures emp & true; 
  }

0 false contexts at: ()
