
!!!Full processing file "slk/mult4-3a.ss"
Parsing file "slk/mult4-3a.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

Checking procedure f$int~int~int... 
Procedure f$int~int~int SUCCESS.

Checking procedure f$int~int~int... 

*****************************
*** TERMINATION INFERENCE ***
*****************************
Temporal Assumptions:
 termAssume v_int_9_1232=y'+x' & !(v_bool_8_1129') & z'<0 & 
!(v_bool_8_1129') & z'<0 & !(v_bool_6_1130') & 0<=x' & !(v_bool_6_1130') & 
x'=x & y'=y & z'=z & 
0<=x' & fpost_1124(v_int_9_1232,y',z') --> fpost_1124(x,y,z).

 termAssume v_int_8_1231+y'=x' & v_bool_8_1129' & 0<=z' & v_bool_8_1129' & 
0<=z' & !(v_bool_6_1130') & 0<=x' & !(v_bool_6_1130') & x'=x & y'=y & z'=z & 
0<=x' & fpost_1124(v_int_8_1231,y',z') --> fpost_1124(x,y,z).

 termAssume x'<0 & z'=z & y'=y & x'=x & v_bool_6_1130' & x'<0 & 
v_bool_6_1130' --> fpost_1124(x,y,z).

 termAssume 0<=x' & z'=z & y'=y & x'=x & !(v_bool_6_1130') & 0<=x' & 
!(v_bool_6_1130') & z'<0 & !(v_bool_8_1129') & z'<0 & !(v_bool_8_1129') & 
v_int_9_1128'=y'+x' & fpre_0(x,y,z) --> fpre_0(v_int_9_1128',y',z').

 termAssume 0<=x' & z'=z & y'=y & x'=x & !(v_bool_6_1130') & 0<=x' & 
!(v_bool_6_1130') & 0<=z' & v_bool_8_1129' & 0<=z' & v_bool_8_1129' & 
v_int_8_1127'+y'=x' & fpre_0(x,y,z) --> fpre_0(v_int_8_1127',y',z').


Base/Rec Case Splitting:
[	f: [[3] x<=(0-1)@B,[4] z<=(0-1) & 0<=x@R,[5] 0<=x & 0<=z@R]
]
Termination Inference Result:
f:  case {
  x<=(0-1) -> requires emp & Term[31,1]
 ensures emp & true; 
  z<=(0-1) & 
  0<=x -> case {
           0<=y -> requires emp & Loop[]
 ensures false & false; 
           y<=(0-1) -> requires emp & Term[31,2,0+(1*x)+(0*y)+(0*
           z)]
 ensures emp & true; 
           }
  
  0<=x & 
  0<=z -> case {
           y<=0 -> requires emp & Loop[]
 ensures false & false; 
           1<=y -> requires emp & Term[31,3,0+(1*x)+(0*y)+(0*
           z)]
 ensures emp & true; 
           }
  
  }

0 false contexts at: ()
