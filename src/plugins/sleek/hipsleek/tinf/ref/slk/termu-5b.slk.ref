Starting Omega...oc
Starting z3... 


*****************************
*** TERMINATION INFERENCE ***
*****************************
Temporal Assumptions:
 termAssume y'=1+y & x'=y+x & 0<=x & fpost_0(x',y') --> fpost_0(x,y).

 termAssume x<0 --> fpost_0(x,y).

 termAssume y'=1+y & x'=y+x & 0<=x & fpre_0(x,y) --> fpre_0(x',y').


Base/Rec Case Splitting:
[	f: [[2] x<=(0-1)@B,[3] 0<=x@R]
]
Termination Inference Result:
f:  case {
  x<=(0-1) -> requires emp & Term[0,1]
 ensures emp & true; 
  0<=x -> case {
           0<=y -> requires emp & Loop[]
 ensures false & false; 
           y<=(0-
           1) -> case {
                  y<=(0-2) & 
                  0<=x -> case {
                           (0-x)<=y & y<=(0-
                           3) -> requires emp & MayLoop[]
 ensures emp & true;
                           
                           x<=((0-y)-
                           1) -> requires emp & Term[0,3]
 ensures emp & true;
                           
                           0<=(x+y) & 0<=(2+
                           y) -> case {
                                  y=0-2 & 
                                  3<=x -> requires emp & MayLoop[]
 ensures emp & true;
                                  
                                  x<=2 -> requires emp & MayLoop[]
 ensures emp & true;
                                  
                                  }
                           
                           }
                  
                  0<=(1+
                  y) -> case {
                         x=0 & y=0-
                         1 -> requires emp & Term[0,2]
 ensures emp & true; 
                         y=0-1 & 
                         1<=x -> requires emp & Loop[]
 ensures false & false;
                         
                         }
                  
                  }
           
           }
  
  }


*****************************
*** TERMINATION INFERENCE ***
*****************************
Temporal Assumptions:
 termAssume v_bool_11_878' & x'<0 & v_bool_11_878' & x=x' & y=y' & 
x'<0 --> fpost_0(x,y).

 termAssume 0<=x' & y=y' & x=x' & !(v_bool_11_878') & 0<=x' & 
!(v_bool_11_878') & fpost_0(y'+x',1+y') --> fpost_0(x,y).

 termAssume v_int_12_876'=y'+1 & v_int_12_877'=x'+y' & !(v_bool_11_878') & 
0<=x' & !(v_bool_11_878') & x=x' & y=y' & 
0<=x' & fpre_0(x,y) --> fpre_0(v_int_12_877',v_int_12_876').


Base/Rec Case Splitting:
[	f: [[2] x<=(0-1)@B,[3] 0<=x@R]
]
Termination Inference Result:
f:  case {
  x<=(0-1) -> requires emp & Term[0,1]
 ensures emp & true; 
  0<=x -> case {
           0<=y -> requires emp & Loop[]
 ensures false & false; 
           y<=(0-
           1) -> case {
                  y<=(0-2) & 
                  0<=x -> case {
                           (0-x)<=y & y<=(0-
                           3) -> requires emp & MayLoop[]
 ensures emp & true;
                           
                           x<=((0-y)-
                           1) -> requires emp & Term[0,3]
 ensures emp & true;
                           
                           0<=(x+y) & 0<=(2+
                           y) -> case {
                                  y=0-2 & 
                                  3<=x -> requires emp & MayLoop[]
 ensures emp & true;
                                  
                                  x<=2 -> requires emp & MayLoop[]
 ensures emp & true;
                                  
                                  }
                           
                           }
                  
                  0<=(1+
                  y) -> case {
                         x=0 & y=0-
                         1 -> requires emp & Term[0,2]
 ensures emp & true; 
                         y=0-1 & 
                         1<=x -> requires emp & Loop[]
 ensures false & false;
                         
                         }
                  
                  }
           
           }
  
  }

