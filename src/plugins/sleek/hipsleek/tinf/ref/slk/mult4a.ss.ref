
!!!Full processing file "slk/mult4a.ss"
Parsing file "slk/mult4a.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

Checking procedure f$int... 
dprint: slk/mult4a.ss:9: ctx:  List of Failesc Context: [FEC(0, 0, 1  [(,1 ); (,2 )])]

Successful States:
[
 Label: [(,1 ); (,2 )]
 State:(exists v3': emp&0<=x & !(v2') & v3'+1=x & fpost_1122(v3')[]&{FLOW,(24,25)=__norm})[]
       es_heap: emp
       es_pure: true
       es_ho_vars_map: []
       es_var_measures 2: fpre_0(x)[30]
       es_cond_path: [2; 0]

 ]

dprint: slk/mult4a.ss:11: ctx:  List of Failesc Context: [FEC(0, 0, 1  [(,1 ); (,2 )])]

Successful States:
[
 Label: [(,1 ); (,2 )]
 State:(exists v5': emp&v1+1=x & !(v2') & 0<=x & v5'=1+x & fpost_1122(v5')[]&{FLOW,(24,25)=__norm})[]
       es_heap: emp
       es_pure: true
       es_ho_vars_map: []
       es_var_measures 2: fpre_0(x)[30]
       es_cond_path: [2; 0]

 ]

Procedure f$int SUCCESS.

Checking procedure f$int... 

*****************************
*** TERMINATION INFERENCE ***
*****************************
Temporal Assumptions:
 termAssume v_int_10_1183=1+x' & 0<=x' & x'=x & !(v_bool_6_1128') & 0<=x' & 
!(v_bool_6_1128') & v_int_8_1174+
1=x' & fpost_1122(v_int_8_1174) & fpost_1122(v_int_10_1183) --> fpost_1122(x).

 termAssume x'<0 & x'=x & v_bool_6_1128' & x'<0 & 
v_bool_6_1128' --> fpost_1122(x).

 termAssume v_int_8_1174+1=x' & !(v_bool_6_1128') & 0<=x' & 
!(v_bool_6_1128') & x'=x & 0<=x' & v_int_10_1127'=1+
x' & fpre_0(x) --> fpre_0(v_int_10_1127').

 termAssume 0<=x' & x'=x & !(v_bool_6_1128') & 0<=x' & !(v_bool_6_1128') & 
v_int_8_1125'+1=x' & fpre_0(x) --> fpre_0(v_int_8_1125').


Base/Rec Case Splitting:
[	f: [[3] x<=(0-1)@B,[4] 0<=x@R]
]
Termination Inference Result:
f:  case {
  x<=(0-1) -> requires emp & Term[30,1]
 ensures emp & true; 
  0<=x -> requires emp & Loop[]
 ensures false & false; 
  }

0 false contexts at: ()
