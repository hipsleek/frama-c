
data arrI {
  int val;
}.

pred arr_seg<i,n> == i=n & i>=0
  or x::arrI<_>*self::arr_seg<i+1,n> & x=self+i & i>=0
  inv n>=i & i>=0.

checkentail x::arr_seg<i,n> 
 |-  x::arr_seg<j,m>.
print residue.
expect Valid.

checkentail x::arr_seg<i,n> 
 |-  x::arr_seg<i+1,m>.
print residue.
expect Fail.

checkentail x::arr_seg<i,n> & i=n
 |-  x::arr_seg<j,m>.
print residue.
expect Valid.

checkentail x::arr_seg<i,n> & i<n
 |-  x::arr_seg<j,m>.
print residue.
expect Valid.

checkentail x::arr_seg<i,n> 
 |-  x::arr_seg<j,m> & j=m.
print residue.
expect Fail.

checkentail x::arr_seg<i,n> 
 |-  x::arr_seg<j,m> & 0<=j<=m.
print residue.
expect Valid.

checkentail x::arr_seg<i,n> 
 |-  x::arr_seg<j,m> & j<=m.
print residue.
expect Valid.

/*
# ex6a5.slk -dre "choose_c" -trace-log-num 1

checkentail x::arr_seg<i+1,n> & r=x+i & r=x1+1 
 |-  [j] x1::arr_seg<j,n> & j=i+1.
print residue.

# to support view matching with arithmetic ..

Entail 2: EXCast. Failure("**context.ml#750:view matching..")
: no residue 



*/