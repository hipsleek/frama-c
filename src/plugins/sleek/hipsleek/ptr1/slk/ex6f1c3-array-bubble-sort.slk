data arrI {
  int val;
}.

pred arr_seg<i,n> == i=n & i>=0
  or x::arrI<_>*self::arr_seg<i,n-1> & x=self+(n-1) & i>=0 
  inv n>=i & i>=0.

checkentail x::arrI<_> * base::arr_seg<i+1,n> 
  & x=base+i & i>=0 
  |- base::arr_seg<i,n>.
expect Fail.

infer[@classic] x::arrI<_> * base::arr_seg<i,n> 
  & x=base+(n-1) & i>=0 
  |- base::arr_seg<i,n>.
expect Fail.


infer[@classic] x::arrI<_> * base::arr_seg<i,n-1> 
  & x=base+(n-1) & i>=0 
  |- base::arr_seg<i,n>.
expect Valid.

infer[@classic] x::arrI<_> * base::arr_seg<i,n> 
  & x=base+(n) & i>=0 
  |- base::arr_seg<i,n>.
expect Fail.

infer[@classic] x::arrI<_> * base::arr_seg<i,n> 
  & x=base+(n) & i>=0 
  |- base::arr_seg<i,n+1>.
expect Valid.

infer[@classic] x::arrI<_> * base::arr_seg<i,n-1> * y::arrI<_>
  & x=base+(n-1) & i>=0 & y=x+1
  |- base::arr_seg<i,n>.
expect Fail.

infer[@classic] x::arrI<_> * base::arr_seg<i,n-1> * y::arrI<_>
  & x=base+(n-1) & i>=0 & y=x+1
  |- base::arr_seg<i,n+1>.
expect Valid.
