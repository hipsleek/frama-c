data arrI {
  int val;
}.

pred arr_seg<i,n> == i=n & i>=0
  or x::arrI<_>*self::arr_seg<i+1,n> & x=self+i & i>=0
  inv n>=i & i>=0.



// checkentail x::arr_seg<i,n> & i<n |- y::arrI<_> & y = x+i.
// print residue.
// expect Valid.

checkentail x::arr_seg<1,3>  |- y1::arrI<_> * y2::arrI<_> & y1=x+1 & y2=y1+1.
print residue.
expect Valid.

checkentail x::arr_seg<1,4>  |- y1::arrI<_> * y2::arrI<_> & y1=x+1 & y2=y1+1.
print residue.
expect Valid.

checkentail x::arr_seg<1,2>  |- y1::arrI<_> * y2::arrI<_> & y1=x+1 & y2=y1+1.
print residue.
expect Fail.

checkentail x::arr_seg<1,n> & n>2  |- y1::arrI<_> * y2::arrI<_> & y1=x+1 & y2=y1+1.
print residue.
expect Valid.

checkentail x::arr_seg<1,n> & n>=2  |- y1::arrI<_> * y2::arrI<_> & y1=x+1 & y2=y1+1.
print residue.
expect Fail.


checkentail x::arr_seg<1,n> & n>=2  |- y1::arrI<_> * y2::arrI<_> & y1=x+1 & y2=y1+1.
print residue.
expect Fail.

checkentail x::arr_seg<i,n> & i<n & y=x+i |- y::arrI<_> .
print residue.
expect Valid.

checkentail x::arr_seg<i,n> & n=i+1 & y=x+i |- y::arrI<_> .
print residue.
expect Valid.


checkentail_exact x::arr_seg<i,n> & n=i+1 & y=x+i |- y::arrI<_> .
print residue.
expect Valid.


checkentail_exact x::arr_seg<i,n> & i<n & y=x+i |- y::arrI<_> .
print residue.
expect Fail.


checkentail x::arr_seg<1,n> & n>=2 & y1=x+1  |- y1::arrI<_> * x::arr_seg<a,b> .
print residue.
expect Valid.

checkentail x::arr_seg<1,n> & n>=2   |- y1::arrI<_> * x::arr_seg<a,b> & y1=x+1.
print residue.
expect Valid.


checkentail x::arr_seg<1,n> & n>=2   |- x::arr_seg<a,b> * y1::arrI<_> & y1=x+1.
// did unfold has higher priority?
print residue.
expect Valid.

checkentail x::arr_seg<1,n> & n>=2   |- x::arr_seg<2,b> * y1::arrI<_> & y1=x+1.
// did unfold has higher priority?
print residue.
expect Valid.

checkentail x::arr_seg<1,n> & n>=2   |- x::arr_seg<3,b> * y1::arrI<_> & y1=x+1.
// did unfold has higher priority?
print residue.
expect Fail.

checkentail emp   |- x::arr_seg<2,2> .
print residue.
expect Valid.

checkentail x::arr_seg<1,n> & n>=2  |- x::arr_seg<2,2> .
print residue.
expect Valid.

checkentail x::arr_seg<2,n> & n>=2  |- x::arr_seg<2,2> .
print residue.
expect Valid.


//(16)
checkentail x::arr_seg<1,n> & n>=2   |- x::arr_seg<2,2> * y1::arrI<_> & y1=x+1.
print residue.
expect Valid.


// match and base-case-fold need to be both scheduled..