
data GTyp {
  GTyp f0;
  GTyp f1;
}.

pred BinPath<y:GTyp> ==
 self = y
or (exists xp,yp: self::GTyp<f0 = xp,f1 = yp> * xp::BinPath<y> & null != self)
or (exists xp,yp: self::GTyp<f0 = xp,f1 = yp> * yp::BinPath<y> & null != self).

pred BinTree<> ==
 emp
or (exists yp,xp: self::GTyp<f0 = yp,f1 = xp> * yp::BinTree<> * xp::BinTree<> & null != self).

pred BinTreeSeg<y:GTyp> ==
 self = y
or (exists xp,yp: self::GTyp<f0 = xp,f1 = yp> * xp::BinTreeSeg<y> * yp::BinTree<> & null != self)
or (exists xp,yp: self::GTyp<f0 = xp,f1 = yp> * xp::BinTree<> * yp::BinTreeSeg<y> & null != self).

checkentail_exact x::BinPath<y>
         |- x::BinTreeSeg<y>.

expect Valid.