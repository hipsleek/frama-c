
data DLL_t {
  DLL_t prev;
  DLL_t next;
}.

pred points_to<b,c> ==
self::DLL_t<next = b,prev = c>.

pred DLL_plus<p,tl,n> ==
 self::DLL_t<next = n,prev = p> & self = tl
or (exists x: self::DLL_t<next = x,prev = p> * x::DLL_plus<self,tl,n>).

pred DLL_plus_rev<p,tl,n> ==
 self::DLL_t<next = n,prev = p> & self = tl
or (exists x: tl::DLL_t<next = n,prev = x> * self::DLL_plus_rev<p,x,tl>).

pred DLL_plus_mid<p,tl,n> ==
 self::DLL_t<next = n,prev = p> & self = tl
or self::DLL_t<next = tl,prev = p> * tl::points_to<n,self>
or (exists x,y,z: x::DLL_t<next = y,prev = z> * y::DLL_plus<x,tl,n> * self::DLL_plus_rev<p,z,x>).

checkentail x::DLL_plus_rev<null,y,null>
         |- x::DLL_plus_mid<null,y,null>.

