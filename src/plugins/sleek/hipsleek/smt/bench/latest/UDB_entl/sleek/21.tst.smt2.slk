
data GTyp {
  GTyp f0;
  GTyp f1;
}.

pred ListO<y:GTyp> ==
 self::GTyp<f0 = y,f1 = _> & null != self
or (exists xp: self::GTyp<f0 = xp,f1 = _> * xp::ListE<y> & null != self).

pred ListE<y:GTyp> ==
(exists xp: self::GTyp<f0 = xp,f1 = _> * xp::ListO<y> & null != self).

pred ListX<y:GTyp> ==
 self::ListO<y>
or self::ListE<y>.

pred List<y:GTyp> ==
 self::GTyp<f0 = y,f1 = _> & null != self
or (exists xp: self::GTyp<f0 = xp,f1 = _> * xp::List<y> & null != self).

checkentail_exact x::ListX<y>
         |- x::List<y>.

expect Valid.

