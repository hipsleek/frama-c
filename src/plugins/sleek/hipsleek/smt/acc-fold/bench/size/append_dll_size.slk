data node2 {
  int val;
  node2 prev;
  node2 next;
}.
 pred dll<p:node2,n:int> == 
  emp&self=null & n=0 or
(exists p_23,self_24,v_20,q_21,
  m_22: self::node2<v_20,p_23,q_21> * q_21::dll<self_24,m_22>&n=1+m_22 & 
  p_23=p & self_24=self)
  inv 0<=n.

 
// id: 0; line: 11; kind: Pred_Check_Inv
 checkentail_exact emp&((self=null & n=0) | (1<=n & self!=null))
 |-  emp&0<=n & (((self=null & n=0) | (1<=n & self!=null))).
expect Valid.
 
// id: 1; line: 20; kind: BIND
 checkentail_exact (exists p_1050,self_1051,v_1052,q_1053,
m_1054: x'::node2<v_1052,p_1050,q_1053> * q_1053::dll<self_1051,m_1054> * 
y::dll<p,n>&m=1+m_1054 & p_1050=q & self_1051=x' & 0<m & y'=y & x'=x)
 |-  (exists m_1060,self_1057,v_1058,p_1056,
q_1059: x'::node2<val_20_1000',prev_20_1001',next_20_1002'> * 
q_1059::dll<self_1057,m_1060> * y::dll<p,n>&m=1+m_1060 & p_1056=q & 
self_1057=x' & 0<m & y'=y & x'=x & val_20_1000'=v_1058 & 
prev_20_1001'=p_1056 & next_20_1002'=q_1059).
expect Valid.
 
// id: 3; line: 20; kind: PRE
 checkentail_exact q_1059::dll<self_1057,m_1060> * y::dll<p,n> * 
x'::node2<v_1058,p_1056,q_1059>&m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & v_node2_20_1003'=q_1059 & v_node2_20_1003'=null
 |-  q_1059::dll<self_1057,m_1060> * y::dll<p,n> * 
x'::node2<v_1058,p_1056,q_1059>&m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & v_node2_20_1003'=q_1059 & v_node2_20_1003'=null.
expect Valid.
 
// id: 5; line: 20; kind: PRE
 checkentail_exact q_1059::dll<self_1057,m_1060> * y::dll<p,n> * 
x'::node2<v_1058,p_1056,q_1059>&m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & v_node2_20_1003'=q_1059 & v_node2_20_1003'!=null
 |-  q_1059::dll<self_1057,m_1060> * y::dll<p,n> * 
x'::node2<v_1058,p_1056,q_1059>&m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & v_node2_20_1003'=q_1059 & v_node2_20_1003'!=null.
expect Valid.
 
// id: 7; line: 21; kind: BIND
 checkentail_exact q_1059::dll<self_1057,m_1060> * y::dll<p,n> * 
x'::node2<v_1058,p_1056,q_1059>&m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & q_1059=null & v_bool_20_1015' & q_1059=null & v_bool_20_1015'
 |-  x'::node2<val_21_1004',prev_21_1005',next_21_1006'> * 
q_1059::dll<self_1057,m_1060> * y::dll<p,n>&m=1+m_1060 & p_1056=q & 
self_1057=x' & 0<m & y'=y & x'=x & q_1059=null & v_bool_20_1015' & 
q_1059=null & v_bool_20_1015' & val_21_1004'=v_1058 & prev_21_1005'=p_1056 & 
next_21_1006'=q_1059.
expect Valid.
 
// id: 9; line: 22; kind: PRE
 checkentail_exact x'::node2<v_1058,p_1056,y'>&q_1059=null & m_1060=0 & q_1059=null & n=0 & 
m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & q_1059=null & 
v_bool_20_1015' & q_1059=null & v_bool_20_1015' & next_21_1068=q_1059 & 
y'=null
 |-  x'::node2<v_1058,p_1056,y'>&q_1059=null & m_1060=0 & q_1059=null & n=0 & 
m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & q_1059=null & 
v_bool_20_1015' & q_1059=null & v_bool_20_1015' & next_21_1068=q_1059 & 
y'=null.
expect Valid.
 
// id: 11; line: 22; kind: PRE
 checkentail_exact q_1059::dll<self_1057,m_1060> * y::dll<p,n> * x'::node2<v_1058,p_1056,y'>&
m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & q_1059=null & 
v_bool_20_1015' & q_1059=null & v_bool_20_1015' & next_21_1068=q_1059 & 
y'!=null
 |-  q_1059::dll<self_1057,m_1060> * y::dll<p,n> * x'::node2<v_1058,p_1056,y'>&
m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & q_1059=null & 
v_bool_20_1015' & q_1059=null & v_bool_20_1015' & next_21_1068=q_1059 & 
y'!=null.
expect Valid.
 
// id: 13; line: 23; kind: BIND
 checkentail_exact (exists p_1168,self_1169,v_1170,q_1171,
m_1172: q_1059::dll<self_1057,m_1060> * y'::node2<v_1170,p_1168,q_1171> * 
q_1171::dll<self_1169,m_1172> * x'::node2<v_1058,p_1056,y'>&n=1+m_1172 & 
p_1168=p & self_1169=y' & m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & q_1059=null & v_bool_20_1015' & q_1059=null & 
v_bool_20_1015' & next_21_1068=q_1059 & y'!=null & v_bool_22_1010' & 
y'!=null & v_bool_22_1010')
 |-  (exists m_1178,self_1175,v_1176,p_1174,
q_1177: y'::node2<val_23_1007',prev_23_1008',next_23_1009'> * 
q_1059::dll<self_1057,m_1060> * q_1177::dll<self_1175,m_1178> * 
x'::node2<v_1058,p_1056,y'>&n=1+m_1178 & p_1174=p & self_1175=y' & m=1+
m_1060 & p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & q_1059=null & 
v_bool_20_1015' & q_1059=null & v_bool_20_1015' & next_21_1068=q_1059 & 
y'!=null & v_bool_22_1010' & y'!=null & v_bool_22_1010' & 
val_23_1007'=v_1176 & prev_23_1008'=p_1174 & next_23_1009'=q_1177).
expect Valid.
 
// id: 15; line: 26; kind: BIND
 checkentail_exact q_1059::dll<self_1057,m_1060> * y::dll<p,n> * 
x'::node2<v_1058,p_1056,q_1059>&m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & q_1059!=null & !(v_bool_20_1015') & q_1059!=null & 
!(v_bool_20_1015')
 |-  x'::node2<val_26_1011',prev_26_1012',next_26_1013'> * 
q_1059::dll<self_1057,m_1060> * y::dll<p,n>&m=1+m_1060 & p_1056=q & 
self_1057=x' & 0<m & y'=y & x'=x & q_1059!=null & !(v_bool_20_1015') & 
q_1059!=null & !(v_bool_20_1015') & val_26_1011'=v_1058 & 
prev_26_1012'=p_1056 & next_26_1013'=q_1059.
expect Valid.
 
// id: 17; line: 26; kind: PRE_REC
 checkentail_exact q_1059::dll<self_1057,m_1060> * y::dll<p,n> * 
x'::node2<v_1058,p_1056,q_1059>&m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & q_1059!=null & !(v_bool_20_1015') & q_1059!=null & 
!(v_bool_20_1015') & v_node2_26_1014'=q_1059
 |-  v_node2_26_1014'::dll<q_1183,m_1184> * y'::dll<p_1185,n_1186> * 
x'::node2<v_1058,p_1056,q_1059>&0<m_1184 & 0<m_1184 & m=1+m_1060 & 
p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & q_1059!=null & 
!(v_bool_20_1015') & q_1059!=null & !(v_bool_20_1015') & 
v_node2_26_1014'=q_1059 & q_1183=self_1057 & m_1184=m_1060 & p_1185=p & 
n_1186=n.
expect Valid.
 
// id: 21; line: 18; kind: POST
 checkentail_exact q_1059::dll<self_1057,m_1060> * q_1177::dll<self_1175,m_1178> * 
x'::node2<v_1058,p_1056,y'> * y'::node2<v_1176,x',q_1177>&n=1+m_1178 & 
p_1174=p & self_1175=y' & m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & q_1059=null & v_bool_20_1015' & q_1059=null & 
v_bool_20_1015' & next_21_1068=q_1059 & y'!=null & v_bool_22_1010' & 
y'!=null & v_bool_22_1010' & prev_23_1179=p_1174
 |-  (exists flted_18_51,q_54: x::dll<q_54,flted_18_51> * 
q_1059::dll<self_1057,m_1060>&flted_18_51=n+m & q_54=q & n=1+m_1178 & 
p_1174=p & self_1175=y' & m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & q_1059=null & v_bool_20_1015' & q_1059=null & 
v_bool_20_1015' & next_21_1068=q_1059 & y'!=null & v_bool_22_1010' & 
y'!=null & v_bool_22_1010' & prev_23_1179=p_1174 & 
exists(self_1204:x'=self_1204) & exists(m_1207:m_1207=1+m_1178) & 
exists(flted_18_1194:flted_18_1194=1+1+m_1178) & 
exists(q_1193:p_1056=q_1193)).
expect Valid.
 
// id: 29; line: 18; kind: POST
 checkentail_exact x'::node2<v_1058,p_1056,y'>&q_1059=null & m_1060=0 & q_1059=null & n=0 & 
m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & q_1059=null & 
v_bool_20_1015' & q_1059=null & v_bool_20_1015' & next_21_1068=q_1059 & 
y'=null & !(v_bool_22_1010') & y'=null & !(v_bool_22_1010')
 |-  (exists flted_18_51,q_54: x::dll<q_54,flted_18_51>&flted_18_51=n+m & 
q_54=q & q_1059=null & m_1060=0 & q_1059=null & n=0 & m=1+m_1060 & 
p_1056=q & self_1057=x' & 0<m & y'=y & x'=x & q_1059=null & 
v_bool_20_1015' & q_1059=null & v_bool_20_1015' & next_21_1068=q_1059 & 
y'=null & !(v_bool_22_1010') & y'=null & !(v_bool_22_1010') & 
exists(flted_18_1230:flted_18_1230=1+0) & exists(q_1229:p_1056=q_1229)).
expect Valid.
 
// id: 35; line: 18; kind: POST
 checkentail_exact (exists flted_18_1192: x'::node2<v_1058,p_1056,q_1059> * 
q_1059::dll<q_1183,flted_18_1192>&m=1+m_1060 & p_1056=q & self_1057=x' & 
0<m & y'=y & x'=x & q_1059!=null & !(v_bool_20_1015') & q_1059!=null & 
!(v_bool_20_1015') & q_1183=self_1057 & m_1184=m_1060 & p_1185=p & 
n_1186=n & 0<=n & 0<=m_1060 & flted_18_1192=n_1186+m_1184 & 0<=m_1184 & 
0<=n_1186)
 |-  (exists flted_18_51,q_54,flted_18_1250: x::dll<q_54,flted_18_51>&
flted_18_51=n+m & q_54=q & m=1+m_1060 & p_1056=q & self_1057=x' & 0<m & 
y'=y & x'=x & q_1059!=null & !(v_bool_20_1015') & q_1059!=null & 
!(v_bool_20_1015') & q_1183=self_1057 & m_1184=m_1060 & p_1185=p & 
n_1186=n & 0<=n & 0<=m_1060 & flted_18_1250=n_1186+m_1184 & 0<=m_1184 & 
0<=n_1186 & exists(q_1251:p_1056=q_1251) & 
exists(flted_18_1252:flted_18_1252=1+flted_18_1250)).
expect Valid.