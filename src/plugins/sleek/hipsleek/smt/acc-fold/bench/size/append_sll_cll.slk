data node {
  node next;
}.
 pred lseg<p:node> == 
  emp&self=p or
(exists p_21,q_20: self::node<q_20> * q_20::lseg<p_21>&
  p_21=p)
  inv true.
 pred ll<> == 
  emp&self=null or
(exists q_22: self::node<q_22> * q_22::ll<>)
  inv true.
 pred clist<> == 
  (exists self_19,p_18: self::node<p_18> * p_18::lseg<self_19>&self_19=self)
  inv self!=null.

 
// id: 0; line: 11; kind: Pred_Check_Inv
 checkentail_exact emp&self!=null & ((true | true))
 |-  emp&self!=null & ((true | true)).
expect Valid.
 
// id: 1; line: 21; kind: BIND
 checkentail_exact (exists q: q::ll<> * x'::node<q>&x'=x & y'=y & x!=null)
 |-  (exists q1: x'::node<next'> * q1::ll<>&next'=q1 & x'=x & y'=y & x!=null).
expect Valid.
 
// id: 3; line: 21; kind: PRE
 checkentail_exact q::ll<> * x'::node<q>&v'=null & v'=q & x'=x & y'=y & x!=null
 |-  q::ll<> * x'::node<q>&v'=null & v'=q & x'=x & y'=y & x!=null.
expect Valid.
 
// id: 5; line: 21; kind: PRE
 checkentail_exact q::ll<> * x'::node<q>&v'!=null & v'=q & x'=x & y'=y & x!=null
 |-  q::ll<> * x'::node<q>&v'!=null & v'=q & x'=x & y'=y & x!=null.
expect Valid.
 
// id: 7; line: 22; kind: BIND
 checkentail_exact q::ll<> * x'::node<q>&v' & q!=null & x'=x & y'=y & x!=null
 |-  x'::node<next'> * q::ll<>&next'=q & v' & q!=null & x'=x & y'=y & x!=null.
expect Valid.
 
// id: 9; line: 22; kind: PRE_REC
 checkentail_exact q::ll<> * x'::node<q>&v1'=q & v' & q!=null & x'=x & y'=y & x!=null
 |-  v1'::ll<> * x'::node<q>&v1'=q & v' & q!=null & x'=x & y'=y & x!=null & 
v1'!=null.
expect Valid.
 
// id: 12; line: 22; kind: PRE_REC
 checkentail_exact q::ll<> * x'::node<q>&v1'=q & v' & q!=null & x'=x & y'=y & x!=null
 |-  v1'::ll<>&v1'!=null & y'=v1'.
expect Fail.
 
// id: 14; line: 26; kind: BIND
 checkentail_exact q::ll<> * x'::node<q>&!(v') & q=null & x'=x & y'=y & x!=null
 |-  x'::node<next'> * q::ll<>&next'=q & !(v') & q=null & x'=x & y'=y & x!=null.
expect Valid.
 
// id: 16; line: 16; kind: POST
 checkentail_exact x'::node<q> * q::lseg<y'>&v' & q!=null & x'=x & y'=y & x!=null
 |-  (exists y1: x::lseg<y1>&v' & q!=null & x'=x & y'=y & x!=null & y1=y).
expect Valid.
 
// id: 23; line: 16; kind: POST
 checkentail_exact q::ll<> * x'::node<y'>&next=q & !(v') & q=null & x'=x & y'=y & x!=null
 |-  (exists y1: x::lseg<y1> * q::ll<>&next=q & !(v') & q=null & x'=x & y'=y & 
x!=null & y1=y).
expect Valid.
 
// id: 31; line: 21; kind: BIND
 checkentail_exact (exists q: q::ll<> * x'::node<q>&x'=x & y'=y & y=x & x!=null)
 |-  (exists q1: x'::node<next'> * q1::ll<>&next'=q1 & x'=x & y'=y & y=x & 
x!=null).
expect Valid.
 
// id: 33; line: 21; kind: PRE
 checkentail_exact q::ll<> * x'::node<q>&v'=null & v'=q & x'=x & y'=y & y=x & x!=null
 |-  q::ll<> * x'::node<q>&v'=null & v'=q & x'=x & y'=y & y=x & x!=null.
expect Valid.
 
// id: 35; line: 21; kind: PRE
 checkentail_exact q::ll<> * x'::node<q>&v'!=null & v'=q & x'=x & y'=y & y=x & x!=null
 |-  q::ll<> * x'::node<q>&v'!=null & v'=q & x'=x & y'=y & y=x & x!=null.
expect Valid.
 
// id: 37; line: 22; kind: BIND
 checkentail_exact q::ll<> * x'::node<q>&v' & q!=null & x'=x & y'=y & y=x & x!=null
 |-  x'::node<next'> * q::ll<>&next'=q & v' & q!=null & x'=x & y'=y & y=x & 
x!=null.
expect Valid.
 
// id: 39; line: 22; kind: PRE_REC
 checkentail_exact q::ll<> * x'::node<q>&v1'=q & v' & q!=null & x'=x & y'=y & y=x & x!=null
 |-  v1'::ll<> * x'::node<q>&v1'=q & v' & q!=null & x'=x & y'=y & y=x & 
x!=null & v1'!=null.
expect Valid.
 
// id: 42; line: 22; kind: PRE_REC
 checkentail_exact q::ll<> * x'::node<q>&v1'=q & v' & q!=null & x'=x & y'=y & y=x & x!=null
 |-  v1'::ll<>&v1'!=null & y'=v1'.
expect Fail.
 
// id: 48; line: 26; kind: BIND
 checkentail_exact q::ll<> * x'::node<q>&!(v') & q=null & x'=x & y'=y & y=x & x!=null
 |-  x'::node<next'> * q::ll<>&next'=q & !(v') & q=null & x'=x & y'=y & y=x & 
x!=null.
expect Valid.
 
// id: 50; line: 19; kind: POST
 checkentail_exact x'::node<q> * q::lseg<y'>&v' & q!=null & x'=x & y'=y & y=x & x!=null
 |-  x::clist<>&v' & q!=null & x'=x & y'=y & y=x & x!=null.
expect Valid.
 
// id: 55; line: 19; kind: POST
 checkentail_exact q::ll<> * x'::node<y'>&next=q & !(v') & q=null & x'=x & y'=y & y=x & x!=null
 |-  x::clist<> * q::ll<>&next=q & !(v') & q=null & x'=x & y'=y & y=x & x!=null.
expect Valid.