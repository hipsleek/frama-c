// folding with @L node needs to be fixed.

data node {
   node nxt;
}.

pred nlseg<q> == self=q
 or  (exists a: self::node<a> * a::nlseg<q> & self!=q)
 inv true.

lemma_safe self::nlseg<p> -> (exists u :self::nlseg<u> * u::nlseg<p>).

lemma_safe self::nlseg<p>  
   <- (exists u :self::nlseg<u> * u::nlseg<p> * p::node<_>@L).

// nlseg4e2.slk

// two problems with lemma application

// (1)
checkentail_exact
    (exists u :self::nlseg<u> * u::nlseg<p> * p::node<_>@L)
       |- self::nlseg<uu>.
print residue.
// valid with @L residue
// problem : answers but first one did not have p=uu?.
/*
 <1>p::node<_>@L&{FLOW,(21,22)=__norm}[]
[[ SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_13) ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  Match ==> ]]
<2>p::node<_>@L&p=uu&{FLOW,(21,22)=__norm}[]
[[ SEARCH ==>  COND ==>  SEARCH ==>  (Lemma <== lem_13) ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==>  Match ==>  SEARCH ==>  Fold ==>  Match ==>  Match ==> ]]
*/



checkentail_exact
    (exists u :self::nlseg<u> * u::nlseg<p> * p::node<_>@L)
       |- (exists v :self::nlseg<v> * v::nlseg<uu> * uu::node<_>@L).
print residue.
/*
 <1>p::node<_>@L&uu=p & Anon_16=Anon_15&{FLOW,(21,22)=__norm}[]
[[ SEARCH ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  COND ==>  Match ==>  Match ==> ]]
<2>p::node<_>@L&p=uu & Anon_16=Anon_15&{FLOW,(21,22)=__norm}[]
[[ SEARCH ==>  COND ==>  SEARCH ==>  COND ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==>  Match ==>  SEARCH ==>  Fold ==>  Match ==>  Match ==> ]]
<3>p::node<_>@L&p=uu & Anon_16=Anon_15&{FLOW,(21,22)=__norm}[]
[[ SEARCH ==>  COND ==>  SEARCH ==>  (Lemma ==> lem_11) ==> (left: lem_11) ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==>  Match ==>  SEARCH ==>  (Lemma <== lem_13) ==>  Match ==>  SEARCH ==>  Fold ==>  Match ==>  Match ==>  Match ==> ]]
*/


/*
checkentail_exact
    (exists u :self::node<u> * u::nlseg<p> * p::node<_>@L)
       |- self::nlseg<uu>.
print residue.

checkentail_exact
    self::nlseg<p> * p::node<_>@L
       |- self::nlseg<uu>.
print residue.

checkentail_exact
    self::node<_> 
       |- self::node<_>@L * self::node<_>@L.
print residue.
*/