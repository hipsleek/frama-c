data node {
   node nxt;
}.

pred lseg<p> == self=p 
  or (exists a: self::node<a> * a::lseg<p>)
 inv true.

lemma_unsafe self::node<u1>* u1::lseg<p> 
       <-> (exists last: self::lseg<last>*last::node<p>).

checkentail_exact self::node<u1>* u1::lseg<p> 
        |- (exists last: self::lseg<last>*last::node<p>)
           .
expect Valid.
// complex lemma not working..

/*
# lseg0e2.slk

Entail 1: Fail.(may) cause:Nothing_to_do? 
  Type: WArg
  LHS: u1::lseg<p,self,last>
  RHS: last::node<l2_138,p_139>
 lhs_rest: self::node<pr,u1>
 rhs_rest: 
  self::lseg<last_136,pr_137,l2_140>

Validate 1: Not Expected.
*/




