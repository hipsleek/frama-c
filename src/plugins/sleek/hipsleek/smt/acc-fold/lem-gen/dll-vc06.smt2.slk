
data Dll_t {
  Dll_t next;
  Dll_t prev;
}.

pred dll<bk:Dll_t,pr:Dll_t,nx:Dll_t> ==
 self = nx & bk = pr
or (exists u: self::Dll_t<next = u,prev = pr> * u::dll<bk,self,nx> & self != nx).

/*
lemma_unsafe self::dll<bk1,pr,nx> * nx::Dll_t<n,bk1> -> self::dll<nx,pr,n>.
*/

checkentail x_emp::Dll_t<next = w_emp,prev = null> *
            w_emp::dll<u_emp,x_emp,y_emp> *
            y_emp::Dll_t<next = z_emp,prev = u_emp> & x_emp != z_emp
         |- x_emp::dll<y_emp,null,z_emp>.

expect Valid.

//missing x_emp != z_emp

