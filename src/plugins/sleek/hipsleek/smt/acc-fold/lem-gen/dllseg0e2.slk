data node {
   node prev;
   node nxt;
}.

pred dllseg<p,pr,last> == self=p & pr=last
  or (exists a: self::node<pr,a> * a::dllseg<p,self,last>)
 inv true.


lemma_unsafe self::node<pr,u1>* u1::dllseg<p,self,last> 
       <-> (exists u,l2: self::dllseg<last,pr,l2>*last::node<l2,p>).

checkentail_exact self::node<pr,u1>* u1::dllseg<p,self,last> 
        |- (exists u,l2: self::dllseg<last,pr,l2>*last::node<l2,p>)
           .
expect Valid.
// complex lemma not working..



