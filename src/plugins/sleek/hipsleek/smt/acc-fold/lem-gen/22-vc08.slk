
data GTyp {
  GTyp f0;
  GTyp f1;
}.

pred ls<y:GTyp> ==
 self = y
or (exists xp: self::GTyp<f0 = xp,f1 = _> * xp::ls<y> & null != self & self != y).

/*
lemma_unsafe self::ls<p> * p::GTyp<f0 = z,f1 = _> -> self::ls<z>.
//above lemma is unsound for non-touching

*/

lemma self::ls<z> <- (exists u: self::ls<u>*u::GTyp<f0=z> * z::ls<).
 
checkentail x::ls<y> * y::GTyp<f0 = z,f1 = _> * z::<null>
         |- x::ls<z> * z::ls<null>.

expect Valid.