
3

nil

nil

!*native_code

nil

Reading "$srcdir/../../cslbuild/generated-c/u01.lsp"

nil

noncomp

simpcar

reval

terminalp

delcp

argsofopr

num!-exponents

mchkopt

exchk

!*ssave

noncomfp

!*d2q

getrtypeor

arraychk

arrayp

noncomfp1

noncomp1

reval_without_mod

getrtypecar

addcomment

prin2x

degr

noncomlistp

mchk!*

ordop

smember

timesip

expchk

readch1

!:zerop

!*q2a1

multd

subs2f

aeval!*

hevenp

aconc

add_prin_char

mkvar

getrtype

noncomdel

subs2q

prepf1

negnumberchk

prepf

noncomp!*

getrtype2

addf

multsq

getel1

multf

replus

quotf

addsq

getpower

prin2!*

ordpp

scprint

mtp

getelv

reval2

retimes

mtchp1

mapcons

exptchksq

gcdfd1

getel

multd!*

negsq

aconc!*

carx

mtchp

nb

toknump

simpplus

argnochk

mchk

sqchk

Read "$srcdir/../../cslbuild/generated-c/u01.lsp"

Reading "$srcdir/../../cslbuild/generated-c/u02.lsp"

nil

subs2f1

prepsq

update!-pline

prepsqxx

simpminus

ordpa

setdiff

subs2

ordad

noncomperm

exc

mk!*sq

negf

simp!*

ckpreci!#

ord2

prepd

sqform

reval1

sinitl

simp

retimes1

rationalizei

aeval

algid

maprint

!*n2f

smemql

mcharg2

mksf

prepsqx

emtch

setkorder

simpdiff

oprin

minusf

cdarx

fkern

revpr

putpline

Read "$srcdir/../../cslbuild/generated-c/u02.lsp"

Reading "$srcdir/../../cslbuild/generated-c/u03.lsp"

nil

simptimes

exchk2

eolcheck

quotf1

layout!-formula

isimp1

quotk

mcharg1

setel

sub2chk

appn

lt!*

gadd

multdm

!:minus

isimp2

exchk1

xcomment

lnc

gcdf

mkarray1

smemqlp

formlis

rank

subs3f

convertmode

mtchk

mksq

intexprnp

kernp

msappend

xnp

errorp

ckrn1

mkspm

setel1

appr

mcharg

sf_member

reorder

inprint

addd

sizchk

gcdfd

quotfd

difff

quotsq

errorset!*

Read "$srcdir/../../cslbuild/generated-c/u03.lsp"

Reading "$srcdir/../../cslbuild/generated-c/u04.lsp"

nil

gcdf1

read!-comment1

revlis

adddm

mvar_member

comb

gcddd

opmtch

token1

prinfit

opmtchrevop

updtemplate

reordsq

invsq

scan

kernlp

multfnc

remove!-free!-vars!-l

simpexpon

subs3f1

rmultpf

mkg1

intexprlisp

sort

mchsarg

gcdf!*

rmplus

rnzerop!:

unplus

prepsq!*2

sprgen1

frvarsof

simpdot

gck2

terpri!*

canonsq

formop

multop

simpexpon1

subs3q

memlis

Read "$srcdir/../../cslbuild/generated-c/u04.lsp"

Reading "$srcdir/../../cslbuild/generated-c/u05.lsp"

nil

comfac

ckrn

maprin

rnconc

chknewnam

raddf

getrmacro

comfac!-to!-poly

diffsq

expdrmacro

xread

exptpri

algmodep

simprecip

addns

!*!*a2i

quotof

form1

formc

getrtype1

command1

convertmode1

!*s2arg

quotofd

vmult

quotodd

rnonep!:

klistt

resimp

mkkl

reordop

xread1

dfprintfn

!*sqprint

depends

rnequiv

quotdd

macrochk

delasc

resimp1

lispapply

ldepends

setcloc!*

Read "$srcdir/../../cslbuild/generated-c/u05.lsp"

Reading "$srcdir/../../cslbuild/generated-c/u06.lsp"

nil

nssimp

wtchk

mchkopt1

gcdf2

arglist_member

mkvarg

vmult1

simpiden

condterpri

prepreform

revalx

!*!*a2s

eofcheck

veval

remcomma

add2inputbuf

requote1

simpatom

symbol

subs3t

mchcomb

quotematrix

mkrn

kahane

exptsq

dfn_prop

spurr

Read "$srcdir/../../cslbuild/generated-c/u06.lsp"

Reading "$srcdir/../../cslbuild/generated-c/u07.lsp"

nil

spur0

simpexpt

bassoc

simp_without_resimp

int!-equiv!-chk

setcdr

rationalizesq

addfactors

sq_member

remove!-free!-vars

dotord

simp0

remove

mksp

xsimp

rmsubs

intargfn

evalvars

subf1

dsimp

identity

simpdf

valuechk

sqhorner!*

prepreform1

powers

prepsq!*0

let2

unreval

freeof

rcons

simpquot

Read "$srcdir/../../cslbuild/generated-c/u07.lsp"

Reading "$srcdir/../../cslbuild/generated-c/u08.lsp"

nil

token!-number

assgnpri

getsetvars

add2resultbuf

listp

form

mchkminus

let3

rlis

sprgen

forstat

sfp

powers0

brace

evload

module

mkstrng

eqexpr

diffp

put!-avalue

spur0i

extmult

setk

domainvalchk

stable!-sortip

letscalar

mkprec

fluid

Read "$srcdir/../../cslbuild/generated-c/u08.lsp"

Reading "$srcdir/../../cslbuild/generated-c/u09.lsp"

nil

prepsq!*1

mkdmoderr

ratfunpri1

quotpri

kernord!-sort

put!-kvalue

revlis_without_mode

subs2!*

command

subs2chk

dsimptimes

remove!-free!-vars!*

innprodp2

add1lis

wuconstantp

mkcopy

nth

delall

ps!:getv

c!:ordxp

dm!-abs

evcomp

evmatrixcomp2

xval

convprec

physopp

memq_edgelist

c_zero

sieve_pv0

quotelist

pnth

find2

csl_normbf

zero2nil

binding

vevmtest!?

vbcsize

wedgefax

times!:

round!*

noncomp2

union_edge

termsf

mo_divides!?

dlesslex

pappl

adjoin!-term

modzerop!:

tayexp!-lessp

get!+mat!+entry

butes

bftrim!:

numlis

!:minusp

pm!:free

buchvevdivides!?

mkround

bc_prod

reduce_pv

modonep!:

finde

nocp

compress!*

ps!:order

!:onep

bcprod

sublistp

order!:

pprin2

isanindex

ring_ecart

unpkp

multiply!-by!-constant!-mod!-p

get_token

ps!:last!-term

c!:ordexn

nil2zero

bczero!?

evzero!?

wedgepf2

makelist

!*physopp

mo_vdivides!?

pappl0

!*i2mod

general!-modular!-times

minus!:

constp

mval

Read "$srcdir/../../cslbuild/generated-c/u09.lsp"

Reading "$srcdir/../../cslbuild/generated-c/u10.lsp"

nil

evmatrixcomp1

domain!*p

angles!-equal

mo!=sprod

sieve_pv

upbve

modtimes!:

general!-modular!-plus

remainder!-in!-vector

tayexp!-plus2

attributes

bcint2op

multpfsq

prin2la

collectindices

union_edges

mo_ecart

dless

pv_multc

notstring

evsum

factorordp

opmtch!*

fs!:timestermterm

mo!=sum

pcmult

pkp

!*d2n

tayexp!-greaterp

get!+row!+nr

printout

rd!:onep

!*q2a

evcompless!?

peel

i2rd!*

fprin2

listsum

fs!:angle!-order

mo!=degcomp

rev

plus!-mod!-p

get!+vec!+entry

get_content

round!:mt

mgenp

rd!:zerop

hasonephysop

qassoc

fs!:timesterm

cali_trace

hasonevector

pv_sort2

bfzerop!:

symbollessp

exptchk

!*collectphysops

getroad

pv_renorm

times!-term!-mod!-p

striptag

absf

lex

dm!-times

initcomb

round!:last

rd!:minusp

prin2!-downcase

constimes

fs!:plus

mo!=shorten

dquot

lcm

!*i2rn

kernels

get!+vec!+dim

isvalid

freexp

vevcompless!?

evmatrixcomp

monordp

quotfm

tensopp

kernels1

bas_rep

pv_sort

Read "$srcdir/../../cslbuild/generated-c/u10.lsp"

Reading "$srcdir/../../cslbuild/generated-c/u11.lsp"

nil

evaluate!-in!-order

rdprep1

fullcopy

dm!-difference

copy_mat

vevtdeg

xdiv

!:times

physopsim!*

mo_sum

pv_add

copy

indent!*

multi_isarb_compl

equal!:

evlexcomp

chundexp

delallasc

!*physopp!*

nonzero!-length

mo_compare

cdiv

insert_pv

general!-modular!-number

tayexp!-minusp

multi_isarb_int

rd!:minus

on1

evtdeg

groebsearchinlist

find_item

csl_timbf

!:plus

freeofdepl

idlistp

sroad

dp!=ecart

pv_sort1

gen!-mult!-by!-const!-mod!-p

c!:ordexp

times!-mod!-p

tayexp!-difference

get!+col!+nr

list2string

findrow

nextarg

off1

atomf

maxdeg

noncommuting

repeatsp

bc!=simp

pv_applp

rntimes!:

!*modular2f

divide!:

praddf

powers2

find

mkwedge

noncommutingf

mo!=lexcomp

insert_pv1

mod!#

convprec!*

tayexp!-min2

pnthxzz

fast_unchecked_getmatelem

physopp!*

red_divtestbe

gperm1

removev

ps!:evaluate

subscriptedvarp

bound

deg!*farg

abs!:

dp_diff

pv_sort2a

modplus!:

mkgi

omobj

red!-char!-downcase

dp_times_bc

tsym4

wulessp

sfto_dcontentf

sortcolelem

downwght

diplength

mknwedge

worderp

getphystype!*sq

groeb!=testa

gperm

minus!-mod!-p

mathml

multi_elem

xdegree

boundindp

dp_sum

Read "$srcdir/../../cslbuild/generated-c/u11.lsp"

Reading "$srcdir/../../cslbuild/generated-c/u12.lsp"

nil

pappl_pv

arzerop!:

general!-plus!-mod!-p

free!-powerp

retattributes

bcsum

gsetsugar

deg!*form

vecopp

red!-weight

divd

dp_term

gperm2

times!-in!-vector

treesizep1

ps!:get!-term

vdpgetprop

!:difference

areallindices

contrsp2

mo!=deglist

pdmult

aronep!:

clear!-column

omobjs

letmtr3

genp

termordp

cut!:ep

getphystype

red!-weight1

sc_kern

rnplus!:

general!-times!-term!-mod!-p

matrix!+p

sfto_dcontentf1

isarb_int

testred

xdegreemon

make!-set

contr1!-strand

mv!-pow!-minusp

bas_make1

general!-modular!-quotient

isarb_compl

initbrsea

convchk

optype

mv!-pow!-mv!-term!-!+

dp_ecart

psum

adddummy1a

gizerop!:

ev_comp

symtabget

dim!<deg

lessp!:

mv!-pow!-!+

rnquotient!:

general!-modular!-reciprocal

cgp_evlmon

checktag

vevmaptozero1

addpf

pneg

Read "$srcdir/../../cslbuild/generated-c/u12.lsp"

nil

Reading "$srcdir/fastgets.lsp"
+++ Fastget size was 32, now 32
+++ Use fastget slot 0 for noncom
+++ Use fastget slot 1 for lose

nil

Read "$srcdir/fastgets.lsp"

nil

Reading "$srcdir/compat.lsp"

nil

nil
+++ Fastget size was 32, now 32

32
+++ Use fastget slot 0 for noncom

0
+++ Use fastget slot 1 for lose

1

nil

!*echo

nil

!*raise

nil

!*lower

t

!*savedef

nil

!*comp

nil

!*plap

nil

!*pgwd

nil

!*pwrds

t

9

!!fleps1

1.0e-12

!!fleps1

rplacw

expand

plus

times

mapcar

maplist

mapcan

mapcon

mapc

map

+++ copy redefined

copy

sassoc

rassoc

lastcar

open

binopen

pipe!-open

putd

putc

traceset1

untraceset1

traceset

untraceset

deflist

global

+++ fluid redefined

fluid

unglobal

unfluid

nil

printprompt

nil

nil

nil

nil

nil

nil

t

carcheck

nil

(!
)

symerr

s!:oblist

s!:oblist1

oblist

s!:make!-psetq!-vars

s!:make!-psetq!-bindings

s!:make!-psetq!-assignments

psetq

s!:do!-bindings

s!:do!-endtest

s!:do!-result

s!:do!-updates

s!:expand!-do

do

do!*

s!:expand!-dolist

dolist

s!:expand!-dotimes

dotimes

nil

Read "$srcdir/compat.lsp"

nil

Reading "$srcdir/extras.lsp"

oem!-supervisor

break!-loop

nil

0

s!:stamp

dated!-name

hashtagged!-name

nil

+++ sort redefined

sort

stable!-sort

sortip

+++ stable!-sortip redefined

stable!-sortip

nil

nil

#H(0 0 10 1.5 [0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0
SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0
SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0
SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0
SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0
SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0 SPID_HASH0])

s!:prinl0

s!:prinl1

s!:prinl2

printl

printcl

princl

+++ prinl redefined

prinl

s!:format

format

nil

nil

t

t

5

prettyprint

superprintm

superprinm

s!:top

s!:depth

s!:indenting

s!:blankcount

s!:blanklist

s!:setindenting

s!:setblankcount

s!:setblanklist

s!:newframe

s!:blankp

s!:prindent

s!:explodes

s!:prvector

s!:putblank

s!:endlist

s!:finishpending

s!:quotep

prog

1

1

1

1

1

1

2

2

2

2

2

4

s!:putch

s!:overflow

!(

![

!)

!]

fetch!-url

Read "$srcdir/extras.lsp"

nil

Reading "$srcdir/compiler.lsp"

nil

(loadloc loadloc0 loadloc1 loadloc2 loadloc3 loadloc4 loadloc5 loadloc6 loadloc7
loadloc8 loadloc9 loadloc10 loadloc11 loc0loc1 loc1loc2 loc2loc3 loc1loc0
loc2loc1 loc3loc2 vnil loadlit loadlit1 loadlit2 loadlit3 loadlit4 loadlit5
loadlit6 loadlit7 loadfree loadfree1 loadfree2 loadfree3 loadfree4 storeloc
storeloc0 storeloc1 storeloc2 storeloc3 storeloc4 storeloc5 storeloc6 storeloc7
storefree storefree1 storefree2 storefree3 loadlex storelex closure carloc0
carloc1 carloc2 carloc3 carloc4 carloc5 carloc6 carloc7 carloc8 carloc9 carloc10
carloc11 cdrloc0 cdrloc1 cdrloc2 cdrloc3 cdrloc4 cdrloc5 caarloc0 caarloc1
caarloc2 caarloc3 call0 call1 call2 call2r call3 calln call0_0 call0_1 call0_2
call0_3 call1_0 call1_1 call1_2 call1_3 call1_4 call1_5 call2_0 call2_1 call2_2
call2_3 call2_4 builtin0 builtin1 builtin2 builtin2r builtin3 apply1 apply2
apply3 apply4 jcall jcalln jump jump_b jump_l jump_bl jumpnil jumpnil_b
jumpnil_l jumpnil_bl jumpt jumpt_b jumpt_l jumpt_bl jumpatom jumpatom_b
jumpatom_l jumpatom_bl jumpnatom jumpnatom_b jumpnatom_l jumpnatom_bl jumpeq
jumpeq_b jumpeq_l jumpeq_bl jumpne jumpne_b jumpne_l jumpne_bl jumpequal
jumpequal_b jumpequal_l jumpequal_bl jumpnequal jumpnequal_b jumpnequal_l
jumpnequal_bl jumpl0nil jumpl0t jumpl1nil jumpl1t jumpl2nil jumpl2t jumpl3nil
jumpl3t jumpl4nil jumpl4t jumpst0nil jumpst0t jumpst1nil jumpst1t jumpst2nil
jumpst2t jumpl0atom jumpl0natom jumpl1atom jumpl1natom jumpl2atom jumpl2natom
jumpl3atom jumpl3natom jumpfree1nil jumpfree1t jumpfree2nil jumpfree2t
jumpfree3nil jumpfree3t jumpfree4nil jumpfree4t jumpfreenil jumpfreet jumplit1eq
jumplit1ne jumplit2eq jumplit2ne jumplit3eq jumplit3ne jumplit4eq jumplit4ne
jumpliteq jumplitne jumpb1nil jumpb1t jumpb2nil jumpb2t jumpflagp jumpnflagp
jumpeqcar jumpneqcar catch catch_b catch_l catch_bl uncatch throw protect
unprotect pvbind pvrestore freebind freerstr exit nilexit loc0exit loc1exit
loc2exit push pushnil pushnil2 pushnil3 pushnils pop lose lose2 lose3 loses swop
eq eqcar equal numberp car cdr caar cadr cdar cddr cons ncons xcons acons length
list2 list2star list3 plus2 add1 difference sub1 times2 greaterp lessp flagp get
litget getv qgetv qgetvn bigstack bigcall icase fastget spare1 spare2)

(256 opcodes allocated)

nil

s!:vecof

nil

s!:prinhex1

s!:prinhex2

s!:prinhex4

nil

nil

nil

nil

nil

nil

nil

nil

nil

nil

nil

t

nil

nil

t

nil

nil

s!:start_procedure

s!:set_label

s!:outjump

s!:outexit

nil

s!:outopcode0

s!:outopcode1

(loadlit loadfree call0 call1 litget jumpliteq jumplitne jumpliteq!* jumplitne!*
jumpfreet jumpfreenil)

s!:record_literal

s!:record_literal_for_jump

s!:outopcode1lit

s!:outopcode2

s!:outopcode2lit

s!:outlexref

((1 . 7) . [!- loadlit1 loadlit2 loadlit3 loadlit4 loadlit5 loadlit6 loadlit7])

((1 . 4) . [!- loadfree1 loadfree2 loadfree3 loadfree4])

((1 . 3) . [!- storefree1 storefree2 storefree3])

((0 . 3) . [call0_0 call0_1 call0_2 call0_3])

((0 . 5) . [call1_0 call1_1 call1_2 call1_3 call1_4 call1_5])

((0 . 4) . [call2_0 call2_1 call2_2 call2_3 call2_4])

((1 . 4) . [!- jumpfree1t jumpfree2t jumpfree3t jumpfree4t])

((1 . 4) . [!- jumpfree1nil jumpfree2nil jumpfree3nil jumpfree4nil])

((1 . 4) . [!- jumplit1eq jumplit2eq jumplit3eq jumplit4eq])

((1 . 4) . [!- jumplit1ne jumplit2ne jumplit3ne jumplit4ne])

((1 . 4) . [!- jumplit1eq jumplit2eq jumplit3eq jumplit4eq])

((1 . 4) . [!- jumplit1ne jumplit2ne jumplit3ne jumplit4ne])

0

16

32

48

64

80

96

112

128

144

160

176

192

208

224

240

s!:literal_order

s!:resolve_literals

s!:only_loadlit

s!:too_many_literals

nil

s!:endprocedure

s!:add_pending

s!:invent_exit

s!:destination_label

s!:remlose

(0 . 0)

(0 . 1)

(0 . 2)

(0 . 3)

(1 . 0)

(1 . 1)

(1 . 2)

(1 . 3)

(1 . 4)

(1 . 5)

(2 . 0)

(2 . 1)

(2 . 2)

(2 . 3)

(2 . 4)

s!:remcall

s!:is_lose_and_exit

s!:try_tail_1

s!:try_tailcall

s!:tidy_exits_1

s!:tidy_exits

s!:tidy_flowgraph

(jumpnil jumpt jumpatom jumpnatom jumpeq jumpne jumpequal jumpnequal jumpl0nil
jumpl0t jumpl1nil jumpl1t jumpl2nil jumpl2t jumpl3nil jumpl3t jumpl4nil jumpl4t
jumpl0atom jumpl0natom jumpl1atom jumpl1natom jumpl2atom jumpl2natom jumpl3atom
jumpl3natom jumpst0nil jumpst0t jumpst1nil jumpst1t jumpst2nil jumpst2t
jumpfree1nil jumpfree1t jumpfree2nil jumpfree2t jumpfree3nil jumpfree3t
jumpfree4nil jumpfree4t jumpfreenil jumpfreet jumplit1eq jumplit1ne jumplit2eq
jumplit2ne jumplit3eq jumplit3ne jumplit4eq jumplit4ne jumpliteq jumplitne
jumpliteq!* jumplitne!* jumpb1nil jumpb1t jumpb2nil jumpb2t jumpflagp jumpnflagp
jumpeqcar jumpneqcar)

s!:negate_jump

s!:resolve_labels

s!:plant_basic_block

s!:plant_bytes

s!:plant_exit_code

(jumpl0nil jumpl0t jumpl1nil jumpl1t jumpl2nil jumpl2t jumpl3nil jumpl3t
jumpl4nil jumpl4t jumpl0atom jumpl0natom jumpl1atom jumpl1natom jumpl2atom
jumpl2natom jumpl3atom jumpl3natom jumpst0nil jumpst0t jumpst1nil jumpst1t
jumpst2nil jumpst2t jumpfree1nil jumpfree1t jumpfree2nil jumpfree2t jumpfree3nil
jumpfree3t jumpfree4nil jumpfree4t jumpfreenil jumpfreet jumplit1eq jumplit1ne
jumplit2eq jumplit2ne jumplit3eq jumplit3ne jumplit4eq jumplit4ne jumpliteq
jumplitne jumpliteq!* jumplitne!* jumpb1nil jumpb1t jumpb2nil jumpb2t jumpflagp
jumpnflagp jumpeqcar jumpneqcar)

nil

nil

nil

s!:expand_jump

s!:comval

s!:comspecform

nil

s!:improve

s!:imp_minus

s!:imp_minus

s!:imp_minus

s!:imp_times

s!:imp_times

s!:imp_itimes

s!:imp_itimes

s!:imp_difference

s!:imp_difference

s!:imp_idifference

s!:imp_idifference

s!:alwayseasy

s!:alwayseasy

s!:alwayseasy

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easyifarg

s!:easygetv

s!:easygetv

s!:easyqgetv

s!:easyqgetv

s!:iseasy

s!:instate_local_decs

s!:residual_local_decs

s!:cancel_local_decs

s!:find_local_decs

s!:comlambda

s!:loadliteral

s!:comquote

s!:comquote

nil

s!:comfunction

s!:comfunction

s!:should_be_fluid

s!:find_lexical

nil

[loadloc0 loadloc1 loadloc2 loadloc3 loadloc4 loadloc5 loadloc6 loadloc7
loadloc8 loadloc9 loadloc10 loadloc11]

s!:comatom

nil

s!:islocal

s!:load2

nil

[carloc0 carloc1 carloc2 carloc3 carloc4 carloc5 carloc6 carloc7 carloc8 carloc9
carloc10 carloc11]

[cdrloc0 cdrloc1 cdrloc2 cdrloc3 cdrloc4 cdrloc5]

[caarloc0 caarloc1 caarloc2 caarloc3]

nil

nil

nil

nil

s!:comcall

s!:ad_name

s!:comcarcdr3

s!:comcarcdr3

s!:comcarcdr3

s!:comcarcdr3

s!:comcarcdr3

s!:comcarcdr3

s!:comcarcdr3

s!:comcarcdr3

s!:comcarcdr3

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comcarcdr4

s!:comgetv

s!:comgetv

s!:comqgetv

s!:comqgetv

s!:comget

s!:comget

s!:comflagp

s!:comflagp

s!:complus

s!:complus

s!:comtimes

s!:comtimes

s!:comiplus

s!:comiplus

s!:comitimes

s!:comitimes

s!:complus2

s!:complus2

s!:comdifference

s!:comdifference

s!:comiplus2

s!:comiplus2

s!:comidifference

s!:comidifference

s!:comtimes2

s!:comtimes2

s!:comtimes2

s!:comminus

s!:comminus

s!:comminusp

s!:comminusp

s!:comlessp

s!:comlessp

s!:comiminusp

s!:comiminusp

s!:comilessp

s!:comilessp

s!:comprogn

s!:comprogn

s!:comprog1

s!:comprog1

s!:comprog2

s!:comprog2

s!:outstack

s!:outlose

s!:comprog

s!:comprog

s!:comtagbody

s!:comtagbody

s!:comblock

s!:comblock

s!:comcatch

s!:comcatch

s!:comthrow

s!:comthrow

s!:comunwind!-protect

s!:comunwind!-protect

s!:comdeclare

s!:comdeclare

s!:expand_let

s!:comlet

s!:comlet

s!:expand_let!*

s!:comlet!*

s!:comlet!*

s!:restore_stack

s!:comgo

s!:comgo

s!:comreturn!-from

s!:comreturn!-from

s!:comreturn

s!:comreturn

nil

[jumpl0t jumpl1t jumpl2t jumpl3t jumpl4t]

[jumpl0nil jumpl1nil jumpl2nil jumpl3nil jumpl4nil]

[jumpl0atom jumpl1atom jumpl2atom jumpl3atom]

[jumpl0natom jumpl1natom jumpl2natom jumpl3natom]

s!:jumpif

s!:testnot

s!:testnot

s!:testnot

s!:testatom

s!:testatom

s!:testconsp

s!:testconsp

s!:comcond

s!:comcond

s!:comif

s!:comif

s!:comwhen

s!:comwhen

s!:comunless

s!:comunless

s!:comicase

s!:comicase

181

182

s!:jumpliteql

s!:casebranch

s!:comcase

s!:comcase

nil

s!:comeval!-when

s!:comeval!-when

s!:comthe

s!:comthe

s!:comand

s!:comand

s!:comor

s!:comor

s!:combool

s!:combool

s!:combool

s!:testeq

s!:testeq1

s!:testeq

s!:testeq1

s!:testequal

s!:testequal

s!:testneq

s!:testneq

s!:testeqcar

s!:testeqcar

s!:testflagp

s!:testflagp

nil

[storeloc0 storeloc1 storeloc2 storeloc3 storeloc4 storeloc5 storeloc6 storeloc7
]

s!:comsetq

s!:comsetq

s!:comsetq

s!:comlist

s!:comlist

s!:comlist!*

s!:comlist!*

s!:comcons

s!:comcons

s!:comapply

s!:comapply

s!:imp_funcall

s!:imp_funcall

s!:eval_to_eq_safe

s!:eval_to_eq_unsafe

s!:list_all_eq_safe

s!:eval_to_list_all_eq_safe

s!:list_some_eq_unsafe

s!:eval_to_list_some_eq_unsafe

s!:eval_to_car_eq_safe

s!:eval_to_car_eq_unsafe

s!:alist_eq_safe

s!:eval_to_alist_eq_safe

s!:alist_eq_unsafe

s!:eval_to_alist_eq_unsafe

nil

nil

s!:comequal

s!:comequal

s!:comeq

s!:comeq

s!:comeqcar

s!:comeqcar

s!:comsublis

s!:comsublis

s!:comsubla

s!:comsubla

s!:comassoc

s!:comassoc

s!:comassoc

s!:comatsoc

s!:comatsoc

s!:commember

s!:commember

s!:commember

s!:commemq

s!:commemq

s!:comdelete

s!:comdelete

s!:comdeleq

s!:comdeleq

s!:commap

s!:commap

s!:commap

s!:commap

s!:commap

s!:commap

s!:commap

s!:nilargs

s!:subargs

nil

clear_source_database

load_source_database

save_source_database

display_source_database

nil

s!:r2i

s!:r2i1

s!:r2iand

s!:r2ior

s!:r2icond

s!:r2iif

s!:r2iwhen

s!:r2iprogn

s!:r2icons

s!:r2icons2

s!:r2isteps

s!:r2i_safestep

s!:r2i_dependson

nil

nil

s!:r2i_list_dependson

s!:r2i2

s!:r2i2cond

s!:r2i2if

s!:r2i2when

s!:r2i2progn

s!:r2i3

s!:any_fluid

s!:compile1

s!:compile2

compile!-all

nil

nil

nil

s!:fasl_supervisor

s!:fslout0

s!:fslout1

s!:fslout2

nil

faslend

endstat

s!:file

s!:trim!.c

s!:dir

faslout

rlis

s!:c_supervisor

s!:cout0

s!:cout1

nil

c_end

endstat

c_out

rlis

s!:compile!-file!*

compile!-file!*

compd

s!:compile0

s!:fully_macroexpand_list

s!:fully_macroexpand

s!:expandfunction

s!:expandflet

s!:expandfletvars

s!:expandlabels

s!:expandmacrolet

s!:expandprog

s!:expandtagbody

s!:expandprogv

s!:expandblock

s!:expanddeclare

s!:expandlet

s!:expandlet!*

s!:expandgo

s!:expandreturn!-from

s!:expandcond

s!:expandcase

s!:expandeval!-when

s!:expandthe

s!:expandmv!-call

s!:expandfunction

s!:expandflet

s!:expandlabels

s!:expandmacrolet

s!:expandprog

s!:expandtagbody

s!:expandprogv

s!:expandblock

s!:expanddeclare

s!:expandlet

s!:expandlet!*

s!:expandgo

s!:expandreturn!-from

s!:expandcond

s!:expandcase

s!:expandeval!-when

s!:expandthe

s!:expandmv!-call

compile

nil

nil

nil

c!:printf

c!:printf1

c!:safeprin

c!:valid_fndef

c!:valid_list

c!:valid_expr

c!:cspecform

c!:valid_specform

c!:valid_specform

nil

nil

nil

c!:reset_gensyms

c!:my_gensym

c!:newreg

c!:startblock

c!:outop

c!:endblock

c!:cval_inner

c!:cval

c!:clambda

c!:locally_bound

nil

nil

c!:find_literal

c!:catom

c!:cjumpif

nil

c!:ccall

nil

c!:has_calls

c!:has_calls_1

c!:can_reach

c!:any_can_reach

c!:pareval

c!:ccall1

nil

nil

c!:cfndef

nil

nil

nil

c!:ccompilesupervisor

nil

((!  . !A) (!! . !B) (!# . !C) (!$ . !D) (!% . !E) (!^ . !F) (!& . !G) (!* . !H)
(!( . !I) (!) . !J) (!- . !K) (!+ . !L) (!= . !M) (!\ . !N) (!| . !O) (!, . !P)
(!. . !Q) (!< . !R) (!> . !S) (!: . !T) (!; . !U) (!/ . !V) (!? . !W) (!~ . !X)
(!` . !Y))

nil

c!:inv_name

nil

c!:ccmpout1

c!:ccmpout1a

nil

c!:concat

c!:ccompilestart

c!:print!-init

c!-end

c!-end1

endstat

c!-compile

rlis

c!:print_opcode

c!:print_exit_condition

c!:pmovr

c!:pmovr

c!:pmovk

c!:pmovk

c!:pmovk1

c!:pmovk1

nil

c!:preloadenv

c!:preloadenv

c!:pldrglob

c!:pldrglob

c!:pstrglob

c!:pstrglob

c!:pnilglob

c!:pnilglob

nil

c!:pnull

c!:pnull

c!:pnull

nil

c!:pfastget

c!:pfastget

nil

c!:pfastflag

c!:pfastflag

nil

c!:pcar

c!:pcar

c!:pcdr

c!:pcdr

c!:pqcar

c!:pqcar

c!:pqcdr

c!:pqcdr

c!:patom

c!:patom

nil

c!:pnumberp

c!:pnumberp

nil

c!:pfixp

c!:pfixp

nil

c!:piminusp

c!:piminusp

nil

c!:pilessp

c!:pilessp

nil

c!:pigreaterp

c!:pigreaterp

nil

c!:piminus

c!:piminus

c!:piadd1

c!:piadd1

c!:pisub1

c!:pisub1

c!:piplus2

c!:piplus2

c!:pidifference

c!:pidifference

c!:pitimes2

c!:pitimes2

c!:pmodular_plus

c!:pmodular_plus

c!:pmodular_difference

c!:pmodular_difference

c!:pmodular_minus

c!:pmodular_minus

c!:passoc

c!:passoc

nil

c!:patsoc

c!:patsoc

nil

c!:pmember

c!:pmember

nil

c!:pmemq

c!:pmemq

nil

c!:pget

c!:pget

c!:pqgetv

c!:pqgetv

c!:pqputv

c!:pqputv

c!:peq

c!:peq

nil

c!:pequal

c!:pequal

nil

c!:pfluidbind

c!:pfluidbind

c!:pcall

c!:fix_nargs

c!:pcall

c!:pgoto

c!:pifnull

c!:pifnull

c!:pifatom

c!:pifatom

c!:pifsymbol

c!:pifsymbol

c!:pifnumber

c!:pifnumber

c!:pifizerop

c!:pifizerop

c!:pifeq

c!:pifeq

c!:pifequal

c!:pifequal

c!:pifilessp

c!:pifilessp

c!:pifigreaterp

c!:pifigreaterp

c!:display_flowgraph

nil

c!:branch_chain

c!:one_operand

c!:two_operands

nil

nil

nil

nil

nil

nil

nil

nil

c!:live_variable_analysis

c!:insert1

c!:clash

c!:build_clash_matrix

c!:allocate_registers

c!:remove_nops

nil

c!:find_error_label

c!:assign

c!:insert_tailcall

c!:does_return

c!:pushpop

c!:optimise_flowgraph

c!:print_error_return

c!:cand

c!:cand

c!:ccatch

c!:ccatch

c!:ccompile_let

c!:ccompiler_let

c!:ccond

c!:ccond

c!:valid_cond

c!:valid_cond

c!:cdeclare

c!:cdeclare

c!:cde

c!:cde

c!:cdefun

c!:cdefun

c!:ceval_when

c!:ceval_when

c!:cflet

c!:cflet

c!:cfunction

c!:valid_function

c!:cfunction

c!:valid_function

c!:cgo

c!:cgo

c!:valid_quote

c!:cif

c!:cif

c!:clabels

c!:clabels

c!:expand!-let

c!:clet

c!:valid_let

c!:clet

c!:valid_let

c!:expand!-let!*

c!:clet!*

c!:clet!*

c!:valid_let

c!:clist

c!:clist

c!:clist!*

c!:clist!*

c!:ccons

c!:ccons

c!:cget

c!:cget

c!:cflag

c!:cflag

c!:cgetv

c!:cgetv

c!:cputv

c!:cputv

c!:cqputv

c!:cqputv

c!:cmacrolet

c!:cmacrolet

c!:cmultiple_value_call

c!:cmultiple_value_call

c!:cmultiple_value_prog1

c!:cmultiple_value_prog1

c!:cor

c!:cor

c!:cprog

c!:cprog

c!:valid_prog

c!:valid_prog

c!:cprog!*

c!:cprog!*

c!:cprog1

c!:cprog1

c!:cprog2

c!:cprog2

c!:cprogn

c!:cprogn

c!:cprogv

c!:cprogv

c!:cquote

c!:valid_quote

c!:cquote

c!:valid_quote

c!:creturn

c!:creturn

c!:creturn_from

c!:csetq

c!:csetq

c!:csetq

c!:cprivate_tagbody

c!:cprivate_tagbody

c!:cthe

c!:cthe

c!:cthrow

c!:cthrow

c!:cunless

c!:cunless

c!:cunwind_protect

c!:cunwind_protect

c!:cwhen

c!:cwhen

c!:expand_map

c!:expand_map

c!:expand_map

c!:expand_map

c!:expand_map

c!:expand_map

c!:expand_map

c!:expand_carcdr

c!:expand_carcdr

c!:builtin_one

c!:builtin_two

c!:narg

nil

c!:cplus2

c!:cplus2

c!:ciplus2

c!:ciplus2

c!:cdifference

c!:cdifference

c!:cidifference

c!:cidifference

c!:ctimes2

c!:ctimes2

c!:citimes2

c!:citimes2

c!:cminus

c!:cminus

c!:ceq

c!:ceq

c!:cequal

c!:cequal

c!:is_fixnum

c!:certainlyatom

c!:atomlist1

c!:atomlist

c!:atomcar

c!:atomkeys1

c!:atomkeys

c!:comsublis

c!:comsublis

c!:comassoc

c!:comassoc

c!:comassoc

c!:commember

c!:commember

c!:comdelete

c!:comdelete

c!:ctestif

c!:ctestif

c!:ctestnull

c!:ctestnull

c!:ctestnull

c!:ctestatom

c!:ctestatom

c!:ctestconsp

c!:ctestconsp

c!:ctestsymbol

c!:ctestsymbol

c!:ctestnumberp

c!:ctestnumberp

c!:ctestizerop

c!:ctestizerop

c!:ctesteq

c!:ctesteq

c!:ctesteqcar

c!:ctesteqcar

nil

-134217728

134217727

c!:small_number

c!:eqvalid

nil

c!:ctestequal

c!:ctestequal

c!:ctestilessp

c!:ctestilessp

c!:ctestigreaterp

c!:ctestigreaterp

c!:ctestand

c!:ctestand

c!:ctestor

c!:ctestor

nil

nil

nil

nil

nil

Read "$srcdir/compiler.lsp"

nil
Compile: binopen
+++ binopen compiled, 42 + 52 bytes
Compile: break!-loop
+++ break!-loop compiled, 109 + 72 bytes
Compile: c!-compile
+++ c!-compile compiled, 47 + 56 bytes
Compile: c!-end
+++ c!-end compiled, 3 + 16 bytes
Compile: c!-end1
+++ c!-end1 compiled, 407 + 232 bytes
Compile: c!:allocate_registers
+++ c!:allocate_registers compiled, 129 + 28 bytes
Compile: c!:any_can_reach
+++ c!:any_can_reach compiled, 14 + 16 bytes
Compile: c!:assign
+++ c!:assign compiled, 28 + 24 bytes
Compile: c!:atomcar
+++ c!:atomcar compiled, 21 + 24 bytes
Compile: c!:atomkeys
+++ c!:atomkeys compiled, 52 + 28 bytes
Compile: c!:atomkeys1
+++ c!:atomkeys1 compiled, 24 + 20 bytes
Compile: c!:atomlist
+++ c!:atomlist compiled, 52 + 28 bytes
Compile: c!:atomlist1
+++ c!:atomlist1 compiled, 18 + 12 bytes
Compile: c!:branch_chain
+++ c!:branch_chain compiled, 143 + 44 bytes
Compile: c!:build_clash_matrix
+++ c!:build_clash_matrix compiled, 219 + 92 bytes
Compile: c!:builtin_one
+++ c!:builtin_one compiled, 17 + 20 bytes
Compile: c!:builtin_two
+++ c!:builtin_two compiled, 25 + 20 bytes
Compile: c!:can_reach
+++ c!:can_reach compiled, 23 + 24 bytes
Compile: c!:cand
+++ c!:cand compiled, 46 + 24 bytes
Compile: c!:catom
+++ c!:catom compiled, 81 + 56 bytes
Compile: c!:ccall
+++ c!:ccall compiled as link to c:ccall1
Compile: c!:ccall1
+++ c!:ccall1 compiled, 64 + 36 bytes
Compile: c!:ccatch
+++ c!:ccatch compiled, 4 + 20 bytes
Compile: c!:ccmpout1
+++ c!:ccmpout1 compiled, 20 + 20 bytes
Compile: c!:ccmpout1a
+++ c!:ccmpout1a compiled, 170 + 92 bytes
Compile: c!:ccompile_let
+++ c!:ccompile_let compiled, 4 + 20 bytes
Compile: c!:ccompilestart
+++ c!:ccompilestart compiled, 252 + 176 bytes
Compile: c!:ccompilesupervisor
+++ c!:ccompilesupervisor compiled, 84 + 56 bytes
Compile: c!:ccond
+++ c!:ccond compiled, 105 + 56 bytes
Compile: c!:ccons
+++ c!:ccons compiled, 89 + 48 bytes
Compile: c!:cde
+++ c!:cde compiled, 4 + 20 bytes
Compile: c!:cdeclare
+++ c!:cdeclare compiled, 4 + 20 bytes
Compile: c!:cdefun
+++ c!:cdefun compiled, 4 + 20 bytes
Compile: c!:cdifference
+++ c!:cdifference compiled, 63 + 44 bytes
Compile: c!:ceq
+++ c!:ceq compiled, 45 + 36 bytes
Compile: c!:cequal
+++ c!:cequal compiled, 56 + 44 bytes
Compile: c!:certainlyatom
+++ c!:certainlyatom compiled, 30 + 20 bytes
Compile: c!:ceval_when
+++ c!:ceval_when compiled, 4 + 20 bytes
Compile: c!:cflag
+++ c!:cflag compiled, 53 + 44 bytes
Compile: c!:cflet
+++ c!:cflet compiled, 4 + 20 bytes
Compile: c!:cfndef
+++ c!:cfndef compiled, 478 + 224 bytes
Compile: c!:cfunction
+++ c!:cfunction compiled, 46 + 52 bytes
Compile: c!:cget
+++ c!:cget compiled, 53 + 44 bytes
Compile: c!:cgetv
+++ c!:cgetv compiled, 14 + 24 bytes
Compile: c!:cgo
+++ c!:cgo compiled, 32 + 32 bytes
Compile: c!:cidifference
+++ c!:cidifference compiled, 60 + 44 bytes
Compile: c!:cif
+++ c!:cif compiled, 78 + 44 bytes
Compile: c!:ciplus2
+++ c!:ciplus2 compiled, 66 + 40 bytes
Compile: c!:citimes2
+++ c!:citimes2 compiled, 68 + 36 bytes
Compile: c!:cjumpif
+++ c!:cjumpif compiled, 65 + 48 bytes
Compile: c!:clabels
+++ c!:clabels compiled, 4 + 20 bytes
Compile: c!:clambda
+++ c!:clambda compiled, 196 + 72 bytes
Compile: c!:clash
+++ c!:clash compiled, 37 + 20 bytes
Compile: c!:clet
+++ c!:clet compiled, 8 + 16 bytes
Compile: c!:clet!*
+++ c!:clet!* compiled, 8 + 16 bytes
Compile: c!:clist
+++ c!:clist compiled, 98 + 44 bytes
Compile: c!:clist!*
+++ c!:clist!* compiled, 30 + 16 bytes
Compile: c!:cmacrolet
+++ c!:cmacrolet compiled, 4 + 20 bytes
Compile: c!:cminus
+++ c!:cminus compiled, 29 + 24 bytes
Compile: c!:cmultiple_value_call
+++ c!:cmultiple_value_call compiled, 4 + 20 bytes
Compile: c!:cmultiple_value_prog1
+++ c!:cmultiple_value_prog1 compiled, 4 + 20 bytes
Compile: c!:comassoc
+++ c!:comassoc compiled, 15 + 20 bytes
Compile: c!:comdelete
+++ c!:comdelete compiled, 15 + 20 bytes
Compile: c!:commember
+++ c!:commember compiled, 15 + 20 bytes
Compile: c!:comsublis
+++ c!:comsublis compiled, 10 + 16 bytes
Compile: c!:concat
+++ c!:concat compiled, 18 + 16 bytes
Compile: c!:cor
+++ c!:cor compiled, 63 + 44 bytes
Compile: c!:cplus2
+++ c!:cplus2 compiled, 69 + 40 bytes
Compile: c!:cprivate_tagbody
+++ c!:cprivate_tagbody compiled, 47 + 28 bytes
Compile: c!:cprog
+++ c!:cprog compiled, 316 + 108 bytes
Compile: c!:cprog!*
+++ c!:cprog!* compiled, 4 + 20 bytes
Compile: c!:cprog1
+++ c!:cprog1 compiled, 31 + 32 bytes
Compile: c!:cprog2
+++ c!:cprog2 compiled, 39 + 32 bytes
Compile: c!:cprogn
+++ c!:cprogn compiled, 25 + 16 bytes
Compile: c!:cprogv
+++ c!:cprogv compiled, 4 + 20 bytes
Compile: c!:cputv
+++ c!:cputv compiled, 14 + 24 bytes
Compile: c!:cqputv
+++ c!:cqputv compiled, 19 + 20 bytes
Compile: c!:cquote
+++ c!:cquote compiled, 39 + 36 bytes
Compile: c!:creturn
+++ c!:creturn compiled, 34 + 44 bytes
Compile: c!:csetq
+++ c!:csetq compiled, 63 + 56 bytes
Compile: c!:cspecform
+++ c!:cspecform compiled, 7 + 20 bytes
Compile: c!:ctestand
+++ c!:ctestand compiled, 34 + 28 bytes
Compile: c!:ctestatom
+++ c!:ctestatom compiled, 15 + 20 bytes
Compile: c!:ctestconsp
+++ c!:ctestconsp compiled, 15 + 20 bytes
Compile: c!:ctesteq
+++ c!:ctesteq compiled, 44 + 24 bytes
Compile: c!:ctesteqcar
+++ c!:ctesteqcar compiled, 48 + 40 bytes
Compile: c!:ctestequal
+++ c!:ctestequal compiled, 59 + 36 bytes
Compile: c!:ctestif
+++ c!:ctestif compiled, 33 + 20 bytes
Compile: c!:ctestigreaterp
+++ c!:ctestigreaterp compiled, 19 + 20 bytes
Compile: c!:ctestilessp
+++ c!:ctestilessp compiled, 19 + 20 bytes
Compile: c!:ctestizerop
+++ c!:ctestizerop compiled, 15 + 20 bytes
Compile: c!:ctestnull
+++ c!:ctestnull compiled, 9 + 12 bytes
Compile: c!:ctestnumberp
+++ c!:ctestnumberp compiled, 15 + 20 bytes
Compile: c!:ctestor
+++ c!:ctestor compiled, 34 + 28 bytes
Compile: c!:ctestsymbol
+++ c!:ctestsymbol compiled, 15 + 20 bytes
Compile: c!:cthe
+++ c!:cthe compiled, 5 + 12 bytes
Compile: c!:cthrow
+++ c!:cthrow compiled, 4 + 20 bytes
Compile: c!:ctimes2
+++ c!:ctimes2 compiled, 71 + 36 bytes
Compile: c!:cunless
+++ c!:cunless compiled, 65 + 52 bytes
Compile: c!:cunwind_protect
+++ c!:cunwind_protect compiled, 4 + 20 bytes
Compile: c!:cval
+++ c!:cval compiled, 20 + 28 bytes
Compile: c!:cval_inner
+++ c!:cval_inner compiled, 69 + 48 bytes
Compile: c!:cwhen
+++ c!:cwhen compiled, 65 + 52 bytes
Compile: c!:display_flowgraph
+++ c!:display_flowgraph compiled, 97 + 64 bytes
Compile: c!:does_return
+++ c!:does_return compiled, 67 + 32 bytes
Compile: c!:endblock
+++ c!:endblock compiled, 31 + 36 bytes
Compile: c!:eqvalid
+++ c!:eqvalid compiled, 26 + 28 bytes
Compile: c!:expand!-let
+++ c!:expand!-let compiled, 67 + 20 bytes
Compile: c!:expand!-let!*
+++ c!:expand!-let!* compiled, 43 + 24 bytes
Compile: c!:expand_carcdr
+++ c!:expand_carcdr compiled, 37 + 20 bytes
Compile: c!:expand_map
+++ c!:expand_map compiled, 242 + 120 bytes
Compile: c!:find_error_label
+++ c!:find_error_label compiled, 22 + 16 bytes
Compile: c!:find_literal
+++ c!:find_literal compiled, 27 + 16 bytes
Compile: c!:fix_nargs
+++ c!:fix_nargs compiled, 28 + 12 bytes
Compile: c!:has_calls
+++ c!:has_calls compiled, 7 + 16 bytes
Compile: c!:has_calls_1
+++ c!:has_calls_1 compiled, 70 + 36 bytes
Compile: c!:insert1
+++ c!:insert1 compiled, 8 + 8 bytes
Compile: c!:insert_tailcall
+++ c!:insert_tailcall compiled, 171 + 72 bytes
Compile: c!:install
+++ c!:install compiled, 56 + 28 bytes
Compile: c!:inv_name
+++ c!:inv_name compiled, 102 + 36 bytes
Compile: c!:is_fixnum
+++ c!:is_fixnum compiled, 17 + 16 bytes
Compile: c!:live_variable_analysis
+++ c!:live_variable_analysis compiled, 384 + 152 bytes
Compile: c!:locally_bound
+++ c!:locally_bound compiled, 5 + 8 bytes
Compile: c!:my_gensym
+++ c!:my_gensym compiled, 40 + 28 bytes
Compile: c!:narg
+++ c!:narg compiled, 9 + 20 bytes
Compile: c!:newreg
+++ c!:newreg compiled, 7 + 16 bytes
Compile: c!:one_operand
+++ c!:one_operand compiled, 16 + 28 bytes
Compile: c!:optimise_flowgraph
+++ c!:optimise_flowgraph compiled, 554 + 276 bytes
Compile: c!:outop
+++ c!:outop compiled, 15 + 16 bytes
Compile: c!:pareval
+++ c!:pareval compiled, 117 + 28 bytes
Compile: c!:passoc
+++ c!:passoc compiled, 9 + 16 bytes
Compile: c!:patom
+++ c!:patom compiled, 8 + 16 bytes
Compile: c!:patsoc
+++ c!:patsoc compiled, 9 + 16 bytes
Compile: c!:pcall
+++ c!:pcall compiled, 337 + 180 bytes
Compile: c!:pcar
+++ c!:pcar compiled, 26 + 36 bytes
Compile: c!:pcdr
+++ c!:pcdr compiled, 26 + 36 bytes
Compile: c!:peq
+++ c!:peq compiled, 9 + 16 bytes
Compile: c!:pequal
+++ c!:pequal compiled, 15 + 16 bytes
Compile: c!:pfastflag
+++ c!:pfastflag compiled, 82 + 64 bytes
Compile: c!:pfastget
+++ c!:pfastget compiled, 74 + 60 bytes
Compile: c!:pfixp
+++ c!:pfixp compiled, 8 + 16 bytes
Compile: c!:pfluidbind
+++ c!:pfluidbind compiled, 2 + 8 bytes
Compile: c!:pget
+++ c!:pget compiled, 9 + 16 bytes
Compile: c!:pgoto
+++ c!:pgoto compiled, 40 + 36 bytes
Compile: c!:piadd1
+++ c!:piadd1 compiled, 8 + 16 bytes
Compile: c!:pidifference
+++ c!:pidifference compiled, 9 + 16 bytes
Compile: c!:pifatom
+++ c!:pifatom compiled, 6 + 16 bytes
Compile: c!:pifeq
+++ c!:pifeq compiled, 8 + 16 bytes
Compile: c!:pifequal
+++ c!:pifequal compiled, 14 + 16 bytes
Compile: c!:pifigreaterp
+++ c!:pifigreaterp compiled, 8 + 16 bytes
Compile: c!:pifilessp
+++ c!:pifilessp compiled, 8 + 16 bytes
Compile: c!:pifizerop
+++ c!:pifizerop compiled, 6 + 16 bytes
Compile: c!:pifnull
+++ c!:pifnull compiled, 6 + 16 bytes
Compile: c!:pifnumber
+++ c!:pifnumber compiled, 6 + 16 bytes
Compile: c!:pifsymbol
+++ c!:pifsymbol compiled, 6 + 16 bytes
Compile: c!:pigreaterp
+++ c!:pigreaterp compiled, 9 + 16 bytes
Compile: c!:pilessp
+++ c!:pilessp compiled, 9 + 16 bytes
Compile: c!:piminus
+++ c!:piminus compiled, 8 + 16 bytes
Compile: c!:piminusp
+++ c!:piminusp compiled, 8 + 16 bytes
Compile: c!:piplus2
+++ c!:piplus2 compiled, 9 + 16 bytes
Compile: c!:pisub1
+++ c!:pisub1 compiled, 8 + 16 bytes
Compile: c!:pitimes2
+++ c!:pitimes2 compiled, 9 + 16 bytes
Compile: c!:pldrglob
+++ c!:pldrglob compiled, 9 + 16 bytes
Compile: c!:pmember
+++ c!:pmember compiled, 9 + 16 bytes
Compile: c!:pmemq
+++ c!:pmemq compiled, 9 + 16 bytes
Compile: c!:pmodular_difference
+++ c!:pmodular_difference compiled, 20 + 28 bytes
Compile: c!:pmodular_minus
+++ c!:pmodular_minus compiled, 20 + 28 bytes
Compile: c!:pmodular_plus
+++ c!:pmodular_plus compiled, 20 + 28 bytes
Compile: c!:pmovk
+++ c!:pmovk compiled, 9 + 16 bytes
Compile: c!:pmovk1
+++ c!:pmovk1 compiled, 30 + 32 bytes
Compile: c!:pmovr
+++ c!:pmovr compiled, 8 + 16 bytes
Compile: c!:pnilglob
+++ c!:pnilglob compiled, 7 + 16 bytes
Compile: c!:pnull
+++ c!:pnull compiled, 8 + 16 bytes
Compile: c!:pnumberp
+++ c!:pnumberp compiled, 8 + 16 bytes
Compile: c!:pqcar
+++ c!:pqcar compiled, 8 + 16 bytes
Compile: c!:pqcdr
+++ c!:pqcdr compiled, 8 + 16 bytes
Compile: c!:pqgetv
+++ c!:pqgetv compiled, 12 + 20 bytes
Compile: c!:pqputv
+++ c!:pqputv compiled, 13 + 20 bytes
Compile: c!:preloadenv
+++ c!:preloadenv compiled, 9 + 20 bytes
Compile: c!:print!-init
+++ c!:print!-init compiled, 75 + 76 bytes
Compile: c!:print_error_return
+++ c!:print_error_return compiled, 201 + 112 bytes
Compile: c!:print_exit_condition
+++ c!:print_exit_condition compiled, 558 + 228 bytes
Compile: c!:print_opcode
+++ c!:print_opcode compiled, 42 + 16 bytes
Compile: c!:printf
+++ c!:printf_emdg6vqyz4j7 compiled, 13 + 16 bytes
Compile: c!:printf1
+++ c!:printf1 compiled, 149 + 92 bytes
Compile: c!:pstrglob
+++ c!:pstrglob compiled, 10 + 16 bytes
Compile: c!:pushpop
+++ c!:pushpop compiled, 73 + 44 bytes
Compile: c!:remove_nops
+++ c!:remove_nops compiled, 179 + 60 bytes
Compile: c!:reset_gensyms
+++ c!:reset_gensyms compiled, 100 + 64 bytes
Compile: c!:safeprin
+++ c!:safeprin compiled, 28 + 20 bytes
Compile: c!:small_number
+++ c!:small_number compiled, 17 + 16 bytes
Compile: c!:startblock
+++ c!:startblock compiled, 5 + 16 bytes
Compile: c!:two_operands
+++ c!:two_operands compiled, 21 + 32 bytes
Compile: c!:valid_cond
+++ c!:valid_cond compiled, 13 + 16 bytes
Compile: c!:valid_expr
+++ c!:valid_expr compiled, 53 + 36 bytes
Compile: c!:valid_fndef
+++ c!:valid_fndef compiled, 14 + 20 bytes
Compile: c!:valid_function
+++ c!:valid_function compiled, 33 + 24 bytes
Compile: c!:valid_let
+++ c!:valid_let compiled, 12 + 20 bytes
Compile: c!:valid_list
+++ c!:valid_list compiled, 16 + 16 bytes
Compile: c!:valid_prog
+++ c!:valid_prog compiled, 3 + 12 bytes
Compile: c!:valid_quote
+++ c!:valid_quote compiled, 2 + 12 bytes
Compile: c!:valid_specform
+++ c!:valid_specform compiled, 1 + 8 bytes
Compile: c_end
+++ c_end compiled, 17 + 32 bytes
Compile: c_out
+++ c_out compiled, 68 + 72 bytes
Compile: carcheck
+++ carcheck compiled, 12 + 12 bytes
Compile: clear_source_database
+++ clear_source_database compiled, 9 + 28 bytes
Compile: compd
+++ compd compiled, 30 + 36 bytes
Compile: compile
+++ compile compiled, 32 + 20 bytes
Compile: compile!-all
+++ compile!-all compiled, 53 + 44 bytes
Compile: compile!-file!*
+++ compile!-file!* compiled, 10 + 16 bytes
Compile: copy
+++ copy compiled, 16 + 8 bytes
Compile: dated!-name
+++ dated!-name compiled, 28 + 28 bytes
Compile: deflist
+++ deflist compiled, 22 + 12 bytes
Compile: display_source_database
+++ display_source_database compiled, 39 + 28 bytes
Compile: do
+++ do_ifsyfnlv3gaa compiled, 6 + 20 bytes
Compile: do!*
+++ do!*_i9y0sevcmoo6 compiled, 6 + 20 bytes
Compile: dolist
+++ dolist_4lacfnj6revd compiled, 6 + 12 bytes
Compile: dotimes
+++ dotimes_666oiwz1c1ig compiled, 6 + 12 bytes
Compile: expand
+++ expand compiled, 14 + 8 bytes
Compile: faslend
+++ faslend compiled, 361 + 208 bytes
Compile: faslout
+++ faslout compiled, 100 + 112 bytes
Compile: fetch!-url
+++ fetch!-url compiled, 67 + 40 bytes
Compile: fluid
+++ fluid compiled, 18 + 8 bytes
Compile: format
+++ format_f7zdxrydeas4 compiled, 17 + 16 bytes
Compile: global
+++ global compiled, 18 + 8 bytes
Compile: hashtagged!-name
+++ hashtagged!-name compiled, 16 + 24 bytes
Compile: lastcar
+++ lastcar compiled, 12 + 8 bytes
Compile: load_source_database
+++ load_source_database compiled, 31 + 28 bytes
Compile: map
+++ map compiled, 9 + 8 bytes
Compile: mapc
+++ mapc compiled, 10 + 8 bytes
Compile: mapcan
+++ mapcan compiled, 27 + 8 bytes
Compile: mapcar
+++ mapcar compiled, 17 + 8 bytes
Compile: mapcon
+++ mapcon compiled, 26 + 8 bytes
Compile: maplist
+++ maplist compiled, 16 + 8 bytes
Compile: oblist
+++ oblist compiled, 8 + 28 bytes
Compile: oem!-supervisor
+++ oem!-supervisor compiled, 7 + 8 bytes
Compile: open
+++ open compiled, 35 + 48 bytes
Compile: pipe!-open
+++ pipe!-open compiled, 20 + 36 bytes
Compile: prettyprint
+++ prettyprint compiled, 8 + 12 bytes
Compile: princl
+++ princl compiled, 4 + 16 bytes
Compile: prinl
+++ prinl compiled, 4 + 16 bytes
Compile: printcl
+++ printcl compiled, 5 + 12 bytes
Compile: printl
+++ printl compiled, 5 + 12 bytes
Compile: printprompt
+++ printprompt compiled, 1 + 8 bytes
Compile: psetq
+++ psetq_k5gcx5dfcnt4 compiled, 18 + 24 bytes
Compile: putc
+++ putc compiled as link to put
Compile: putd
+++ putd compiled, 89 + 64 bytes
Compile: rassoc
+++ rassoc compiled, 14 + 8 bytes
Compile: rplacw
+++ rplacw compiled, 9 + 8 bytes
Compile: s!:ad_name
+++ s!:ad_name compiled, 19 + 28 bytes
Compile: s!:add_pending
+++ s!:add_pending compiled, 31 + 16 bytes
Compile: s!:alist_eq_safe
+++ s!:alist_eq_safe compiled, 24 + 16 bytes
Compile: s!:alist_eq_unsafe
+++ s!:alist_eq_unsafe compiled, 33 + 16 bytes
Compile: s!:alwayseasy
+++ s!:alwayseasy compiled, 2 + 12 bytes
Compile: s!:any_fluid
+++ s!:any_fluid compiled, 13 + 16 bytes
Compile: s!:blankcount
+++ s!:blankcount_ro7olsyfqx0b compiled, 7 + 12 bytes
Compile: s!:blanklist
+++ s!:blanklist_uucedjja44w6 compiled, 7 + 12 bytes
Compile: s!:blankp
+++ s!:blankp_op70q7g59tha compiled, 10 + 16 bytes
Compile: s!:c_supervisor
+++ s!:c_supervisor compiled, 103 + 60 bytes
Compile: s!:cancel_local_decs
+++ s!:cancel_local_decs compiled as link to unfluid
Compile: s!:casebranch
+++ s!:casebranch compiled, 226 + 116 bytes
Compile: s!:comand
+++ s!:comand compiled, 30 + 32 bytes
Compile: s!:comapply
+++ s!:comapply compiled, 88 + 48 bytes
Compile: s!:comassoc
+++ s!:comassoc compiled, 38 + 36 bytes
Compile: s!:comatom
+++ s!:comatom compiled, 189 + 124 bytes
Compile: s!:comatsoc
+++ s!:comatsoc compiled, 49 + 48 bytes
Compile: s!:comblock
+++ s!:comblock compiled, 25 + 28 bytes
Compile: s!:combool
+++ s!:combool compiled, 50 + 32 bytes
Compile: s!:comcall
+++ s!:comcall compiled, 539 + 276 bytes
Compile: s!:comcarcdr3
+++ s!:comcarcdr3 compiled, 29 + 28 bytes
Compile: s!:comcarcdr4
+++ s!:comcarcdr4 compiled, 24 + 16 bytes
Compile: s!:comcase
+++ s!:comcase compiled, 348 + 100 bytes
Compile: s!:comcatch
+++ s!:comcatch compiled, 49 + 56 bytes
Compile: s!:comcond
+++ s!:comcond compiled, 88 + 52 bytes
Compile: s!:comcons
+++ s!:comcons compiled, 113 + 52 bytes
Compile: s!:comdeclare
+++ s!:comdeclare compiled, 14 + 20 bytes
Compile: s!:comdeleq
+++ s!:comdeleq compiled, 49 + 48 bytes
Compile: s!:comdelete
+++ s!:comdelete compiled, 27 + 32 bytes
Compile: s!:comdifference
+++ s!:comdifference compiled, 74 + 44 bytes
Compile: s!:comeq
+++ s!:comeq compiled, 49 + 40 bytes
Compile: s!:comeqcar
+++ s!:comeqcar compiled, 36 + 36 bytes
Compile: s!:comequal
+++ s!:comequal compiled, 22 + 20 bytes
Compile: s!:comeval!-when
+++ s!:comeval!-when compiled, 53 + 36 bytes
Compile: s!:comflagp
+++ s!:comflagp compiled, 52 + 44 bytes
Compile: s!:comfunction
+++ s!:comfunction compiled, 159 + 120 bytes
Compile: s!:comget
+++ s!:comget compiled, 91 + 68 bytes
Compile: s!:comgetv
+++ s!:comgetv compiled, 14 + 24 bytes
Compile: s!:comgo
+++ s!:comgo compiled, 63 + 44 bytes
Compile: s!:comicase
+++ s!:comicase compiled, 84 + 36 bytes
Compile: s!:comidifference
+++ s!:comidifference compiled, 53 + 36 bytes
Compile: s!:comif
+++ s!:comif compiled, 55 + 40 bytes
Compile: s!:comilessp
+++ s!:comilessp compiled, 25 + 28 bytes
Compile: s!:comiminusp
+++ s!:comiminusp compiled, 20 + 28 bytes
Compile: s!:comiplus
+++ s!:comiplus compiled, 7 + 20 bytes
Compile: s!:comiplus2
+++ s!:comiplus2 compiled, 64 + 36 bytes
Compile: s!:comitimes
+++ s!:comitimes compiled, 7 + 20 bytes
Compile: s!:comlambda
+++ s!:comlambda compiled, 245 + 100 bytes
Compile: s!:comlessp
+++ s!:comlessp compiled, 25 + 28 bytes
Compile: s!:comlet
+++ s!:comlet compiled, 11 + 20 bytes
Compile: s!:comlet!*
+++ s!:comlet!* compiled, 16 + 20 bytes
Compile: s!:comlist
+++ s!:comlist compiled, 74 + 36 bytes
Compile: s!:comlist!*
+++ s!:comlist!* compiled, 72 + 28 bytes
Compile: s!:commap
+++ s!:commap compiled, 279 + 128 bytes
Compile: s!:commember
+++ s!:commember compiled, 27 + 32 bytes
Compile: s!:commemq
+++ s!:commemq compiled, 49 + 48 bytes
Compile: s!:comminus
+++ s!:comminus compiled, 33 + 24 bytes
Compile: s!:comminusp
+++ s!:comminusp compiled, 20 + 28 bytes
Compile: s!:comor
+++ s!:comor compiled, 30 + 32 bytes
Compile: s!:compile!-file!*
+++ s!:compile!-file!* compiled, 123 + 68 bytes
Compile: s!:compile0
+++ s!:compile0 compiled, 224 + 100 bytes
Compile: s!:compile1
+++ s!:compile1 compiled, 916 + 248 bytes
Compile: s!:compile2
+++ s!:compile2 compiled, 505 + 172 bytes
Compile: s!:complus
+++ s!:complus compiled, 7 + 20 bytes
Compile: s!:complus2
+++ s!:complus2 compiled, 82 + 40 bytes
Compile: s!:comprog
+++ s!:comprog compiled, 333 + 132 bytes
Compile: s!:comprog1
+++ s!:comprog1 compiled, 65 + 44 bytes
Compile: s!:comprog2
+++ s!:comprog2 compiled, 31 + 24 bytes
Compile: s!:comprogn
+++ s!:comprogn compiled, 40 + 20 bytes
Compile: s!:comqgetv
+++ s!:comqgetv compiled, 37 + 36 bytes
Compile: s!:comquote
+++ s!:comquote compiled, 11 + 16 bytes
Compile: s!:comreturn
+++ s!:comreturn compiled, 9 + 16 bytes
Compile: s!:comreturn!-from
+++ s!:comreturn!-from compiled, 58 + 48 bytes
Compile: s!:comsetq
+++ s!:comsetq compiled, 221 + 136 bytes
Compile: s!:comspecform
+++ s!:comspecform compiled, 7 + 20 bytes
Compile: s!:comsubla
+++ s!:comsubla compiled, 36 + 40 bytes
Compile: s!:comsublis
+++ s!:comsublis compiled, 17 + 24 bytes
Compile: s!:comtagbody
+++ s!:comtagbody compiled, 110 + 44 bytes
Compile: s!:comthe
+++ s!:comthe compiled, 6 + 12 bytes
Compile: s!:comthrow
+++ s!:comthrow compiled, 33 + 40 bytes
Compile: s!:comtimes
+++ s!:comtimes compiled, 7 + 20 bytes
Compile: s!:comtimes2
+++ s!:comtimes2 compiled, 72 + 32 bytes
Compile: s!:comunless
+++ s!:comunless compiled, 13 + 20 bytes
Compile: s!:comunwind!-protect
+++ s!:comunwind!-protect compiled, 68 + 68 bytes
Compile: s!:comval
+++ s!:comval compiled, 98 + 44 bytes
Compile: s!:comwhen
+++ s!:comwhen compiled, 41 + 44 bytes
Compile: s!:cout0
+++ s!:cout0 compiled, 4 + 12 bytes
Compile: s!:cout1
+++ s!:cout1 compiled, 402 + 164 bytes
Compile: s!:depth
+++ s!:depth_27sidb7hahjd compiled, 7 + 12 bytes
Compile: s!:destination_label
+++ s!:destination_label compiled, 49 + 20 bytes
Compile: s!:dir
+++ s!:dir compiled, 33 + 24 bytes
Compile: s!:do!-bindings
+++ s!:do!-bindings compiled, 42 + 12 bytes
Compile: s!:do!-endtest
+++ s!:do!-endtest compiled, 5 + 8 bytes
Compile: s!:do!-result
+++ s!:do!-result compiled, 5 + 8 bytes
Compile: s!:do!-updates
+++ s!:do!-updates compiled, 25 + 8 bytes
Compile: s!:easygetv
+++ s!:easygetv compiled, 25 + 24 bytes
Compile: s!:easyifarg
+++ s!:easyifarg compiled, 16 + 12 bytes
Compile: s!:easyqgetv
+++ s!:easyqgetv compiled, 22 + 20 bytes
Compile: s!:endlist
+++ s!:endlist compiled, 5 + 12 bytes
Compile: s!:endprocedure
+++ s!:endprocedure compiled, 220 + 116 bytes
Compile: s!:eval_to_alist_eq_safe
+++ s!:eval_to_alist_eq_safe compiled, 52 + 28 bytes
Compile: s!:eval_to_alist_eq_unsafe
+++ s!:eval_to_alist_eq_unsafe compiled, 44 + 32 bytes
Compile: s!:eval_to_car_eq_safe
+++ s!:eval_to_car_eq_safe compiled, 21 + 24 bytes
Compile: s!:eval_to_car_eq_unsafe
+++ s!:eval_to_car_eq_unsafe compiled, 21 + 24 bytes
Compile: s!:eval_to_eq_safe
+++ s!:eval_to_eq_safe compiled, 48 + 24 bytes
Compile: s!:eval_to_eq_unsafe
+++ s!:eval_to_eq_unsafe compiled, 53 + 24 bytes
Compile: s!:eval_to_list_all_eq_safe
+++ s!:eval_to_list_all_eq_safe compiled, 52 + 28 bytes
Compile: s!:eval_to_list_some_eq_unsafe
+++ s!:eval_to_list_some_eq_unsafe compiled, 44 + 28 bytes
Compile: s!:expand!-do
+++ s!:expand!-do compiled, 116 + 48 bytes
Compile: s!:expand!-dolist
+++ s!:expand!-dolist compiled, 90 + 48 bytes
Compile: s!:expand!-dotimes
+++ s!:expand!-dotimes compiled, 94 + 52 bytes
Compile: s!:expand_jump
+++ s!:expand_jump compiled, 225 + 100 bytes
Compile: s!:expand_let
+++ s!:expand_let compiled, 56 + 12 bytes
Compile: s!:expand_let!*
+++ s!:expand_let!* compiled, 102 + 24 bytes
Compile: s!:expandblock
+++ s!:expandblock compiled, 10 + 12 bytes
Compile: s!:expandcase
+++ s!:expandcase compiled, 34 + 16 bytes
Compile: s!:expandcond
+++ s!:expandcond compiled, 24 + 12 bytes
Compile: s!:expanddeclare
+++ s!:expanddeclare compiled, 1 + 8 bytes
Compile: s!:expandeval!-when
+++ s!:expandeval!-when compiled, 10 + 12 bytes
Compile: s!:expandflet
+++ s!:expandflet compiled, 31 + 16 bytes
Compile: s!:expandfletvars
+++ s!:expandfletvars compiled, 10 + 12 bytes
Compile: s!:expandfunction
+++ s!:expandfunction compiled, 1 + 8 bytes
Compile: s!:expandgo
+++ s!:expandgo compiled, 1 + 8 bytes
Compile: s!:expandlabels
+++ s!:expandlabels compiled as link to s:expandflet
Compile: s!:expandlet
+++ s!:expandlet compiled, 31 + 12 bytes
Compile: s!:expandlet!*
+++ s!:expandlet!* compiled as link to s:expandlet
Compile: s!:expandmacrolet
+++ s!:expandmacrolet compiled as link to s:expandflet
Compile: s!:expandmv!-call
+++ s!:expandmv!-call compiled, 10 + 12 bytes
Compile: s!:expandprog
+++ s!:expandprog compiled, 10 + 12 bytes
Compile: s!:expandprogv
+++ s!:expandprogv compiled, 14 + 12 bytes
Compile: s!:expandreturn!-from
+++ s!:expandreturn!-from compiled, 10 + 12 bytes
Compile: s!:expandtagbody
+++ s!:expandtagbody compiled as link to s:fully_macroexpand_list
Compile: s!:expandthe
+++ s!:expandthe compiled, 10 + 12 bytes
Compile: s!:explodes
+++ s!:explodes compiled as link to explode
Compile: s!:fasl_supervisor
+++ s!:fasl_supervisor compiled, 103 + 60 bytes
Compile: s!:file
+++ s!:file compiled, 28 + 20 bytes
Compile: s!:find_lexical
+++ s!:find_lexical compiled, 34 + 12 bytes
Compile: s!:find_local_decs
+++ s!:find_local_decs compiled, 45 + 12 bytes
Compile: s!:finishpending
+++ s!:finishpending compiled, 46 + 28 bytes
Compile: s!:format
+++ s!:format compiled, 221 + 48 bytes
Compile: s!:fslout0
+++ s!:fslout0 compiled, 4 + 12 bytes
Compile: s!:fslout1
+++ s!:fslout1 compiled, 515 + 244 bytes
Compile: s!:fslout2
+++ s!:fslout2 compiled, 61 + 48 bytes
Compile: s!:fully_macroexpand
+++ s!:fully_macroexpand compiled, 58 + 28 bytes
Compile: s!:fully_macroexpand_list
+++ s!:fully_macroexpand_list compiled, 24 + 12 bytes
Compile: s!:imp_difference
+++ s!:imp_difference compiled, 26 + 24 bytes
Compile: s!:imp_funcall
+++ s!:imp_funcall compiled, 56 + 52 bytes
Compile: s!:imp_idifference
+++ s!:imp_idifference compiled, 26 + 24 bytes
Compile: s!:imp_itimes
+++ s!:imp_itimes compiled, 69 + 32 bytes
Compile: s!:imp_minus
+++ s!:imp_minus compiled, 53 + 28 bytes
Compile: s!:imp_times
+++ s!:imp_times compiled, 69 + 32 bytes
Compile: s!:improve
+++ s!:improve compiled, 23 + 16 bytes
Compile: s!:indenting
+++ s!:indenting_gkajni9ceiyg compiled, 7 + 12 bytes
Compile: s!:instate_local_decs
+++ s!:instate_local_decs compiled, 40 + 20 bytes
Compile: s!:invent_exit
+++ s!:invent_exit compiled, 36 + 16 bytes
Compile: s!:is_lose_and_exit
+++ s!:is_lose_and_exit compiled, 52 + 24 bytes
Compile: s!:iseasy
+++ s!:iseasy compiled, 18 + 16 bytes
Compile: s!:islocal
+++ s!:islocal compiled, 36 + 20 bytes
Compile: s!:jumpif
+++ s!:jumpif compiled, 310 + 148 bytes
Compile: s!:jumpliteql
+++ s!:jumpliteql compiled, 55 + 72 bytes
Compile: s!:list_all_eq_safe
+++ s!:list_all_eq_safe compiled, 18 + 12 bytes
Compile: s!:list_some_eq_unsafe
+++ s!:list_some_eq_unsafe compiled, 14 + 16 bytes
Compile: s!:literal_order
+++ s!:literal_order compiled, 17 + 8 bytes
Compile: s!:load2
+++ s!:load2 compiled, 228 + 108 bytes
Compile: s!:loadliteral
+++ s!:loadliteral compiled, 27 + 36 bytes
Compile: s!:make!-psetq!-assignments
+++ s!:make!-psetq!-assignments compiled, 21 + 16 bytes
Compile: s!:make!-psetq!-bindings
+++ s!:make!-psetq!-bindings compiled, 20 + 12 bytes
Compile: s!:make!-psetq!-vars
+++ s!:make!-psetq!-vars compiled, 24 + 24 bytes
Compile: s!:negate_jump
+++ s!:negate_jump compiled, 13 + 12 bytes
Compile: s!:newframe
+++ s!:newframe_ym6zjxmzdeo4 compiled, 12 + 16 bytes
Compile: s!:nilargs
+++ s!:nilargs compiled, 16 + 20 bytes
Compile: s!:oblist
+++ s!:oblist compiled, 52 + 20 bytes
Compile: s!:oblist1
+++ s!:oblist1 compiled, 17 + 12 bytes
Compile: s!:only_loadlit
+++ s!:only_loadlit compiled, 18 + 16 bytes
Compile: s!:outexit
+++ s!:outexit compiled, 46 + 36 bytes
Compile: s!:outjump
+++ s!:outjump compiled, 81 + 52 bytes
Compile: s!:outlexref
+++ s!:outlexref compiled, 141 + 92 bytes
Compile: s!:outlose
+++ s!:outlose compiled, 136 + 68 bytes
Compile: s!:outopcode0
+++ s!:outopcode0 compiled, 29 + 36 bytes
Compile: s!:outopcode1
+++ s!:outopcode1 compiled, 34 + 40 bytes
Compile: s!:outopcode1lit
+++ s!:outopcode1lit compiled, 36 + 44 bytes
Compile: s!:outopcode2
+++ s!:outopcode2 compiled, 38 + 40 bytes
Compile: s!:outopcode2lit
+++ s!:outopcode2lit compiled, 42 + 44 bytes
Compile: s!:outstack
+++ s!:outstack compiled, 136 + 68 bytes
Compile: s!:overflow
+++ s!:overflow compiled, 301 + 128 bytes
Compile: s!:plant_basic_block
+++ s!:plant_basic_block compiled, 125 + 64 bytes
Compile: s!:plant_bytes
+++ s!:plant_bytes compiled, 149 + 68 bytes
Compile: s!:plant_exit_code
+++ s!:plant_exit_code compiled, 144 + 52 bytes
Compile: s!:prindent
+++ s!:prindent compiled, 326 + 148 bytes
Compile: s!:prinhex1
+++ s!:prinhex1 compiled, 9 + 20 bytes
Compile: s!:prinhex2
+++ s!:prinhex2 compiled, 7 + 20 bytes
Compile: s!:prinhex4
+++ s!:prinhex4 compiled, 7 + 20 bytes
Compile: s!:prinl0
+++ s!:prinl0 compiled, 30 + 44 bytes
Compile: s!:prinl1
+++ s!:prinl1 compiled, 123 + 48 bytes
Compile: s!:prinl2
+++ s!:prinl2 compiled, 312 + 136 bytes
Compile: s!:prvector
+++ s!:prvector compiled, 73 + 52 bytes
Compile: s!:putblank
+++ s!:putblank compiled, 32 + 24 bytes
Compile: s!:putch
+++ s!:putch compiled, 64 + 56 bytes
Compile: s!:quotep
+++ s!:quotep compiled, 26 + 20 bytes
Compile: s!:r2i
+++ s!:r2i compiled, 75 + 40 bytes
Compile: s!:r2i1
+++ s!:r2i1 compiled, 173 + 96 bytes
Compile: s!:r2i2
+++ s!:r2i2 compiled, 143 + 76 bytes
Compile: s!:r2i2cond
+++ s!:r2i2cond compiled, 94 + 28 bytes
Compile: s!:r2i2if
+++ s!:r2i2if compiled, 51 + 12 bytes
Compile: s!:r2i2progn
+++ s!:r2i2progn compiled, 29 + 12 bytes
Compile: s!:r2i2when
+++ s!:r2i2when compiled, 15 + 12 bytes
Compile: s!:r2i3
+++ s!:r2i3 compiled, 311 + 72 bytes
Compile: s!:r2i_dependson
+++ s!:r2i_dependson compiled, 49 + 36 bytes
Compile: s!:r2i_list_dependson
+++ s!:r2i_list_dependson compiled, 14 + 16 bytes
Compile: s!:r2i_safestep
+++ s!:r2i_safestep compiled, 18 + 16 bytes
Compile: s!:r2iand
+++ s!:r2iand compiled, 18 + 16 bytes
Compile: s!:r2icond
+++ s!:r2icond compiled, 102 + 32 bytes
Compile: s!:r2icons
+++ s!:r2icons compiled, 82 + 48 bytes
Compile: s!:r2icons2
+++ s!:r2icons2 compiled, 79 + 44 bytes
Compile: s!:r2iif
+++ s!:r2iif compiled, 51 + 12 bytes
Compile: s!:r2ior
+++ s!:r2ior compiled, 28 + 12 bytes
Compile: s!:r2iprogn
+++ s!:r2iprogn compiled, 29 + 12 bytes
Compile: s!:r2isteps
+++ s!:r2isteps compiled, 97 + 40 bytes
Compile: s!:r2iwhen
+++ s!:r2iwhen compiled, 15 + 12 bytes
Compile: s!:record_literal
+++ s!:record_literal compiled, 48 + 36 bytes
Compile: s!:record_literal_for_jump
+++ s!:record_literal_for_jump compiled, 51 + 36 bytes
Compile: s!:remcall
+++ s!:remcall compiled, 207 + 88 bytes
Compile: s!:remlose
+++ s!:remlose compiled, 59 + 36 bytes
Compile: s!:residual_local_decs
+++ s!:residual_local_decs compiled, 46 + 20 bytes
Compile: s!:resolve_labels
+++ s!:resolve_labels compiled, 116 + 36 bytes
Compile: s!:resolve_literals
+++ s!:resolve_literals compiled, 240 + 64 bytes
Compile: s!:restore_stack
+++ s!:restore_stack compiled, 126 + 84 bytes
Compile: s!:set_label
+++ s!:set_label compiled, 50 + 40 bytes
Compile: s!:setblankcount
+++ s!:setblankcount_3x1bxp1p2084 compiled, 12 + 16 bytes
Compile: s!:setblanklist
+++ s!:setblanklist_4636m2i0ikl compiled, 12 + 16 bytes
Compile: s!:setindenting
+++ s!:setindenting_2bxyxdemv8x8 compiled, 12 + 16 bytes
Compile: s!:should_be_fluid
+++ s!:should_be_fluid compiled, 33 + 36 bytes
Compile: s!:stamp
+++ s!:stamp compiled, 39 + 32 bytes
Compile: s!:start_procedure
+++ s!:start_procedure compiled, 53 + 56 bytes
Compile: s!:subargs
+++ s!:subargs compiled, 20 + 16 bytes
Compile: s!:testatom
+++ s!:testatom compiled, 41 + 44 bytes
Compile: s!:testconsp
+++ s!:testconsp compiled, 41 + 44 bytes
Compile: s!:testeq
+++ s!:testeq compiled, 219 + 104 bytes
Compile: s!:testeq1
+++ s!:testeq1 compiled, 167 + 72 bytes
Compile: s!:testeqcar
+++ s!:testeqcar compiled, 143 + 116 bytes
Compile: s!:testequal
+++ s!:testequal compiled, 115 + 52 bytes
Compile: s!:testflagp
+++ s!:testflagp compiled, 96 + 88 bytes
Compile: s!:testneq
+++ s!:testneq compiled, 11 + 20 bytes
Compile: s!:testnot
+++ s!:testnot compiled, 10 + 16 bytes
Compile: s!:tidy_exits
+++ s!:tidy_exits compiled, 22 + 12 bytes
Compile: s!:tidy_exits_1
+++ s!:tidy_exits_1 compiled, 128 + 56 bytes
Compile: s!:tidy_flowgraph
+++ s!:tidy_flowgraph compiled, 327 + 48 bytes
Compile: s!:too_many_literals
+++ s!:too_many_literals compiled, 206 + 60 bytes
Compile: s!:top
+++ s!:top_qlcxrhmrbv1c compiled, 4 + 12 bytes
Compile: s!:trim!.c
+++ s!:trim!.c compiled, 22 + 20 bytes
Compile: s!:try_tail_1
+++ s!:try_tail_1 compiled, 199 + 92 bytes
Compile: s!:try_tailcall
+++ s!:try_tailcall compiled, 22 + 12 bytes
Compile: s!:vecof
+++ s!:vecof compiled, 33 + 12 bytes
Compile: sassoc
+++ sassoc compiled, 16 + 8 bytes
Compile: save_source_database
+++ save_source_database compiled, 46 + 32 bytes
Compile: sort
+++ sort compiled, 7 + 12 bytes
Compile: sortip
+++ sortip compiled as link to stable-sortip
Compile: stable!-sort
+++ stable!-sort compiled, 7 + 12 bytes
Compile: stable!-sortip
+++ stable!-sortip compiled, 129 + 8 bytes
Compile: superprinm
+++ superprinm compiled, 105 + 96 bytes
Compile: superprintm
+++ superprintm compiled, 12 + 20 bytes
Compile: symerr
+++ symerr compiled, 12 + 16 bytes
Compile: traceset
+++ traceset compiled, 12 + 12 bytes
Compile: traceset1
+++ traceset1 compiled, 43 + 48 bytes
Compile: unfluid
+++ unfluid compiled, 10 + 8 bytes
Compile: unglobal
+++ unglobal compiled, 10 + 8 bytes
Compile: untraceset
+++ untraceset compiled, 12 + 12 bytes
Compile: untraceset1
+++ untraceset1 compiled, 43 + 48 bytes

nil

t

nil

FASLOUT cslcompat: IN files;  or type in expressions
When all done, execute FASLEND;

Reading file "$srcdir/fastgets.lsp"
End of file "$srcdir/fastgets.lsp"

Reading file "$srcdir/compat.lsp"
+++ rplacw compiled, 9 + 8 bytes
+++ expand compiled, 14 + 8 bytes
+++ plus_4lcok6r6bp3g compiled, 11 + 20 bytes
+++ times_z6u5f3t8dwo4 compiled, 11 + 20 bytes
+++ mapcar compiled, 17 + 8 bytes
+++ maplist compiled, 16 + 8 bytes
+++ mapcan compiled, 27 + 8 bytes
+++ mapcon compiled, 26 + 8 bytes
+++ mapc compiled, 10 + 8 bytes
+++ map compiled, 9 + 8 bytes
+++ copy not compiled (C version available)
+++ sassoc compiled, 16 + 8 bytes
+++ rassoc compiled, 14 + 8 bytes
+++ lastcar compiled, 12 + 8 bytes
+++ open compiled, 35 + 48 bytes
+++ binopen compiled, 42 + 52 bytes
+++ pipe!-open compiled, 20 + 36 bytes
+++ putd compiled, 88 + 60 bytes
+++ putc compiled as link to put
+++ traceset1 compiled, 43 + 48 bytes
+++ untraceset1 compiled, 43 + 48 bytes
+++ traceset compiled, 12 + 12 bytes
+++ untraceset compiled, 12 + 12 bytes
+++ deflist compiled, 22 + 12 bytes
+++ global compiled, 18 + 8 bytes
+++ fluid not compiled (C version available)
+++ unglobal compiled, 10 + 8 bytes
+++ unfluid compiled, 10 + 8 bytes
+++ printprompt compiled, 1 + 8 bytes
+++ carcheck compiled, 12 + 12 bytes
+++ symerr compiled, 12 + 16 bytes
+++ s!:oblist compiled, 52 + 20 bytes
+++ s!:oblist1 compiled, 17 + 12 bytes
+++ oblist compiled, 8 + 28 bytes
+++ s!:make!-psetq!-vars compiled, 24 + 24 bytes
+++ s!:make!-psetq!-bindings compiled, 20 + 12 bytes
+++ s!:make!-psetq!-assignments compiled, 21 + 16 bytes
+++ psetq_vg20v16gc5na compiled, 20 + 24 bytes
+++ s!:do!-bindings compiled, 42 + 12 bytes
+++ s!:do!-endtest compiled, 5 + 8 bytes
+++ s!:do!-result compiled, 5 + 8 bytes
+++ s!:do!-updates compiled, 25 + 8 bytes
+++ s!:expand!-do compiled, 116 + 48 bytes
+++ do_tys294e5sboe compiled, 8 + 20 bytes
+++ do!*_z2tw2evoft83 compiled, 8 + 20 bytes
+++ s!:expand!-dolist compiled, 90 + 48 bytes
+++ dolist_2oc4v2mwnrv2 compiled, 8 + 12 bytes
+++ s!:expand!-dotimes compiled, 94 + 52 bytes
+++ dotimes_cm3wu6zfgv79 compiled, 8 + 12 bytes
End of file "$srcdir/compat.lsp"

Reading file "$srcdir/extras.lsp"
+++ oem!-supervisor compiled, 7 + 8 bytes
+++ break!-loop compiled, 109 + 72 bytes
+++ s!:stamp compiled, 39 + 32 bytes
+++ dated!-name compiled, 28 + 28 bytes
+++ hashtagged!-name compiled, 16 + 24 bytes
+++ sort not compiled (C version available)
+++ stable!-sort compiled, 7 + 12 bytes
+++ sortip compiled as link to stable-sortip
+++ stable!-sortip not compiled (C version available)
+++ s!:prinl0 compiled, 30 + 44 bytes
+++ s!:prinl1 compiled, 123 + 48 bytes
+++ s!:prinl2 compiled, 313 + 96 bytes
+++ printl compiled, 5 + 12 bytes
+++ printcl compiled, 5 + 12 bytes
+++ princl compiled, 4 + 16 bytes
+++ prinl compiled, 4 + 16 bytes
+++ s!:format compiled, 221 + 48 bytes
+++ format_vqx39lgqssd1 compiled, 17 + 16 bytes
+++ prettyprint compiled, 8 + 12 bytes
+++ superprintm compiled, 12 + 20 bytes
+++ superprinm compiled, 105 + 96 bytes
+++ s!:top_su2dv6yphmp9 compiled, 4 + 12 bytes
+++ s!:depth_nywe93u7asd2 compiled, 7 + 12 bytes
+++ s!:indenting_uugpn161oe9g compiled, 7 + 12 bytes
+++ s!:blankcount_di4u8tiv3pra compiled, 7 + 12 bytes
+++ s!:blanklist_3grr8hhc8kse compiled, 7 + 12 bytes
+++ s!:setindenting_wlwn13x1f3y compiled, 12 + 16 bytes
+++ s!:setblankcount_wqtabtq2ayhf compiled, 12 + 16 bytes
+++ s!:setblanklist_yx45qh074fy7 compiled, 12 + 16 bytes
+++ s!:newframe_jj3e2mkec583 compiled, 12 + 16 bytes
+++ s!:blankp_q4md8q4t32hd compiled, 10 + 16 bytes
+++ s!:prindent compiled, 326 + 148 bytes
+++ s!:explodes compiled as link to explode
+++ s!:prvector compiled, 73 + 52 bytes
+++ s!:putblank compiled, 32 + 24 bytes
+++ s!:endlist compiled, 5 + 12 bytes
+++ s!:finishpending compiled, 46 + 28 bytes
+++ s!:quotep compiled, 26 + 20 bytes
+++ s!:putch compiled, 64 + 56 bytes
+++ s!:overflow compiled, 301 + 128 bytes
+++ fetch!-url compiled, 67 + 40 bytes
End of file "$srcdir/extras.lsp"
Completed FASL files for cslcompat
+++ FASLEND: hits = 603, misses = 405

nil

FASLOUT compiler: IN files;  or type in expressions
When all done, execute FASLEND;

Reading file "$srcdir/compiler.lsp"
+++ s!:vecof compiled, 33 + 12 bytes
+++ s!:prinhex1 compiled, 9 + 20 bytes
+++ s!:prinhex2 compiled, 7 + 20 bytes
+++ s!:prinhex4 compiled, 7 + 20 bytes
+++ s!:start_procedure compiled, 53 + 56 bytes
+++ s!:set_label compiled, 50 + 40 bytes
+++ s!:outjump compiled, 81 + 52 bytes
+++ s!:outexit compiled, 46 + 36 bytes
+++ s!:outopcode0 compiled, 29 + 36 bytes
+++ s!:outopcode1 compiled, 34 + 40 bytes
+++ s!:record_literal compiled, 48 + 36 bytes
+++ s!:record_literal_for_jump compiled, 51 + 36 bytes
+++ s!:outopcode1lit compiled, 36 + 44 bytes
+++ s!:outopcode2 compiled, 38 + 40 bytes
+++ s!:outopcode2lit compiled, 42 + 44 bytes
+++ s!:outlexref compiled, 141 + 92 bytes
+++ s!:literal_order compiled, 17 + 8 bytes
+++ s!:resolve_literals compiled, 240 + 64 bytes
+++ s!:only_loadlit compiled, 18 + 16 bytes
+++ s!:too_many_literals compiled, 206 + 60 bytes
+++ s!:endprocedure compiled, 218 + 112 bytes
+++ s!:add_pending compiled, 31 + 16 bytes
+++ s!:invent_exit compiled, 36 + 16 bytes
+++ s!:destination_label compiled, 49 + 20 bytes
+++ s!:remlose compiled, 59 + 36 bytes
+++ s!:remcall compiled, 207 + 88 bytes
+++ s!:is_lose_and_exit compiled, 52 + 24 bytes
+++ s!:try_tail_1 compiled, 199 + 92 bytes
+++ s!:try_tailcall compiled, 22 + 12 bytes
+++ s!:tidy_exits_1 compiled, 128 + 56 bytes
+++ s!:tidy_exits compiled, 22 + 12 bytes
+++ s!:tidy_flowgraph compiled, 327 + 48 bytes
+++ s!:negate_jump compiled, 13 + 12 bytes
+++ s!:resolve_labels compiled, 116 + 36 bytes
+++ s!:plant_basic_block compiled, 125 + 60 bytes
+++ s!:plant_bytes compiled, 147 + 64 bytes
+++ s!:plant_exit_code compiled, 144 + 52 bytes
+++ s!:expand_jump compiled, 225 + 100 bytes
+++ s!:comval compiled, 98 + 44 bytes
+++ s!:comspecform compiled, 7 + 20 bytes
+++ s!:improve compiled, 23 + 16 bytes
+++ s!:imp_minus compiled, 53 + 28 bytes
+++ s!:imp_times compiled, 69 + 32 bytes
+++ s!:imp_itimes compiled, 69 + 32 bytes
+++ s!:imp_difference compiled, 26 + 24 bytes
+++ s!:imp_idifference compiled, 26 + 24 bytes
+++ s!:alwayseasy compiled, 2 + 12 bytes
+++ s!:easyifarg compiled, 16 + 12 bytes
+++ s!:easygetv compiled, 25 + 24 bytes
+++ s!:easyqgetv compiled, 22 + 20 bytes
+++ s!:iseasy compiled, 18 + 16 bytes
+++ s!:instate_local_decs compiled, 40 + 20 bytes
+++ s!:residual_local_decs compiled, 46 + 20 bytes
+++ s!:cancel_local_decs compiled as link to unfluid
+++ s!:find_local_decs compiled, 45 + 12 bytes
+++ s!:comlambda compiled, 245 + 100 bytes
+++ s!:loadliteral compiled, 27 + 36 bytes
+++ s!:comquote compiled, 11 + 16 bytes
+++ s!:comfunction compiled, 159 + 120 bytes
+++ s!:should_be_fluid compiled, 33 + 36 bytes
+++ s!:find_lexical compiled, 34 + 12 bytes
+++ s!:comatom compiled, 189 + 124 bytes
+++ s!:islocal compiled, 36 + 20 bytes
+++ s!:load2 compiled, 228 + 100 bytes
+++ s!:comcall compiled, 539 + 268 bytes
+++ s!:ad_name compiled, 19 + 28 bytes
+++ s!:comcarcdr3 compiled, 29 + 28 bytes
+++ s!:comcarcdr4 compiled, 24 + 16 bytes
+++ s!:comgetv compiled, 14 + 24 bytes
+++ s!:comqgetv compiled, 37 + 36 bytes
+++ s!:comget compiled, 91 + 68 bytes
+++ s!:comflagp compiled, 52 + 44 bytes
+++ s!:complus compiled, 7 + 20 bytes
+++ s!:comtimes compiled, 7 + 20 bytes
+++ s!:comiplus compiled, 7 + 20 bytes
+++ s!:comitimes compiled, 7 + 20 bytes
+++ s!:complus2 compiled, 82 + 40 bytes
+++ s!:comdifference compiled, 74 + 44 bytes
+++ s!:comiplus2 compiled, 64 + 36 bytes
+++ s!:comidifference compiled, 53 + 36 bytes
+++ s!:comtimes2 compiled, 72 + 32 bytes
+++ s!:comminus compiled, 33 + 24 bytes
+++ s!:comminusp compiled, 20 + 28 bytes
+++ s!:comlessp compiled, 25 + 28 bytes
+++ s!:comiminusp compiled, 20 + 28 bytes
+++ s!:comilessp compiled, 25 + 28 bytes
+++ s!:comprogn compiled, 40 + 20 bytes
+++ s!:comprog1 compiled, 65 + 44 bytes
+++ s!:comprog2 compiled, 31 + 24 bytes
+++ s!:outstack compiled, 136 + 68 bytes
+++ s!:outlose compiled, 136 + 68 bytes
+++ s!:comprog compiled, 333 + 132 bytes
+++ s!:comtagbody compiled, 110 + 44 bytes
+++ s!:comblock compiled, 25 + 28 bytes
+++ s!:comcatch compiled, 49 + 56 bytes
+++ s!:comthrow compiled, 33 + 40 bytes
+++ s!:comunwind!-protect compiled, 68 + 68 bytes
+++ s!:comdeclare compiled, 14 + 20 bytes
+++ s!:expand_let compiled, 56 + 12 bytes
+++ s!:comlet compiled, 11 + 20 bytes
+++ s!:expand_let!* compiled, 102 + 24 bytes
+++ s!:comlet!* compiled, 16 + 20 bytes
+++ s!:restore_stack compiled, 126 + 84 bytes
+++ s!:comgo compiled, 63 + 44 bytes
+++ s!:comreturn!-from compiled, 58 + 48 bytes
+++ s!:comreturn compiled, 9 + 16 bytes
+++ s!:jumpif compiled, 310 + 148 bytes
+++ s!:testnot compiled, 10 + 16 bytes
+++ s!:testatom compiled, 41 + 44 bytes
+++ s!:testconsp compiled, 41 + 44 bytes
+++ s!:comcond compiled, 88 + 52 bytes
+++ s!:comif compiled, 55 + 40 bytes
+++ s!:comwhen compiled, 41 + 44 bytes
+++ s!:comunless compiled, 13 + 20 bytes
+++ s!:comicase compiled, 84 + 36 bytes
+++ s!:jumpliteql compiled, 55 + 72 bytes
+++ s!:casebranch compiled, 226 + 112 bytes
+++ s!:comcase compiled, 348 + 100 bytes
+++ s!:comeval!-when compiled, 53 + 36 bytes
+++ s!:comthe compiled, 6 + 12 bytes
+++ s!:comand compiled, 30 + 32 bytes
+++ s!:comor compiled, 30 + 32 bytes
+++ s!:combool compiled, 50 + 32 bytes
+++ s!:testeq compiled, 219 + 104 bytes
+++ s!:testeq1 compiled, 167 + 72 bytes
+++ s!:testequal compiled, 115 + 52 bytes
+++ s!:testneq compiled, 11 + 20 bytes
+++ s!:testeqcar compiled, 143 + 116 bytes
+++ s!:testflagp compiled, 96 + 88 bytes
+++ s!:comsetq compiled, 221 + 136 bytes
+++ s!:comlist compiled, 74 + 36 bytes
+++ s!:comlist!* compiled, 72 + 28 bytes
+++ s!:comcons compiled, 113 + 52 bytes
+++ s!:comapply compiled, 88 + 48 bytes
+++ s!:imp_funcall compiled, 56 + 52 bytes
+++ s!:eval_to_eq_safe compiled, 48 + 24 bytes
+++ s!:eval_to_eq_unsafe compiled, 53 + 24 bytes
+++ s!:list_all_eq_safe compiled, 18 + 12 bytes
+++ s!:eval_to_list_all_eq_safe compiled, 52 + 28 bytes
+++ s!:list_some_eq_unsafe compiled, 14 + 16 bytes
+++ s!:eval_to_list_some_eq_unsafe compiled, 44 + 28 bytes
+++ s!:eval_to_car_eq_safe compiled, 21 + 24 bytes
+++ s!:eval_to_car_eq_unsafe compiled, 21 + 24 bytes
+++ s!:alist_eq_safe compiled, 24 + 16 bytes
+++ s!:eval_to_alist_eq_safe compiled, 52 + 28 bytes
+++ s!:alist_eq_unsafe compiled, 33 + 16 bytes
+++ s!:eval_to_alist_eq_unsafe compiled, 44 + 32 bytes
+++ s!:comequal compiled, 22 + 20 bytes
+++ s!:comeq compiled, 49 + 40 bytes
+++ s!:comeqcar compiled, 36 + 36 bytes
+++ s!:comsublis compiled, 17 + 24 bytes
+++ s!:comsubla compiled, 36 + 40 bytes
+++ s!:comassoc compiled, 38 + 36 bytes
+++ s!:comatsoc compiled, 49 + 48 bytes
+++ s!:commember compiled, 27 + 32 bytes
+++ s!:commemq compiled, 49 + 48 bytes
+++ s!:comdelete compiled, 27 + 32 bytes
+++ s!:comdeleq compiled, 49 + 48 bytes
+++ s!:commap compiled, 279 + 128 bytes
+++ s!:nilargs compiled, 16 + 20 bytes
+++ s!:subargs compiled, 20 + 16 bytes
+++ clear_source_database compiled, 9 + 28 bytes
+++ load_source_database compiled, 31 + 28 bytes
+++ save_source_database compiled, 46 + 32 bytes
+++ display_source_database compiled, 39 + 28 bytes
+++ s!:r2i compiled, 75 + 40 bytes
+++ s!:r2i1 compiled, 173 + 96 bytes
+++ s!:r2iand compiled, 18 + 16 bytes
+++ s!:r2ior compiled, 28 + 12 bytes
+++ s!:r2icond compiled, 102 + 32 bytes
+++ s!:r2iif compiled, 51 + 12 bytes
+++ s!:r2iwhen compiled, 15 + 12 bytes
+++ s!:r2iprogn compiled, 29 + 12 bytes
+++ s!:r2icons compiled, 82 + 48 bytes
+++ s!:r2icons2 compiled, 79 + 44 bytes
+++ s!:r2isteps compiled, 97 + 40 bytes
+++ s!:r2i_safestep compiled, 18 + 16 bytes
+++ s!:r2i_dependson compiled, 49 + 36 bytes
+++ s!:r2i_list_dependson compiled, 14 + 16 bytes
+++ s!:r2i2 compiled, 143 + 76 bytes
+++ s!:r2i2cond compiled, 94 + 28 bytes
+++ s!:r2i2if compiled, 51 + 12 bytes
+++ s!:r2i2when compiled, 15 + 12 bytes
+++ s!:r2i2progn compiled, 29 + 12 bytes
+++ s!:r2i3 compiled, 311 + 72 bytes
+++ s!:any_fluid compiled, 13 + 16 bytes
+++ s!:compile1 compiled, 916 + 244 bytes
+++ s!:compile2 compiled, 505 + 172 bytes
+++ compile!-all compiled, 53 + 44 bytes
+++ s!:fasl_supervisor compiled, 103 + 60 bytes
+++ s!:fslout0 compiled, 4 + 12 bytes
+++ s!:fslout1 compiled, 510 + 228 bytes
+++ s!:fslout2 compiled, 61 + 48 bytes
+++ faslend compiled, 361 + 204 bytes
+++ s!:file compiled, 28 + 20 bytes
+++ s!:trim!.c compiled, 22 + 20 bytes
+++ s!:dir compiled, 33 + 24 bytes
+++ faslout compiled, 100 + 112 bytes
+++ s!:c_supervisor compiled, 103 + 60 bytes
+++ s!:cout0 compiled, 4 + 12 bytes
+++ s!:cout1 compiled, 402 + 164 bytes
+++ c_end compiled, 17 + 32 bytes
+++ c_out compiled, 68 + 72 bytes
+++ s!:compile!-file!* compiled, 123 + 68 bytes
+++ compile!-file!* compiled, 10 + 16 bytes
+++ compd compiled, 30 + 36 bytes
+++ s!:compile0 compiled, 222 + 92 bytes
+++ s!:fully_macroexpand_list compiled, 24 + 12 bytes
+++ s!:fully_macroexpand compiled, 58 + 28 bytes
+++ s!:expandfunction compiled, 1 + 8 bytes
+++ s!:expandflet compiled, 31 + 16 bytes
+++ s!:expandfletvars compiled, 10 + 12 bytes
+++ s!:expandlabels compiled as link to s:expandflet
+++ s!:expandmacrolet compiled as link to s:expandflet
+++ s!:expandprog compiled, 10 + 12 bytes
+++ s!:expandtagbody compiled as link to s:fully_macroexpand_list
+++ s!:expandprogv compiled, 14 + 12 bytes
+++ s!:expandblock compiled, 10 + 12 bytes
+++ s!:expanddeclare compiled, 1 + 8 bytes
+++ s!:expandlet compiled, 31 + 12 bytes
+++ s!:expandlet!* compiled as link to s:expandlet
+++ s!:expandgo compiled, 1 + 8 bytes
+++ s!:expandreturn!-from compiled, 10 + 12 bytes
+++ s!:expandcond compiled, 24 + 12 bytes
+++ s!:expandcase compiled, 34 + 16 bytes
+++ s!:expandeval!-when compiled, 10 + 12 bytes
+++ s!:expandthe compiled, 10 + 12 bytes
+++ s!:expandmv!-call compiled, 10 + 12 bytes
+++ compile compiled, 32 + 20 bytes
+++ c!:printf_w69wci2a15ld compiled, 13 + 16 bytes
+++ c!:printf1 compiled, 149 + 92 bytes
+++ c!:safeprin compiled, 28 + 20 bytes
+++ c!:valid_fndef compiled, 14 + 20 bytes
+++ c!:valid_list compiled, 16 + 16 bytes
+++ c!:valid_expr compiled, 53 + 36 bytes
+++ c!:cspecform compiled, 7 + 20 bytes
+++ c!:valid_specform compiled, 1 + 8 bytes
+++ c!:reset_gensyms compiled, 100 + 64 bytes
+++ c!:my_gensym compiled, 40 + 28 bytes
+++ c!:newreg compiled, 7 + 16 bytes
+++ c!:startblock compiled, 5 + 16 bytes
+++ c!:outop compiled, 15 + 16 bytes
+++ c!:endblock compiled, 31 + 36 bytes
+++ c!:cval_inner compiled, 69 + 48 bytes
+++ c!:cval compiled, 20 + 28 bytes
+++ c!:clambda compiled, 196 + 72 bytes
+++ c!:locally_bound compiled, 5 + 8 bytes
+++ c!:find_literal compiled, 27 + 16 bytes
+++ c!:catom compiled, 81 + 56 bytes
+++ c!:cjumpif compiled, 65 + 48 bytes
+++ c!:ccall compiled as link to c:ccall1
+++ c!:has_calls compiled, 7 + 16 bytes
+++ c!:has_calls_1 compiled, 70 + 36 bytes
+++ c!:can_reach compiled, 23 + 24 bytes
+++ c!:any_can_reach compiled, 14 + 16 bytes
+++ c!:pareval compiled, 117 + 28 bytes
+++ c!:ccall1 compiled, 64 + 36 bytes
+++ c!:cfndef compiled, 478 + 224 bytes
+++ c!:ccompilesupervisor compiled, 84 + 56 bytes
+++ c!:inv_name compiled, 102 + 36 bytes
+++ c!:ccmpout1 compiled, 20 + 20 bytes
+++ c!:ccmpout1a compiled, 170 + 92 bytes
+++ c!:concat compiled, 18 + 16 bytes
+++ c!:ccompilestart compiled, 252 + 176 bytes
+++ c!:print!-init compiled, 72 + 64 bytes
+++ c!-end compiled, 3 + 16 bytes
+++ c!-end1 compiled, 407 + 220 bytes
+++ c!-compile compiled, 47 + 56 bytes
+++ c!:print_opcode compiled, 42 + 16 bytes
+++ c!:print_exit_condition compiled, 549 + 184 bytes
+++ c!:pmovr compiled, 8 + 16 bytes
+++ c!:pmovk compiled, 9 + 16 bytes
+++ c!:pmovk1 compiled, 30 + 32 bytes
+++ c!:preloadenv compiled, 9 + 20 bytes
+++ c!:pldrglob compiled, 9 + 16 bytes
+++ c!:pstrglob compiled, 10 + 16 bytes
+++ c!:pnilglob compiled, 7 + 16 bytes
+++ c!:pnull compiled, 8 + 16 bytes
+++ c!:pfastget compiled, 74 + 60 bytes
+++ c!:pfastflag compiled, 82 + 64 bytes
+++ c!:pcar compiled, 26 + 36 bytes
+++ c!:pcdr compiled, 26 + 36 bytes
+++ c!:pqcar compiled, 8 + 16 bytes
+++ c!:pqcdr compiled, 8 + 16 bytes
+++ c!:patom compiled, 8 + 16 bytes
+++ c!:pnumberp compiled, 8 + 16 bytes
+++ c!:pfixp compiled, 8 + 16 bytes
+++ c!:piminusp compiled, 8 + 16 bytes
+++ c!:pilessp compiled, 9 + 16 bytes
+++ c!:pigreaterp compiled, 9 + 16 bytes
+++ c!:piminus compiled, 8 + 16 bytes
+++ c!:piadd1 compiled, 8 + 16 bytes
+++ c!:pisub1 compiled, 8 + 16 bytes
+++ c!:piplus2 compiled, 9 + 16 bytes
+++ c!:pidifference compiled, 9 + 16 bytes
+++ c!:pitimes2 compiled, 9 + 16 bytes
+++ c!:pmodular_plus compiled, 20 + 28 bytes
+++ c!:pmodular_difference compiled, 20 + 28 bytes
+++ c!:pmodular_minus compiled, 20 + 28 bytes
+++ c!:passoc compiled, 9 + 16 bytes
+++ c!:patsoc compiled, 9 + 16 bytes
+++ c!:pmember compiled, 9 + 16 bytes
+++ c!:pmemq compiled, 9 + 16 bytes
+++ c!:pget compiled, 9 + 16 bytes
+++ c!:pqgetv compiled, 12 + 20 bytes
+++ c!:pqputv compiled, 13 + 20 bytes
+++ c!:peq compiled, 9 + 16 bytes
+++ c!:pequal compiled, 15 + 16 bytes
+++ c!:pfluidbind compiled, 2 + 8 bytes
+++ c!:pcall compiled, 323 + 140 bytes
+++ c!:fix_nargs compiled, 28 + 12 bytes
+++ c!:pgoto compiled, 40 + 36 bytes
+++ c!:pifnull compiled, 6 + 16 bytes
+++ c!:pifatom compiled, 6 + 16 bytes
+++ c!:pifsymbol compiled, 6 + 16 bytes
+++ c!:pifnumber compiled, 6 + 16 bytes
+++ c!:pifizerop compiled, 6 + 16 bytes
+++ c!:pifeq compiled, 8 + 16 bytes
+++ c!:pifequal compiled, 14 + 16 bytes
+++ c!:pifilessp compiled, 8 + 16 bytes
+++ c!:pifigreaterp compiled, 8 + 16 bytes
+++ c!:display_flowgraph compiled, 97 + 64 bytes
+++ c!:branch_chain compiled, 143 + 44 bytes
+++ c!:one_operand compiled, 16 + 28 bytes
+++ c!:two_operands compiled, 21 + 32 bytes
+++ c!:live_variable_analysis compiled, 384 + 148 bytes
+++ c!:insert1 compiled, 8 + 8 bytes
+++ c!:clash compiled, 37 + 20 bytes
+++ c!:build_clash_matrix compiled, 219 + 88 bytes
+++ c!:allocate_registers compiled, 129 + 28 bytes
+++ c!:remove_nops compiled, 179 + 60 bytes
+++ c!:find_error_label compiled, 22 + 16 bytes
+++ c!:assign compiled, 28 + 24 bytes
+++ c!:insert_tailcall compiled, 171 + 72 bytes
+++ c!:does_return compiled, 67 + 32 bytes
+++ c!:pushpop compiled, 73 + 44 bytes
+++ c!:optimise_flowgraph compiled, 554 + 272 bytes
+++ c!:print_error_return compiled, 197 + 96 bytes
+++ c!:cand compiled, 46 + 24 bytes
+++ c!:ccatch compiled, 4 + 20 bytes
+++ c!:ccompile_let compiled, 4 + 20 bytes
+++ c!:ccond compiled, 105 + 56 bytes
+++ c!:valid_cond compiled, 13 + 16 bytes
+++ c!:cdeclare compiled, 4 + 20 bytes
+++ c!:cde compiled, 4 + 20 bytes
+++ c!:cdefun compiled, 4 + 20 bytes
+++ c!:ceval_when compiled, 4 + 20 bytes
+++ c!:cflet compiled, 4 + 20 bytes
+++ c!:cfunction compiled, 46 + 52 bytes
+++ c!:valid_function compiled, 33 + 24 bytes
+++ c!:cgo compiled, 32 + 32 bytes
+++ c!:cif compiled, 78 + 44 bytes
+++ c!:clabels compiled, 4 + 20 bytes
+++ c!:expand!-let compiled, 67 + 20 bytes
+++ c!:clet compiled, 8 + 16 bytes
+++ c!:valid_let compiled, 12 + 20 bytes
+++ c!:expand!-let!* compiled, 43 + 24 bytes
+++ c!:clet!* compiled, 8 + 16 bytes
+++ c!:clist compiled, 98 + 44 bytes
+++ c!:clist!* compiled, 30 + 16 bytes
+++ c!:ccons compiled, 89 + 48 bytes
+++ c!:cget compiled, 53 + 44 bytes
+++ c!:cflag compiled, 53 + 44 bytes
+++ c!:cgetv compiled, 14 + 24 bytes
+++ c!:cputv compiled, 14 + 24 bytes
+++ c!:cqputv compiled, 19 + 20 bytes
+++ c!:cmacrolet compiled, 4 + 20 bytes
+++ c!:cmultiple_value_call compiled, 4 + 20 bytes
+++ c!:cmultiple_value_prog1 compiled, 4 + 20 bytes
+++ c!:cor compiled, 63 + 44 bytes
+++ c!:cprog compiled, 316 + 108 bytes
+++ c!:valid_prog compiled, 3 + 12 bytes
+++ c!:cprog!* compiled, 4 + 20 bytes
+++ c!:cprog1 compiled, 31 + 32 bytes
+++ c!:cprog2 compiled, 39 + 32 bytes
+++ c!:cprogn compiled, 25 + 16 bytes
+++ c!:cprogv compiled, 4 + 20 bytes
+++ c!:cquote compiled, 39 + 36 bytes
+++ c!:valid_quote compiled, 2 + 12 bytes
+++ c!:creturn compiled, 34 + 44 bytes
+++ c!:csetq compiled, 63 + 56 bytes
+++ c!:cprivate_tagbody compiled, 47 + 28 bytes
+++ c!:cthe compiled, 5 + 12 bytes
+++ c!:cthrow compiled, 4 + 20 bytes
+++ c!:cunless compiled, 65 + 52 bytes
+++ c!:cunwind_protect compiled, 4 + 20 bytes
+++ c!:cwhen compiled, 65 + 52 bytes
+++ c!:expand_map compiled, 242 + 120 bytes
+++ c!:expand_carcdr compiled, 37 + 20 bytes
+++ c!:builtin_one compiled, 17 + 20 bytes
+++ c!:builtin_two compiled, 25 + 20 bytes
+++ c!:narg compiled, 9 + 20 bytes
+++ c!:cplus2 compiled, 69 + 40 bytes
+++ c!:ciplus2 compiled, 66 + 40 bytes
+++ c!:cdifference compiled, 63 + 44 bytes
+++ c!:cidifference compiled, 60 + 44 bytes
+++ c!:ctimes2 compiled, 71 + 36 bytes
+++ c!:citimes2 compiled, 68 + 36 bytes
+++ c!:cminus compiled, 29 + 24 bytes
+++ c!:ceq compiled, 45 + 36 bytes
+++ c!:cequal compiled, 56 + 44 bytes
+++ c!:is_fixnum compiled, 17 + 16 bytes
+++ c!:certainlyatom compiled, 30 + 20 bytes
+++ c!:atomlist1 compiled, 18 + 12 bytes
+++ c!:atomlist compiled, 52 + 28 bytes
+++ c!:atomcar compiled, 21 + 24 bytes
+++ c!:atomkeys1 compiled, 24 + 20 bytes
+++ c!:atomkeys compiled, 52 + 28 bytes
+++ c!:comsublis compiled, 10 + 16 bytes
+++ c!:comassoc compiled, 15 + 20 bytes
+++ c!:commember compiled, 15 + 20 bytes
+++ c!:comdelete compiled, 15 + 20 bytes
+++ c!:ctestif compiled, 33 + 20 bytes
+++ c!:ctestnull compiled, 9 + 12 bytes
+++ c!:ctestatom compiled, 15 + 20 bytes
+++ c!:ctestconsp compiled, 15 + 20 bytes
+++ c!:ctestsymbol compiled, 15 + 20 bytes
+++ c!:ctestnumberp compiled, 15 + 20 bytes
+++ c!:ctestizerop compiled, 15 + 20 bytes
+++ c!:ctesteq compiled, 44 + 24 bytes
+++ c!:ctesteqcar compiled, 48 + 40 bytes
+++ c!:small_number compiled, 17 + 16 bytes
+++ c!:eqvalid compiled, 26 + 28 bytes
+++ c!:ctestequal compiled, 59 + 36 bytes
+++ c!:ctestilessp compiled, 19 + 20 bytes
+++ c!:ctestigreaterp compiled, 19 + 20 bytes
+++ c!:ctestand compiled, 34 + 28 bytes
+++ c!:ctestor compiled, 34 + 28 bytes
End of file "$srcdir/compiler.lsp"
Completed FASL files for compiler
+++ FASLEND: hits = 5767, misses = 2693

nil

t
+++ concat compiled, 21 + 12 bytes

concat

nil

cslprolo

cslrend

t

nil

nil

nil

nil

nil

nil

(nil !*semicol!*)

(nil !*lpar!*)

(nil !*rpar!*)

(nil !*comma!*)

(nil cons)

(((!= nil setq)) !*colon!*)

1

2

3

nil

nil

blockstat

ifstat

procstat
+++ begin2 compiled, 18 + 36 bytes

begin2

+++ form redefined
+++ form compiled, 1 + 8 bytes

form

+++ xread redefined
+++ xread compiled, 4 + 16 bytes

xread

+++ xread1 redefined
+++ xread1 compiled, 174 + 56 bytes

xread1

+++ eqcar not defined because of LOSE flag

nil
+++ mksetq compiled, 5 + 12 bytes

mksetq

+++ mkvar redefined
+++ mkvar compiled, 1 + 8 bytes

mkvar
+++ rread compiled, 13 + 28 bytes

rread
+++ rrdls compiled, 35 + 32 bytes

rrdls
+++ token compiled, 185 + 88 bytes

token

! 

+++ delcp redefined
+++ delcp compiled, 10 + 16 bytes

delcp

+++ mkstrng redefined
+++ mkstrng compiled, 1 + 8 bytes

mkstrng

+++ seprp not defined because of LOSE flag

nil

+++ scan redefined
+++ scan compiled, 99 + 64 bytes

scan
+++ ifstat compiled, 41 + 40 bytes

ifstat
+++ procstat compiled, 58 + 56 bytes

procstat
+++ blockstat compiled, 54 + 56 bytes

blockstat
+++ mkprog compiled, 5 + 12 bytes

mkprog
+++ gostat compiled, 9 + 16 bytes

gostat

gostat

+++ rlis redefined
+++ rlis compiled, 13 + 24 bytes

rlis
+++ endstat compiled, 7 + 16 bytes

endstat
(/usr/local/etc/reduce/csl/cslbase/../..)(#F[synonym-stream nil *terminal-io*
00000000 004b4a80 004b5870 00000050 00000000 004c0100 004c16d0 00040000])(nil)(
nil)
+++ mkfil compiled, 16 + 24 bytes
(mkfil)
+++ string!-downcase compiled, 37 + 20 bytes
(string-downcase)
+++ red!-char!-downcase redefined
+++ charassoc!* declared fluid
+++ red!-char!-downcase compiled, 11 + 12 bytes
(red-char-downcase)(((a . a) (b . b) (c . c) (d . d) (e . e) (f . f) (g . g) (h
. h) (i . i) (j . j) (k . k) (l . l) (m . m) (n . n) (o . o) (p . p) (q . q) (r
. r) (s . s) (t . t) (u . u) (v . v) (w . w) (x . x) (y . y) (z . z)))
+++ concat redefined
+++ concat compiled, 21 + 12 bytes
(concat)
+++ module2!-to!-file compiled, 16 + 28 bytes
(module2-to-file)
+++ inmodule compiled, 30 + 44 bytes
(inmodule)
+++ load!-package!-sources compiled, 30 + 24 bytes
(load-package-sources)(nil)
nil

nil
+++ create!-package compiled, 16 + 28 bytes
create-package
+++ evload redefined
+++ evload compiled, 10 + 8 bytes
evloadnil
+++ copyd compiled, 50 + 48 bytes
copydnilniltnil
nil
nilrlispnil15-Sep-2008REDUCE((t (load-package (quote rlisp88)) (rlisp88_on)))nil
nilnilnilsymbolicnilnilnil
+++ exports compiled, 5 + 16 bytes
exports
+++ imports compiled, 5 + 16 bytes
imports
+++ module redefined
+++ module compiled, 7 + 20 bytes
module
+++ endmodule compiled, 18 + 32 bytes
endmodule(exports imports module)endstatnilnilmodulerlisformload
+++ formload compiled, 34 + 40 bytes
formload
+++ loaded!-modules!* declared fluid
+++ load!-package compiled, 136 + 72 bytes
load-packagenilnil
+++ load_package compiled, 12 + 12 bytes
load_package
+++ packages_to_load compiled, 6 + 16 bytes
packages_to_loadrlisrlisnil
+++ patchstat compiled, 144 + 72 bytes
patchstat
+++ name!-for!-patched!-version compiled, 10 + 24 bytes
name-for-patched-version
+++ instate!-patches compiled, 24 + 32 bytes
instate-patches
+++ install!-patches compiled, 20 + 20 bytes
install-patches
+++ patches!-load!-check compiled, 14 + 24 bytes
patches-load-checkpatchstat
+++ formpatch compiled, 4 + 12 bytes
formpatchformpatchnilnilnilnil(where *comma* setq)(or and member memq equal neq
eq geq greaterp leq lessp freeof plus difference times quotient expt cons)(plus
difference minus times quotient recip)nilnil(minus recip)
+++ mkprec redefined
+++ mkprec compiled, 61 + 40 bytes
mkprecnil
+++ newtok compiled, 78 + 60 bytes
newtok
+++ newtok1 compiled, 32 + 28 bytes
newtok1
+++ newtok2 compiled, 35 + 16 bytes
newtok2
+++ consescc compiled, 18 + 16 bytes
consescc
+++ lstchr compiled, 17 + 8 bytes
lstchrnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnil**nil
nilnilnilnilnilnil
+++ aconc redefined
+++ aconc compiled, 6 + 8 bytes
aconc
+++ arrayp redefined
+++ arrayp compiled, 6 + 16 bytes
arraypnilnilnil
+++ errorset!* redefined
+++ errorset!* compiled, 7 + 12 bytes
errorset*
+++ errorset2 compiled, 10 + 12 bytes
errorset2nil
+++ idlistp redefined
+++ idlistp compiled, 20 + 12 bytes
idlistp
+++ listp redefined
+++ listp compiled, 16 + 8 bytes
listp
+++ mkprog redefined
+++ mkprog compiled, 5 + 12 bytes
mkprognil
+++ mksetq redefined
+++ mksetq compiled, 22 + 24 bytes
mksetq
+++ pairvars compiled, 40 + 32 bytes
pairvars
+++ prin2t compiled, 5 + 12 bytes
prin2tnil
+++ putc redefined
+++ putc compiled, 19 + 24 bytes
putcnilnil
+++ subsetp compiled, 16 + 8 bytes
subsetp
+++ union redefined
+++ union compiled, 22 + 8 bytes
union
+++ intersection redefined
+++ intersection compiled, 30 + 12 bytes
intersectionnilnilnil
+++ setdiff redefined
+++ setdiff compiled, 15 + 8 bytes
setdiff
+++ aconc!* redefined
+++ aconc!* compiled, 6 + 8 bytes
aconc*
+++ nconc!* compiled as link to nconc
nconc*
+++ reversip!* compiled as link to reversip
reversip*
+++ rplaca!* compiled as link to rplaca
rplaca*
+++ rplacd!* compiled as link to rplacd
rplacd*
+++ lispapply redefined
+++ lispapply compiled, 14 + 28 bytes
lispapply
+++ lispeval compiled as link to eval
lispevalnilnilnil
+++ gettype compiled, 68 + 68 bytes
gettypenilnilnilnil((abs 1) (add1 1) (append 2) (apply 2) (assoc 2) (atom 1) (
car 1) (cdr 1) (caar 1) (cadr 1) (cdar 1) (cddr 1) (caaar 1) (caadr 1) (cadar 1)
(caddr 1) (cdaar 1) (cdadr 1) (cddar 1) (cdddr 1) (caaaar 1) (caaadr 1) (caadar
1) (caaddr 1) (cadaar 1) (cadadr 1) (caddar 1) (cadddr 1) (cdaaar 1) (cdaadr 1)
(cdadar 1) (cdaddr 1) (cddaar 1) (cddadr 1) (cdddar 1) (cddddr 1) (close 1) (
codep 1) (compress 1) (cons 2) (constantp 1) (de 3) (deflist 2) (delete 2) (
difference 2) (digit 1) (divide 2) (dm 3) (eject 0) (eq 2) (eqn 2) (equal 2) (
error 2) (errorset 3) (eval 1) (evlis 1) (expand 2) (explode 1) (expt 2) (fix 1)
(fixp 1) (flag 2) (flagp 2) (float 1) (floatp 1) (fluid 1) (fluidp 1) (function
1) (gensym 0) (get 2) (getd 1) (getv 2) (global 1) (globalp 1) (go 1) (greaterp
2) (idp 1) (intern 1) (length 1) (lessp 2) (linelength 1) (liter 1) (lposn 0) (
map 2) (mapc 2) (mapcan 2) (mapcar 2) (mapcon 2) (maplist 2) (max2 2) (member 2)
(memq 2) (minus 1) (minusp 1) (min2 2) (mkvect 1) (nconc 2) (not 1) (null 1) (
numberp 1) (onep 1) (open 2) (pagelength 1) (pair 2) (pairp 1) (plus2 2) (posn 0
) (print 1) (prin1 1) (prin2 1) (prog2 2) (put 3) (putd 3) (putv 3) (quote 1) (
quotient 2) (rds 1) (read 0) (readch 0) (remainder 2) (remd 1) (remflag 2) (
remob 1) (remprop 2) (return 1) (reverse 1) (rplaca 2) (rplacd 2) (sassoc 3) (
set 2) (setq 2) (stringp 1) (sublis 2) (subst 3) (sub1 1) (terpri 0) (times2 2)
(unfluid 1) (upbv 1) (vectorp 1) (wrs 1) (zerop 1))(abs add1 append apply assoc
atom car cdr caar cadr cdar cddr caaar caadr cadar caddr cdaar cdadr cddar cdddr
caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr cdaaar cdaadr cdadar
cdaddr cddaar cddadr cdddar cddddr close codep compress cons constantp de
deflist delete difference digit divide dm eject eq eqn equal error errorset eval
evlis expand explode expt fix fixp flag flagp float floatp fluid fluidp function
gensym get getd getv global globalp go greaterp idp intern length lessp
linelength liter lposn map mapc mapcan mapcar mapcon maplist max2 member memq
minus minusp min2 mkvect nconc not null numberp onep open pagelength pair pairp
plus2 posn print prin1 prin2 prog2 put putd putv quote quotient rds read readch
remainder remd remflag remob remprop return reverse rplaca rplacd sassoc set
setq stringp sublis subst sub1 terpri times2 unfluid upbv vectorp wrs zerop)nil
nilnilnilnilt0(fname* outl*)0
+++ errorp redefined
+++ errorp compiled, 8 + 8 bytes
errorpnil
+++ setcloc!* redefined
+++ setcloc!* compiled, 14 + 24 bytes
setcloc*
+++ commdemo compiled, 101 + 64 bytes
commdemo
+++ command1 redefined
+++ command1 compiled, 8 + 28 bytes
command1
+++ command redefined
+++ command compiled, 205 + 164 bytes
command
+++ update_prompt compiled, 32 + 44 bytes
update_prompt
+++ begin1 compiled, 308 + 268 bytes
begin1
+++ begin11 compiled, 389 + 264 bytes
begin11
+++ getsetvarlis compiled, 63 + 32 bytes
getsetvarlis
+++ getsetvars redefined
+++ getsetvars compiled, 39 + 28 bytes
getsetvarsnil
+++ close!-input!-files compiled, 20 + 16 bytes
close-input-files
+++ close!-output!-files compiled, 19 + 16 bytes
close-output-files
+++ add2buflis compiled, 28 + 20 bytes
add2buflis
+++ add2inputbuf redefined
+++ add2inputbuf compiled, 15 + 24 bytes
add2inputbuf
+++ add2resultbuf redefined
+++ add2resultbuf compiled, 38 + 44 bytes
add2resultbuf
+++ condterpri redefined
+++ condterpri compiled, 34 + 36 bytes
condterpri
+++ eofcheck redefined
+++ eofcheck compiled, 15 + 28 bytes
eofcheck
+++ resetparser compiled, 6 + 20 bytes
resetparser
+++ terminalp redefined
+++ terminalp compiled, 8 + 16 bytes
terminalp
+++ dfprint compiled, 27 + 28 bytes
dfprintnil
+++ showtime compiled, 58 + 56 bytes
showtime
+++ sinitl redefined
+++ sinitl compiled, 9 + 12 bytes
sinitl
+++ !*rlisp88 declared fluid
+++ read!-init!-file compiled, 172 + 124 bytes
read-init-filenilnilnilnilnilnilt 1
+++ prin2x redefined
+++ prin2x compiled, 5 + 12 bytes
prin2x
+++ mkstrng redefined
+++ mkstrng compiled, 1 + 8 bytes
mkstrng
+++ readch1 redefined
+++ readch1 compiled, 34 + 28 bytes
readch1
+++ tokquote compiled, 12 + 36 bytes
tokquotetokquote
+++ token!-number redefined
+++ token!-number compiled, 195 + 116 bytes
token-number(0 1 2 3 4 5 6 7 8 9 a b c d e f a b c d e f)
+++ token1 redefined
+++ token1 compiled, 287 + 144 bytes
token1
+++ tokbquote compiled, 13 + 36 bytes
tokbquotetokbquote
+++ token redefined
+++ token compiled as link to token1
token
+++ filenderr compiled, 23 + 36 bytes
filenderr
+++ ptoken compiled, 25 + 32 bytes
ptoken
+++ rread1 compiled, 85 + 80 bytes
rread1
+++ rrdls redefined
+++ rrdls compiled, 49 + 48 bytes
rrdls
+++ rread redefined
+++ rread compiled, 4 + 20 bytes
rread
+++ delcp redefined
+++ delcp compiled, 4 + 12 bytes
delcpnil
+++ toknump redefined
+++ toknump compiled, 14 + 16 bytes
toknump
+++ addcomment redefined
+++ addcomment compiled, 3 + 12 bytes
addcomment
+++ scan redefined
+++ scan compiled, 404 + 192 bytes
scan
+++ read!-comment1 redefined
+++ read!-comment1 compiled, 28 + 40 bytes
read-comment1nilnilnilnilnilnil
+++ chknewnam redefined
+++ chknewnam compiled, 18 + 16 bytes
chknewnam
+++ mkvar redefined
+++ mkvar compiled, 1 + 8 bytes
mkvar
+++ remcomma redefined
+++ remcomma compiled, 9 + 12 bytes
remcomma
+++ eolcheck redefined
+++ eolcheck compiled, 19 + 36 bytes
eolcheck
+++ xcomment redefined
+++ xcomment compiled, 11 + 16 bytes
xcomment
+++ xread1 redefined
+++ xread1 compiled, 684 + 292 bytes
xread1nilnilnil
+++ xread redefined
+++ xread compiled, 11 + 28 bytes
xread
+++ expread compiled, 3 + 16 bytes
expreadnilnilnilnilnilnil
+++ lpri compiled, 11 + 16 bytes
lpri
+++ lpriw compiled, 43 + 28 bytes
lpriw
+++ lprim compiled, 8 + 20 bytes
lprim
+++ lprie compiled, 21 + 32 bytes
lprie
+++ printty compiled, 23 + 20 bytes
printty
+++ rerror compiled, 5 + 16 bytes
rerror
+++ rederr compiled, 7 + 16 bytes
rederr
+++ symerr redefined
+++ symerr compiled, 88 + 76 bytes
symerr
+++ typerr compiled, 11 + 24 bytes
typerrnilnilnilnilnil
+++ comm1 compiled, 33 + 40 bytes
comm1
+++ ifstat redefined
+++ ifstat compiled, 47 + 52 bytes
ifstatifstatnil
+++ functionstat compiled, 32 + 44 bytes
functionstatfunctionstat
+++ lamstat compiled, 18 + 24 bytes
lamstatlamstat
+++ readprogn compiled, 16 + 36 bytes
readprognreadprognnilnil
+++ endstat redefined
+++ endstat compiled, 8 + 20 bytes
endstatendstatendstatendstatendstatnilendstatnilnilnilnilnilnil
+++ gostat redefined
+++ gostat compiled, 14 + 24 bytes
gostatgostatgo
+++ decl compiled, 78 + 72 bytes
decl0
+++ decstat compiled, 31 + 56 bytes
decstatnil
+++ blocktyperr compiled, 9 + 24 bytes
blocktyperr
+++ mapovercar compiled, 14 + 12 bytes
mapovercar
+++ blockstat redefined
+++ blockstat compiled, 84 + 100 bytes
blockstat
+++ mkblock compiled, 5 + 12 bytes
mkblock
+++ rblock_pn78o1tlo0tc compiled, 9 + 16 bytes
rblock
+++ symbvarlst compiled, 51 + 44 bytes
symbvarlst
+++ formblock compiled, 29 + 24 bytes
formblock
+++ initprogvars compiled, 38 + 20 bytes
initprogvars
+++ formprog compiled, 20 + 20 bytes
formprog
+++ formprog1 compiled, 73 + 44 bytes
formprog1formblockformprogblockstat
+++ retstat compiled, 22 + 40 bytes
retstatretstatnilnilnilnilnilaevalnil
+++ formcond compiled, 8 + 16 bytes
formcond
+++ formcond1 compiled, 29 + 20 bytes
formcond1formcond
+++ formlamb compiled, 20 + 20 bytes
formlambformlamb
+++ formprogn compiled, 8 + 16 bytes
formprognformprogn
+++ expdrmacro redefined
+++ expdrmacro compiled, 20 + 28 bytes
expdrmacro
+++ getrmacro redefined
+++ getrmacro compiled, 24 + 24 bytes
getrmacro
+++ applmacro compiled, 6 + 8 bytes
applmacroapplmacronil
+++ set!-global!-mode compiled, 13 + 24 bytes
set-global-mode
+++ form1 redefined
+++ form1 compiled, 294 + 188 bytes
form1
+++ form2 compiled, 18 + 20 bytes
form2formlis
+++ argnochk redefined
+++ argnochk compiled, 58 + 56 bytes
argnochk
+++ argsofopr redefined
+++ argsofopr compiled, 4 + 12 bytes
argsofopr
+++ intexprnp redefined
+++ intexprnp compiled, 35 + 24 bytes
intexprnp
+++ intexprlisp redefined
+++ intexprlisp compiled, 15 + 12 bytes
intexprlispnil
+++ formlis redefined
+++ formlis compiled, 18 + 16 bytes
formlis
+++ formclis compiled, 18 + 16 bytes
formclis
+++ form redefined
+++ form compiled, 49 + 52 bytes
form
+++ macrochk redefined
+++ macrochk compiled, 30 + 28 bytes
macrochksymbid
+++ symbid compiled, 55 + 60 bytes
symbidalgid
+++ algid redefined
+++ algid compiled, 12 + 16 bytes
algidintid
+++ intid compiled, 42 + 40 bytes
intid
+++ convertmode redefined
+++ convertmode compiled, 13 + 16 bytes
convertmode
+++ convertmode1 redefined
+++ convertmode1 compiled, 58 + 32 bytes
convertmode1**a2s**s2a
+++ !*!*a2s redefined
+++ !*!*a2s compiled, 37 + 48 bytes
**a2s
+++ !*!*s2a compiled, 1 + 8 bytes
**s2a
+++ formc redefined
+++ formc compiled, 31 + 44 bytes
formc
+++ intargfn redefined
+++ intargfn compiled, 35 + 32 bytes
intargfn**a2i
+++ !*!*a2i redefined
+++ !*!*a2i compiled, 9 + 16 bytes
**a2i
+++ ieval compiled, 4 + 16 bytes
ievalnilnil**s2i
+++ !*!*s2i compiled, 9 + 12 bytes
**s2i
+++ !*s2i compiled, 9 + 16 bytes
*s2iidentity
+++ identity redefined
+++ identity compiled, 1 + 8 bytes
identity
+++ formbool compiled, 140 + 76 bytes
formbool
+++ formboollis compiled, 33 + 20 bytes
formboollis
+++ bool!-eval compiled as link to lispeval
bool-evalnilnilnil
+++ boolvalue!* compiled, 9 + 12 bytes
boolvalue*
+++ formc!* compiled, 12 + 24 bytes
formc*
+++ revalx redefined
+++ revalx compiled, 12 + 16 bytes
revalx
+++ formrerror compiled, 65 + 44 bytes
formrerror(rerror)
+++ formrederr compiled, 10 + 16 bytes
formrederrformrederr
+++ formreturn compiled, 10 + 16 bytes
formreturnformreturn
+++ rsverr compiled, 9 + 24 bytes
rsverr
+++ mksetshare compiled, 9 + 20 bytes
mksetshare
+++ formsetq compiled, 248 + 152 bytes
formsetqformsetq
+++ setcar compiled, 4 + 8 bytes
setcar
+++ setcdr redefined
+++ setcdr compiled, 4 + 8 bytes
setcdr(lambda (u v) (setcar u v))(lambda (u v) (setcdr u v))(lambda (u v) (
setcar (car u) v))(lambda (u v) (setcar (cdr u) v))(lambda (u v) (setcdr (car u)
v))(lambda (u v) (setcdr (cdr u) v))(lambda (u v) (setcar (caar u) v))(lambda (u
v) (setcar (cadr u) v))(lambda (u v) (setcar (cdar u) v))(lambda (u v) (setcar (
cddr u) v))(lambda (u v) (setcdr (caar u) v))(lambda (u v) (setcdr (cadr u) v))(
lambda (u v) (setcdr (cdar u) v))(lambda (u v) (setcdr (cddr u) v))(lambda (u v)
(setcar (caaar u) v))(lambda (u v) (setcar (caadr u) v))(lambda (u v) (setcar (
cadar u) v))(lambda (u v) (setcar (caddr u) v))(lambda (u v) (setcar (cdaar u) v
))(lambda (u v) (setcar (cdadr u) v))(lambda (u v) (setcar (cddar u) v))(lambda
(u v) (setcar (cdddr u) v))(lambda (u v) (setcdr (caaar u) v))(lambda (u v) (
setcdr (caadr u) v))(lambda (u v) (setcdr (cadar u) v))(lambda (u v) (setcdr (
caddr u) v))(lambda (u v) (setcdr (cdaar u) v))(lambda (u v) (setcdr (cdadr u) v
))(lambda (u v) (setcdr (cddar u) v))(lambda (u v) (setcdr (cdddr u) v))(lambda
(l i x) (setcar (pnth l i) x))(lambda (v i x) (putv v i x))(lambda (v i x) (
iputv v i x))
+++ formfunc compiled, 37 + 44 bytes
formfuncformfunc
+++ rlis redefined
+++ rlis compiled, 30 + 40 bytes
rlis
+++ flagop compiled, 8 + 12 bytes
flagop
+++ rlistat compiled, 13 + 20 bytes
rlistatnil
+++ formrlis compiled, 69 + 56 bytes
formrlis
+++ mkarg compiled, 43 + 24 bytes
mkargdnform
+++ dnform compiled, 50 + 44 bytes
dnformintform
+++ intform compiled, 19 + 20 bytes
intformnilnilnilnilnilnilt(expr fexpr macro)
+++ mkprogn compiled, 15 + 12 bytes
mkprogn
+++ formproc compiled, 302 + 172 bytes
formprocformproc
+++ pairxvars compiled, 73 + 36 bytes
pairxvars
+++ procstat1 compiled, 220 + 132 bytes
procstat1
+++ procstat redefined
+++ procstat compiled, 3 + 12 bytes
procstat(procedure expr fexpr emb macro smacro)procstat(lisp)nilnilnilnilnil(do
collect conc product sum)nil(product sum)(product sum)
+++ forstat redefined
+++ forstat compiled, 21 + 40 bytes
forstatforstat
+++ forloop compiled, 176 + 88 bytes
forloop
+++ formfor compiled, 255 + 100 bytes
formforformfor
+++ algmodep redefined
+++ algmodep compiled, 12 + 16 bytes
algmodep
+++ aminusp!: compiled, 33 + 48 bytes
aminusp:
+++ aminusp!:1 compiled, 70 + 44 bytes
aminusp:1
+++ foreachstat compiled, 75 + 56 bytes
foreachstatforeachstat
+++ formforeach compiled, 95 + 52 bytes
formforeachformforeach
+++ forformat compiled, 214 + 144 bytes
forformatnil
+++ unreval redefined
+++ unreval compiled, 11 + 12 bytes
unrevalnilconcnilnilnilnilnil
+++ repeatstat compiled, 42 + 48 bytes
repeatstat
+++ repeat_tf4oldpkog0h compiled, 30 + 28 bytes
repeatrepeatstatnil
+++ formrepeat compiled, 27 + 32 bytes
formrepeatformrepeat
+++ whilstat compiled, 42 + 48 bytes
whilstat
+++ while_h3uq52sfkd98 compiled, 36 + 32 bytes
whilewhilstatnil
+++ formwhile compiled, 27 + 32 bytes
formwhileformwhilenilnilnilnil
+++ define compiled, 36 + 32 bytes
define(define)nil
+++ formwrite compiled, 95 + 56 bytes
formwriterlisformwritenilrlisformechopr
+++ formechopr compiled, 33 + 40 bytes
formechoprnilnilnil
+++ applsmacro compiled, 250 + 64 bytes
applsmacro
+++ no!-side!-effectp compiled, 33 + 40 bytes
no-side-effectp
+++ no!-side!-effect!-listp compiled, 13 + 12 bytes
no-side-effect-listpnil
+++ one!-entryp compiled, 23 + 12 bytes
one-entryp
+++ one!-entry!-listp compiled, 15 + 12 bytes
one-entry-listp
+++ subla!-q compiled, 30 + 12 bytes
subla-qapplsmacronilnilnilnilnil
+++ file!-transform compiled, 35 + 32 bytes
file-transform
+++ infile compiled, 7 + 20 bytes
infile
+++ in compiled as link to in_non_empty_list
in
+++ in_non_empty_list compiled, 60 + 56 bytes
in_non_empty_list
+++ mkfil!* compiled, 29 + 28 bytes
mkfil*
+++ in_list1 compiled, 92 + 80 bytes
in_list1
+++ out compiled as link to out_non_empty_list
out
+++ out_non_empty_list compiled, 88 + 64 bytes
out_non_empty_list
+++ shut compiled as link to shut_non_empty_list
shut
+++ shut_non_empty_list compiled, 120 + 80 bytes
shut_non_empty_list(in out shut)nilnilnilnilnilnilnil
+++ forminfix compiled, 68 + 28 bytes
forminfixforminfix
+++ infix compiled, 27 + 16 bytes
infix
+++ precedence compiled, 48 + 40 bytes
precedence(infix precedence)nilnilnilnilnil
+++ on compiled, 15 + 12 bytes
on
+++ off compiled, 15 + 12 bytes
off
+++ off1 redefined
+++ off1 compiled, 4 + 12 bytes
off1
+++ on1 redefined
+++ on1 compiled, 4 + 16 bytes
on1
+++ onoff compiled, 80 + 64 bytes
onoff
+++ switch compiled, 64 + 40 bytes
switch(switch)nilrlisrlisnilnil((t (flag (list $eol$) (quote delchar))) (nil (
remflag (list $eol$) (quote delchar))))nil((t (load-package (quote reduce4)) (
%reduce4)))nilnilnil
+++ formwhere compiled, 87 + 52 bytes
formwhereformwherenilnilnilnilnillistquotelist
+++ quotelist redefined
+++ quotelist compiled, 2 + 12 bytes
quotelist
+++ xreadlist compiled, 55 + 56 bytes
xreadlistxreadlistnilnilnilnillistevalsimpiden
+++ getrlist compiled, 19 + 28 bytes
getrlist
+++ listeval compiled, 123 + 72 bytes
listeval
+++ makelist redefined
+++ makelist compiled, 4 + 12 bytes
makelistlengthcdr
+++ lengthcdr compiled, 3 + 8 bytes
lengthcdrlistpri
+++ listpri compiled, 66 + 76 bytes
listpri
+++ treesizep compiled, 5 + 16 bytes
treesizep
+++ treesizep1 redefined
+++ treesizep1 compiled, 19 + 12 bytes
treesizep1
+++ listeval0 compiled, 51 + 48 bytes
listeval0rlistp
+++ rfirst compiled, 30 + 40 bytes
rfirstrfirst
+++ parterr compiled, 10 + 24 bytes
parterr
+++ rsecond compiled, 34 + 40 bytes
rsecondrsecond
+++ rthird compiled, 39 + 40 bytes
rthirdrthird(first second third part)
+++ rrest compiled, 71 + 44 bytes
rrestrrest(first second third rest)
+++ rappend compiled, 35 + 40 bytes
rappendrappend
+++ rcons redefined
+++ rcons compiled, 54 + 64 bytes
rconsrcons
+++ rreverse compiled, 20 + 36 bytes
rreverserreverse
+++ listmap compiled, 68 + 24 bytes
listmaplistmapnil
+++ lambda_8umob4nurre8 compiled, 12 + 24 bytes
+++ listsort compiled, 50 + 52 bytes
listsortlistsortnilnilnilnilnil
+++ getel redefined
+++ getel compiled, 27 + 36 bytes
getel
+++ getel1 redefined
+++ getel1 compiled, 36 + 32 bytes
getel1
+++ setel redefined
+++ setel compiled, 28 + 36 bytes
setel
+++ setel1 redefined
+++ setel1 compiled, 44 + 32 bytes
setel1
+++ dimension compiled, 4 + 8 bytes
dimension
+++ typechk compiled, 27 + 28 bytes
typechk
+++ arrayfn compiled, 88 + 48 bytes
arrayfnnil
+++ add1lis redefined
+++ add1lis compiled, 15 + 12 bytes
add1lis
+++ mkarray_6ue7bj94uh3d compiled, 13 + 28 bytes
mkarray
+++ mkarray1 redefined
+++ mkarray1 compiled, 41 + 16 bytes
mkarray1rlisnil
+++ formarray compiled, 90 + 44 bytes
formarrayformarrayarraychk
+++ arraychk redefined
+++ arraychk compiled, 5 + 12 bytes
arraychkarrayeval
+++ arrayeval compiled, 9 + 24 bytes
arrayevalarraylength
+++ arraylength compiled, 6 + 16 bytes
arraylengthnilnilnilnilnil
+++ pause compiled, 13 + 20 bytes
pause
+++ pause1 compiled, 110 + 88 bytes
pause1
+++ assoccar compiled, 14 + 8 bytes
assoccar
+++ yesp compiled, 71 + 60 bytes
yesp
+++ yesp1 compiled, 38 + 40 bytes
yesp1
+++ cont compiled, 73 + 60 bytes
cont(cont pause retry)nilnilnil
nil
nilcslrendnilnilA C Hearn, 2008Codemist Ltd, 2008(algint applysym arnum assist
atensor avector boolean cali camal cantens cedit cgb changevr cl compact conlaw
crack cvit defint desir dfpart dummy dvfsf eds excalc ezgcd factor fide fmprint
fps ftr gentran geoprover ghyper gnuplot groebner hephys ideals ineq int invbase
laplace lie liepde limits linalg mathml matrix meijerg misc modsr mrvlimit
ncpoly normform numeric odesolve ofsf orthovec pf physop plot pm polydiv pretty
qsum randpoly rataprx ratint rcref reacteqn redlog reset residue rlfi rlisp88
rltools roots rprint rsolve rtrace scope sets sfgamma solve sparse spde specfn
sum support susy2 symmetry taylor tps tri trigint trigsimp wu xcolor xideal
zeilberg ztrans)(acinfo adjprec again algint algpri allbranch allfac allowdfint
allpoly anticom arbvars arnum asterisk backtrace balanced_mod balanced_was_on
batch_mode bcsimp bezout bfspace boese both carcheckflag carefuleq centergrid
cgbcheckg cgbcontred cgbcounthf cgbfullred cgbgen cgbgs cgbreal cgbsgreen
cgbstat cgbupdb cgbverbose coates combineexpt combinelogs commutedf commuteint
comp complex compxroots contract cramer cref cvit debug debug_times defn demo
derexp detectunits dfint dfprint diffsoln dispjacobian distribute div double
downcase dummypri echo edsdebug edsdisjoint edssloppy edsverbose eqfu errcont
essl evallhseqp exdelt exp expanddf expandexpt expandlogs ezgcd f90 factor
factorprimes factorunits failhard fancy fancy_tex fast_la fastfor faststructs
fastvector force fort fortupper fourier ftch fulleq fullpoly fullprec
fullprecision fullroots gbltbasis gc gcd gendecs genpos gentranopt gentranseg
getdecs gltbasis groebfac groebfullreduction groebopt groebprot groebrm
groebstat groebweak gsugar hardzerotest heugcd horner hyperbolic ifactor
imaginary imsl inputc int int_test intern intstr keepdecs lasimp latex lcm
lessspace lexefgb lhyp limitedfactors list listargs lmon looking_good lower
lower_matrix ltrig makecalls mathml mcd mod_was_on modular msg multiplicities
multiroot mymatch nag nat nero nested noacn noarg nocommutedf nocompile
noconvert noetherian noint nointint nolnr nonlnr nopowers nosplit nosturm
not_negative notailcall novarmsg numval odesolve_basis odesolve_check
odesolve_diff odesolve_equidim_y odesolve_expand odesolve_explicit odesolve_fast
odesolve_full odesolve_implicit odesolve_noint odesolve_norecurse
odesolve_noswap odesolve_simp_arbparam odesolve_verbose onespace only_integer
optdecs ord outerzeroscheck output overview partialint partialintdf
partialintint period pgwd plap plotkeep plotusepipe prapprox precise prefix pret
prfourmat pri priall primat prlinineq psen pvector pwrds qgosper_down
qgosper_specials qsum_nullspace qsum_trace qsumrecursion_certificate
qsumrecursion_down qsumrecursion_exp qsumrecursion_profile quotenewnam r2i raise
ranpos rat ratarg rational rationalize ratpri ratroot red_total reduce4 reduced
revpri rladdcond rlanuexdebug rlanuexdifferentroots rlanuexgcdnormalize
rlanuexpsremseq rlanuexsgnopt rlanuexverbose rlbnfsac rlbnfsm rlbrop rlcadaproj
rlcadaprojalways rlcadbaseonly rlcaddebug rlcaddecdeg rlcaddnfformula
rlcadextonly rlcadfac rlcadfasteval rlcadfulldimonly rlcadhongproj
rlcadisoallroots rlcadmc3 rlcadmcproj rlcadpartial rlcadpbfvs rlcadpreponly
rlcadprojonly rlcadrawformula rlcadte rlcadtrimtree rlcadverbose rldavgcd
rlgsbnf rlgserf rlgsprod rlgsrad rlgsred rlgssub rlgsutord rlgsvb rlidentify
rlisp88 rlnzden rlopt1s rlourdet rlparallel rlposden rlpscsgen rlqedfs rlqefb
rlqegen1 rlqegenct rlqegsd rlqeheu rlqepnf rlqeqsc rlqesqsc rlqesr rlqevarsel
rlrealtime rlsiatadv rlsichk rlsiexpl rlsiexpla rlsifac rlsiidem rlsimpl rlsipd
rlsipo rlsipw rlsism rlsiso rlsitsqspl rlsusi rlsusiadd rlsusigs rlsusimult
rltabib rltnft rlverbose rlvmatvb rlxopt rlxoptpl rlxoptri rlxoptric rlxoptrir
rlxoptsb rlxoptses rootmsg roundall roundbf rounded rtrace saveactives savedef
savesfs savestructr semantic sfto_musser sfto_tobey sfto_yun show_grid sidrel
simpnoncomdf solvesingular symmetric taylorautocombine taylorautoexpand
taylorkeeporiginal taylornocache taylorprintorder tdusetorder tensor test_plot
testecho tex texbreak texindent time tr_lie tra tracefps tracelimit traceratint
tracespecfns tracetrig trallfac trchrstrem trcompact trdesir trdint trfac
trfield trgroeb trgroeb1 trgroebr trgroebs trham trigform trint trinvbase
trlinineq trlinineqint trlinrec trmin trnonlnr trnumeric trode trplot trpm
trroot trsolve trsum trtaylor trwu trxideal trxmod twogrid twosided unsafecar
upcase upper_matrix useold usetaylor usez varopt vectorc verbatim verboseload
vtrace web windexpri wrchri xfullreduce xpartialint xpartialintdf xpartialintint
zb_factor zb_inhomogeneous zb_proof zb_timer zb_trace zeilberg)nil	endstat
+++ bye compiled, 5 + 16 bytes
bye(bye)endstat
+++ quit compiled, 5 + 16 bytes
quit(quit)nil
+++ filetype compiled, 51 + 24 bytes
filetype
+++ mkfil redefined
+++ mkfil compiled, 16 + 24 bytes
mkfil
+++ savesession compiled, 3 + 16 bytes
savesessionnilnilnilnilendstatnil16777215nil1nilnil$HOME
+++ load!-patches!-file compiled, 116 + 100 bytes
load-patches-file
+++ load!-latest!-patches compiled as link to load-patches-file
load-latest-patchesnil
+++ outputhandler!* declared fluid
+++ begin compiled, 204 + 192 bytes
beginnilnil
+++ string!-downcase redefined
+++ string!-downcase compiled, 11 + 16 bytes
string-downcasenil
+++ igetv compiled as link to getv
igetv
+++ iputv compiled as link to putv
iputv
+++ first compiled as link to car
first
+++ second compiled as link to cadr
second
+++ third compiled as link to caddr
third
+++ fourth compiled as link to cadddr
fourth
+++ rest compiled as link to cdr
rest0tgensym
+++ initreduce compiled as link to initrlisp
initreduce
+++ initrlisp compiled, 12 + 32 bytes
initrlisp
+++ rlispmain compiled, 3 + 16 bytes
rlispmainnilnilnil(load reload)
+++ load_9t5ilq315iib compiled, 4 + 12 bytes
load
+++ reload_jppsbty7qfk6 compiled, 4 + 16 bytes
reloadnilnil
+++ psl!-load compiled, 30 + 20 bytes
psl-load
+++ tr_09w8ppd3nvl2 compiled, 7 + 16 bytes
tr
+++ untr_t5yzfgwircf7 compiled, 7 + 16 bytes
untr
+++ trst_ms5j819loxo1 compiled, 7 + 16 bytes
trst
+++ untrst_6mkqp9df0dv7 compiled, 7 + 16 bytes
untrstnil(tr trst untr untrst)
+++ prop compiled as link to plist
propnilnilnilnil(imports)nilnil
+++ concat2 compiled as link to concat
concat2
+++ concat redefined
+++ concat compiled, 21 + 12 bytes
concat
+++ dated!-gensym compiled as link to dated-name
dated-gensymnilnilnilnilnil
+++ add_patch_url compiled, 5 + 12 bytes
add_patch_url(http://reduce-algebra.com/support/patches/patches.fsl)
+++ get!-checksum compiled, 44 + 44 bytes
get-checksum
+++ write!-patch!-file compiled, 121 + 72 bytes
write-patch-file
+++ rename!-home!-patch!-file compiled, 16 + 32 bytes
rename-home-patch-file
+++ update_reduce compiled, 191 + 124 bytes
update_reducenilnilnilnilnilnilnilnilfix2lshiftashiftlandmsd:make:ibfnilrndpwr
+++ csl_normbf redefined
+++ csl_normbf compiled, 46 + 28 bytes
csl_normbfnormbf
+++ csl_timbf redefined
+++ csl_timbf compiled, 29 + 28 bytes
csl_timbftimbf
+++ fl2bf compiled, 27 + 28 bytes
fl2bfnil15nilnil
+++ find!!maxbflexp compiled, 13 + 36 bytes
find!maxbflexpnilnil
+++ copyd redefined
+++ copyd compiled, 48 + 44 bytes
copydnilint2idid2intbothtimescompiletimeloadtimecslpsl
+++ printf_xn4ttno3bvmd compiled, 11 + 16 bytes
printf
+++ printf1 compiled, 167 + 96 bytes
printf1
+++ bldmsg_b4ggxmn9mj09 compiled, 11 + 16 bytes
bldmsg
+++ bldstring compiled, 26 + 16 bytes
bldstring
+++ bldcolumn compiled, 15 + 12 bytes
bldcolumn
+++ bldmsg1 compiled, 243 + 104 bytes
bldmsg1((t (verbos t)) (nil (verbos nil)))nilnilnil
nil
nilpolynilnilnilnilnilnilnilniladdlcldegltmultmvarlpowpdegredtctdegtpowtvarnumr
denroverdomainp
+++ !*a2f compiled, 4 + 16 bytes
*a2f
+++ !*a2k compiled, 21 + 28 bytes
*a2k
+++ !*a2kwoweight compiled, 27 + 36 bytes
*a2kwoweight
+++ !*d2q redefined
+++ !*d2q compiled, 28 + 16 bytes
*d2q
+++ !*ff2a compiled, 12 + 24 bytes
*ff2a*f2a*f2q*k2f*kk2f*kk2q*k2q
+++ !*n2f redefined
+++ !*n2f compiled, 6 + 8 bytes
*n2f*p2f*p2q
+++ !*q2a redefined
+++ !*q2a compiled, 4 + 16 bytes
*q2a
+++ !*q2a1 redefined
+++ !*q2a1 compiled, 8 + 16 bytes
*q2a1
+++ !*q2f compiled, 10 + 24 bytes
*q2f
+++ !*q2k compiled, 13 + 24 bytes
*q2k*t2f*t2qtvarnilnilnilnilnil((t (rmsubs)))niltsubtrsq
+++ addsq redefined
+++ addsq compiled, 104 + 48 bytes
addsq
+++ multsq redefined
+++ multsq compiled, 56 + 28 bytes
multsq
+++ negsq redefined
+++ negsq compiled, 5 + 12 bytes
negsqmultpq
+++ cancel compiled, 29 + 32 bytes
cancelpeq
+++ addf redefined
+++ addf compiled, 86 + 16 bytes
addf
+++ addd redefined
+++ addd compiled, 27 + 12 bytes
addd
+++ adddm redefined
+++ adddm compiled, 29 + 36 bytes
adddm
+++ domainp compiled, 10 + 8 bytes
domainp
+++ noncomp redefined
+++ noncomp compiled, 7 + 16 bytes
noncomp
+++ noncomp1 redefined
+++ noncomp1 compiled, 25 + 20 bytes
noncomp1
+++ noncomlistp redefined
+++ noncomlistp compiled, 13 + 12 bytes
noncomlistp
+++ multf redefined
+++ multf compiled, 199 + 84 bytes
multf
+++ noncomfp redefined
+++ noncomfp compiled, 7 + 16 bytes
noncomfp
+++ noncomfp1 redefined
+++ noncomfp1 compiled, 25 + 16 bytes
noncomfp1
+++ multfnc redefined
+++ multfnc compiled, 104 + 40 bytes
multfnc
+++ multd redefined
+++ multd compiled, 38 + 20 bytes
multd
+++ multdm redefined
+++ multdm compiled, 26 + 28 bytes
multdmmultpf
+++ negf redefined
+++ negf compiled, 42 + 28 bytes
negf
+++ degreef compiled, 26 + 16 bytes
degreef*sqlength
+++ !*sqlength compiled, 15 + 16 bytes
*sqlength
+++ terms compiled, 7 + 24 bytes
termsnilnil
+++ termsf redefined
+++ termsf compiled, 24 + 12 bytes
termsf
+++ tmsf compiled, 55 + 28 bytes
tmsf
+++ tmsf!* compiled, 16 + 20 bytes
tmsf*
+++ tms compiled, 5 + 16 bytes
tmsnilnilnil
+++ offexpchk compiled, 21 + 28 bytes
offexpchk
+++ freevarinexptchk compiled, 26 + 12 bytes
freevarinexptchk
+++ mkprod compiled, 169 + 84 bytes
mkprod
+++ expnd compiled, 24 + 32 bytes
expnd
+++ expnd1 compiled, 61 + 28 bytes
expnd1
+++ canprod compiled, 226 + 44 bytes
canprod
+++ sfpf compiled, 16 + 16 bytes
sfpf
+++ sfp redefined
+++ sfp compiled, 12 + 12 bytes
sfp
+++ reprod compiled, 14 + 16 bytes
reprod
+++ cprod1 compiled, 50 + 24 bytes
cprod1
+++ cprod2 compiled, 102 + 32 bytes
cprod2
+++ mkspm redefined
+++ mkspm compiled, 25 + 32 bytes
mkspm
+++ sub2chk redefined
+++ sub2chk compiled, 19 + 28 bytes
sub2chk
+++ quotsq redefined
+++ quotsq compiled, 6 + 16 bytes
quotsq
+++ quotf!* compiled, 26 + 28 bytes
quotf*
+++ quotf redefined
+++ quotf compiled, 11 + 24 bytes
quotf
+++ quotf1 redefined
+++ quotf1 compiled, 173 + 68 bytes
quotf1
+++ rnconc redefined
+++ rnconc compiled, 30 + 20 bytes
rnconc
+++ quotfd redefined
+++ quotfd compiled, 23 + 32 bytes
quotfd
+++ divd redefined
+++ divd compiled, 55 + 40 bytes
divd
+++ divdm compiled, 26 + 28 bytes
divdm
+++ quotdd redefined
+++ quotdd compiled, 44 + 24 bytes
quotdd
+++ quotk redefined
+++ quotk compiled, 28 + 12 bytes
quotk
+++ rank redefined
+++ rank compiled, 47 + 20 bytes
rank
+++ lt!* redefined
+++ lt!* compiled, 33 + 20 bytes
lt*
+++ remf compiled, 12 + 28 bytes
remfremf
+++ qremf compiled, 187 + 56 bytes
qremf
+++ praddf redefined
+++ praddf compiled, 10 + 12 bytes
praddf
+++ qremd compiled, 61 + 44 bytes
qremd
+++ lqremf compiled, 22 + 16 bytes
lqremf
+++ minusf redefined
+++ minusf compiled, 25 + 12 bytes
minusf
+++ absf!* compiled, 21 + 28 bytes
absf*
+++ absf redefined
+++ absf compiled, 8 + 16 bytes
absf
+++ canonsq redefined
+++ canonsq compiled, 117 + 64 bytes
canonsq
+++ fieldconv compiled, 103 + 48 bytes
fieldconv
+++ simpgd compiled, 24 + 28 bytes
simpgd
+++ lnc redefined
+++ lnc compiled, 15 + 12 bytes
lnc
+++ invsq redefined
+++ invsq compiled, 20 + 40 bytes
invsq
+++ gcdchk compiled, 18 + 20 bytes
gcdchknilnilnil
+++ quotfx compiled, 10 + 24 bytes
quotfx
+++ quotfx1 compiled, 188 + 68 bytes
quotfx1
+++ quotkx compiled, 28 + 12 bytes
quotkx
+++ quotfdx compiled, 23 + 32 bytes
quotfdx
+++ quotfxerr compiled, 3 + 16 bytes
quotfxerr
+++ cutf compiled, 11 + 16 bytes
cutf
+++ cutf1 compiled, 28 + 12 bytes
cutf1nilnilnilnilnil
+++ comfac redefined
+++ comfac compiled, 76 + 48 bytes
comfac
+++ degr redefined
+++ degr compiled, 15 + 12 bytes
degrgcdf*2
+++ gcdf!* redefined
+++ gcdf!* compiled, 9 + 24 bytes
gcdf*
+++ gcdf redefined
+++ gcdf compiled, 50 + 48 bytes
gcdf
+++ free!-powerp redefined
+++ free!-powerp compiled, 27 + 12 bytes
free-powerp
+++ gcdf1 redefined
+++ gcdf1 compiled, 97 + 56 bytes
gcdf1
+++ gcdf2 redefined
+++ gcdf2 compiled, 204 + 72 bytes
gcdf2
+++ gcdfnc compiled, 36 + 16 bytes
gcdfnc
+++ num!-exponents redefined
+++ num!-exponents compiled, 25 + 8 bytes
num-exponents
+++ gcdfd redefined
+++ gcdfd compiled, 9 + 24 bytes
gcdfd
+++ gcdfd1 redefined
+++ gcdfd1 compiled, 20 + 12 bytes
gcdfd1
+++ gcddd redefined
+++ gcddd compiled, 58 + 28 bytes
gcddd
+++ gcdk compiled, 208 + 68 bytes
gcdk
+++ addlc compiled, 24 + 20 bytes
addlc
+++ delallasc redefined
+++ delallasc compiled, 22 + 12 bytes
delallasc
+++ kernord compiled, 12 + 16 bytes
kernord
+++ kernord!-split compiled, 73 + 12 bytes
kernord-split
+++ kernord!-sort redefined
+++ kernord!-sort compiled, 18 + 16 bytes
kernord-sort
+++ maxdeg redefined
+++ maxdeg compiled, 22 + 8 bytes
maxdeg
+++ powers redefined
+++ powers compiled, 4 + 12 bytes
powers
+++ powers0 redefined
+++ powers0 compiled, 49 + 12 bytes
powers0lcm*2
+++ lcm!* compiled, 9 + 24 bytes
lcm*
+++ lcm redefined
+++ lcm compiled, 22 + 24 bytes
lcm
+++ remk compiled, 58 + 36 bytes
remk
+++ prim!-part compiled, 7 + 20 bytes
prim-part
+++ comfac!-to!-poly redefined
+++ comfac!-to!-poly compiled, 8 + 8 bytes
comfac-to-polynilnilnilnil
+++ exptsq redefined
+++ exptsq compiled, 137 + 84 bytes
exptsq
+++ exptf compiled, 30 + 36 bytes
exptf
+++ exptf1 compiled, 22 + 20 bytes
exptf1
+++ exptf2 compiled, 37 + 24 bytes
exptf2nilnilnilnil
+++ fkern redefined
+++ fkern compiled, 59 + 36 bytes
fkern
+++ kernels redefined
+++ kernels compiled, 4 + 12 bytes
kernels
+++ kernels1 redefined
+++ kernels1 compiled, 29 + 8 bytes
kernels1
+++ kernp redefined
+++ kernp compiled, 37 + 16 bytes
kernpnilnilnilnilnil
+++ getpower redefined
+++ getpower compiled, 15 + 24 bytes
getpower
+++ mksp redefined
+++ mksp compiled, 5 + 16 bytes
mksp
+++ to compiled as link to cons
to
+++ mksp!* compiled, 36 + 36 bytes
mksp*
+++ mksfpf compiled, 61 + 40 bytes
mksfpf
+++ mksq redefined
+++ mksq compiled, 181 + 96 bytes
mksqnilnilnilnil(nil)
+++ reordsq redefined
+++ reordsq compiled, 8 + 12 bytes
reordsq
+++ reorder redefined
+++ reorder compiled, 32 + 16 bytes
reorder
+++ raddf redefined
+++ raddf compiled, 77 + 16 bytes
raddf
+++ rmultpf redefined
+++ rmultpf compiled, 37 + 16 bytes
rmultpf
+++ reordop redefined
+++ reordop compiled, 15 + 20 bytes
reordop
+++ kernel!-list compiled, 59 + 24 bytes
kernel-list
+++ korder compiled, 13 + 24 bytes
kordernil
+++ setkorder redefined
+++ setkorder compiled, 13 + 16 bytes
setkorder
+++ updkorder compiled, 19 + 16 bytes
updkordernilnilnilnilnil
+++ initdmode compiled, 30 + 32 bytes
initdmode
+++ setdmode compiled, 86 + 84 bytes
setdmode
+++ setdmode1 compiled, 117 + 68 bytes
setdmode1
+++ offmoderr compiled, 14 + 28 bytes
offmoderr
+++ dmodechk compiled, 171 + 100 bytes
dmodechk
+++ dmoderr compiled, 21 + 36 bytes
dmoderr
+++ mkdmoderr redefined
+++ mkdmoderr compiled, 15 + 24 bytes
mkdmoderrnilnilnilnil
+++ !:difference redefined
+++ !:difference compiled, 25 + 20 bytes
:difference
+++ !:divide compiled, 26 + 36 bytes
:divide
+++ dividef compiled, 22 + 12 bytes
dividef
+++ !:expt compiled, 111 + 60 bytes
:expt
+++ !:gcd compiled, 30 + 24 bytes
:gcd
+++ !:minus redefined
+++ !:minus compiled, 24 + 24 bytes
:minus
+++ !:minusp redefined
+++ !:minusp compiled, 12 + 12 bytes
:minusp
+++ !:onep redefined
+++ !:onep compiled, 12 + 12 bytes
:onep
+++ !:plus redefined
+++ !:plus compiled, 24 + 20 bytes
:plus
+++ !:quotient compiled, 50 + 48 bytes
:quotient
+++ !:recip compiled, 45 + 44 bytes
:recip
+++ !:rn2rd compiled, 8 + 20 bytes
:rn2rd
+++ !:times redefined
+++ !:times compiled, 18 + 16 bytes
:times
+++ !:zerop redefined
+++ !:zerop compiled, 16 + 20 bytes
:zerop
+++ fieldp compiled, 12 + 16 bytes
fieldp
+++ gettransferfn compiled, 9 + 12 bytes
gettransferfn
+++ dcombine compiled, 231 + 80 bytes
dcombine
+++ int!-equiv!-chk redefined
+++ int!-equiv!-chk compiled, 43 + 32 bytes
int-equiv-chknilnilnilnilnil(:rn:):rn:rationalnil*i2rn*rn2ftrnminus:rnminusp:
rnplus:rntimes:rndifference:rnquotient:rnzerop:rnonep:rnfactor:rnexpt:rnprep:
rnprinrnequivrn:rootnil
+++ rnexpt!: compiled, 57 + 16 bytes
rnexpt:
+++ mkratnum compiled, 20 + 24 bytes
mkratnum
+++ mkrn redefined
+++ mkrn compiled, 31 + 12 bytes
mkrn
+++ !*i2rn redefined
+++ !*i2rn compiled, 6 + 16 bytes
*i2rn
+++ rnminus!: compiled, 9 + 12 bytes
rnminus:
+++ rnminusp!: compiled, 14 + 12 bytes
rnminusp:
+++ rnplus!: redefined
+++ rnplus!: compiled, 22 + 12 bytes
rnplus:
+++ rntimes!: redefined
+++ rntimes!: compiled, 14 + 12 bytes
rntimes:
+++ rndifference!: compiled, 22 + 12 bytes
rndifference:
+++ rnquotient!: redefined
+++ rnquotient!: compiled, 14 + 12 bytes
rnquotient:
+++ rnzerop!: redefined
+++ rnzerop!: compiled, 5 + 12 bytes
rnzerop:
+++ rnonep!: redefined
+++ rnonep!: compiled, 12 + 12 bytes
rnonep:
+++ rnfactor!: compiled, 114 + 56 bytes
rnfactor:
+++ rnprep!: compiled, 18 + 20 bytes
rnprep:
+++ rnprin compiled, 9 + 16 bytes
rnprin
+++ rnequiv redefined
+++ rnequiv compiled, 8 + 12 bytes
rnequiv
+++ rn!:root compiled, 21 + 20 bytes
rn:rootnilnilnilnilnil(fix round ceiling floor factorial perm choose)nilnil(perm
choose)
+++ rnfix!* compiled, 7 + 8 bytes
rnfix*
+++ rnfixchk compiled, 20 + 24 bytes
rnfixchk
+++ rnfloor!* compiled, 16 + 8 bytes
rnfloor*
+++ rnceiling!* compiled, 17 + 12 bytes
rnceiling*
+++ rnround!* compiled, 41 + 48 bytes
rnround*
+++ rnilog2!* compiled, 4 + 16 bytes
rnilog2*
+++ rnfactorial!* compiled, 24 + 28 bytes
rnfactorial*
+++ rnperm!* compiled, 8 + 16 bytes
rnperm*
+++ perm compiled, 42 + 16 bytes
perm
+++ rnchoose!* compiled, 8 + 16 bytes
rnchoose*
+++ choose compiled, 9 + 16 bytes
choose
+++ simprn compiled, 54 + 28 bytes
simprn
+++ rnirootn!* compiled, 8 + 20 bytes
rnirootn*nilnilnilnilnilnil(:gi: :rn:)
+++ setcmpxmode compiled, 154 + 76 bytes
setcmpxmode
+++ intgcdd compiled, 44 + 8 bytes
intgcdd:gi:complex*i2gigiminusp:gizerop:gionep:giplus:gidifference:gitimes:
giquotient:gidivide:gigcd:gifactor:giprep:gintequiv:giprn:giprn:mkgi:gi:unitconv
+++ !:gi!:unitconv compiled, 9 + 20 bytes
:gi:unitconv(((:gi: 0 . 1) :gi: 0 . -1) ((:gi: 0 . -1) :gi: 0 . 1))
+++ unitconv compiled, 42 + 24 bytes
unitconv
+++ !*i2gi compiled, 6 + 16 bytes
*i2gi
+++ giminusp!: compiled, 14 + 12 bytes
giminusp:
+++ gizerop!: redefined
+++ gizerop!: compiled, 12 + 12 bytes
gizerop:
+++ gionep!: compiled, 12 + 16 bytes
gionep:
+++ gintequiv!: compiled, 8 + 12 bytes
gintequiv:
+++ mkdgi compiled, 8 + 20 bytes
mkdgi
+++ mkgi redefined
+++ mkgi compiled, 5 + 12 bytes
mkgi
+++ giplus!: compiled, 14 + 12 bytes
giplus:
+++ gidifference!: compiled, 14 + 12 bytes
gidifference:
+++ gitimes!: compiled, 33 + 12 bytes
gitimes:
+++ giquotient!: compiled, 71 + 20 bytes
giquotient:
+++ gidivide!: compiled, 138 + 20 bytes
gidivide:
+++ giremainder compiled, 136 + 20 bytes
giremainder
+++ gigcd!: compiled, 17 + 20 bytes
gigcd:
+++ fqa compiled, 59 + 16 bytes
fqa
+++ gifactor!: compiled, 358 + 108 bytes
gifactor:
+++ normalize!-lcgi compiled, 67 + 44 bytes
normalize-lcgi
+++ contains!-oddpower compiled, 14 + 12 bytes
contains-oddpower
+++ power!-sort compiled, 17 + 16 bytes
power-sort
+++ sqfrp compiled, 32 + 44 bytes
sqfrp
+++ realp compiled, 42 + 24 bytes
realp
+++ fd2f compiled, 43 + 36 bytes
fd2f
+++ giprep!: compiled, 38 + 24 bytes
giprep:
+++ giprim compiled, 11 + 20 bytes
giprim
+++ giprn!: compiled, 18 + 32 bytes
giprn:
+++ girationalize!: compiled, 57 + 64 bytes
girationalize:
+++ gigcdsq compiled, 29 + 24 bytes
gigcdsq
+++ giintgcd compiled, 40 + 16 bytes
giintgcd
+++ conjgd compiled, 83 + 32 bytes
conjgdnilnilnilnilnilnilnilniltnil(:crn: :gi: :rn:)nil:crn:complex-rationalnil
i2crn*crn:pluscrn:timescrn:differcrn:quotientcrn:zeropcrn:onepcrn:prepcrn:prin
crn:minuscrn:factorgirationalize:*crn2rn*rn2crn*rd2crn*crn2rd*gi2crnmkcrnmkdcrn
crnequiv:rn::crn:crn:minusp
+++ crn!:minusp compiled, 12 + 12 bytes
crn:minusp
+++ mkcrn compiled, 5 + 12 bytes
mkcrncrntagrntagcrnrlcrnim
+++ crn!:simp compiled, 6 + 16 bytes
crn:simpcrn:simp
+++ mkdcrn compiled, 13 + 20 bytes
mkdcrn
+++ i2crn!* compiled, 10 + 20 bytes
i2crn*
+++ !*crn2rn compiled, 12 + 20 bytes
*crn2rn
+++ !*rn2crn compiled, 7 + 20 bytes
*rn2crn
+++ !*crn2rd compiled, 14 + 28 bytes
*crn2rd
+++ !*rd2crn compiled, 12 + 28 bytes
*rd2crn
+++ !*gi2crn compiled, 12 + 16 bytes
*gi2crn
+++ crn!:plus compiled, 28 + 20 bytes
crn:plus
+++ crn!:differ compiled, 28 + 20 bytes
crn:differ
+++ crn!:times compiled, 44 + 28 bytes
crn:times
+++ crn!:quotient compiled, 58 + 32 bytes
crn:quotient
+++ crn!:minus compiled, 20 + 12 bytes
crn:minus
+++ crn!:zerop compiled, 14 + 12 bytes
crn:zerop
+++ crn!:onep compiled, 13 + 16 bytes
crn:onep
+++ crn!:prep compiled, 12 + 16 bytes
crn:prep
+++ crn!:factor compiled, 130 + 72 bytes
crn:factor
+++ crnprimp compiled, 22 + 32 bytes
crnprimp
+++ crnprep1 compiled, 39 + 36 bytes
crnprep1
+++ crn!:prin compiled, 24 + 36 bytes
crn:prin
+++ crnequiv compiled, 12 + 16 bytes
crnequivnilnilnilnilnilsimprepart
+++ simprepart compiled, 11 + 24 bytes
simprepart
+++ repartsq compiled, 37 + 24 bytes
repartsqsimpimpart
+++ simpimpart compiled, 11 + 24 bytes
simpimpart
+++ impartsq compiled, 38 + 28 bytes
impartsqsimpconj
+++ simpconj compiled, 4 + 16 bytes
simpconj
+++ conjsq compiled, 19 + 36 bytes
conjsqidomainp
+++ splitcomplex compiled, 51 + 56 bytes
splitcomplex
+++ expand!-imrepart compiled, 36 + 24 bytes
expand-imrepart
+++ expand!-imrepartpow compiled, 60 + 64 bytes
expand-imrepartpow
+++ mkrepart compiled, 29 + 36 bytes
mkrepart
+++ mkimpart compiled, 23 + 32 bytes
mkimpart
+++ take!-realpart compiled, 5 + 12 bytes
take-realpart
+++ repartf compiled, 74 + 52 bytes
repartf
+++ take!-impart compiled, 5 + 12 bytes
take-impart
+++ impartf compiled, 79 + 52 bytes
impartfnil
+++ realvalued compiled, 29 + 24 bytes
realvalued
+++ notrealvalued compiled, 27 + 24 bytes
notrealvaluednil
+++ realvaluedp compiled, 33 + 24 bytes
realvaluedp
+++ realvaluedlist compiled, 13 + 12 bytes
realvaluedlistnilnilnilnilreimsin
+++ reimsin compiled, 42 + 52 bytes
reimsinreimcos
+++ reimcos compiled, 45 + 56 bytes
reimcosreimexpt
+++ reimexpt compiled, 95 + 80 bytes
reimexptnilnilnilnilnilnil(:mod: :crn: :gi: :rn:):mod:modularnilnil*i2modmodcnv
modcnvmodminusp:modplus:modtimes:moddifference:modquotient:moddivide:modgcd:
modzerop:modonep:factormod:factormod:exptmod:modprep:(lambda (x) (prin2* (prepf
x))):mod:unitconv
+++ !*modular2f redefined
+++ !*modular2f compiled, 44 + 24 bytes
*modular2f
+++ exptmod!: compiled, 5 + 16 bytes
exptmod:
+++ !:mod!:unitconv compiled, 51 + 44 bytes
:mod:unitconv
+++ !:mod!:units compiled, 42 + 20 bytes
:mod:units
+++ !*i2mod redefined
+++ !*i2mod compiled, 4 + 16 bytes
*i2mod
+++ modcnv compiled, 13 + 32 bytes
modcnv
+++ modminusp!: compiled, 9 + 20 bytes
modminusp:
+++ modplus!: redefined
+++ modplus!: compiled, 5 + 16 bytes
modplus:
+++ modtimes!: redefined
+++ modtimes!: compiled, 5 + 16 bytes
modtimes:
+++ moddifference!: compiled, 5 + 16 bytes
moddifference:
+++ moddivide!: compiled, 5 + 16 bytes
moddivide:
+++ modgcd!: compiled, 3 + 16 bytes
modgcd:
+++ modquotient!: compiled, 7 + 20 bytes
modquotient:
+++ modzerop!: redefined
+++ modzerop!: compiled, 4 + 12 bytes
modzerop:
+++ modonep!: redefined
+++ modonep!: compiled, 4 + 12 bytes
modonep:
+++ factormod!: compiled, 12 + 32 bytes
factormod:
+++ modprep!: compiled as link to cdr
modprep:nil
+++ setmod compiled, 53 + 52 bytes
setmodsetmodnilnilevalmod
+++ evalmod compiled, 75 + 56 bytes
evalmodmod-domainvalchk
+++ mod!-domainvalchk compiled, 19 + 24 bytes
mod-domainvalchk
+++ mod!-expt!-fract compiled, 134 + 72 bytes
mod-expt-fract
+++ mod!-error compiled, 7 + 20 bytes
mod-errornilnilnilnilnil((t (rmsubs) (setq *exp nil)) (nil (rmsubs) (setq *exp t
)))
+++ fac!-merge compiled, 11 + 12 bytes
fac-merge
+++ factorize compiled, 113 + 104 bytes
factorize
+++ facform2list compiled, 169 + 76 bytes
facform2list
+++ facform2list2 compiled, 126 + 48 bytes
facform2list2
+++ old_factorize compiled, 11 + 24 bytes
old_factorizenil
+++ pairlist2list compiled, 39 + 16 bytes
pairlist2list
+++ fctrf compiled, 201 + 148 bytes
fctrf
+++ fctrf1 compiled, 125 + 72 bytes
fctrf1
+++ factorize!-form!-recursion compiled as link to fctrf1
factorize-form-recursion
+++ factor!-prim!-f compiled, 120 + 64 bytes
factor-prim-f
+++ factor!-prim!-sqfree!-f compiled, 198 + 80 bytes
factor-prim-sqfree-f
+++ unifactor compiled, 107 + 56 bytes
unifactor
+++ distribute!.multiplicity compiled, 34 + 8 bytes
distribute.multiplicity
+++ factorf compiled, 199 + 92 bytes
factorf
+++ factor!-prim!-sqfree!-f!-1 compiled, 48 + 16 bytes
factor-prim-sqfree-f-1
+++ sqfrf compiled, 291 + 120 bytes
sqfrf
+++ square_free compiled, 55 + 32 bytes
square_freenil
+++ diff compiled, 48 + 24 bytes
diff
+++ diffp1 compiled, 22 + 20 bytes
diffp1nilnilnil
+++ homogp compiled, 51 + 20 bytes
homogp
+++ subs0 compiled, 20 + 16 bytes
subs0
+++ varss compiled, 16 + 12 bytes
varss
+++ rconstnm compiled, 40 + 20 bytes
rconstnm
+++ rconst1 compiled, 29 + 16 bytes
rconst1
+++ rconst compiled, 78 + 48 bytes
rconstnilnilnil
+++ setunion compiled, 22 + 8 bytes
setunion
+++ searchtm compiled, 11 + 12 bytes
searchtm
+++ searchpl compiled, 28 + 16 bytes
searchpl
+++ qsort compiled, 41 + 12 bytes
qsort
+++ mapins compiled, 19 + 12 bytes
mapins
+++ mkzl compiled, 16 + 20 bytes
mkzl
+++ sq2sstm compiled, 52 + 24 bytes
sq2sstm
+++ sq2sscfpl compiled, 26 + 16 bytes
sq2sscfpl
+++ sq2sspl compiled, 30 + 12 bytes
sq2sspl
+++ sdlist compiled, 59 + 8 bytes
sdlist
+++ univsdl2sq compiled, 35 + 8 bytes
univsdl2sq
+++ mapdel compiled, 18 + 12 bytes
mapdel
+++ mulvsdl2sq compiled, 81 + 20 bytes
mulvsdl2sq
+++ sdl2sq compiled, 10 + 20 bytes
sdl2sq
+++ termorder1 compiled, 46 + 20 bytes
termorder1
+++ listsum redefined
+++ listsum compiled, 24 + 12 bytes
listsum
+++ termorder compiled, 44 + 24 bytes
termorder
+++ lambda_rh5q1wxdb66b compiled, 6 + 12 bytes
+++ xxsort compiled, 4 + 16 bytes
xxsort
+++ lambda_6wz8qijdlm96 compiled, 6 + 12 bytes
+++ lxsort compiled, 4 + 16 bytes
lxsort
+++ delet compiled, 32 + 12 bytes
delet
+++ lx2xx compiled, 32 + 20 bytes
lx2xx
+++ lastnondomain compiled, 22 + 16 bytes
lastnondomain
+++ xx2lx compiled, 32 + 20 bytes
xx2lx
+++ sf2ss compiled, 26 + 28 bytes
sf2ss
+++ ss2sf compiled, 14 + 20 bytes
ss2sfnilnilnilnil
+++ prsqfrfacf compiled, 138 + 60 bytes
prsqfrfacf
+++ factor!-ordered!-sqfree!-prim!-f compiled, 171 + 80 bytes
factor-ordered-sqfree-prim-f
+++ downpower compiled, 7 + 12 bytes
downpower
+++ downpower1 compiled, 34 + 12 bytes
downpower1
+++ uppower compiled, 15 + 16 bytes
uppower
+++ uppower1 compiled, 33 + 12 bytes
uppower1
+++ uppower2 compiled, 50 + 12 bytes
uppower2
+++ univariatep compiled, 17 + 16 bytes
univariatep
+++ univariatep1 compiled, 34 + 8 bytes
univariatep1
+++ special!-case!-factor compiled, 31 + 40 bytes
special-case-factor
+++ degreegcd compiled, 42 + 16 bytes
degreegcd
+++ factor!-coeffs compiled, 4 + 12 bytes
factor-coeffsnilnilnilnilnil
+++ coeffs compiled, 82 + 16 bytes
coeffs
+++ shift!-pol compiled, 86 + 40 bytes
shift-pol
+++ quadraticf!* compiled, 90 + 64 bytes
quadraticf*
+++ quadraticf compiled, 67 + 32 bytes
quadraticf
+++ quadraticf1 compiled, 173 + 76 bytes
quadraticf1
+++ rootxf compiled, 257 + 84 bytes
rootxf
+++ mkrootf compiled, 36 + 44 bytes
mkrootf
+++ nrootn!* compiled, 30 + 32 bytes
nrootn*
+++ cubicf compiled, 130 + 76 bytes
cubicf
+++ powsubsf compiled, 24 + 28 bytes
powsubsf
+++ quarticf compiled, 574 + 132 bytes
quarticfnilnilnil
+++ linfacf compiled, 4 + 16 bytes
linfacf
+++ quadfacf compiled, 4 + 16 bytes
quadfacf
+++ trykrf compiled, 241 + 44 bytes
trykrf
+++ subuf compiled, 44 + 20 bytes
subuf
+++ adddm!* compiled, 9 + 12 bytes
adddm*
+++ multdm!* compiled, 8 + 12 bytes
multdm*
+++ dfactors compiled, 39 + 36 bytes
dfactors
+++ combinationtimes compiled, 35 + 20 bytes
combinationtimes
+++ putin compiled, 16 + 8 bytes
putin
+++ search4facf compiled, 29 + 12 bytes
search4facf
+++ tryfactorf compiled, 48 + 28 bytes
tryfactorf
+++ linethroughf compiled, 39 + 24 bytes
linethroughf
+++ quadthroughf compiled, 96 + 28 bytes
quadthroughfnilnilnilnil((t (rmsubs)) (nil (rmsubs)))subtrf
+++ rationalizesq redefined
+++ rationalizesq compiled, 67 + 56 bytes
rationalizesq
+++ lowertowerp compiled, 74 + 24 bytes
lowertowerp
+++ lowertowerp1 compiled, 30 + 24 bytes
lowertowerp1
+++ exprsize compiled, 20 + 12 bytes
exprsize
+++ rationalizef compiled, 86 + 64 bytes
rationalizef
+++ conjquadratic compiled, 31 + 40 bytes
conjquadratic
+++ conjcubic compiled, 113 + 52 bytes
conjcubic
+++ conj2 compiled, 23 + 28 bytes
conj2
+++ conjquartic compiled, 195 + 60 bytes
conjquartic
+++ mkmain compiled, 9 + 20 bytes
mkmainnilnilnilnilnilnilnil(dfint allowdfint)nil(commutedf nocommutedf
simpnoncomdf)nil(expanddf)
+++ simpdf redefined
+++ simpdf compiled, 167 + 80 bytes
simpdf
+++ d2int compiled, 40 + 24 bytes
d2intsimpdf
+++ prekernp compiled, 28 + 20 bytes
prekernp
+++ diffsq redefined
+++ diffsq compiled, 21 + 28 bytes
diffsq
+++ difff redefined
+++ difff compiled, 59 + 28 bytes
difff
+++ diffp redefined
+++ depl!* declared fluid
+++ diffp compiled, 593 + 180 bytes
diffp
+++ !*intflag!* declared fluid
+++ dfform_int compiled, 78 + 64 bytes
dfform_int
+++ not_df_p compiled, 26 + 20 bytes
not_df_p
+++ dfn_prop redefined
+++ dfn_prop compiled, 22 + 36 bytes
dfn_prop
+++ find_sub_df compiled, 13 + 12 bytes
find_sub_df
+++ is_sub_df compiled, 70 + 20 bytes
is_sub_df
+++ dot_df_args compiled, 30 + 12 bytes
dot_df_args
+++ merge!-ind!-vars compiled, 24 + 24 bytes
merge-ind-vars
+++ derad!* compiled, 33 + 12 bytes
derad*
+++ derad compiled, 73 + 16 bytes
derad
+++ letdf compiled, 251 + 112 bytes
letdf
+++ frlp compiled, 15 + 12 bytes
frlp
+++ lpos compiled, 11 + 12 bytes
lposnilnilnilnil
+++ deg compiled, 19 + 32 bytes
deg
+++ tstpolyarg2 compiled, 56 + 32 bytes
tstpolyarg2
+++ numrdeg compiled, 42 + 32 bytes
numrdeg
+++ lcofeval compiled, 84 + 56 bytes
lcofevallcofeval
+++ lcof compiled, 57 + 40 bytes
lcof
+++ lpower compiled, 63 + 40 bytes
lpower
+++ lterm compiled, 60 + 40 bytes
lterm
+++ mainvar compiled, 23 + 20 bytes
mainvar
+++ sfchk compiled, 8 + 16 bytes
sfchk
+++ reduct compiled, 56 + 40 bytes
reduct
+++ tstpolyarg compiled, 17 + 28 bytes
tstpolyargnilnilnilnilnildecomposesf
+++ decomposesf compiled, 23 + 40 bytes
decomposesf
+++ decomposef1 compiled, 6 + 16 bytes
decomposef1
+++ decomposef2 compiled, 227 + 92 bytes
decomposef2
+++ decomposesfvars compiled, 33 + 8 bytes
decomposesfvars
+++ decomposesfuni0 compiled, 35 + 16 bytes
decomposesfuni0
+++ decomposesfuni compiled, 163 + 64 bytes
decomposesfuni
+++ decomposefctrf compiled, 32 + 24 bytes
decomposefctrf
+++ decomposefctrf1 compiled, 166 + 28 bytes
decomposefctrf1
+++ decomposebacksubstuni compiled, 157 + 68 bytes
decomposebacksubstuni
+++ decomposedf compiled, 44 + 24 bytes
decomposedf
+++ decomposeint compiled, 55 + 24 bytes
decomposeint
+++ decomposecoeff compiled, 12 + 20 bytes
decomposecoeff
+++ decomposecoeff1 compiled, 27 + 8 bytes
decomposecoeff1
+++ decomposetdg compiled, 32 + 16 bytes
decomposetdg
+++ decomposedegr compiled, 30 + 12 bytes
decomposedegr
+++ compose compiled, 17 + 16 bytes
compose
+++ decomposesfmulti compiled, 203 + 100 bytes
decomposesfmulti
+++ decomposesfmulti1 compiled, 468 + 84 bytes
decomposesfmulti1
+++ decomposelmon compiled, 19 + 12 bytes
decomposelmon
+++ decomposenormfac compiled, 27 + 32 bytes
decomposenormfac
+++ decomposecont compiled, 29 + 12 bytes
decomposecont
+++ decomposesign compiled, 20 + 20 bytes
decomposesign
+++ decomposesfmnorm compiled, 222 + 60 bytes
decomposesfmnorm
+++ decomposehomog compiled, 25 + 16 bytes
decomposehomog
+++ decomposehomog1 compiled, 103 + 24 bytes
decomposehomog1
+++ decomposegensym compiled, 11 + 16 bytes
decomposegensymnilnilnil
+++ interpol compiled, 184 + 64 bytes
interpolnilnilnilnilnilnilnil
+++ subs2q redefined
+++ subs2q compiled, 29 + 20 bytes
subs2q
+++ subs2f redefined
+++ subs2f compiled, 57 + 60 bytes
subs2f
+++ subs2f1 redefined
+++ subs2f1 compiled, 288 + 100 bytes
subs2f1
+++ subs2p compiled, 40 + 32 bytes
subs2p
+++ raddsq compiled, 12 + 24 bytes
raddsq
+++ mtchp redefined
+++ mtchp compiled, 61 + 40 bytes
mtchp
+++ mtchp1 redefined
+++ mtchp1 compiled, 81 + 32 bytes
mtchp1
+++ powmtch compiled, 29 + 8 bytes
powmtch
+++ mchk!* redefined
+++ mchk!* compiled, 25 + 24 bytes
mchk*nilnilnilnilnil
+++ subs3q redefined
+++ subs3q compiled, 16 + 20 bytes
subs3q
+++ subs3f redefined
+++ subs3f compiled, 6 + 20 bytes
subs3f
+++ subs3f1 redefined
+++ subs3f1 compiled, 89 + 44 bytes
subs3f1
+++ subs3t redefined
+++ subs3t compiled, 255 + 92 bytes
subs3t
+++ sizchk redefined
+++ sizchk compiled, 24 + 12 bytes
sizchk
+++ mtchk redefined
+++ mtchk compiled, 113 + 28 bytes
mtchk
+++ nocp redefined
+++ nocp compiled, 13 + 12 bytes
nocpnilnilnil
+++ subs4q compiled, 85 + 44 bytes
subs4qnilnilnilnil
+++ hornersq compiled, 37 + 40 bytes
hornersq
+++ hornerf compiled, 20 + 32 bytes
hornerf
+++ hornerf1 compiled, 160 + 36 bytes
hornerf1hornerfnilnil
nil
nilalgnil(cons nil nil)(eval_mode cardno* fortwidth* high_pow low_pow
root_multiplicities)nilnilnilnil
+++ forminput compiled, 30 + 36 bytes
forminputforminput
+++ formws compiled, 31 + 40 bytes
formwsformwsnilnilnilnilniltttsymbolicttttttt((*))(subfg* *sub2 tstack* fname*
outl*)02000t0t0
+++ mkid compiled, 41 + 24 bytes
mkidnil
+++ multiple!-result compiled, 338 + 160 bytes
multiple-result
+++ fillin compiled, 7 + 12 bytes
fillin
+++ fillin1 compiled, 35 + 16 bytes
fillin1
*** local variable pline* in procedure msgpri not used 
+++ msgpri compiled, 116 + 76 bytes
msgpri
+++ errach compiled, 19 + 52 bytes
errach
+++ errpri1 compiled, 10 + 24 bytes
errpri1
+++ errpri2 compiled, 10 + 20 bytes
errpri2
+++ redmsg compiled, 37 + 44 bytes
redmsg
+++ typerr redefined
+++ typerr compiled, 52 + 44 bytes
typerrnilnilnil(exp factor fort gcd intstr mcd nat numval rationalize reduced
val)nilnilnilnilnil0
+++ atomlis compiled, 14 + 8 bytes
atomlis
+++ carx redefined
+++ carx compiled, 14 + 24 bytes
carx
+++ delasc redefined
+++ delasc compiled, 24 + 8 bytes
delasc
+++ eqexpr redefined
+++ eqexpr compiled, 22 + 16 bytes
eqexprnil
*** evenp not defined (LOSE flag) 
nilnil
*** lengthc not defined (LOSE flag) 
nil
+++ makearbcomplex compiled, 11 + 20 bytes
makearbcomplex
+++ mapcons redefined
+++ mapcons compiled, 34 + 8 bytes
mapcons
+++ mappend compiled, 36 + 8 bytes
mappend
+++ nlist compiled, 16 + 16 bytes
nlist
+++ nth redefined
+++ nth compiled, 4 + 12 bytes
nth
+++ pnth redefined
+++ pnth compiled, 19 + 28 bytes
pnth
+++ permp compiled, 25 + 16 bytes
permp
+++ permutations compiled, 52 + 16 bytes
permutations
+++ posintegerp compiled, 10 + 12 bytes
posintegerp
+++ remove redefined
+++ remove compiled, 25 + 16 bytes
remove
+++ repasc compiled, 39 + 28 bytes
repasc
+++ repeats compiled, 23 + 12 bytes
repeats
+++ revpr redefined
+++ revpr compiled, 4 + 8 bytes
revpr
+++ smember redefined
+++ smember compiled, 18 + 12 bytes
smember
+++ smemql redefined
+++ smemql compiled, 23 + 12 bytes
smemql
+++ smemqlp redefined
+++ smemqlp compiled, 27 + 12 bytes
smemqlp
*** spaces not defined (LOSE flag) 
nil
*** subla not defined (LOSE flag) 
nil
+++ xnp redefined
+++ xnp compiled, 14 + 8 bytes
xnpnilnilnil
*** iplus2 not defined (LOSE flag) 
nil
*** itimes2 not defined (LOSE flag) 
nil
*** isub1 not defined (LOSE flag) 
nil
*** iadd1 not defined (LOSE flag) 
nilnil
*** iminus not defined (LOSE flag) 
nil
*** idifference not defined (LOSE flag) 
nil
*** iquotient not defined (LOSE flag) 
nil
*** iremainder not defined (LOSE flag) 
nil
*** igreaterp not defined (LOSE flag) 
nil
*** ilessp not defined (LOSE flag) 
nil
*** iminusp not defined (LOSE flag) 
niliequalnilnilnilnilnilnilnilnilnilnilnilnilnilnilnilnil(idifference)(iminus)(
iminus)nilnilnil
*** gcdn not defined (LOSE flag) 
nilnilnilnilnilnil
+++ set!-general!-modulus compiled, 29 + 28 bytes
set-general-modulus
+++ general!-modular!-plus redefined
+++ general!-modular!-plus compiled, 13 + 12 bytes
general-modular-plus
+++ general!-modular!-difference compiled, 12 + 12 bytes
general-modular-difference
+++ general!-modular!-number redefined
+++ general!-modular!-number compiled, 13 + 12 bytes
general-modular-number
+++ general!-modular!-times redefined
+++ general!-modular!-times compiled, 15 + 12 bytes
general-modular-times
+++ general!-modular!-reciprocal redefined
+++ general!-modular!-reciprocal compiled, 25 + 28 bytes
general-modular-reciprocal
+++ general!-modular!-quotient redefined
+++ general!-modular!-quotient compiled, 6 + 16 bytes
general-modular-quotient
+++ general!-modular!-minus compiled, 8 + 16 bytes
general-modular-minus
+++ general!-reciprocal!-by!-gcd compiled, 46 + 36 bytes
general-reciprocal-by-gcd
+++ reverse!-num compiled, 29 + 20 bytes
reverse-numnil[nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil]841221061419513311715
+++ reverse!-num1 compiled, 81 + 32 bytes
reverse-num1nil(reverse-num)1simpiden
+++ rnreverse!-num!* compiled, 19 + 24 bytes
rnreverse-num*simpreverse-num
+++ simpreverse!-num compiled, 28 + 36 bytes
simpreverse-num
+++ general!-modular!-expt compiled, 93 + 52 bytes
general-modular-exptnilnilnilnilnilnil[nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil
nil nil nil nil nil]1000000001.0e-8nil
+++ random_new_seed compiled, 147 + 60 bytes
random_new_seed
+++ next!-random!-number compiled, 50 + 32 bytes
next-random-number
+++ random compiled, 76 + 32 bytes
randomnilnilnilnilnilnil
+++ set!-modulus compiled as link to set-general-modulus
set-modulus
*** set-small-modulus not defined (LOSE flag) 
nil
*** modular-plus not defined (LOSE flag) 
nil
*** modular-difference not defined (LOSE flag) 
nil
*** modular-number not defined (LOSE flag) 
nil
*** modular-times not defined (LOSE flag) 
nil
*** modular-reciprocal not defined (LOSE flag) 
nil
+++ reciprocal!-by!-gcd compiled, 49 + 36 bytes
reciprocal-by-gcd
*** modular-quotient not defined (LOSE flag) 
nil
*** modular-minus not defined (LOSE flag) 
nil
*** modular-expt not defined (LOSE flag) 
nilnilnilnilnilnilnilnil1040nil(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59
61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167
173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277
281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401
409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523
541 547 557 563 569 571 577 587 593 599 601 607 613 617 619 631 641 643 647 653
659 661 673 677 683 691 701 709 719 727 733 739 743 751 757 761 769 773 787 797
809 811 821 823 827 829 839 853 857 859 863 877 881 883 887 907 911 919 929 937
941 947 953 967 971 977 983 991 997 1009 1013 1019 1021 1031 1033 1039 1049 1051
1061 1063 1069 1087 1091 1093 1097 1103 1109 1117 1123 1129 1151 1153 1163 1171
1181 1187 1193 1201 1213 1217 1223 1229 1231 1237 1249 1259 1277 1279 1283 1289
1291 1297 1301 1303 1307 1319 1321 1327 1361 1367 1373 1381 1399 1409 1423 1427
1429 1433 1439 1447 1451 1453 1459 1471 1481 1483 1487 1489 1493 1499 1511 1523
1531 1543 1549 1553 1559 1567 1571 1579 1583 1597 1601 1607 1609 1613 1619 1621
1627 1637 1657 1663 1667 1669 1693 1697 1699 1709 1721 1723 1733 1741 1747 1753
1759 1777 1783 1787 1789 1801 1811 1823 1831 1847 1861 1867 1871 1873 1877 1879
1889 1901 1907 1913 1931 1933 1949 1951 1973 1979 1987 1993 1997 1999 2003 2011
2017 2027 2029 2039 2053 2063 2069 2081 2083 2087 2089 2099 2111 2113 2129 2131
2137 2141 2143 2153 2161 2179 2203 2207 2213 2221 2237 2239 2243 2251 2267 2269
2273 2281 2287 2293 2297 2309 2311 2333 2339 2341 2347 2351 2357 2371 2377 2381
2383 2389 2393 2399 2411 2417 2423 2437 2441 2447 2459 2467 2473 2477 2503 2521
2531 2539 2543 2549 2551 2557 2579 2591 2593 2609 2617 2621 2633 2647 2657 2659
2663 2671 2677 2683 2687 2689 2693 2699 2707 2711 2713 2719 2729 2731 2741 2749
2753 2767 2777 2789 2791 2797 2801 2803 2819 2833 2837 2843 2851 2857 2861 2879
2887 2897 2903 2909 2917 2927 2939 2953 2957 2963 2969 2971 2999 3001 3011 3019
3023 3037 3041 3049 3061 3067 3079 3083 3089 3109 3119 3121 3137 3163 3167 3169
3181 3187 3191 3203 3209 3217 3221 3229 3251 3253 3257 3259 3271 3299 3301 3307
3313 3319 3323 3329 3331 3343 3347 3359 3361 3371 3373 3389 3391 3407 3413 3433
3449 3457 3461 3463 3467 3469 3491 3499 3511 3517 3527 3529 3533 3539 3541 3547
3557 3559 3571)357112752041
+++ add!-factor compiled, 33 + 12 bytes
add-factor
+++ zfactor compiled, 4 + 16 bytes
zfactor
+++ zfactor1 compiled, 104 + 36 bytes
zfactor1
+++ mcfactor!* compiled, 85 + 44 bytes
mcfactor*
+++ mcfactor compiled, 152 + 24 bytes
mcfactor
+++ primep compiled, 71 + 48 bytes
primepnil
+++ internal!-primep compiled, 11 + 20 bytes
internal-primep
+++ small!-primep compiled, 115 + 36 bytes
small-primep
+++ general!-primep compiled, 116 + 48 bytes
general-primep
+++ nextprime compiled, 61 + 48 bytes
nextprimenextprime
+++ nrootnn compiled, 175 + 44 bytes
nrootnnnilnilnil
*** sort not defined (LOSE flag) 
nil
*** stable-sort not defined (LOSE flag) 
nil
*** stable-sortip not defined (LOSE flag) 
nil
+++ idsort compiled, 4 + 16 bytes
idsort
+++ idcompare compiled, 10 + 12 bytes
idcompare
+++ idcomp1 compiled, 22 + 12 bytes
idcomp1
+++ lesspcar compiled, 4 + 8 bytes
lesspcar
+++ lesspcdr compiled, 4 + 8 bytes
lesspcdr
+++ lessppair compiled, 12 + 8 bytes
lessppair
+++ greaterpcdr compiled, 4 + 8 bytes
greaterpcdr
+++ lesspcdadr compiled, 6 + 8 bytes
lesspcdadr
+++ lesspdeg compiled, 19 + 12 bytes
lesspdeg
+++ ordopcar compiled, 4 + 12 bytes
ordopcar
+++ orderfactors compiled, 12 + 12 bytes
orderfactors
+++ sort!-factors compiled, 4 + 16 bytes
sort-factorsnilnilnilnilnilnil
+++ reval redefined
+++ reval compiled, 4 + 16 bytes
reval
+++ aeval redefined
+++ aeval compiled, 4 + 12 bytes
aeval
+++ aeval!* redefined
+++ aeval!* compiled, 10 + 20 bytes
aeval*
+++ reval1 redefined
+++ reval1 compiled, 288 + 148 bytes
reval1nil
+++ rmmbreval compiled, 164 + 64 bytes
rmmbreval
+++ remember compiled, 49 + 44 bytes
rememberrlis
+++ recursiveerror compiled, 9 + 20 bytes
recursiveerrorcar
+++ opfneval compiled, 148 + 36 bytes
opfnevalnil
+++ reval2 redefined
+++ reval2 compiled, 24 + 32 bytes
reval2
+++ getrtype redefined
+++ getrtype compiled, 97 + 52 bytes
getrtype
*** local variable u in procedure getrtype1 not used 

+++ getrtype1 redefined
+++ getrtype1 compiled, 1 + 8 bytes
getrtype1
+++ getrtype2 redefined
+++ getrtype2 compiled, 39 + 28 bytes
getrtype2nil
+++ rtypecar compiled, 19 + 20 bytes
rtypecar(rtypecar)nil(quotient times *sq)
+++ getrtypecar redefined
+++ getrtypecar compiled, 3 + 12 bytes
getrtypecar
+++ getrtypeor redefined
+++ getrtypeor compiled, 11 + 12 bytes
getrtypeor
+++ !*eqn2a compiled, 43 + 32 bytes
*eqn2a
+++ prepsqyy compiled, 9 + 16 bytes
prepsqyy
+++ getelv redefined
+++ getelv compiled, 40 + 16 bytes
getelv
+++ setelv compiled, 41 + 16 bytes
setelv
+++ reval_without_mod redefined
+++ reval_without_mod compiled, 15 + 24 bytes
reval_without_mod
+++ revlis redefined
+++ revlis compiled, 32 + 12 bytes
revlis
+++ revop1 compiled, 8 + 16 bytes
revop1
+++ mk!*sq redefined
+++ mk!*sq compiled, 44 + 40 bytes
mk*sq
+++ !*sq_9w90xflmdime compiled, 4 + 12 bytes
*sq
+++ expchk redefined
+++ expchk compiled, 6 + 16 bytes
expchk
+++ lengthreval compiled, 79 + 72 bytes
lengthrevallengthreval
+++ yetunknowntypeeval compiled, 5 + 16 bytes
yetunknowntypeeval
+++ eval!-yetunknowntypeexpr compiled, 82 + 36 bytes
eval-yetunknowntypeexpryetunknowntypeevalnilnilnil
+++ evalequal compiled, 30 + 20 bytes
evalequalevalequalquoteequation
*** local variable u in procedure quoteequation not used 
+++ quoteequation compiled, 2 + 12 bytes
quoteequation
+++ evalgreaterp compiled, 36 + 40 bytes
evalgreaterpevalgreaterp
+++ evalgeq compiled, 4 + 16 bytes
evalgeqevalgeq
+++ evallessp compiled, 3 + 12 bytes
evallesspevallessp
+++ evalleq compiled, 4 + 16 bytes
evalleqevalleq
+++ evalneq compiled, 4 + 16 bytes
evalneqevalneq
+++ evalnumberp compiled, 32 + 20 bytes
evalnumberpevalnumberpnil
+++ ratnump compiled, 13 + 12 bytes
ratnumpnilnilnilnilnilnilnilnilt10000((t (rmsubs)))(cons nil nil)0(simpcount*
alglist* subfg* *sub2 tstack* fname* outl*)1000
+++ noncom compiled, 16 + 16 bytes
noncom
+++ noncom1 compiled, 8 + 20 bytes
noncom1rlis
+++ simp!* redefined
+++ simp!* compiled, 106 + 92 bytes
simp*
+++ rationalizei redefined
+++ rationalizei compiled, 66 + 48 bytes
rationalizei
+++ subs2 redefined
+++ subs2 compiled, 69 + 60 bytes
subs2
+++ simp redefined
+++ simp compiled, 512 + 260 bytes
simp
+++ opmtchrevop redefined
+++ opmtchrevop compiled, 16 + 24 bytes
opmtchrevop
+++ simp_without_resimp redefined
+++ simp_without_resimp compiled, 9 + 20 bytes
simp_without_resimpgetelvsetelv
+++ getinfix compiled, 8 + 12 bytes
getinfix
+++ !*ssave redefined
+++ !*ssave compiled, 17 + 24 bytes
*ssave
+++ numlis redefined
+++ numlis compiled, 13 + 8 bytes
numlis
+++ simpatom redefined
+++ simpatom compiled, 149 + 112 bytes
simpatomnil
+++ mkop compiled, 41 + 52 bytes
mkop
+++ operatorp compiled, 5 + 16 bytes
operatorp
+++ simpcar redefined
+++ simpcar compiled, 3 + 12 bytes
simpcarsimpcar
+++ share compiled, 100 + 64 bytes
share
*** boundp not defined (LOSE flag) 
nil
+++ setifngfl compiled, 11 + 16 bytes
setifngflnilnilnil
+++ simpexpon redefined
+++ simpexpon compiled, 4 + 16 bytes
simpexpon
+++ simpexpon1 redefined
+++ simpexpon1 compiled, 22 + 32 bytes
simpexpon1
+++ simpexpt redefined
+++ simpexpt compiled, 25 + 40 bytes
simpexpt
+++ simpexpt1 compiled, 281 + 128 bytes
simpexpt1
+++ simpexptfctr compiled, 33 + 24 bytes
simpexptfctr
+++ simpexpt11 compiled, 43 + 28 bytes
simpexpt11
+++ simpexpt2 compiled, 340 + 124 bytes
simpexpt2
+++ posnump compiled, 26 + 24 bytes
posnump
+++ posnumlistp compiled, 13 + 12 bytes
posnumlistpsimpexpt
+++ split!-sign compiled, 49 + 20 bytes
split-sign
+++ conv2gid compiled, 51 + 24 bytes
conv2gid
+++ conv2gi2 compiled, 116 + 40 bytes
conv2gi2
+++ simpx1 compiled, 497 + 140 bytes
simpx1
+++ expf compiled, 75 + 44 bytes
expf
+++ simprad compiled, 162 + 96 bytes
simprad
+++ radfa compiled, 50 + 28 bytes
radfa
+++ radfb compiled, 20 + 32 bytes
radfb
+++ mkrootlsq compiled, 16 + 36 bytes
mkrootlsq
+++ mkrootlsq1 compiled, 27 + 24 bytes
mkrootlsq1
+++ mkrootsq compiled, 105 + 76 bytes
mkrootsq
+++ mkrootsql compiled, 35 + 28 bytes
mkrootsql
+++ check!-radf!-sign compiled, 48 + 32 bytes
check-radf-sign
+++ radf compiled, 247 + 136 bytes
radf
+++ radf1 compiled, 59 + 36 bytes
radf1
+++ radd compiled, 72 + 44 bytes
radd
+++ iroot compiled, 12 + 12 bytes
iroot
+++ iroot!-ceiling compiled, 12 + 12 bytes
iroot-ceiling
+++ mkexpt compiled, 9 + 16 bytes
mkexpt
+++ nrootn compiled, 66 + 24 bytes
nrootn
+++ simpiden redefined
+++ simpiden compiled, 340 + 120 bytes
simpidennil
+++ not_imag_num compiled, 73 + 76 bytes
not_imag_numnil
+++ domainvalchk redefined
+++ domainvalchk compiled, 35 + 24 bytes
domainvalchk
+++ valuechk redefined
+++ valuechk compiled, 67 + 52 bytes
valuechk
+++ znumrnil compiled, 9 + 16 bytes
znumrnil
+++ znumr compiled, 42 + 16 bytes
znumr
+++ opfchk!! compiled, 169 + 112 bytes
opfchk!
+++ intconv compiled, 14 + 20 bytes
intconv
+++ simpcr compiled, 37 + 40 bytes
simpcr
+++ simprd compiled, 14 + 24 bytes
simprd
+++ simplist compiled, 190 + 40 bytes
simplist
+++ mconv compiled, 5 + 20 bytes
mconv
+++ dmconv0 compiled, 15 + 24 bytes
dmconv0
+++ dmconv1 compiled, 57 + 20 bytes
dmconv1
+++ mconv1 compiled, 24 + 12 bytes
mconv1
+++ drnconv compiled, 24 + 12 bytes
drnconv
+++ simpabs compiled, 47 + 40 bytes
simpabs
+++ simpabs1 compiled, 183 + 72 bytes
simpabs1
+++ sign!-abs compiled, 26 + 24 bytes
sign-abs
+++ constant_exprp compiled, 66 + 52 bytes
constant_exprp
+++ constant_expr_listp compiled, 41 + 24 bytes
constant_expr_listp
+++ mkabsf0 compiled, 9 + 24 bytes
mkabsf0
+++ mkabsf1 compiled, 76 + 64 bytes
mkabsf1
+++ mkabsfd compiled, 33 + 48 bytes
mkabsfd
+++ positive!-sfp compiled, 43 + 36 bytes
positive-sfp
+++ positive!-powp compiled, 12 + 16 bytes
positive-powp
+++ split!-comfac!-part compiled, 6 + 16 bytes
split-comfac-part
+++ split!-comfac compiled, 71 + 32 bytes
split-comfacsimpabs
+++ simpdiff redefined
+++ simpdiff compiled, 10 + 24 bytes
simpdiffsimpdiff
+++ simpminus redefined
+++ simpminus compiled, 6 + 24 bytes
simpminussimpminus
+++ simpplus redefined
+++ simpplus compiled, 24 + 28 bytes
simpplussimpplus
+++ ckpreci!# redefined
+++ ckpreci!# compiled, 31 + 20 bytes
ckpreci#
+++ timesip redefined
+++ timesip compiled, 11 + 16 bytes
timesip
+++ ckprec2!# compiled, 46 + 24 bytes
ckprec2#nilmake:ibfi2bf:
+++ !?a2bf compiled, 19 + 20 bytes
?a2bf
+++ ckprec3!# compiled, 30 + 16 bytes
ckprec3#
+++ simpquot redefined
+++ simpquot compiled, 102 + 80 bytes
simpquotsimpquot
+++ simprecip redefined
+++ simprecip compiled, 15 + 36 bytes
simprecipsimprecip
+++ simpset compiled, 24 + 36 bytes
simpsetsimpset
+++ simpsqrt compiled, 80 + 80 bytes
simpsqrt
+++ xsimp redefined
+++ xsimp compiled, 4 + 16 bytes
xsimp
+++ simptimes redefined
+++ simptimes compiled, 70 + 36 bytes
simptimessimptimes
+++ resimp redefined
+++ resimp compiled, 9 + 20 bytes
resimp
+++ resimp1 redefined
+++ resimp1 compiled, 13 + 24 bytes
resimp1
+++ simp!*sq compiled, 11 + 16 bytes
simp*sqsimp*sqnilnilnilnilnil((t (rmsubs)) (nil (rmsubs)))
+++ exptchksq redefined
+++ exptchksq compiled, 28 + 24 bytes
exptchksq
+++ exptchk redefined
+++ exptchk compiled, 22 + 20 bytes
exptchk
+++ exptchk0 compiled, 60 + 28 bytes
exptchk0
+++ expttermp compiled, 12 + 16 bytes
expttermp
+++ expttermp1 compiled, 24 + 12 bytes
expttermp1
+++ exptunwind compiled, 58 + 32 bytes
exptunwind
+++ mergex compiled, 96 + 36 bytes
mergex
+++ mergey compiled, 58 + 44 bytes
mergey
+++ intcoeff compiled, 26 + 12 bytes
intcoeff
+++ meldx compiled, 34 + 20 bytes
meldx
+++ meldx0 compiled, 22 + 12 bytes
meldx0
+++ meldx1 compiled, 26 + 12 bytes
meldx1nilnilnilnilnilnilnil
+++ simplog compiled, 47 + 56 bytes
simplogsimplognil((nil (rmsubs)) (t (rmsubs)))((nil (rmsubs)) (t (rmsubs)))
+++ simplogi compiled, 159 + 96 bytes
simplogi
+++ one_complexlist compiled, 25 + 20 bytes
one_complexlist
+++ multsq!* compiled, 8 + 20 bytes
multsq*
+++ simplogsq compiled, 56 + 60 bytes
simplogsq
+++ simplog2 compiled, 98 + 72 bytes
simplog2
+++ simplogn compiled, 52 + 36 bytes
simplogn
+++ mergeminus compiled, 35 + 16 bytes
mergeminus
+++ formlog compiled, 11 + 20 bytes
formlog
+++ formlogterm compiled, 81 + 52 bytes
formlogterm
+++ formlog2 compiled, 11 + 24 bytes
formlog2nilnilnilnilnilnil
+++ clogsq!* compiled, 30 + 52 bytes
clogsq*
+++ logsort compiled, 28 + 48 bytes
logsort
+++ comblog compiled, 61 + 40 bytes
comblog
+++ clogsq compiled, 8 + 12 bytes
clogsq
+++ clogf compiled, 48 + 32 bytes
clogf
+++ clogf1 compiled, 31 + 28 bytes
clogf1
+++ clogf2 compiled, 324 + 80 bytes
clogf2
+++ logarg compiled, 9 + 16 bytes
logarg
+++ coefgcd compiled, 20 + 12 bytes
coefgcdnilnilnilnil
+++ subeval compiled, 41 + 48 bytes
subeval
+++ subeval0 compiled, 157 + 76 bytes
subeval0
+++ subeval1 compiled, 62 + 60 bytes
subeval1subeval
+++ subsq compiled, 28 + 32 bytes
subsq
+++ subs2!* redefined
+++ subs2!* compiled, 10 + 20 bytes
subs2*
+++ subf compiled, 137 + 68 bytes
subf
+++ noncomexpf compiled, 25 + 16 bytes
noncomexpf
+++ subf1 redefined
+++ subf1 compiled, 462 + 128 bytes
subf1
+++ wtchk redefined
+++ wtchk compiled, 30 + 32 bytes
wtchk
+++ subsublis compiled, 146 + 40 bytes
subsublis
+++ subsubf compiled, 152 + 48 bytes
subsubf
+++ listsub compiled, 40 + 16 bytes
listsublistsubsubsubfsubsubfnilnilnilnil
+++ ordad redefined
+++ ordad compiled, 33 + 12 bytes
ordad
+++ ordn compiled, 22 + 16 bytes
ordn
+++ ord2 redefined
+++ ord2 compiled, 10 + 12 bytes
ord2
*** ordp not defined (LOSE flag) 
nil
+++ ordpl compiled, 23 + 16 bytes
ordpl
+++ ordpv compiled, 16 + 16 bytes
ordpv
+++ ordpv1 compiled, 37 + 12 bytes
ordpv1
+++ ordop redefined
+++ ordop compiled, 23 + 20 bytes
ordop
+++ ordpp redefined
+++ ordpp compiled, 35 + 20 bytes
ordpp
+++ ordpa redefined
+++ ordpa compiled, 74 + 24 bytes
ordpanilnilnilnilnilnilnil(let match clear saveas such)nilnil
+++ forallstat compiled, 60 + 60 bytes
forallstat
+++ forall compiled, 61 + 36 bytes
forall
+++ arbstat compiled, 8 + 32 bytes
arbstatarbstat
+++ newvar compiled, 23 + 24 bytes
newvar
+++ formforall compiled, 71 + 60 bytes
formforall
+++ def compiled, 50 + 48 bytes
defrlis(forall)(forall)nil
+++ formlet1 compiled, 114 + 32 bytes
formlet1
+++ requote compiled, 15 + 20 bytes
requote
+++ requote1 redefined
+++ requote1 compiled, 52 + 20 bytes
requote1
+++ !*s2arg redefined
+++ !*s2arg compiled, 51 + 24 bytes
*s2argformletformclearformmatch
+++ formclear compiled, 9 + 16 bytes
formclear
+++ formclear1 compiled, 63 + 24 bytes
formclear1
+++ formlet compiled, 9 + 16 bytes
formlet
+++ formmatch compiled, 9 + 16 bytes
formmatch
+++ let compiled as link to let0
let
+++ let0 compiled, 9 + 20 bytes
let0
+++ let00 compiled, 23 + 36 bytes
let00
+++ let1 compiled, 109 + 80 bytes
let1
+++ revalruletst compiled, 14 + 24 bytes
revalruletst
+++ let2 redefined
+++ let2 compiled, 168 + 96 bytes
let2
+++ let3 redefined
+++ let3 compiled, 125 + 52 bytes
let3
+++ letscalar redefined
+++ letscalar compiled, 249 + 168 bytes
letscalar
+++ letexprn compiled, 322 + 132 bytes
letexprnnil
+++ clearrules compiled, 10 + 20 bytes
clearrulesnil
+++ rule!-list compiled, 128 + 84 bytes
rule-list
+++ rule!* compiled, 111 + 64 bytes
rule*
+++ rule compiled, 127 + 64 bytes
ruleniltildepri
+++ tildepri compiled, 6 + 16 bytes
tildeprinilnilnil
+++ equalreplaceby compiled, 4 + 12 bytes
equalreplacebyequalreplacebynilnil
+++ formreplaceby compiled, 26 + 24 bytes
formreplacebyformreplacebynilnil
+++ formwhen compiled, 24 + 28 bytes
formwhenformwhennilevalwhereexp
+++ evalwhereexp compiled, 17 + 28 bytes
evalwhereexpnil
+++ evalletsub compiled, 15 + 32 bytes
evalletsub
+++ evalletsub2 compiled, 17 + 24 bytes
evalletsub2
+++ set_rules compiled, 88 + 56 bytes
set_rules
+++ restore_rules compiled, 99 + 56 bytes
restore_rules
+++ restore_props compiled, 32 + 16 bytes
restore_props
+++ resimpcar compiled, 3 + 12 bytes
resimpcar
+++ validrule compiled, 9 + 12 bytes
validrule
+++ validrule1 compiled, 56 + 20 bytes
validrule1
+++ remove!-free!-vars!* redefined
+++ remove!-free!-vars!* compiled, 11 + 24 bytes
remove-free-vars*
+++ remove!-free!-vars redefined
+++ remove!-free!-vars compiled, 98 + 52 bytes
remove-free-vars
+++ remove!-free!-vars!-l redefined
+++ remove!-free!-vars!-l compiled, 25 + 20 bytes
remove-free-vars-l
+++ get!-free!-form compiled, 49 + 32 bytes
get-free-form
+++ term!-split compiled, 25 + 12 bytes
term-split
+++ tpowadd compiled, 19 + 8 bytes
tpowadd
+++ frvarsof redefined
+++ frvarsof compiled, 30 + 12 bytes
frvarsof
+++ simp0 redefined
+++ simp0 compiled, 73 + 64 bytes
simp0nil
+++ let!-prepf compiled, 45 + 16 bytes
let-prepf
+++ match compiled, 9 + 20 bytes
match
+++ match00 compiled, 29 + 24 bytes
match00
+++ clear compiled, 24 + 40 bytes
clear
+++ clear1 compiled, 105 + 52 bytes
clear1
+++ typelet compiled, 191 + 84 bytes
typelet
+++ setk redefined
+++ setk compiled, 34 + 28 bytes
setk
+++ setk0 compiled, 79 + 44 bytes
setk0
+++ setk1 compiled, 185 + 92 bytes
setk1
+++ put!-avalue redefined
+++ put!-avalue compiled, 51 + 48 bytes
put-avalue
+++ sq_member redefined
+++ sq_member compiled, 10 + 12 bytes
sq_member
+++ sf_member redefined
+++ sf_member compiled, 29 + 12 bytes
sf_member
+++ mvar_member redefined
+++ mvar_member compiled, 16 + 12 bytes
mvar_member
+++ arglist_member redefined
+++ arglist_member compiled, 17 + 12 bytes
arglist_member
+++ put!-kvalue redefined
+++ put!-kvalue compiled, 31 + 36 bytes
put-kvalue
+++ klistt redefined
+++ klistt compiled, 17 + 20 bytes
klistt
+++ kernlp redefined
+++ kernlp compiled, 15 + 8 bytes
kernlp
+++ xadd compiled, 75 + 20 bytes
xadd
+++ updoldrules compiled, 75 + 32 bytes
updoldrules
+++ xadd!* compiled, 120 + 44 bytes
xadd*
+++ powlisp compiled, 20 + 12 bytes
powlisp
+++ rsubla compiled, 25 + 12 bytes
rsublanilnilnilnilnilt
+++ equalreval compiled, 28 + 24 bytes
equalrevalequalrevalquoteequationeqnerr
+++ eqnerr compiled, 4 + 16 bytes
eqnerrevaleqn
+++ evaleqn compiled, 184 + 68 bytes
evaleqn
+++ evaleqn1 compiled, 27 + 20 bytes
evaleqn1
+++ lhs compiled, 4 + 16 bytes
lhs
+++ rhs compiled, 4 + 16 bytes
rhs
+++ lhs!-rhs compiled, 28 + 20 bytes
lhs-rhsnil
+++ eqnsub compiled, 61 + 24 bytes
eqnsubeqnsubeqnlength
+++ eqnlength compiled, 3 + 8 bytes
eqnlengthnilnilnilnilnil(t)
+++ rmsubs redefined
+++ rmsubs compiled, 11 + 20 bytes
rmsubsnilnilnilnil
+++ formopr compiled, 21 + 32 bytes
formoprformopr
+++ operator compiled, 15 + 12 bytes
operatornil
+++ remopr compiled, 66 + 60 bytes
remoprnil
+++ den compiled, 7 + 20 bytes
den
+++ num compiled, 7 + 20 bytes
numnilnilformsaveas
+++ formsaveas compiled, 9 + 16 bytes
formsaveas
+++ saveas compiled, 69 + 40 bytes
saveasnilnilnilnilnil5nilnilnilnilnil
+++ emtch redefined
+++ emtch compiled, 10 + 12 bytes
emtch
+++ opmtch redefined
+++ opmtch compiled, 112 + 32 bytes
opmtch
+++ mcharg redefined
+++ mcharg compiled, 70 + 32 bytes
mcharg
+++ mcharg1 redefined
+++ mcharg1 compiled, 86 + 52 bytes
mcharg1
+++ reform!-minus compiled, 41 + 16 bytes
reform-minus
+++ reform!-minus2 compiled, 51 + 20 bytes
reform-minus2
+++ mchcomb redefined
+++ mchcomb compiled, 176 + 48 bytes
mchcomb
+++ mchcomb2 compiled, 82 + 16 bytes
mchcomb2
+++ comb redefined
+++ comb compiled, 48 + 24 bytes
comb
+++ mcharg2 redefined
+++ mcharg2 compiled, 78 + 24 bytes
mcharg2
+++ msappend redefined
+++ msappend compiled, 42 + 8 bytes
msappend
+++ updtemplate redefined
+++ updtemplate compiled, 71 + 12 bytes
updtemplate
+++ reval!-without compiled, 33 + 36 bytes
reval-without
+++ mchk redefined
+++ mchk compiled, 173 + 48 bytes
mchk
+++ mchkopt redefined
+++ mchkopt compiled, 12 + 16 bytes
mchkopt
+++ mchkopt1 redefined
+++ mchkopt1 compiled, 108 + 16 bytes
mchkopt1(0 0)(1 1)((rule_error fraction with optional numerator) 1)((rule_error
exponential with optional base) 1)
+++ rule_error compiled, 7 + 20 bytes
rule_errornil
+++ mchkminus redefined
+++ mchkminus compiled, 69 + 48 bytes
mchkminus
+++ mkbin compiled, 16 + 8 bytes
mkbin
+++ mtp redefined
+++ mtp compiled, 22 + 16 bytes
mtp
+++ mchsarg redefined
+++ mchsarg compiled, 114 + 40 bytes
mchsarg
+++ noncomfree compiled, 22 + 16 bytes
noncomfree
+++ noncomperm redefined
+++ noncomperm compiled, 66 + 24 bytes
noncomperm
+++ noncomdel redefined
+++ noncomdel compiled, 11 + 16 bytes
noncomdel
+++ noncomdel1 compiled, 30 + 20 bytes
noncomdel1
+++ noncomp!* redefined
+++ noncomp!* compiled, 14 + 16 bytes
noncomp*nilnilnilnilnilnil
+++ prepsqxx redefined
+++ prepsqxx compiled, 4 + 16 bytes
prepsqxx
+++ negnumberchk redefined
+++ negnumberchk compiled, 15 + 12 bytes
negnumberchk
+++ prepsqx redefined
+++ prepsqx compiled, 8 + 20 bytes
prepsqx
+++ prepsq redefined
+++ prepsq compiled, 9 + 20 bytes
prepsq
+++ sqform redefined
+++ sqform compiled, 17 + 16 bytes
sqform
+++ prepf redefined
+++ prepf compiled, 11 + 20 bytes
prepf
+++ prepf1 redefined
+++ prepf1 compiled, 39 + 28 bytes
prepf1
+++ prepd redefined
+++ prepd compiled, 39 + 32 bytes
prepd
+++ prepd1 compiled, 9 + 12 bytes
prepd1
+++ exchk redefined
+++ exchk compiled, 7 + 12 bytes
exchk
+++ exchk1 redefined
+++ exchk1 compiled, 127 + 40 bytes
exchk1
+++ exchk2 redefined
+++ exchk2 compiled, 59 + 36 bytes
exchk2
+++ assoc2 compiled, 14 + 8 bytes
assoc2
+++ replus redefined
+++ replus compiled, 17 + 20 bytes
replus
+++ unplus redefined
+++ unplus compiled, 39 + 12 bytes
unplus
+++ retimes redefined
+++ retimes compiled, 30 + 32 bytes
retimes
+++ retimes1 redefined
+++ retimes1 compiled, 73 + 32 bytes
retimes1
+++ sqchk redefined
+++ sqchk compiled, 19 + 16 bytes
sqchkprepcadrprepexpt
+++ prepcadr compiled, 4 + 12 bytes
prepcadr
+++ prepexpt compiled, 8 + 12 bytes
prepexptnilnilnilnilnilniltt
+++ factor compiled, 6 + 20 bytes
factor
+++ factor1 compiled, 105 + 44 bytes
factor1
+++ remfac compiled, 6 + 16 bytes
remfacnil
+++ order compiled, 40 + 24 bytes
ordernil
+++ up compiled, 6 + 20 bytes
up
+++ down compiled, 6 + 20 bytes
down
+++ formop redefined
+++ formop compiled, 32 + 16 bytes
formop
+++ multop redefined
+++ multop compiled, 16 + 28 bytes
multoplcx
+++ quotof redefined
+++ quotof compiled, 133 + 48 bytes
quotof
+++ quotofd redefined
+++ quotofd compiled, 30 + 16 bytes
quotofd
+++ quotodd redefined
+++ quotodd compiled, 11 + 20 bytes
quotodd
+++ lowest!-terms compiled, 65 + 36 bytes
lowest-terms
+++ dcombine!* compiled, 14 + 12 bytes
dcombine*
+++ ckrn redefined
+++ ckrn compiled, 29 + 40 bytes
ckrn
+++ ckrn1 redefined
+++ ckrn1 compiled, 50 + 16 bytes
ckrn1
+++ gck2 redefined
+++ gck2 compiled, 111 + 40 bytes
gck2
+++ cdarx redefined
+++ cdarx compiled, 5 + 16 bytes
cdarx
+++ negf!* compiled, 11 + 24 bytes
negf*
+++ prepsq!* compiled, 235 + 96 bytes
prepsq*
+++ prepsq!*0 redefined
+++ prepsq!*0 compiled, 27 + 24 bytes
prepsq*0
+++ prepsq!*1 redefined
+++ prepsq!*1 compiled, 377 + 124 bytes
prepsq*1
+++ addfactors redefined
+++ addfactors compiled, 29 + 28 bytes
addfactors
+++ rmplus redefined
+++ rmplus compiled, 9 + 12 bytes
rmplus
+++ prepsq!*2 redefined
+++ prepsq!*2 compiled, 8 + 20 bytes
prepsq*2
+++ ckrn!* compiled, 36 + 24 bytes
ckrn*
+++ mkkl redefined
+++ mkkl compiled, 15 + 8 bytes
mkkl
+++ quotfm redefined
+++ quotfm compiled, 9 + 24 bytes
quotfmnilnilnilnil
+++ depend compiled, 4 + 16 bytes
depend
+++ nodepend compiled, 5 + 16 bytes
nodependnil
+++ depend1 compiled, 73 + 32 bytes
depend1
+++ depends redefined
+++ depends compiled, 92 + 36 bytes
depends
+++ ldepends redefined
+++ ldepends compiled, 18 + 12 bytes
ldepends
+++ dependsl compiled, 13 + 12 bytes
dependsl
+++ freeof redefined
+++ freeof compiled, 13 + 20 bytes
freeofnilnil
+++ depend0 compiled, 95 + 28 bytes
depend0nilnilnilnilnilansnilnil
+++ structr compiled, 189 + 104 bytes
structrnil
+++ structr1 compiled, 195 + 44 bytes
structr1
+++ structf compiled, 85 + 40 bytes
structf
+++ structk compiled, 45 + 20 bytes
structk
+++ subchk1 compiled, 27 + 12 bytes
subchk1
+++ subchk2 compiled, 34 + 16 bytes
subchk2
+++ structvar compiled, 26 + 20 bytes
structvarnilnilnilnilnilnilnil
+++ coeffeval compiled, 38 + 40 bytes
coeffevalcoeffeval
+++ coeff1 compiled, 175 + 96 bytes
coeff1
+++ coeffn compiled, 129 + 80 bytes
coeffnnilnilnilnilnilnilnil
+++ weight compiled, 223 + 68 bytes
weight
+++ wtlevel compiled, 56 + 40 bytes
wtlevelnilnilnilnilnilnil
+++ linear compiled, 28 + 20 bytes
linearnil
+++ formlnr compiled, 209 + 84 bytes
formlnr
+++ formseparate compiled, 57 + 24 bytes
formseparate
+++ expt!-separate compiled, 25 + 24 bytes
expt-separate
+++ expt!-separate1 compiled, 33 + 24 bytes
expt-separate1
+++ formlntms compiled, 36 + 24 bytes
formlntms
+++ formlnquot compiled, 264 + 60 bytes
formlnquot
+++ formlnrecip compiled, 107 + 52 bytes
formlnrecip
+++ mktimes compiled, 9 + 12 bytes
mktimes
+++ reval!* compiled, 9 + 24 bytes
reval*nilnilnilnilnil(sqrt)
+++ mksqrt compiled, 33 + 56 bytes
mksqrtnil
+++ sign!-of compiled, 11 + 12 bytes
sign-of
+++ simp!-sign compiled, 52 + 60 bytes
simp-sign
+++ simp!-sign!-times compiled, 67 + 36 bytes
simp-sign-times
+++ simp!-sign!-plus compiled, 61 + 28 bytes
simp-sign-plusnil
+++ rd!-sign compiled, 89 + 84 bytes
rd-signnilnilsimp-sign(list (replaceby (sign (~ x)) (when (cond ((evalgreaterp (
aeval (quote x)) 0) 1) ((evallessp (aeval (quote x)) 0) (minus 1)) (t 0)) (and (
numberp x) (equal (impart x) 0)))) (replaceby (sign (minus (~ x))) (minus (sign
x))) (replaceby (sign (quotient (~ x) (~ y))) (when (times (sign x) (sign y)) (
and (neq y 1) (or (numberp (sign x)) (numberp (sign y)))))) (replaceby (sign (
expt (~ x) (~ n))) (when 1 (and (fixp (quotient n 2)) (symbolic (not *complex)))
)) (replaceby (sign (expt (~ x) (~ n))) (when (expt (sign x) n) (and (fixp n) (
numberp (sign x))))) (replaceby (sign (expt (~ x) (~ n))) (when (sign x) (and (
fixp n) (symbolic (not *complex))))) (replaceby (sign (sqrt (~ a))) (when 1 (
equal (sign a) 1))) (replaceby (sign (expt (~ a) (~ x))) (when 1 (and (equal (
sign a) 1) (equal (impart x) 0)))) (replaceby (sign (~ a)) (when (rd-sign a) (
rd-sign a))) (replaceby (expt (abs (~ x)) 2) (when (expt x 2) (symbolic (not
*precise)))))nilnilnilnilnilnilnilnil(acos asin atan acosh asinh atanh acot cos
sin tan sec sech csc csch cot acot coth acoth cosh sinh tanh asec acsc asech
acsch)nilnilnilnilnilnilnilnilnilt
+++ knowledge_about compiled, 69 + 60 bytes
knowledge_aboutnil
+++ trigquot compiled, 72 + 36 bytes
trigquotnilnilnilnilnilnilnil(list (replaceby (acos 1) 0) (replaceby (acos (
quotient (plus (sqrt 6) (sqrt 2)) 4)) (quotient pi 12)) (replaceby (acos (
quotient (sqrt 3) 2)) (quotient pi 6)) (replaceby (acos (quotient (sqrt 2) 2)) (
quotient pi 4)) (replaceby (acos (quotient 1 2)) (quotient pi 3)) (replaceby (
acos (quotient (plus (sqrt 6) (minus (sqrt 2))) 4)) (quotient (times 5 pi) 12))
(replaceby (acos 0) (quotient pi 2)) (replaceby (acos (quotient (plus (minus (
sqrt 6)) (sqrt 2)) 4)) (quotient (times 7 pi) 12)) (replaceby (acos (quotient (
plus (minus (sqrt 6)) (minus (sqrt 2))) 4)) (quotient (times 11 pi) 12)))nilnil(
list (replaceby (atan (quotient (plus (sqrt 3) (minus 1)) (plus (sqrt 3) 1))) (
quotient pi 12)) (replaceby (atan (quotient 1 (sqrt 3))) (quotient pi 6)) (
replaceby (atan 1) (quotient pi 4)) (replaceby (atan (sqrt 3)) (quotient pi 3))
(replaceby (atan (quotient (plus (sqrt 3) 1) (plus (sqrt 3) (minus 1)))) (
quotient (times 5 pi) 12)))nilnil(*sq ((((pi . 1) . 1)) . 1) t)0nilnilnilnilnil
nilnilnilnilnilnilnilnil(list (replaceby (sin (atan (~ u))) (quotient u (sqrt (
plus 1 (expt u 2))))) (replaceby (cos (atan (~ u))) (quotient 1 (sqrt (plus 1 (
expt u 2))))) (replaceby (sin (times 2 (atan (~ u)))) (times 2 (quotient u (plus
1 (expt u 2))))) (replaceby (cos (times 2 (atan (~ u)))) (quotient (difference 1
(expt u 2)) (plus 1 (expt u 2)))) (replaceby (sin (times (~ n) (atan (~ u)))) (
when (plus (times (sin (times (difference n 2) (atan u))) (quotient (difference
1 (expt u 2)) (plus 1 (expt u 2)))) (times (cos (times (difference n 2) (atan u)
)) 2 (quotient u (plus 1 (expt u 2))))) (and (fixp n) (greaterp n 2)))) (
replaceby (cos (times (~ n) (atan (~ u)))) (when (difference (times (cos (times
(difference n 2) (atan u))) (quotient (difference 1 (expt u 2)) (plus 1 (expt u
2)))) (times (sin (times (difference n 2) (atan u))) 2 (quotient u (plus 1 (expt
u 2))))) (and (fixp n) (greaterp n 2)))) (replaceby (sin (acos (~ u))) (sqrt (
difference 1 (expt u 2)))) (replaceby (cos (asin (~ u))) (sqrt (difference 1 (
expt u 2)))) (replaceby (sin (times 2 (acos (~ u)))) (times 2 u (sqrt (
difference 1 (expt u 2))))) (replaceby (cos (times 2 (acos (~ u)))) (difference
(times 2 (expt u 2)) 1)) (replaceby (sin (times 2 (asin (~ u)))) (times 2 u (
sqrt (difference 1 (expt u 2))))) (replaceby (cos (times 2 (asin (~ u)))) (
difference 1 (times 2 (expt u 2)))) (replaceby (sin (times (~ n) (acos (~ u))))
(when (plus (times (sin (times (difference n 2) (acos u))) (difference (times 2
(expt u 2)) 1)) (times (cos (times (difference n 2) (acos u))) 2 u (sqrt (
difference 1 (expt u 2))))) (and (fixp n) (greaterp n 2)))) (replaceby (cos (
times (~ n) (acos (~ u)))) (when (difference (times (cos (times (difference n 2)
(acos u))) (difference (times 2 (expt u 2)) 1)) (times (sin (times (difference n
2) (acos u))) 2 u (sqrt (difference 1 (expt u 2))))) (and (fixp n) (greaterp n 2
)))) (replaceby (sin (times (~ n) (asin (~ u)))) (when (plus (times (sin (times
(difference n 2) (asin u))) (difference 1 (times 2 (expt u 2)))) (times (cos (
times (difference n 2) (asin u))) 2 u (sqrt (difference 1 (expt u 2))))) (and (
fixp n) (greaterp n 2)))) (replaceby (cos (times (~ n) (asin (~ u)))) (when (
difference (times (cos (times (difference n 2) (asin u))) (difference 1 (times 2
(expt u 2)))) (times (sin (times (difference n 2) (asin u))) 2 u (sqrt (
difference 1 (expt u 2))))) (and (fixp n) (greaterp n 2)))))(list (replaceby (
sinh (atanh (~ u))) (quotient u (sqrt (difference 1 (expt u 2))))) (replaceby (
cosh (atanh (~ u))) (quotient 1 (sqrt (difference 1 (expt u 2))))) (replaceby (
sinh (times 2 (atanh (~ u)))) (times 2 (quotient u (difference 1 (expt u 2)))))
(replaceby (cosh (times 2 (atanh (~ u)))) (quotient (plus 1 (expt u 2)) (
difference 1 (expt u 2)))) (replaceby (sinh (times (~ n) (atanh (~ u)))) (when (
plus (times (sinh (times (difference n 2) (atanh u))) (quotient (plus 1 (expt u
2)) (difference 1 (expt u 2)))) (times (cosh (times (difference n 2) (atanh u)))
2 (quotient u (difference 1 (expt u 2))))) (and (fixp n) (greaterp n 2)))) (
replaceby (cosh (times (~ n) (atanh (~ u)))) (when (plus (times (cosh (times (
difference n 2) (atanh u))) (quotient (plus 1 (expt u 2)) (difference 1 (expt u
2)))) (times (sinh (times (difference n 2) (atanh u))) 2 (quotient u (difference
1 (expt u 2))))) (and (fixp n) (greaterp n 2)))) (replaceby (sinh (acosh (~ u)))
(sqrt (difference (expt u 2) 1))) (replaceby (cosh (asinh (~ u))) (sqrt (plus 1
(expt u 2)))) (replaceby (sinh (times 2 (acosh (~ u)))) (times 2 u (sqrt (
difference (expt u 2) 1)))) (replaceby (cosh (times 2 (acosh (~ u)))) (
difference (times 2 (expt u 2)) 1)) (replaceby (sinh (times 2 (asinh (~ u)))) (
times 2 u (sqrt (plus 1 (expt u 2))))) (replaceby (cosh (times 2 (asinh (~ u))))
(plus 1 (times 2 (expt u 2)))) (replaceby (sinh (times (~ n) (acosh (~ u)))) (
when (plus (times (sinh (times (difference n 2) (acosh u))) (difference (times 2
(expt u 2)) 1)) (times (cosh (times (difference n 2) (acosh u))) 2 u (sqrt (
difference (expt u 2) 1)))) (and (fixp n) (greaterp n 2)))) (replaceby (cosh (
times (~ n) (acosh (~ u)))) (when (plus (times (cosh (times (difference n 2) (
acosh u))) (difference (times 2 (expt u 2)) 1)) (times (sinh (times (difference
n 2) (acosh u))) 2 u (sqrt (difference (expt u 2) 1)))) (and (fixp n) (greaterp
n 2)))) (replaceby (sinh (times (~ n) (asinh (~ u)))) (when (plus (times (sinh (
times (difference n 2) (asinh u))) (plus 1 (times 2 (expt u 2)))) (times (cosh (
times (difference n 2) (asinh u))) 2 u (sqrt (plus 1 (expt u 2))))) (and (fixp n
) (greaterp n 2)))) (replaceby (cosh (times (~ n) (asinh (~ u)))) (when (plus (
times (cosh (times (difference n 2) (asinh u))) (plus 1 (times 2 (expt u 2)))) (
times (sinh (times (difference n 2) (asinh u))) 2 u (sqrt (plus 1 (expt u 2)))))
(and (fixp n) (greaterp n 2)))) (replaceby (atanh (~ x)) (when (times (acosh (
quotient (plus 1 (expt x 2)) (difference 1 (expt x 2)))) (quotient (sign x) 2))
(and (symbolic (not *complex)) (freeof (acosh (quotient (plus 1 (expt x 2)) (
difference 1 (expt x 2)))) acosh)))))nil(list (replaceby (sin (times i (quotient
(~ (~ x)) (~ (~ y))))) (when (times i (sinh (quotient x y))) (equal (impart y) 0
))) (replaceby (cos (times i (quotient (~ (~ x)) (~ (~ y))))) (when (cosh (
quotient x y)) (equal (impart y) 0))) (replaceby (sinh (times i (quotient (~ (~
x)) (~ (~ y))))) (when (times i (sin (quotient x y))) (equal (impart y) 0))) (
replaceby (cosh (times i (quotient (~ (~ x)) (~ (~ y))))) (when (cos (quotient x
y)) (equal (impart y) 0))) (replaceby (asin (times i (quotient (~ (~ x)) (~ (~ y
))))) (when (times i (asinh (quotient x y))) (equal (impart y) 0))) (replaceby (
atan (times i (quotient (~ (~ x)) (~ (~ y))))) (when (times i (atanh (quotient x
y))) (and (equal (impart y) 0) (not (and (equal x 1) (equal y 1)))))) (replaceby
(asinh (times i (quotient (~ (~ x)) (~ (~ y))))) (when (times i (asin (quotient
x y))) (equal (impart y) 0))) (replaceby (atanh (times i (quotient (~ (~ x)) (~
(~ y))))) (when (times i (atan (quotient x y))) (equal (impart y) 0))))nil
*** arbint declared operator 
nilnilnilnilnilnil
+++ showrules compiled, 71 + 56 bytes
showrules
+++ showruleskvalue compiled, 78 + 24 bytes
showruleskvalue
+++ showonerule compiled, 32 + 28 bytes
showonerule
+++ showrulesopmtch compiled, 50 + 16 bytes
showrulesopmtch
+++ showrulesdfn compiled, 9 + 16 bytes
showrulesdfn
+++ showrulesdfn1 compiled, 39 + 24 bytes
showrulesdfn1
+++ showrulesdfn1!* compiled, 142 + 36 bytes
showrulesdfn1*
+++ mkrule compiled, 24 + 24 bytes
mkrule
+++ strip!~ compiled, 55 + 16 bytes
strip~
+++ separate!~ compiled, 53 + 16 bytes
separate~
+++ showrulesdfn2 compiled, 73 + 24 bytes
showrulesdfn2
+++ showrules!*match compiled, 140 + 36 bytes
showrules*match
+++ showrulespowlis!* compiled, 62 + 20 bytes
showrulespowlis*
+++ showrulespowlis1!* compiled, 82 + 20 bytes
showrulespowlis1*
+++ showrulesasymplis!* compiled, 46 + 24 bytes
showrulesasymplis*
+++ showrulespowlis!*opr compiled, 85 + 24 bytes
showrulespowlis*opr
+++ showrulespowlis1!*opr compiled, 105 + 24 bytes
showrulespowlis1*opr
+++ showrulesasymplis!*opr compiled, 70 + 28 bytes
showrulesasymplis*opr
+++ selectletvars compiled, 22 + 16 bytes
selectletvars
+++ simpletsymbolic compiled, 67 + 32 bytes
simpletsymbolic
+++ needs!-lisp!-tag compiled, 36 + 28 bytes
needs-lisp-tag
+++ needs!-lisp!-tag1 compiled, 11 + 12 bytes
needs-lisp-tag1nil((evalequal . equal) (evalgreaterp . greaterp) (evallessp .
lessp) (evalgeq . geq) (evalleq . leq) (evalneq . neq) (evalnumberp . numberp))
+++ isboolfn compiled, 13 + 16 bytes
isboolfn
+++ arbvars compiled, 54 + 12 bytes
arbvarsnilnilnilnilnil
+++ unnest!-sqrt!-sqrt!* compiled, 122 + 56 bytes
unnest-sqrt-sqrt*
+++ unnest!-sqrt!-sqrt compiled, 40 + 36 bytes
unnest-sqrt-sqrt
+++ chkabs compiled, 18 + 24 bytes
chkabsnilnil(list (replaceby (expt (plus (~ a) (times (~ b) (expt (~ c) (
quotient 1 2)))) (quotient 1 2)) (when **w (setq **w (unnest-sqrt-sqrt a b c))))
(replaceby (expt (plus (~ a) (expt (~ c) (quotient 1 2))) (quotient 1 2)) (when
**w (setq **w (unnest-sqrt-sqrt a 1 c)))))nilnilnilnilsimpmax
+++ simpmax compiled, 8 + 20 bytes
simpmaxsimpmin
+++ simpmin compiled, 8 + 20 bytes
simpminnildifflist
+++ s_simpmaxmin compiled, 188 + 60 bytes
s_simpmaxmin
+++ !*trim compiled, 23 + 12 bytes
*trim
+++ flattenmaxmin compiled, 167 + 20 bytes
flattenmaxminnilnilnilnil
+++ nssimp redefined
+++ nssimp compiled, 163 + 104 bytes
nssimp
+++ dsimp redefined
+++ dsimp compiled, 275 + 128 bytes
dsimp
+++ dsimptimes redefined
+++ dsimptimes compiled, 58 + 24 bytes
dsimptimes
+++ addns redefined
+++ addns compiled, 48 + 16 bytes
addns
+++ getelx compiled, 16 + 28 bytes
getelxnilnilnilnil
+++ revalpart compiled, 213 + 64 bytes
revalpart
+++ parterr2 compiled, 13 + 24 bytes
parterr2revalpartnil
+++ revalsetpart compiled, 28 + 28 bytes
revalsetpart
+++ revalsetp1 compiled, 92 + 44 bytes
revalsetp1
+++ ssl compiled, 38 + 20 bytes
sslrtypepart
+++ rtypepart compiled, 7 + 16 bytes
rtypepartrevalsetpart
+++ arglength compiled, 23 + 32 bytes
arglengthnilnilpartlengthreval
+++ partlengthreval compiled, 28 + 40 bytes
partlengthrevalnilnilnilmap~mapmap-evalgetrtypecadr
+++ getrtypecadr compiled, 4 + 12 bytes
getrtypecadr
+++ lambda_xwwv19lu7y09 compiled, 1 + 8 bytes
+++ map!-eval compiled, 18 + 36 bytes
map-eval
+++ lambda_m0ew1rqnw52h compiled, 6 + 16 bytes
+++ !~map compiled, 14 + 28 bytes
~map
+++ map!-eval1 compiled, 309 + 64 bytes
map-eval1
+++ map!-eval2 compiled, 30 + 32 bytes
map-eval2
+++ map!-frvarsof compiled, 25 + 12 bytes
map-frvarsof
+++ lambda_xwwv19lu7y09 compiled, 1 + 8 bytes
+++ select!-eval compiled, 166 + 100 bytes
select-eval
+++ freequote compiled, 34 + 24 bytes
freequoteselect-eval2nilnil
nil
nilarithnilnilnilnilnilmt:ep:make:ibfi2bf:make:rdrdpfloat-bfprd2flfl2rdbfp:retag
*** rndpwr not defined (LOSE flag) 
nil
*** msd: not defined (LOSE flag) 
nil
*** SMACRO ashift redefined 
+++ ashift compiled, 25 + 16 bytes
ashift
*** SMACRO lshift redefined 
+++ lshift compiled as link to ash1
lshiftoddintppreci:divbf
*** timbf not defined (LOSE flag) 
nilbfminuspbfzpbfnzpbfloatrdfl2rdbfrd:forcebfcrrlcrimmake:crcrptagrltagimgfrl
gfimmkgfgfzeropnilnil(:rd: 0 . 0)(:rd: 1 . -1)(:rd: 1 . 0)(:rd: 3 . -1)(:rd: 2 .
0)(:rd: 3 . 0)(:rd: 5 . 0)(:rd: 5 . 1)(:rd: 15 . 2)(:rd: 45 . 2)(:rd: 1 . -2)(
:rd: 1 . -4)(:rd: 215 . -9)
+++ dn!:simp compiled, 60 + 52 bytes
dn:simpdn:simp
+++ dn!:prin compiled, 6 + 12 bytes
dn:prindn:prinnilnilnilnilnilnilnilnilnilnil105
+++ bflerrmsg compiled, 7 + 20 bytes
bflerrmsg
+++ bfzerop!: redefined
+++ bfzerop!: compiled, 5 + 12 bytes
bfzerop:
*** fl2bf not defined (LOSE flag) 
nil
+++ bfprin!: compiled as link to bfprin0
bfprin:
+++ divide!-by!-power!-of!-ten compiled, 44 + 44 bytes
divide-by-power-of-ten
+++ multiply!-by!-power!-of!-ten compiled, 45 + 40 bytes
multiply-by-power-of-tennil
+++ round!:dec compiled, 79 + 56 bytes
round:dec
+++ round!:dec1 compiled, 247 + 120 bytes
round:dec1
+++ bfprin0 compiled, 24 + 32 bytes
bfprin0
+++ bfprin0x compiled, 18 + 20 bytes
bfprin0x
+++ bfexplode0 compiled, 23 + 32 bytes
bfexplode0
+++ bfexplode0x compiled, 134 + 48 bytes
bfexplode0x
+++ bfprin!:lst compiled, 303 + 84 bytes
bfprin:lst
+++ smallcompress compiled, 36 + 28 bytes
smallcompress
+++ smallsplit compiled, 27 + 16 bytes
smallsplit
+++ scientific_notation compiled, 78 + 48 bytes
scientific_notationnil
+++ order!: redefined
+++ order!: compiled, 18 + 16 bytes
order:decprec:incprec:
+++ conv!:mt compiled, 75 + 32 bytes
conv:mt
+++ round!:mt redefined
+++ round!:mt compiled, 57 + 32 bytes
round:mt
+++ round!:ep compiled, 49 + 28 bytes
round:ep
+++ round!:last redefined
+++ round!:last compiled, 45 + 20 bytes
round:last
+++ cut!:mt compiled, 50 + 28 bytes
cut:mt
+++ cut!:ep redefined
+++ cut!:ep compiled, 42 + 24 bytes
cut:ep
+++ bftrim!: redefined
+++ bftrim!: compiled, 8 + 24 bytes
bftrim:
+++ decimal2internal compiled, 28 + 24 bytes
decimal2internal
+++ read!:num compiled, 225 + 80 bytes
read:num
+++ abs!: redefined
+++ abs!: compiled, 17 + 16 bytes
abs:
+++ minus!: redefined
+++ minus!: compiled, 10 + 12 bytes
minus:
+++ plus!: compiled, 64 + 20 bytes
plus:
+++ difference!: compiled, 66 + 24 bytes
difference:
+++ times!: redefined
+++ times!: compiled, 16 + 12 bytes
times:
+++ divide!: redefined
+++ divide!: compiled, 32 + 24 bytes
divide:
+++ max2!: compiled, 6 + 12 bytes
max2:
+++ max!:_3gvzmduwzk4g compiled, 4 + 16 bytes
max:
+++ min2!: compiled, 6 + 12 bytes
min2:
+++ min!:_3upuhcca279a compiled, 4 + 16 bytes
min:
+++ greaterp!: compiled, 81 + 28 bytes
greaterp:
+++ equal!: redefined
+++ equal!: compiled, 32 + 12 bytes
equal:
+++ lessp!: redefined
+++ lessp!: compiled, 3 + 12 bytes
lessp:
+++ leq!: compiled, 4 + 16 bytes
leq:
+++ minusp!: compiled, 17 + 16 bytes
minusp:
+++ make!:ratnum compiled, 30 + 32 bytes
make:ratnum
+++ ratnump!: compiled, 4 + 12 bytes
ratnump:numr:denm:
+++ conv!:r2bf compiled, 33 + 28 bytes
conv:r2bfnilnilnilnilnilnilnilnilnil
*** local variable r in procedure normbf not used 

*** local variable ep1 in procedure normbf not used 

*** SMACRO normbf redefined 
+++ normbf compiled, 89 + 48 bytes
normbf
+++ bfdivide compiled, 14 + 20 bytes
bfdivide
+++ bftimes compiled, 8 + 12 bytes
bftimes
+++ plubf compiled, 145 + 32 bytes
plubf
+++ bfplus compiled, 8 + 12 bytes
bfplus
+++ difbf compiled, 148 + 36 bytes
difbf
+++ bfdiffer compiled, 8 + 12 bytes
bfdiffer
+++ invbf compiled, 8 + 24 bytes
invbf
+++ bfinverse compiled, 10 + 16 bytes
bfinverse
+++ bfminus compiled, 9 + 12 bytes
bfminus
+++ bflessp compiled, 8 + 12 bytes
bflessp
+++ grpbf compiled, 99 + 24 bytes
grpbf
+++ !!shbinflp compiled, 28 + 40 bytes
!shbinflp
+++ vv!!!*1e10 compiled, 5 + 16 bytes
vv!*1e10nil
+++ bfsqrt compiled, 170 + 104 bytes
bfsqrt
+++ realrat compiled, 148 + 40 bytes
realratnil
+++ fl2int compiled, 15 + 20 bytes
fl2intnil
+++ cflot compiled, 14 + 12 bytes
cflot
+++ conv!:bf2i compiled, 6 + 12 bytes
conv:bf2i
+++ bf2flr compiled, 72 + 52 bytes
bf2flr
+++ gf2fl compiled, 29 + 16 bytes
gf2fl
+++ gf2bf compiled, 61 + 32 bytes
gf2bf
+++ r2bf compiled, 93 + 44 bytes
r2bf
+++ r2fl compiled, 58 + 32 bytes
r2fl
+++ gfplus compiled, 9 + 16 bytes
gfplus
+++ gffplus compiled, 10 + 8 bytes
gffplus
+++ gbfplus compiled, 10 + 12 bytes
gbfplus
+++ gfdiffer compiled, 9 + 16 bytes
gfdiffer
+++ gffdiff compiled, 10 + 8 bytes
gffdiff
+++ gbfdiff compiled, 10 + 12 bytes
gbfdiff
+++ gftimes compiled, 9 + 16 bytes
gftimes
+++ gfftimes compiled, 31 + 8 bytes
gfftimes
+++ gbftimes compiled, 31 + 20 bytes
gbftimes
+++ gfquotient compiled, 9 + 16 bytes
gfquotient
+++ gffquot compiled, 48 + 8 bytes
gffquot
+++ gbfquot compiled, 57 + 32 bytes
gbfquot
+++ gfminus compiled, 8 + 12 bytes
gfminus
+++ gfrotate compiled, 5 + 12 bytes
gfrotate
+++ gfdot compiled, 9 + 16 bytes
gfdot
+++ gffdot compiled, 10 + 8 bytes
gffdot
+++ gbfdot compiled, 10 + 16 bytes
gbfdot
+++ gfrsq compiled, 4 + 12 bytes
gfrsq
+++ gffrsq compiled, 10 + 8 bytes
gffrsq
+++ gbfrsq compiled, 10 + 16 bytes
gbfrsq
+++ gffmult compiled, 10 + 8 bytes
gffmult
+++ gffsqrt compiled, 68 + 52 bytes
gffsqrt
+++ gbfmult compiled, 37 + 32 bytes
gbfmult
+++ gbfsqrt compiled, 67 + 72 bytes
gbfsqrtrl2gfc
+++ gfsqrt compiled, 121 + 56 bytes
gfsqrt
+++ sgn compiled, 15 + 20 bytes
sgn
+++ exptbf compiled, 22 + 20 bytes
exptbf
+++ icbrt compiled, 6 + 16 bytes
icbrt
*** fix2 not defined (LOSE flag) 
nil
+++ ilog2 compiled, 64 + 20 bytes
ilog2
+++ isqrt compiled, 16 + 24 bytes
isqrt
+++ qroundup compiled, 21 + 8 bytes
qroundup
+++ irootn compiled, 80 + 44 bytes
irootn
+++ irootn!-power2 compiled, 84 + 36 bytes
irootn-power2
+++ irootn1 compiled, 102 + 24 bytes
irootn12nilnilnilnilnilnilnil
+++ find!!nfpd compiled, 47 + 36 bytes
find!nfpd
+++ find!!nbfpd compiled, 47 + 32 bytes
find!nbfpd
*** find!maxbflexp not defined (LOSE flag) 
nil
+++ infinityp compiled, 15 + 16 bytes
infinityp
+++ !!mfefix compiled, 38 + 48 bytes
!mfefix155310221.0e-81.0e159.007199254741e1553nilnilnilnilnilnil
Math package mod 1.7, 1 May 93
+++ terrlst compiled, 9 + 20 bytes
terrlstnilnil
*** sqrt not defined (LOSE flag) 
nil
*** cbrt not defined (LOSE flag) 
nil
*** hypot not defined (LOSE flag) 
nil
*** floor not defined (LOSE flag) 
nil
*** ceiling not defined (LOSE flag) 
nil
*** round not defined (LOSE flag) 
nil
+++ rounddec compiled, 55 + 28 bytes
rounddecnilnil1.41421356237310.4142135623731
*** log not defined (LOSE flag) 
nil
+++ sclogx!-1 compiled, 69 + 24 bytes
sclogx-10.69314718055995186.50939253252nilnilnil
*** atan not defined (LOSE flag) 
nil
*** atand not defined (LOSE flag) 
nil6.28318530717961.04719755119660.01745329251994357.295779513082nilnil
*** sin not defined (LOSE flag) 
nil
*** sind not defined (LOSE flag) 
nil
*** tan not defined (LOSE flag) 
nil
*** tand not defined (LOSE flag) 
nilnil10000000nil
+++ !!scalsintan compiled, 120 + 68 bytes
!scalsintan
+++ !!scalsintand compiled, 120 + 68 bytes
!scalsintand
+++ !!sints compiled, 103 + 36 bytes
!sints
+++ !!sinhts compiled, 77 + 36 bytes
!sinhtsnil
*** exp not defined (LOSE flag) 
nilnil2.718281828459nil2
+++ iexpt compiled, 49 + 28 bytes
iexpt
*** expt not defined (LOSE flag) 
nil
+++ fsplit compiled, 90 + 40 bytes
fsplit
+++ f_multiply compiled, 24 + 12 bytes
f_multiply
+++ fexpt compiled, 10 + 16 bytes
fexpt
+++ fexpt1 compiled, 45 + 32 bytes
fexpt1
+++ rexpt compiled, 289 + 84 bytes
rexpt
+++ ft2rn1 compiled, 19 + 16 bytes
ft2rn1
+++ ft2rn2 compiled, 113 + 32 bytes
ft2rn2
*** cos not defined (LOSE flag) 
nil
*** cot not defined (LOSE flag) 
nil
*** sec not defined (LOSE flag) 
nil
*** csc not defined (LOSE flag) 
nil
*** acot not defined (LOSE flag) 
nil
*** asin not defined (LOSE flag) 
nil
*** acos not defined (LOSE flag) 
nil
*** acsc not defined (LOSE flag) 
nil
*** asec not defined (LOSE flag) 
nil
*** cosd not defined (LOSE flag) 
nil
*** cotd not defined (LOSE flag) 
nil
*** secd not defined (LOSE flag) 
nil
*** cscd not defined (LOSE flag) 
nil
*** acotd not defined (LOSE flag) 
nil
*** asind not defined (LOSE flag) 
nil
*** acosd not defined (LOSE flag) 
nil
*** acscd not defined (LOSE flag) 
nil
*** asecd not defined (LOSE flag) 
nil
*** sinh not defined (LOSE flag) 
nil
*** cosh not defined (LOSE flag) 
nil
*** tanh not defined (LOSE flag) 
nil
*** coth not defined (LOSE flag) 
nil
*** asinh not defined (LOSE flag) 
nil
*** acosh not defined (LOSE flag) 
nil
*** atanh not defined (LOSE flag) 
nil
*** acoth not defined (LOSE flag) 
nil
*** sech not defined (LOSE flag) 
nil
*** csch not defined (LOSE flag) 
nil
*** asech not defined (LOSE flag) 
nil
*** acsch not defined (LOSE flag) 
nil
*** ln not defined (LOSE flag) 
nil
*** log10 not defined (LOSE flag) 
nil
*** logb not defined (LOSE flag) 
nil
*** atan2 not defined (LOSE flag) 
nil
*** atan2d not defined (LOSE flag) 
nil
+++ factorial compiled, 20 + 28 bytes
factorial
+++ nfactorial compiled, 29 + 20 bytes
nfactorial
+++ fac!-part compiled, 29 + 12 bytes
fac-partnilnilnilnilnilnilnilnilnilnilnilnilnil121.0e-14
+++ logfp compiled, 30 + 24 bytes
logfp
+++ roundconstants compiled, 47 + 72 bytes
roundconstantsnilnilt((t (roundbfon)) (nil (roundbfoff)))
+++ roundbfon compiled, 3 + 16 bytes
roundbfon
+++ roundbfoff compiled, 5 + 20 bytes
roundbfoff(:rd: :mod: :crn: :gi: :rn:):rd:roundednili2rd*rd:minusprd:plus
rd:timesrd:differencerd:quotientrd:zeroprd:oneprd:preprd:prinrd:minusrd:root
*rd2rn*rn2rd
+++ round!* redefined
+++ round!* compiled, 6 + 8 bytes
round*
+++ mkround redefined
+++ mkround compiled, 7 + 12 bytes
mkround
+++ print!-precision compiled, 36 + 32 bytes
print-precision
+++ print_precision compiled as link to print-precision
print_precision
+++ precision0 compiled, 59 + 68 bytes
precision0precision0
+++ precision compiled, 20 + 32 bytes
precision3.3219280948874
+++ decprec2internal compiled, 7 + 20 bytes
decprec2internal
+++ precision1 compiled, 95 + 84 bytes
precision1nilnil
*** local variable n in procedure *rd2rn not used 
+++ !*rd2rn compiled, 128 + 76 bytes
*rd2rn
+++ rd2rn1 compiled, 9 + 16 bytes
rd2rn1
+++ bf2rn1 compiled, 155 + 60 bytes
bf2rn1
+++ !*rn2rd compiled, 5 + 20 bytes
*rn2rd6nil5.6843418860808e-143.2311742677853e-27
+++ precmsg compiled, 20 + 28 bytes
precmsg
+++ rd!:simp compiled, 63 + 56 bytes
rd:simprd:simp
+++ rndbfon compiled, 21 + 44 bytes
rndbfon
+++ i2rd!* redefined
+++ i2rd!* compiled, 4 + 16 bytes
i2rd*
+++ chkint!* compiled, 80 + 44 bytes
chkint*(:rd: 1 . -800)
+++ chkrn!* compiled, 6 + 16 bytes
chkrn*
+++ bf2flck compiled, 30 + 44 bytes
bf2flck
+++ convchk redefined
+++ convchk compiled, 38 + 36 bytes
convchk
+++ convprec!* redefined
+++ convprec!* compiled, 10 + 16 bytes
convprec*
+++ convprec redefined
+++ convprec compiled, 4 + 16 bytes
convprec
+++ rd!:minusp redefined
+++ rd!:minusp compiled, 10 + 12 bytes
rd:minusp
+++ convprc2 compiled, 68 + 40 bytes
convprc2
+++ rdzchk compiled, 89 + 40 bytes
rdzchk
+++ rd!:plus compiled, 126 + 76 bytes
rd:plus
+++ rd!:difference compiled, 139 + 80 bytes
rd:difference
+++ rd!:times compiled, 119 + 72 bytes
rd:times
+++ rd!:quotient compiled, 158 + 100 bytes
rd:quotient
+++ rdqoterr compiled, 4 + 20 bytes
rdqoterr
*** safe-fp-plus not defined (LOSE flag) 
nil
*** safe-fp-times not defined (LOSE flag) 
nil
*** safe-fp-quot not defined (LOSE flag) 
nil
+++ rd!:zerop redefined
+++ rd!:zerop compiled, 12 + 12 bytes
rd:zerop
+++ rd!:minus redefined
+++ rd!:minus compiled, 12 + 16 bytes
rd:minus
+++ rd!:onep redefined
+++ rd!:onep compiled, 17 + 28 bytes
rd:onep
+++ rd!:root compiled, 25 + 32 bytes
rd:root
+++ rd!:prep compiled, 21 + 32 bytes
rd:prep
+++ rdprep1 redefined
+++ rdprep1 compiled, 8 + 16 bytes
rdprep1
+++ rd!:prin compiled, 11 + 20 bytes
rd:prin
+++ rd!:explode compiled, 11 + 20 bytes
rd:explodenilnilnilnilnilnilnilnilnilnil(:cr: :rd: :mod: :crn: :gi: :rn:)nil:cr:
complex-roundednili2cr*cr:pluscr:timescr:differcr:quotientcr:zeropcr:onepcr:prep
cr:princr:minuscr:minusp*cr2rn*rn2cr*rd2cr*cr2rd*cr2crn*crn2cr*gi2crmkcrmkdcrn
:rd::cr:
+++ cr!:minusp compiled, 27 + 8 bytes
cr:minusp
+++ striptag redefined
+++ striptag compiled, 5 + 8 bytes
striptag
+++ mkcr compiled, 10 + 16 bytes
mkcr
+++ gf2cr!: compiled, 10 + 16 bytes
gf2cr:
+++ crprcd compiled, 11 + 12 bytes
crprcd
+++ crprcd2 compiled, 7 + 16 bytes
crprcd2
+++ cr!:simp compiled, 6 + 20 bytes
cr:simpcr:simp
+++ i2cr!* compiled, 13 + 24 bytes
i2cr*
+++ trimcrrl compiled, 4 + 12 bytes
trimcrrl
+++ trimcr compiled, 41 + 32 bytes
trimcr
+++ cr2rderr compiled, 4 + 20 bytes
cr2rderr
+++ !*cr2rn compiled, 38 + 36 bytes
*cr2rn
+++ !*rn2cr compiled, 14 + 28 bytes
*rn2cr
+++ !*cr2crn compiled, 11 + 24 bytes
*cr2crn
+++ !*crn2cr compiled, 48 + 44 bytes
*crn2cr
+++ !*cr2rd compiled, 35 + 24 bytes
*cr2rd
+++ !*rd2cr compiled, 13 + 24 bytes
*rd2cr
+++ !*gi2cr compiled, 44 + 40 bytes
*gi2cr
+++ bfrsq compiled, 26 + 16 bytes
bfrsq
+++ crzchk compiled, 53 + 40 bytes
crzchk
+++ cr!:plus compiled, 63 + 52 bytes
cr:plus
+++ cr!:differ compiled, 68 + 60 bytes
cr:differ
+++ cr!:times compiled, 54 + 52 bytes
cr:times
+++ cr!:quotient compiled, 82 + 64 bytes
cr:quotient
+++ safe!-crfp!-plus compiled, 20 + 16 bytes
safe-crfp-plus
+++ safe!-crfp!-diff compiled, 28 + 20 bytes
safe-crfp-diff
+++ safe!-crfp!-times compiled, 68 + 20 bytes
safe-crfp-times
+++ safe!-crfp!-quot compiled, 88 + 20 bytes
safe-crfp-quot
+++ cr!:minus compiled, 5 + 20 bytes
cr:minus
+++ cr!:zerop compiled, 52 + 16 bytes
cr:zerop
+++ cr!:onep compiled, 43 + 24 bytes
cr:onep
+++ cr!:prep compiled, 15 + 20 bytes
cr:prep
+++ crprep1 compiled, 71 + 40 bytes
crprep1
+++ crprimp compiled, 19 + 28 bytes
crprimp
+++ cr!:prin compiled, 24 + 36 bytes
cr:prinnil
+++ crone!* compiled, 6 + 20 bytes
crone*
+++ crhalf!* compiled, 6 + 20 bytes
crhalf*
+++ cri!* compiled, 6 + 20 bytes
cri*
+++ cri!/2 compiled, 6 + 20 bytes
cri/2
+++ cr2i!* compiled, 6 + 20 bytes
cr2i*nilnilnilnilnilnilnil0.01745329251994357.295779513082nil(exp expt log sin
cos tan asin acos atan sqrt sinh cosh sec csc cot tanh coth sech csch asinh
acosh acot asec acsc atanh acoth asech acsch logb log10 ln atan2 hypot deg2rad
rad2deg deg2dms rad2dms dms2deg dms2rad norm arg e pi)nilnil(dms2deg* dms2rad*)(
atan2 hypot atan2d logb)nilnilnil
+++ rdexp!* compiled, 66 + 56 bytes
rdexp*
+++ rdsqrt!* compiled, 13 + 24 bytes
rdsqrt*
+++ rdexpt!* compiled, 156 + 68 bytes
rdexpt*
+++ rdlog!* compiled, 13 + 24 bytes
rdlog*
+++ rdatan2!* compiled, 32 + 44 bytes
rdatan2*
+++ atan2!* compiled, 55 + 52 bytes
atan2*
+++ rde!* compiled, 8 + 24 bytes
rde*
+++ rdpi!* compiled, 9 + 24 bytes
rdpi*
+++ pi!/2!* compiled, 5 + 20 bytes
pi/2*
+++ deg2rad!* compiled, 13 + 24 bytes
deg2rad*
+++ rad2deg!* compiled, 13 + 24 bytes
rad2deg*
+++ deg2rad compiled, 4 + 12 bytes
deg2rad
+++ rad2deg compiled, 4 + 12 bytes
rad2deg
+++ deg2rad!: compiled, 12 + 32 bytes
deg2rad:
+++ rad2deg!: compiled, 12 + 32 bytes
rad2deg:
+++ rdsin!* compiled, 13 + 24 bytes
rdsin*
+++ rdcos!* compiled, 13 + 24 bytes
rdcos*
+++ rdtan!* compiled, 13 + 24 bytes
rdtan*
+++ rdasin!* compiled, 13 + 24 bytes
rdasin*
+++ rdacos!* compiled, 13 + 24 bytes
rdacos*
+++ rdatan!* compiled, 14 + 20 bytes
rdatan*
+++ rdsinh!* compiled, 13 + 24 bytes
rdsinh*
+++ rdcosh!* compiled, 13 + 24 bytes
rdcosh*
+++ sinh!* compiled, 12 + 28 bytes
sinh*
+++ cosh!* compiled, 12 + 28 bytes
cosh*
+++ rdsec!* compiled, 14 + 28 bytes
rdsec*
+++ rdcsc!* compiled, 14 + 28 bytes
rdcsc*
+++ rdcot!* compiled, 17 + 32 bytes
rdcot*
+++ rdtanh!* compiled, 22 + 40 bytes
rdtanh*
+++ rdcoth!* compiled, 21 + 40 bytes
rdcoth*
+++ rdsech!* compiled, 14 + 28 bytes
rdsech*
+++ rdcsch!* compiled, 14 + 28 bytes
rdcsch*
+++ rdasinh!* compiled, 13 + 24 bytes
rdasinh*
+++ rdacosh!* compiled, 13 + 24 bytes
rdacosh*
+++ asinh!* compiled, 82 + 72 bytes
asinh*
+++ acosh!* compiled, 44 + 68 bytes
acosh*
+++ rdacot!* compiled, 19 + 32 bytes
rdacot*
+++ rdasec!* compiled, 20 + 36 bytes
rdasec*
+++ rdacsc!* compiled, 14 + 28 bytes
rdacsc*
+++ rdatanh!* compiled, 13 + 24 bytes
rdatanh*
+++ atanh!* compiled, 40 + 68 bytes
atanh*
+++ rdacoth!* compiled, 14 + 28 bytes
rdacoth*
+++ rdasech!* compiled, 33 + 48 bytes
rdasech*
+++ rdacsch!* compiled, 25 + 40 bytes
rdacsch*
+++ rdlogb!* compiled, 16 + 24 bytes
rdlogb*
+++ rdlog10!* compiled, 15 + 28 bytes
rdlog10*
+++ logb!* compiled, 55 + 64 bytes
logb*
+++ rdhypot!* compiled, 16 + 24 bytes
rdhypot*
+++ hypot!* compiled, 66 + 56 bytes
hypot*
+++ simpdms compiled, 83 + 24 bytes
simpdms
+++ round2a!* compiled, 6 + 12 bytes
round2a*
+++ dms2rad!* compiled, 4 + 16 bytes
dms2rad*
+++ dms2deg!* compiled, 25 + 28 bytes
dms2deg*
+++ dms2deg compiled, 14 + 12 bytes
dms2deg
+++ dms2deg!: compiled, 122 + 44 bytes
dms2deg:
+++ rad2dms compiled, 4 + 16 bytes
rad2dms
+++ rad2dms!* compiled, 4 + 16 bytes
rad2dms*
+++ deg2dms!* compiled, 13 + 24 bytes
deg2dms*
+++ mklist3!* compiled, 44 + 32 bytes
mklist3*
+++ deg2dms compiled, 28 + 16 bytes
deg2dms
+++ deg2dms!: compiled, 83 + 44 bytes
deg2dms:
+++ rdnorm!* compiled, 8 + 16 bytes
rdnorm*
+++ rdarg!* compiled, 8 + 20 bytes
rdarg*nil
+++ rdone!* compiled, 6 + 20 bytes
rdone*
+++ rdtwo!* compiled, 6 + 20 bytes
rdtwo*
+++ rdhalf!* compiled, 6 + 20 bytes
rdhalf*
+++ rdzero!* compiled, 6 + 20 bytes
rdzero*
+++ texpt!: compiled, 36 + 32 bytes
texpt:
+++ quotient!: compiled, 70 + 20 bytes
quotient:
+++ texpt!:any compiled, 226 + 132 bytes
texpt:any
+++ integerp!: compiled, 47 + 28 bytes
integerp:nilnilnilnilnilnil(expt sin cos tan asin acos atan cot acot sec asec
csc acsc sinh cosh asinh acosh tanh coth atanh acoth sech csch asech acsch atan2
arg sqrt norm arg log exp logb e pi)
+++ cre!* compiled, 6 + 20 bytes
cre*
+++ crpi!* compiled, 6 + 20 bytes
crpi*
+++ crexpt!* compiled, 17 + 36 bytes
crexpt*
+++ crnorm!* compiled, 12 + 16 bytes
crnorm*
+++ crarg!* compiled, 12 + 16 bytes
crarg*
+++ crsqrt!* compiled, 5 + 20 bytes
crsqrt*
+++ crr2d!* compiled, 14 + 20 bytes
crr2d*
+++ crd2r!* compiled, 14 + 20 bytes
crd2r*
+++ crsin!* compiled, 29 + 36 bytes
crsin*
+++ crcos!* compiled, 31 + 40 bytes
crcos*
+++ crtan!* compiled, 24 + 44 bytes
crtan*
+++ crcot!* compiled, 24 + 44 bytes
crcot*
+++ cratan2!* compiled, 148 + 84 bytes
cratan2*
+++ crlog!* compiled, 9 + 24 bytes
crlog*
+++ crlogb!* compiled, 8 + 16 bytes
crlogb*
+++ timesi!* compiled, 4 + 16 bytes
timesi*
+++ crasin!* compiled, 6 + 20 bytes
crasin*
+++ cracos!* compiled, 15 + 32 bytes
cracos*
+++ cratan!* compiled, 17 + 36 bytes
cratan*
+++ cracot!* compiled, 18 + 36 bytes
cracot*
+++ crsec!* compiled, 8 + 24 bytes
crsec*
+++ crcsc!* compiled, 8 + 24 bytes
crcsc*
+++ crasec!* compiled, 6 + 24 bytes
crasec*
+++ cracsc!* compiled, 6 + 24 bytes
cracsc*
+++ crsinh!* compiled, 16 + 36 bytes
crsinh*
+++ crcosh!* compiled, 16 + 36 bytes
crcosh*
+++ crtanh!* compiled, 20 + 40 bytes
crtanh*
+++ crcoth!* compiled, 20 + 40 bytes
crcoth*
+++ crsech!* compiled, 16 + 32 bytes
crsech*
+++ crcsch!* compiled, 16 + 32 bytes
crcsch*
+++ crasinh!* compiled, 44 + 52 bytes
crasinh*
+++ cracosh!* compiled, 16 + 36 bytes
cracosh*
+++ cratanh!* compiled, 20 + 40 bytes
cratanh*
+++ cracoth!* compiled, 20 + 40 bytes
cracoth*
+++ crasech!* compiled, 6 + 24 bytes
crasech*
+++ cracsch!* compiled, 6 + 24 bytes
cracsch*
+++ crexp!* compiled, 24 + 32 bytes
crexp*nilnilnilnilnilnilnilnil
+++ allfixp compiled, 14 + 8 bytes
allfixp
+++ read!:lnum compiled, 86 + 56 bytes
read:lnum
+++ exp!* compiled, 4 + 16 bytes
exp*
+++ log!* compiled, 4 + 16 bytes
log*
+++ sin!* compiled, 4 + 16 bytes
sin*
+++ cos!* compiled, 4 + 16 bytes
cos*
+++ tan!* compiled, 4 + 16 bytes
tan*
+++ asin!* compiled, 4 + 16 bytes
asin*
+++ acos!* compiled, 4 + 16 bytes
acos*
+++ atan!* compiled, 4 + 16 bytes
atan*
+++ sqrt!* compiled, 4 + 16 bytes
sqrt*
+++ pi!* compiled, 11 + 28 bytes
pi*
+++ e!* compiled, 3 + 16 bytes
e*
+++ !:pi compiled, 142 + 64 bytes
:pi
+++ !:bigpi compiled, 155 + 108 bytes
:bigpi
+++ !:e compiled, 82 + 48 bytes
:e
+++ !:e0625 compiled, 20 + 28 bytes
:e0625
+++ !:log2 compiled, 20 + 28 bytes
:log2
+++ !:log3 compiled, 20 + 28 bytes
:log3
+++ !:log5 compiled, 20 + 28 bytes
:log5
+++ !:log10 compiled, 20 + 28 bytes
:log10
+++ !:logpi compiled, 24 + 32 bytes
:logpi
+++ !:sqrt2 compiled, 20 + 28 bytes
:sqrt2
+++ !:sqrt3 compiled, 20 + 28 bytes
:sqrt3
+++ !:sqrt5 compiled, 20 + 28 bytes
:sqrt5
+++ !:sqrt10 compiled, 20 + 28 bytes
:sqrt10
+++ !:sqrtpi compiled, 24 + 32 bytes
:sqrtpi
+++ !:sqrte compiled, 24 + 32 bytes
:sqrte
+++ !:cbrt2 compiled, 20 + 28 bytes
:cbrt2
+++ !:cbrt3 compiled, 20 + 28 bytes
:cbrt3
+++ !:cbrt5 compiled, 20 + 28 bytes
:cbrt5
+++ !:cbrt10 compiled, 20 + 28 bytes
:cbrt10
+++ !:cbrtpi compiled, 24 + 32 bytes
:cbrtpi
+++ !:cbrte compiled, 24 + 32 bytes
:cbrte
+++ get!:const compiled, 39 + 28 bytes
get:const
+++ save!:const compiled, 26 + 28 bytes
save:const
+++ set!:const compiled, 6 + 16 bytes
set:const(693 :rd:
32275789658570886958156186740185430035207321153362338386082868836372441170262918772578584747851174923149878504151407927049194948238790383959946719335828357694428215050317306695934166355248914491511797113061591
. -691)(696 :rd:
223414559943812204541299691543817774952446626078955845183474074928994140646542202630297581777052042918617043584281846658404080952838738755044958604987321549025362902884163241093707622384220567344910829214455753
. -694)(345 :rd:
38147133879018916226726161754238056000235647349641966973643839209814212240981324997881509318028130379359
. -344)(344 :rd:
24839564051432105757030187307432255962232015093166539115572437354016218101313667760974422926251785557331
. -344)(346 :rd:
78739555111562328162466601559210101903369880761600796068692519487892757296836330825859826335560157422575
. -345)(343 :rd:
14418920408943590291895376801231811103435110839037170382760291138100527377344006226693362638634878438263
. -342)(347 :rd:
165030491374412933849223389024719000751944916898630441293227203812836655221379385335495746961582598620767
. -345)(346 :rd:
82044887777439745201490860134149724327740508022373333934496464660706775280894235524870788720107408621657
. -345)(345 :rd:
50679638250266908861395072713544592150266848458327253776136968282930880401586871730484368125324019459069
. -344)(347 :rd:
248278508123981609440413003268423058724784449908208567741775698889111072126561909541155538505338450234411
. -346)(347 :rd:
160263087864233938564171191044014407532380117773343723184267574989151211701991419780657973200450208209937
. -345)(351 :rd:
3626339718486249843935062318460017099107964674038984464624974694918453710375278122937439447990585581769517
. -349)(346 :rd:
127035014186189798996721691704828281211780805781345795619730198926133233346870142241668189685941500845293
. -345)(343 :rd:
14770859189469281038386275396043606714604333497923750655344249075728152412325839111562307376508616809399
. -342)(346 :rd:
90300849505957794917936684197096299653509935569780592611890608283374605465644997058723193304239168600451
. -345)(346 :rd:
103368668544134889415261896114643512957939173776229308377580129710844166070396271815119166661316221761795
. -345)(346 :rd:
122557108346228652131261462517363494874090099635843090514908752924083688145951822513240265180899973398035
. -345)(347 :rd:
154412280619660125997582582468881795918497944332658086037182090027508214848053363871814051517862045334163
. -345)(347 :rd:
209939966694540002189872523367163064276025630375546307290789337782432628385230387394034908651444438482047
. -346)(346 :rd:
100026098918546677906326139569715406271344101179735395193974120497220242360267604189519654265327644817783
. -345)
+++ sqrt!: compiled, 180 + 104 bytes
sqrt:
+++ cbrt!: compiled, 248 + 128 bytes
cbrt:
+++ exp!: compiled, 215 + 116 bytes
exp:
+++ log!: compiled, 274 + 136 bytes
log:
+++ sin!: compiled, 364 + 156 bytes
sin:
+++ cos!: compiled, 331 + 140 bytes
cos:
+++ tan!: compiled, 191 + 104 bytes
tan:
+++ asin!: compiled, 93 + 88 bytes
asin:
+++ acos!: compiled, 101 + 84 bytes
acos:
+++ atan!: compiled, 249 + 132 bytes
atan:nilnil
nil
nilnilentry
+++ safe!-putd compiled, 16 + 28 bytes
safe-putdmkfunction
+++ defautoload_go6i26uj9wu4 compiled, 205 + 108 bytes
defautoload
+++ defautoload_operator_p9wpei340v9 compiled, 20 + 20 bytes
defautoload_operator
+++ autoload_operator!* compiled, 38 + 28 bytes
autoload_operator*
+++ defautoload_value_nj0d4wyspvia compiled, 22 + 20 bytes
defautoload_value
+++ autoload_value!* compiled, 23 + 24 bytes
autoload_value*autoload_value*
*** Autoload stub for compile not defined 
nil
*** Autoload stub for faslout not defined 
nilnil((t (crefon)) (nil (crefoff)))
+++ crefon compiled, 8 + 20 bytes
crefon
+++ cedit compiled, 10 + 16 bytes
cedit
+++ display compiled, 9 + 20 bytes
displayrlis
+++ editdef compiled, 9 + 20 bytes
editdefrlisnilrlis
+++ ezgcdf compiled, 9 + 20 bytes
ezgcdf
+++ factorize!-primitive!-polynomial compiled, 9 + 20 bytes
factorize-primitive-polynomial
+++ pfactor compiled, 9 + 20 bytes
pfactor
+++ simpnprimitive compiled, 9 + 20 bytes
simpnprimitivesimpnprimitiverlisnilnilnilnilnilnilnil
+++ index compiled, 9 + 20 bytes
index
+++ mass compiled, 9 + 20 bytes
mass
+++ mshell compiled, 9 + 20 bytes
mshell
+++ vecdim compiled, 9 + 20 bytes
vecdim
+++ vector compiled, 9 + 20 bytes
vectorrlisrlisrlisrlisrlisnilnil
+++ simpint compiled, 9 + 20 bytes
simpintsimpint((t (load-package (quote algint))))nil((t (put (quote mat) (quote
lnrsolvefn) (quote clnrsolve)) (put (quote mat) (quote inversefn) (quote matinv)
)) (nil (put (quote mat) (quote lnrsolvefn) (quote lnrsolve)) (put (quote mat) (
quote inversefn) (quote matinverse))))
+++ detq compiled, 9 + 20 bytes
detq
+++ matp compiled, 9 + 20 bytes
matp
+++ matrix compiled, 10 + 16 bytes
matrixrlisnilformmat
+++ formmat compiled, 11 + 20 bytes
formmat
+++ generateident compiled, 9 + 20 bytes
generateident
+++ lnrsolve compiled, 9 + 20 bytes
lnrsolve
+++ simpresultant compiled, 9 + 20 bytes
simpresultant
+++ resultant compiled, 11 + 20 bytes
resultantsimpresultant
+++ nullspace!-eval compiled, 11 + 24 bytes
nullspace-evalnullspace-evalodesolve-eval
+++ odesolve!-eval compiled, 9 + 20 bytes
odesolve-eval(lambda (u) (load-package (quote gnuplot)) (ploteval u))nil
+++ rprint compiled, 10 + 16 bytes
rprint
+++ solveeval compiled, 9 + 20 bytes
solveeval
+++ solve0 compiled, 9 + 20 bytes
solve0solveevalniltttsimpiden((nil (load-package (quote solve))))((nil (
load-package (quote solve))))((nil (load-package (quote solve))))
+++ roots compiled, 10 + 16 bytes
roots
+++ gfnewt compiled, 9 + 20 bytes
gfnewt
+++ gfroot compiled, 9 + 20 bytes
gfroot
+++ root_val compiled, 9 + 20 bytes
root_val
+++ firstroot compiled, 9 + 20 bytes
firstroot
+++ rlrootno compiled, 9 + 20 bytes
rlrootno
+++ realroots compiled, 9 + 20 bytes
realroots
+++ isolater compiled, 9 + 20 bytes
isolater
+++ nearestroot compiled, 9 + 20 bytes
nearestroot
+++ sturm0 compiled, 9 + 20 bytes
sturm0
+++ multroot1 compiled, 9 + 20 bytes
multroot1nilsturm0nilmultroot1nilnil
+++ simplimit compiled, 9 + 20 bytes
simplimit
+++ pf compiled, 10 + 16 bytes
pfnil
+++ simp!-sum compiled, 9 + 20 bytes
simp-sum
+++ simp!-sum0 compiled, 9 + 20 bytes
simp-sum0simp-sum
+++ simp!-prod compiled, 9 + 20 bytes
simp-prodsimp-prodnilsimptaylor
+++ simptaylor compiled, 9 + 20 bytes
simptaylortrigsimp*
+++ trigsimp!* compiled, 9 + 20 bytes
trigsimp*(lambda (x) (autoload_operator* (quote besselj) (quote (specfn specbess
)) x))(lambda (x) (autoload_operator* (quote bessely) (quote (specfn specbess))
x))(lambda (x) (autoload_operator* (quote besseli) (quote (specfn specbess)) x))
(lambda (x) (autoload_operator* (quote besselk) (quote (specfn specbess)) x))(
lambda (x) (autoload_operator* (quote hankel1) (quote (specfn specbess)) x))(
lambda (x) (autoload_operator* (quote gamma) (quote (specfn sfgamma)) x))(lambda
(x) (autoload_operator* (quote binomial) (quote specfn) x))(lambda (x) (
autoload_operator* (quote lambert_w) (quote (specfn specbess)) x))nilnil
nil
nilnilnil
+++ psl!-file!-write!-date compiled, 17 + 24 bytes
psl-file-write-date
+++ olderfaslp compiled, 45 + 44 bytes
olderfaslp(module endmodule)
+++ update!-cref compiled, 54 + 64 bytes
update-cref
+++ upd!-cref1 compiled, 46 + 56 bytes
upd-cref1
+++ package!-remake compiled, 13 + 16 bytes
package-remake
+++ loaded!-modules declared fluid
+++ package!-remake2 compiled, 41 + 32 bytes
package-remake2
+++ update!-fasl2 compiled, 71 + 80 bytes
update-fasl2
+++ upd!-fasl1 compiled, 95 + 108 bytes
upd-fasl1
+++ module2!-to!-file redefined
+++ module2!-to!-file compiled, 16 + 28 bytes
module2-to-filenilnil
nil

nil


symbolic;

nil


!#if (not !*savedef)

faslout 'user;

FASLOUT (user): IN files;  or type in expressions
When all done, execute FASLEND;


%
% The "user" module is only useful when building a full system, since
% in the bootstrap the files u01.lsp to u12.lsp will probably not exist
% and it is CERTAIN that they are not useful.
%

symbolic procedure c!:install(name, env, c!-version, !&optional, c1);
  begin
    scalar v, n;
    if c1 then return check!-c!-code(name, env, c!-version, c1);
    put(name, 'c!-version, c!-version);
    if null env then return name;
    v := mkvect sub1 length env;
    n := 0;
    while env do <<
      putv(v, n, car env);
      n := n + 1;
      env := cdr env >>;
% I only instate the environment if there is nothing useful there at
% present. Actually this is even stronger. When a built-in function is
% set up it gets NIL in its environment cell by default. Things that are
% not defined at all have themselves there.
    if symbol!-env name = nil then symbol!-set!-env(name, v);
    put(name, 'funarg, v);
    return name;
  end;
*** local variable &optional in procedure c:install not used 
+++ c!:install compiled, 62 + 28 bytes



rdf "$srcdir/../../cslbuild/generated-c/u01.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u01.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u01.lsp"

rdf "$srcdir/../../cslbuild/generated-c/u02.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u02.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u02.lsp"

rdf "$srcdir/../../cslbuild/generated-c/u03.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u03.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u03.lsp"

rdf "$srcdir/../../cslbuild/generated-c/u04.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u04.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u04.lsp"

rdf "$srcdir/../../cslbuild/generated-c/u05.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u05.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u05.lsp"

rdf "$srcdir/../../cslbuild/generated-c/u06.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u06.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u06.lsp"

rdf "$srcdir/../../cslbuild/generated-c/u07.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u07.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u07.lsp"

rdf "$srcdir/../../cslbuild/generated-c/u08.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u08.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u08.lsp"

rdf "$srcdir/../../cslbuild/generated-c/u09.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u09.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u09.lsp"

rdf "$srcdir/../../cslbuild/generated-c/u10.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u10.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u10.lsp"

rdf "$srcdir/../../cslbuild/generated-c/u11.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u11.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u11.lsp"

rdf "$srcdir/../../cslbuild/generated-c/u12.lsp"$Reading file 
"$srcdir/../../cslbuild/generated-c/u12.lsp"
End of file "$srcdir/../../cslbuild/generated-c/u12.lsp"



faslend;Completed FASL files for user

nil

!#endif

faslout 'remake;

FASLOUT (remake): IN files;  or type in expressions
When all done, execute FASLEND;


!#if (not !*savedef)

load!-module "user";

!#endif

!@reduce := concat(!@srcdir, "/../..");

in "$reduce/packages/support/remake.red"$
+++ psl!-file!-write!-date compiled, 17 + 24 bytes
+++ olderfaslp compiled, 45 + 44 bytes
+++ update!-cref compiled, 54 + 64 bytes
+++ upd!-cref1 compiled, 46 + 56 bytes
+++ package!-remake compiled, 13 + 16 bytes
+++ package!-remake2 compiled, 41 + 32 bytes
+++ update!-fasl2 compiled, 71 + 80 bytes
+++ upd!-fasl1 compiled, 95 + 108 bytes
+++ module2!-to!-file compiled, 16 + 28 bytes


global '(reduce_base_modules reduce_extra_modules reduce_test_cases);
 
symbolic procedure get_configuration_data();
% Read data from a configuration file that lists the modules that must
% be processed.  NOTE that this and the next few funtions will ONLY
% work properly if REDUCE had been started up with the correct
% working directory. This is (just about) acceptable because these are
% system maintainance functions rather than generally flexible things
% for arbitrary use.
  begin
    scalar i, w, e;
% Configuration information is held in a file called something like
% "packagelist.dat".
    i := "$srcdir/../../packages/package.map";
    i := open(i, 'input);
    i := rds i;
    e := !*echo;
    !*echo := nil;
    w := read();
    !*echo := e;
    i := rds i;
    close i;
    reduce_base_modules :=
      for each x in w conc
         if member('core, cddr x) and
            member('csl, cddr x) then list car x else nil;
    reduce_extra_modules :=
      for each x in w conc
         if not member('core, cddr x) and
            member('csl, cddr x) then list car x else nil;
    reduce_test_cases :=
      for each x in w conc
         if member('test, cddr x) and
            member('csl, cddr x) then list car x else nil;
    for each x in w do
       if member('csl, cddr x) then put(car x, 'folder, cadr x);
%   princ "reduce_base_modules: "; print reduce_base_modules;
%   princ "reduce_extra_modules: "; print reduce_extra_modules;
%   princ "reduce_test_cases: "; print reduce_test_cases;
    return;
  end;
+++ get_configuration_data compiled, 277 + 60 bytes


symbolic procedure build_reduce_modules names;
  begin
    scalar w;
!#if !*savedef
    !*savedef := t;
!#else
    !*savedef := nil;
!#endif
    make!-special '!*native_code;
    !*native_code := nil;
    get_configuration_data();
    window!-heading list!-to!-string explodec car names;
!#if !*savedef
% When building the bootstrap version I want to record what switches
% get declared...
    if not getd 'original!-switch then <<
       w := getd 'switch;
       putd('original!-switch, car w, cdr w);
       putd('switch, 'expr, 
          '(lambda (x) 
              (dolist (y x) (princ "+++ Declaring a switch: ") (print y)) 
              (original!-switch x))) >>;
!#endif
    package!-remake car names;
    if null (names := cdr names) then <<
        printc "Recompilation complete";
        window!-heading  "Recompilation complete" >>;
!#if !*savedef
    if null names then restart!-csl 'begin
!#else
    if null names then restart!-csl '(user begin)
!#endif
    else restart!-csl('(remake build_reduce_modules), names)
  end;
*** local variable w in procedure build_reduce_modules not used 
+++ build_reduce_modules compiled, 41 + 48 bytes


symbolic procedure test_a_package names;
  begin
    scalar packge, logname, logtmp, logfile, start_time, start_gctime, gt;
    scalar redef, quitfn, oll, rr;
    princ "TESTING: "; print car names;
    window!-heading list!-to!-string explodec car names;
    !*backtrace := nil;
    !*errcont := t;
    !*extraecho := t;    % Ensure standard environment for the test...
    !*int := nil;        % ... so that results are predictable.
    packge := car names;
    verbos nil;
%    load!-latest!-patches();
% Normally logs from testing go in testlogs/name.rlg, however you may
% may sometimes want to put them somewhere else. If you do then launch reduce
% along the lines
%    reduce -D@log="mylogs" ...
% and ensure that <top>/mylogs exists.
    if boundp '!@log and stringp symbol!-value '!@log then
        logname := symbol!-value '!@log
    else logname := "testlogs";
    logname := concat(logname, "/");
    logtmp  := concat(logname, concat(car names, ".tmp"));
    logname := concat(logname, concat(car names,".rlg"));
    logfile := open(logtmp, 'output);
    get_configuration_data();
    begin
       scalar !*terminal!-io!*, !*standard!-output!*, !*error!-output!*,
              !*trace!-output!*, !*debug!-io!*, !*query!-io!*, !*errcont,
              outputhandler!*;
       !*terminal!-io!* := !*standard!-output!* := !*error!-output!* := logfile;
       !*trace!-output!* := !*debug!-io!* := !*query!-io!* := logfile;
       oll := linelength 80;
       princ date(); princ " run on "; printc cdr assoc('name, lispsystem!*);
       load!-package packge;
       if get(packge,'folder) then packge := get(packge,'folder);
       packge := concat("$srcdir/../../packages/",
                   concat(packge,
                     concat("/",
                       concat(car names,".tst"))));
       redef := !*redefmsg;
       !*redefmsg := nil;
       quitfn := getd 'quit;
% At least at one stage at least one test file ends in "quit;" rather than
% "end;" and the normal effect would be that this leads it to cancel
% all execution instantly. To avoid that I will undefine the function
% "quit", but restore it after the test. I reset !*redefmsg to avoid getting
% messages about this. I redefined quit to something (specifically "posn")
% that does not need an argument and that is "harmless".
       remd 'quit;
       putd('quit, 'expr, 'posn);
       start_time := time();
       start_gctime := gctime();
       !*mode := 'algebraic;
       !*extraecho := t;    % Ensure standard environment for the test...
       !*int := nil;        % ... so that results are predictable.
       !*errcont := t;
% resource!-limit is a special feature in CSL so that potentially wild
% code can be run with it being stopped harshly if it gets stuck.
% The first argument is an expression to evaluate. The next 4 are
%    a time limit, in seconds
%    a "cons" limit, in megaconses
%    a limit on the number of thousands of I/O bytes that can be
%            performed, with both reading and printing counted
%    a limit on the number of Lisp-level errors that can be raised.
%            note that that can be large if errorset is used to trap them.
%
% If a limit is specified as a negative value (typically -1) then that
% resource is not applied.
% The first 3 limits are applied in an APPROXIMATE way, and the first
% is seriously sensitive the the speed of the computer you are running
% on, so should be used with real care. At the end the return value
% is atomic if a limit expired, otherwise ncons of the regular value.
% A global variable *resources* should end up a list of 4 values
% showing the usage in each category.

% The settings here are intended to be fairly conservative...
%  Time:   On an Intel Q6600 CPU the longest test runs in under 20 seconds,
%          so allowing 3 minutes gives almost a factor of 10 slack. If
%          many people are running slow(ish) machines still I can increase
%          the limit.
%  Space:  The amount of space used ought to be pretty independent of
%          the computer used. Measuring on 32 and 64-bit systems will
%          give minor differences. But the limit given here seems to allow
%          all the current tests to run with a factor of 2 headroom
%          in case the test-scripts are updated.
%  IO:     The "crack" package has code in it that checkpoints its state
%          to disc periodically, and tests that activate that use amazingly
%          more IO than the others. The limit at 10 Mbytes suits the
%          relevant current tests. If a broken package leads to a test
%          script looping this then means that the resulting log file is no
%          larger than (about) 10 Mbytes, which is ugly but managable.
%  Errors: Some REDUCE packages make extensive use of errorset and
%          predictable use of "error" (for lack of use of catch and throw,
%          usually). So I do not constrain errors here. But if things were
%          ever such that no errors were expected I could enforce that
%          condition here.

       rr := resource!-limit(list('in_list1, mkquote packge, t),
                             300,  % allow 5 minutes per test
                             200,  % allow 200 megaconses
                             10000,% allow ten megabytes of I/O
                             -1);  % Do not limit Lisp-level errors at all 
       erfg!* := nil;
       terpri();
       putd('quit, car quitfn, cdr quitfn);
       !*redefmsg := redef;
       terpri();
       prin2 "Time for test: ";
       gt := time() - start_time;
% I ensure that the reported time is at least 1 millisecond.
       if gt = 0 then gt := 1;
       prin2 gt;
       prin2 " ms";
       if (gt := gctime() - start_gctime) > 0 then <<
           prin2 ", plus GC time: ";
           prin2 gt;
           prin2 " ms" >>;
       terpri();
% Temp while I watch things
       if atom rr then printc "+++++ Error: Resource limit exceeded";
       princ "@@@@@ Resources used: "; print !*resources!*;
       linelength oll
    end;
    close logfile;
    delete!-file logname;
    rename!-file(logtmp, logname);
    names := cdr names;
    if null names then <<
        printc "Testing complete";
        window!-heading "Testing complete";
        restart!-csl t >>
    else restart!-csl('(remake test_a_package), names)
  end;
+++ test_a_package compiled, 363 + 260 bytes


symbolic procedure report_incomplete_tests names;
  begin
% Displays information about what "complete_tests" would do
    scalar packge, tfile, logname;
    scalar date1, date2, date3;
    get_configuration_data();
    for each packge in names do <<
       tfile := packge;
       if get(packge,'folder) then tfile := get(packge,'folder);
       tfile := concat("$srcdir/../../packages/",
                   concat(tfile,
                      concat("/",
                        concat(packge,".tst"))));
       if boundp '!@log and stringp symbol!-value '!@log then
           logname := symbol!-value '!@log
       else logname := "testlogs";
       logname := concat(logname, concat("/", concat(packge,".rlg")));
       date1 := filedate "reduce.img";
       date2 := filedate tfile;
       date3 := filedate logname;
       if null date1 then date1 := date();
       if null date2 then date2 := date();
       if null date3 or
          datelessp(date3, date1) or datelessp(date3, date2) then <<
             princ "NEED TO TEST: "; print packge >> >>
  end;
+++ report_incomplete_tests compiled, 116 + 60 bytes


symbolic procedure complete_tests names;
  begin
% Just like the previous testing code except that logs that are already up
% to date are not re-generated.
    scalar packge, tfile, logname, logfile, logtmp,
           start_time, start_gctime, gt, rr;
    scalar date1, date2, date3, oll;
    !*backtrace := nil;
    !*errcont := t;
    !*extraecho := t;    % Ensure standard environment for the test...
    !*int := nil;        % ... so that results are predictable.
    verbos nil;
    get_configuraion_data();
top:
    tfile := packge := car names;
    if get(tfile,'folder) then tfile := get(tfile,'folder);
    tfile := concat("$srcdir/../../packages/",
                concat(tfile,
                  concat("/",
                    concat(packge,".tst"))));
    if boundp '!@log and stringp symbol!-value '!@log then
        logname := symbol!-value '!@log
    else logname := "testlogs";
    logname := concat(logname, "/");
    logtmp  := concat(logname, concat(packge, ".tmp"));
    logname := concat(logname, concat(packge, ".rlg"));
    date1 := filedate "reduce.img";
    date2 := filedate tfile;
    date3 := filedate logname;
    if null date1 then date1 := date();
    if null date2 then date2 := date();
    if null date3 or
       datelessp(date3, date1) or datelessp(date3, date2) then <<
       princ "TESTING: "; print packge;
       window!-heading list!-to!-string explodec packge;
       logfile := open(logtmp, 'output);
       start_time := time();
       start_gctime := gctime();
       begin
          scalar !*terminal!-io!*, !*standard!-output!*, !*error!-output!*,
                 !*trace!-output!*, !*debug!-io!*, !*query!-io!*, !*errcont,
                 outputhandler!*, redef, quitfn;
          !*terminal!-io!* := !*standard!-output!* := !*error!-output!* := logfile;
          !*trace!-output!* := !*debug!-io!* := !*query!-io!* := logfile;
          oll := linelength 80;
          princ date(); princ " run on ";
          printc cdr assoc('name, lispsystem!*);
          load!-package packge;
          !*mode := 'algebraic;
          !*extraecho := t;    % Ensure standard environment for the test...
          !*int := nil;        % ... so that results are predictable.
          redef := !*redefmsg;
          !*redefmsg := nil;
          quitfn := getd 'quit;
          remd 'quit;
          putd('quit, 'expr, 'posn);
          !*errcont := t;
          rr := resource!-limit(list('in_list1, mkquote tfile, t),
                                300,  % allow 5 minutes per test
                                200,  % allow 200 megaconses
                                10000,% allow ten megabytes of I/O
                                -1);  % Do not limit Lisp-level errors at all 
          erfg!* := nil;
          terpri();
          putd('quit, car quitfn, cdr quitfn);
          !*redefmsg := redef;
          terpri();
          prin2 "Time for test: ";
          gt := time() - start_time;
          if gt = 0 then gt := 1;
          prin2 gt;
          prin2 " ms";
          if (gt := gctime() - start_gctime) > 0 then <<
              prin2 ", plus GC time: ";
              prin2 gt;
              prin2 " ms" >>;
          if atom rr then printc "+++++ Error: Resource limit exceeded";
          princ "@@@@@ Resources used: "; print !*resources!*;
          terpri();
          linelength oll
       end;
       close logfile;
       delete!-file logname;
       rename!-file(logtmp, logname) >>
    else if cdr names then <<
       names := cdr names;
       go to top >>;
    names := cdr names;
    if null names then restart!-csl t
    else restart!-csl('(remake complete_tests), names)
  end;
+++ complete_tests compiled, 407 + 268 bytes


symbolic procedure profile_compare_fn(p, q);
   (float caddr p/float cadr p) < (float caddr q/float cadr q);
+++ profile_compare_fn compiled, 28 + 8 bytes


%
% This function runs a test file and sorts out what the top 350
% functions in it. It appends their names to "profile.dat".
%

% I need to talk a little about the interaction between profiling and
% patching.  Well firstly I arrange that whenever I run a profiling job
% I rebuild REDUCE with the latest paches. This may involve re-compiling
% the patches.red source.  Thus when a test is run the current patches
% will be in place. Patched functions are first defined with funny names
% (including a hash based on their definition) and then copied into place
% when a package is loaded. However MAPSTORE and the CSL instrumentation
% attributes their cost to the hash-extended name even though the
% functions may have been called via the simple one. Thus in the face
% of patches one can expect the profile data to refer to some names that
% are long and curious looking. Throughout all this I assume that there will
% never be embarassing collisions in my hash functions.

symbolic procedure profile_a_package names;
  begin
    scalar packge, oll, w, w1, w2, quitfn, !*errcont, rr;
    princ "PROFILING: "; print car names;
    !*backtrace := nil;
    !*errcont := t;
    !*int := nil;
    packge := car names;
    verbos nil;
    load!-package packge;
    get_configuration_data();
    if get(packge,'folder) then packge := get(packge,'folder);
    packge := concat("$srcdir/../../packages/",
                concat(packge,
                  concat("/",
                    concat(car names,".tst"))));
    oll := linelength 80;
    !*mode := 'algebraic;
    window!-heading list!-to!-string explodec car names;
    quitfn := getd 'quit;
    remd 'quit;
    putd('quit, 'expr, 'posn);
    mapstore 4;  % reset counts;
    !*errcont := t;
% I try hard to arrange that even if the test fails I can continue and that
% input & output file selection is not messed up for me.
    w := wrs nil;   w1 := rds nil;
    wrs w;          rds w1;
    rr := resource!-limit(list('errorset,
                               mkquote list('in_list1, mkquote packge, t),
                               nil, nil),
                          300,  % allow 5 minutes per test
                          200,  % allow 200 megaconses
                          10000,% allow ten megabytes of I/O
                          -1);  % Do not limit Lisp-level errors at all 
    wrs w;          rds w1;
    erfg!* := nil;
    terpri();
    putd('quit, car quitfn, cdr quitfn);
    w := sort(mapstore 2, function profile_compare_fn);
    w1 := nil;
    while w do <<
        w2 := get(caar w, '!*savedef);
%       if eqcar(w2, 'lambda) then <<
%           princ "md60: "; print (caar w . cdr w2);
%           princ "= "; print md60 (caar w . cdr w2) >>;
        if eqcar(w2, 'lambda) then w1 := (caar w . md60 (caar w . cdr w2) .
                                          cadar w . caddar w) . w1;
        w := cdr w >>;
    w := w1;
    % I collect the top 350 functions as used by each test, not because all
    % that many will be wanted but because I might as well record plenty
    % of information here and discard unwanted parts later on.
    for i := 1:349 do if w1 then w1 := cdr w1;
    if w1 then rplacd(w1, nil);
    % princ "MODULE "; prin car names; princ " suggests ";
    % print for each z in w collect car z;
    w1 := open("profile.dat", 'append);
    w1 := wrs w1;
    linelength 80;
    if atom rr then printc "% +++++ Error: Resource limit exceeded";
    princ "% @@@@@ Resources used: "; print !*resources!*;
    princ "("; prin car names; terpri();
    for each n in w do <<
        princ "  ("; prin car n; princ " ";
        if posn() > 30 then << terpri(); ttab 30 >>;
        prin cadr n;
        % I also display the counts just to help me debug & for interest.
        princ " "; prin caddr n; princ " "; princ cdddr n;
        printc ")" >>;
    printc "  )";
    terpri();
    close wrs w1;
    linelength oll;
    names := cdr names;
    if null names then <<
        printc "Profiling complete";
        window!-heading "Profiling complete";
        restart!-csl t >>
    else restart!-csl('(remake profile_a_package), names)
  end;
+++ profile_a_package compiled, 379 + 240 bytes


symbolic procedure trim_prefix(a, b);
  begin
    while a and b and car a = car b do <<
      a := cdr a;
      b := cdr b >>;
    if null a then return b
    else return nil
  end;
+++ trim_prefix compiled, 18 + 8 bytes


fluid '(time_info);

symbolic procedure read_file f1;
  begin
% I take the view that I can afford to read the whole of a file into
% memory at the start of processing. This makes life easier for me
% and the REDUCE log files are small compared with current main memory sizes.
    scalar r, w, w1, n, x;
    scalar p1, p2, p3, p4, p5, p6, p7;
% To make comparisons between my CSL logs and some of the Hearn "reference
% logs", which are created using a different script, I will discard
% lines that match certain patterns!  Note that if the reference logs change
% the particular tests I perform here could become out of date! Also if any
% legitimate test output happened to match one of the following strings
% I would lose out slightly.
    p1 := explodec "REDUCE 3.8,";
    p2 := explodec "1: 1:";
    p3 := explodec "2: 2: 2:";
    p4 := explodec "3: 3: ";    % a prefix to first real line of output.
    p5 := explodec "4: 4: 4:";
    p6 := explodec "5: 5:";
    p7 := explodec "Quittin";   % nb left so that the "g" remains!
                                % this is so that the match is detected.
    r := nil;
    n := 0;
    while not ((w := readline f1) = !$eof!$) do <<
       w1 := explodec w;
       if x := trim_prefix(p4, w1) then
           r := ((n := n + 1) . list!-to!-string x) . r
       else if trim_prefix(p1, w1) or
               trim_prefix(p2, w1) or
               trim_prefix(p3, w1) or
               trim_prefix(p5, w1) or
               trim_prefix(p6, w1) or
               trim_prefix(p7, w1) then nil
       else r := ((n := n + 1) . w) . r >>;
    w := r;
% The text scanned for here is expected to match that generated by the
% test script. I locate the last match in a file, extract the numbers
% and eventually write them to testlogs/times.log
    n := explodec "Time for test:";
    while w and null (x := trim_prefix(n, explodec cdar w)) do w := cdr w;
    if null w then <<
       time_info := nil;
       return reversip r >>;
    while eqcar(x, '! ) do x := cdr x;
    w := n := nil;
    while digit car x do << w := car x . w; x := cdr x >>;
    while eqcar(x, '! ) do x := cdr x;
    if x := trim_prefix(explodec "ms, plus GC time:", x) then <<
        while eqcar(x, '! ) do x := cdr x;
        while digit car x do << n := car x . n; x := cdr x >> >>;
    if null w then w := '(!0);
    if null n then n := '(!0);
    time_info := compress reverse w . compress reverse n;
    return reversip r;
  end;
+++ read_file compiled, 258 + 76 bytes


symbolic procedure roughly_equal(a, b);
  begin
% a and b are strings repesenting lines of text. I want to test if they
% match subject to some floating point slop.
    scalar wa, wb, adot, bdot;
    if a = b then return t;
    a := explodec a;
    b := explodec b;
top:
% First deal with end of line matters.
    if null a and null b then return t
    else if null a or null b then return nil;
% next split off any bits of a and b up to a digit
    wa := wb := nil;
    while a and not digit car a do <<
       wa := car a . wa;
       a := cdr a >>;
    while b and not digit car b do <<
       wb := car b . wb;
       b := cdr b >>;
    if not (wa = wb) then return nil;
% now both a and b start with digits. I will seek a chunk of the
% form nnn.mmmE+xxx where E<sign>xxx is optional...
% Note that any leading sign on the float has been checked already!
    wa := wb := nil;
    adot := bdot := nil;
    while a and digit car a do <<
       wa := car a . wa;
       a := cdr a >>;
    if eqcar(a, '!.) then <<
       adot := t;
       wa := car a . wa;
       a := cdr a >>;
    while a and digit car a do <<
       wa := car a . wa;
       a := cdr a >>;
    if eqcar(a, '!e) or eqcar(a, '!E) then <<
       adot := t;
       wa := car a . wa;
       a := cdr a;
       if eqcar(a, '!+) or eqcar(a, '!-) then <<
          wa := car a . wa;
          a := cdr a >>;
       while a and digit car a do <<
          wa := car a . wa;
          a := cdr a >> >>;
% Now all the same to grab a float from b
    while b and digit car b do <<
       wb := car b . wb;
       b := cdr b >>;
    if eqcar(b, '!.) then <<
       bdot := t;
       wb := car b . wb;
       b := cdr b >>;
    while b and digit car b do <<
       wb := car b . wb;
       b := cdr b >>;
    if eqcar(b, '!e) or eqcar(b, '!E) then <<
       bdot := t;
       wb := car b . wb;
       b := cdr b;
       if eqcar(b, '!+) or eqcar(b, '!-) then <<
          wb := car b . wb;
          b := cdr b >>;
       while b and digit car b do <<
          wb := car b . wb;
          b := cdr b >> >>;
% Now one possibility is that I had an integer not a float,
% and in that case I want an exact match
    if not adot or not bdot then <<
       if wa = wb then goto top
       else return nil >>;
    if wa = wb then goto top;   % textual match on floating point values
    wa := compress reversip wa;
    wb := compress reversip wb;
    if fixp wa then wa := float wa;
    if fixp wb then wb := float wb;
    if not (floatp wa and floatp wb) then return nil; % messed up somehow!
    if wa = wb then goto top;
% now the crucial approximate floating point test - note that both numbers
% are positive, but that they may be extreme in range.
% As a cop-out I am going to insist that if values are either very very big
% or very very small that they match as text.
    if wa > 1.0e100 or wb > 1.0e100 then return nil;
    if wa < 1.0e-100 or wb < 1.0e-100 then return nil;
    wa := (wa - wb)/(wa + wb);
    if wa < 0 then wa := -wa;
    if wa > 0.0001 then return nil; % pretty crude!
    goto top
  end;
+++ roughly_equal compiled, 346 + 44 bytes


symbolic procedure in_sync(d1, n1, d2, n2);
  begin
    for i := 1:n1 do if d1 then <<  % skip n1 lines from d1
       d1 := cdr d1 >>;
    for i := 1:n2 do if d2 then <<  % skip n2 lines from d2
       d2 := cdr d2 >>;
% If one is ended but the other is not then we do not have a match. If
% both are ended we do have one.
    if null d1 then return null d2
    else if null d2 then return nil;
% Here I insist on 3 lines that agree before I count a match as
% having been re-established.
    if not roughly_equal(cdar d1, cdar d2) then return nil;
    d1 := cdr d1; d2 := cdr d2;
    if null d1 then return null d2
    else if null d2 then return nil;
    if not roughly_equal(cdar d1, cdar d2) then return nil;
    d1 := cdr d1; d2 := cdr d2;
    if null d1 then return null d2
    else if null d2 then return nil;
    if not roughly_equal(cdar d1, cdar d2) then return nil;
    d1 := cdr d1; d2 := cdr d2;
    if null d1 then return null d2
    else if null d2 then return nil
    else return t
  end;
+++ in_sync compiled, 110 + 20 bytes


fluid '(time_data time_ratio gc_time_ratio log_count);

symbolic procedure prinright(x, w);
  begin
    scalar xx, xl;
    xx := explodec x;
    xl := length xx;
    while w > xl do << princ " "; xl := xl + 1 >>;
    princ x;
  end;
+++ prinright compiled, 24 + 12 bytes


symbolic procedure file_compare(f1, f2, name);
  begin
    scalar i, j, d1, d2, t1, gt1, t2, gt2, time_info;
    d1 := read_file f1;
    if null time_info then t1 := gt1 := 0
    else << t1 := car time_info; gt1 := cdr time_info >>;
    d2 := read_file f2;
    if null time_info then t2 := gt2 := 0
    else << t2 := car time_info; gt2 := cdr time_info >>;
    i := wrs time_data;
    j := set!-print!-precision 3;
    prin name;
    ttab 17;
    if zerop t1 then princ "     ---"
    else << prinright(t1, 8); ttab 30; prinright(gt1, 8) >>;
    ttab 40;
    if zerop t2 then princ "     ---"
    else << prinright(t2, 9); ttab 50; prinright(gt2, 8) >>;
    ttab 60;
    if zerop t1 or zerop t2 then princ "     ***       ***"
    else begin
       scalar r1, gr1;
       r1 := float t1 / float t2;
       gr1 := float (t1+gt1)/float (t2+gt2);
% I will only use tests where the time taken was over 200ms in my eventual
% composite summary of timings, since measurement accuracy can leave the
% really short tests pretty meaningless.
       if t1 > 200 and t2 > 200 then <<
          time_ratio := time_ratio * r1;
          gc_time_ratio := gc_time_ratio * gr1;
          log_count := log_count + 1 >>;
       princ r1;
       ttab 70;
       princ gr1;
       end;
    terpri();
    set!-print!-precision j;
    wrs i;
% The next segment of code is a version of "diff" to report ways in which
% reference and recent log files match or diverge.
% I can not see a neat way to get a "structured" control structure
% here easily.  Ah well, drop back to GOTO statements!
top:
    if null d1 then <<      % end of one file
       if d2 then terpri();
       i := 0;
       while d2 and i < 20 do <<
          princ "REF "; princ caar d2; princ ":"; ttab 10; printc cdar d2;
          d2 := cdr d2;
          i := i + 1 >>;
       if d2 then printc "...";
       return >>;
    if null d2 then <<      % end of other file
       i := 0;
       while d1 and i < 20 do <<
          princ "NEW "; princ caar d1; princ ":"; ttab 10; printc cdar d1;
          d1 := cdr d1;
          i := i + 1 >>;
       if d1 then printc "...";
       return >>;
% The test "roughly_equal" compares allowing some tolerance on floating
% point values. This is because REDUCE uses platform libraries for
% floating point elementary functions and printing, so small differences
% are expected. This is perhaps uncomfortable, but is part of reality, and
% the test here makes comparison output much more useful in that the
% differences shown up are better limited towards "real" ones.
    if roughly_equal(cdar d1, cdar d2) then <<
       d1 := cdr d1;
       d2 := cdr d2;
       go to top >>;
% I will first see if there are just a few blank lines inserted into
% one or other file. This special case is addressed here because it
% appears more common a possibility than I had expected.
    if cdar d1 = "" and cdr d1 and roughly_equal(cdadr d1, cdar d2) then <<
       princ "NEW "; princ caar d1; princ ":"; ttab 10; printc cdar d1;
       d1 := cdr d1;
       go to top >>
    else if cdar d1 = "" and cdr d1 and cdadr d1 = "" and cddr d1 and
       roughly_equal(cdaddr d1, cdar d2) then <<
       princ "NEW "; princ caar d1; princ ":"; ttab 10; printc cdar d1;
       d1 := cdr d1;
       princ "NEW "; princ caar d1; princ ":"; ttab 10; printc cdar d1;
       d1 := cdr d1;
       go to top >>
    else if cdar d2 = "" and cdr d2 and
       roughly_equal(cdadr d2, cdar d1) then <<
       princ "REF "; princ caar d2; princ ":"; ttab 10; printc cdar d2;
       d2 := cdr d2;
       go to top >>
    else if cdar d2 = "" and cdr d2 and cdadr d2 = "" and cddr d2 and
       roughly_equal(cdaddr d2, cdar d1) then <<
       princ "REF "; princ caar d2; princ ":"; ttab 10; printc cdar d2;
       d2 := cdr d2;
       princ "REF "; princ caar d2; princ ":"; ttab 10; printc cdar d2;
       d2 := cdr d2;
       go to top >>;
    i := 1;
seek_rematch:
    j := 0;
inner:
    if in_sync(d1, i, d2, j) then <<
       terpri();
       for k := 1:i do <<
          princ "NEW "; princ caar d1; princ ":"; ttab 10; printc cdar d1;
          d1 := cdr d1 >>;
       for k := 1:j do <<
          princ "REF "; princ caar d2; princ ":"; ttab 10; printc cdar d2;
          d2 := cdr d2 >>;
% Should be in step again here.
       if null d1 then return
       else go to top >>;
    j := j + 1;
    i := i - 1;
    if i >= 0 then go to inner;
    i := j;
% I am prepared to seek 80 lines ahead on each side before I give up.
% The number 80 is pretty much arbitrary.
    if i < 80 then goto seek_rematch;
    terpri();
    i := 0;
    while d2 and i < 20 do <<
       princ "REF "; princ caar d2; princ ":"; ttab 10; printc cdar d2;
       d2 := cdr d2;
       i := i+1 >>;
    if d2 then printc "...";
    i := 0;
    while d1 and i < 20 do <<
       princ "NEW "; princ caar d1; princ ":"; ttab 10; printc cdar d1;
       d1 := cdr d1;
       i := i+1 >>;
    if d1 then printc "...";
    printc "Comparison failed."
  end;
+++ file_compare compiled, 792 + 144 bytes


fluid '(which_module);

symbolic procedure check_a_package;
  begin
    scalar oll, names, p1, logname, mylogname, mylog, reflogname, reflog,
           time_data, time_ratio, gc_time_ratio, log_count;
    get_configuration_data();
    if boundp 'which_module and symbol!-value 'which_module and
       not (symbol!-value 'which_module = "") then <<
       names := compress explodec symbol!-value 'which_module;
       if member(names, reduce_test_cases) then names := list names
       else error(0, list("unknown module to check", which_module)) >>
    else names := reduce_test_cases;
% I write a summary of timing information into csllogs/times.log
    time_data := open("testlogs/times.log", 'output);
    p1 := wrs time_data;
    princ "MODULE";
    ttab 21; princ "Local";     ttab 32; princ "(GC)";
    ttab 40; princ "Reference"; ttab 52; princ "(GC)";
    ttab 55; princ "Ratio";     ttab 65; printc "inc GC";
    wrs p1;
    terpri();
    oll := linelength 100;
    printc "=== Comparison results ===";
    time_ratio := gc_time_ratio := 1.0; log_count := 0;
    for each packge in names do <<
       terpri();
       princ "CHECKING: "; print packge;
       if boundp '!@log and stringp symbol!-value '!@log then
           logname := symbol!-value '!@log
       else logname := "testlogs";
       mylogname := concat(logname, concat("/", concat(packge, ".rlg")));
       if get(packge,'folder) then p1 := get(packge,'folder)
       else p1 := packge;
       reflogname := concat("$srcdir/../../packages/",
                       concat(p1,
                         concat("/",
                           concat(packge,".rlg"))));
       mylog := errorset(list('open, mkquote mylogname, ''input), nil, nil);
       reflog := errorset(list('open, mkquote reflogname, ''input), nil, nil);
       if errorp mylog then <<
          if not errorp reflog then close car reflog;
          princ "No current log in "; print mylogname >>
       else if errorp reflog then <<
          close car mylog;
          princ "No reference log in "; print reflogname >>
       else <<
          princ "LOGS: "; princ mylogname; princ " "; printc reflogname;
          mylog := car mylog; reflog := car reflog;
          file_compare(mylog, reflog, packge);
          close mylog;
          close reflog >> >>;
     time_data := wrs time_data;
     if not zerop log_count then <<
        time_ratio := expt(time_ratio, 1.0/log_count);
        gc_time_ratio := expt(gc_time_ratio, 1.0/log_count);
        terpri();
        p1 := set!-print!-precision 3;
        princ "Over "; prin log_count; princ " tests the speed ratio was ";
        print time_ratio;
        princ "    (or ";
        prin gc_time_ratio;
        printc " is garbage collection costs are included)";
        set!-print!-precision p1 >>;
     close wrs time_data;
     linelength oll;
  end;
+++ check_a_package compiled, 431 + 216 bytes



faslend;Completed FASL files for remake

nil


% faslout 'cslhelp;
% 
% module cslhelp;
% 
% global '(!*force);
% 
% flag('(force),'switch);
% flag('(on),'eval);
% 
% on force;
% 
% symbolic procedure formhelp(u,vars,mode);
%    list('help, 'list . for each x in cdr u collect mkquote x);
% 
% if member('help, lispsystem!*) then <<
%    put('help, 'stat, 'rlis);
%    flag('(help), 'go);
%    put('help, 'formfn, 'formhelp) >>;
% 
% off force;
% remflag('(on),'eval);
% 
% endmodule;
% 
% faslend;

load!-module 'remake;

nil


<< initreduce();
   date!* := "Bootstrap version";
   !@reduce := symbol!-value gensym();
   checkpoint('begin, "REDUCE") >>;

The system will be preserved on file "./reduce.img(InitialImage)"

nil



!#if (not !*savedef)
load!-module 'user;
nil


!#endif

!@reduce := concat(!@srcdir, "/../..");
"/usr/local/etc/reduce/csl/cslbase/../.."



get_configuration_data();
nil



package!-remake2(prolog_file,'support);


*** Compiling cslprolo ... 


FASLOUT "cslprolo": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable v in procedure create-package not used 
+++ create!-package compiled, 16 + 28 bytes
+++ evload not compiled (C version available)
+++ copyd compiled, 48 + 44 bytes
Completed FASL files for "cslprolo"

nil



package!-remake2(rend_file,'support);


*** Compiling cslrend ... 


FASLOUT "cslrend": IN files;  or type in expressions
When all done, execute FASLEND;
+++ bye compiled, 5 + 16 bytes
+++ quit compiled, 5 + 16 bytes

*** seprp not defined (LOSE flag) 
+++ filetype compiled, 51 + 24 bytes
+++ mkfil compiled, 16 + 24 bytes

*** local variable u in procedure savesession not used 
+++ savesession compiled, 3 + 16 bytes
+++ load!-patches!-file compiled, 115 + 96 bytes
+++ load!-latest!-patches compiled as link to load-patches-file
+++ begin compiled, 212 + 196 bytes
+++ string!-downcase compiled, 11 + 16 bytes
+++ igetv compiled as link to getv
+++ iputv compiled as link to putv
+++ first compiled as link to car
+++ second compiled as link to cadr
+++ third compiled as link to caddr
+++ fourth compiled as link to cadddr
+++ rest compiled as link to cdr
+++ initreduce compiled as link to initrlisp
+++ initrlisp compiled, 12 + 32 bytes
+++ rlispmain compiled, 3 + 16 bytes
+++ load_czxqkmb43ij4 compiled, 6 + 12 bytes
+++ reload_m1x5d41mfob5 compiled, 6 + 16 bytes
+++ psl!-load compiled, 30 + 20 bytes
+++ tr_mleyn6aifsdc compiled, 9 + 16 bytes
+++ untr_uoly9khgdv1b compiled, 9 + 16 bytes
+++ trst_hkvbpjnzio29 compiled, 9 + 16 bytes
+++ untrst_6eag663x9l8g compiled, 9 + 16 bytes
+++ prop compiled as link to plist
+++ concat2 compiled as link to concat
+++ concat compiled, 21 + 12 bytes
+++ dated!-gensym compiled as link to dated-name
Completed FASL files for "cslrend"



*** Compiling autopatch ... 


FASLOUT "autopatch": IN files;  or type in expressions
When all done, execute FASLEND;
+++ add_patch_url compiled, 5 + 12 bytes
+++ get!-checksum compiled, 44 + 44 bytes
+++ write!-patch!-file compiled, 121 + 72 bytes
+++ rename!-home!-patch!-file compiled, 16 + 32 bytes
+++ update_reduce compiled, 192 + 116 bytes
Completed FASL files for "autopatch"



*** Compiling csl ... 


FASLOUT "csl": IN files;  or type in expressions
When all done, execute FASLEND;
+++ csl_normbf not compiled (C version available)
+++ csl_timbf not compiled (C version available)
+++ fl2bf compiled, 27 + 28 bytes
+++ find!!maxbflexp compiled, 13 + 36 bytes
+++ copyd compiled, 48 + 44 bytes

*** local variable x in procedure psl not used 
+++ printf_be3xbfbqxc29 compiled, 13 + 16 bytes
+++ printf1 compiled, 167 + 96 bytes
+++ bldmsg_gbijslvz4nxd compiled, 13 + 16 bytes
+++ bldstring compiled, 26 + 16 bytes
+++ bldcolumn compiled, 15 + 12 bytes
+++ bldmsg1 compiled, 243 + 104 bytes
Completed FASL files for "csl"

nil



package!-remake2('entry,'support);


*** Compiling entry ... 


FASLOUT "entry": IN files;  or type in expressions
When all done, execute FASLEND;
+++ safe!-putd compiled, 16 + 28 bytes
+++ defautoload_nh8ldnp5rbrg compiled, 209 + 108 bytes
+++ defautoload_operator_99pqs7jj1k4e compiled, 22 + 20 bytes
+++ autoload_operator!* compiled, 38 + 28 bytes
+++ defautoload_value_zedd7yn7iw3a compiled, 24 + 20 bytes
+++ autoload_value!* compiled, 23 + 24 bytes
Completed FASL files for "entry"

*** Autoload stub for compile not defined 

*** Autoload stub for faslout not defined 

*** Autoload stub for cedit not defined 

*** Autoload stub for display not defined 

*** Autoload stub for editdef not defined 

*** Autoload stub for ezgcdf not defined 

*** Autoload stub for factorize-primitive-polynomial not defined 

*** Autoload stub for pfactor not defined 

*** Autoload stub for simpnprimitive not defined 

*** Autoload stub for index not defined 

*** Autoload stub for mass not defined 

*** Autoload stub for mshell not defined 

*** Autoload stub for vecdim not defined 

*** Autoload stub for vector not defined 

*** Autoload stub for simpint not defined 

*** Autoload stub for detq not defined 

*** Autoload stub for matp not defined 

*** Autoload stub for matrix not defined 

*** Autoload stub for formmat not defined 

*** Autoload stub for generateident not defined 

*** Autoload stub for lnrsolve not defined 

*** Autoload stub for simpresultant not defined 

*** Autoload stub for resultant not defined 

*** Autoload stub for nullspace-eval not defined 

*** Autoload stub for odesolve-eval not defined 

*** Autoload stub for rprint not defined 

*** Autoload stub for solveeval not defined 

*** Autoload stub for solve0 not defined 

*** Autoload stub for roots not defined 

*** Autoload stub for gfnewt not defined 

*** Autoload stub for gfroot not defined 

*** Autoload stub for root_val not defined 

*** Autoload stub for firstroot not defined 

*** Autoload stub for rlrootno not defined 

*** Autoload stub for realroots not defined 

*** Autoload stub for isolater not defined 

*** Autoload stub for nearestroot not defined 

*** Autoload stub for sturm0 not defined 

*** Autoload stub for multroot1 not defined 

*** Autoload stub for simplimit not defined 

*** Autoload stub for pf not defined 

*** Autoload stub for simp-sum not defined 

*** Autoload stub for simp-sum0 not defined 

*** Autoload stub for simp-prod not defined 

*** Autoload stub for simptaylor not defined 

*** Autoload stub for trigsimp* not defined 

nil



package!-remake2('remake,'support);
nil




% The next lines have LOTS of hidden depth!  They restart CSL repeatedly
% so that each of the modules that has to be processed gets dealt with in
% a fresh uncluttered environment. The list of modules is fetched from
% a configuration file which must have 3 s-expressions in it. The first
% is a list of basic modules that must be built to get a core version of
% REDUCE. The second list identifies modules that can be built one the core
% is ready for use, while the last list indicates which modules have
% associated test scripts.
%
% when the modules have been rebuild the system does a restart that
% kicks it back into REDUCE by calling begin(). This then continues
% reading from the stream that had been the standard input when this
% job started. Thus this script MUST be invoked as
%           ./csl -obootstrapreduce.img -z buildreduce.lsp
% with the file buildreduce.lsp specified on the command line in the call. It
% will not work if you start csl manually and then do a (rdf ..) [say]
% on buildreduce.lsp.  I told you that it was a little delicate.

!#if !*savedef
% Some switches may be in the utter core and not introduced via the
% "switch" declaration...
for each y in oblist() do
  if flagp(y, 'switch) then <<
     princ "+++ Declaring a switch: ";
     print y >>; 
!#endif

get_configuration_data();
nil



build_reduce_modules reduce_base_modules;


*** Compiling rlisp ... 


FASLOUT "rlisp": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "rlisp"



*** Compiling module ... 


FASLOUT "module": IN files;  or type in expressions
When all done, execute FASLEND;
+++ exports compiled, 5 + 16 bytes
+++ imports compiled, 5 + 16 bytes

*** local variable u in procedure module not used 
+++ module not compiled (C version available)
+++ endmodule compiled, 22 + 36 bytes

*** local variable vars in procedure formload not used 
+++ formload compiled, 34 + 40 bytes
+++ load!-package compiled, 136 + 72 bytes
+++ load_package compiled, 12 + 12 bytes
+++ packages_to_load compiled, 6 + 16 bytes
+++ patchstat compiled, 152 + 76 bytes
+++ name!-for!-patched!-version compiled, 12 + 24 bytes

*** local variable pkg in procedure instate-patches not used 
+++ instate!-patches compiled, 24 + 32 bytes
+++ install!-patches compiled, 19 + 20 bytes
+++ patches!-load!-check compiled, 14 + 24 bytes

*** local variable vars in procedure formpatch not used 

*** local variable mode in procedure formpatch not used 
+++ formpatch compiled, 4 + 12 bytes
Completed FASL files for "module"



*** Compiling newtok ... 


FASLOUT "newtok": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mkprec not compiled (C version available)
+++ newtok compiled, 78 + 60 bytes
+++ newtok1 compiled, 32 + 28 bytes
+++ newtok2 compiled, 35 + 16 bytes
+++ consescc compiled, 18 + 16 bytes
+++ lstchr compiled, 17 + 8 bytes

*** $ redefined 

*** $ redefined 

*** ; redefined 

*** ; redefined 

*** + redefined 

*** + redefined 

*** - redefined 

*** - redefined 

*** * redefined 

*** * redefined 

*** ^ redefined 

*** ^ redefined 

*** ** redefined 

*** ** redefined 

*** / redefined 

*** / redefined 

*** = redefined 

*** = redefined 

*** , redefined 

*** , redefined 

*** ( redefined 

*** ( redefined 

*** ) redefined 

*** ) redefined 

*** : redefined 

*** : redefined 

*** := redefined 

*** := redefined 

*** . redefined 

*** . redefined 

*** < redefined 

*** < redefined 

*** <= redefined 

*** <= redefined 

*** [ redefined 

*** [ redefined 

*** << redefined 

*** << redefined 

*** > redefined 

*** > redefined 

*** >= redefined 

*** >= redefined 

*** ] redefined 

*** ] redefined 

*** >> redefined 

*** >> redefined 
Completed FASL files for "newtok"



*** Compiling rsupport ... 


FASLOUT "rsupport": IN files;  or type in expressions
When all done, execute FASLEND;
+++ aconc not compiled (C version available)
+++ arrayp not compiled (C version available)

*** atsoc not defined (LOSE flag) 

*** copyd not defined (LOSE flag) 

*** eqcar not defined (LOSE flag) 
+++ errorset!* not compiled (C version available)
+++ errorset2 compiled, 12 + 20 bytes

*** flagpcar not defined (LOSE flag) 
+++ idlistp not compiled (C version available)
+++ listp not compiled (C version available)
+++ mkprog compiled, 5 + 12 bytes

*** mkquote not defined (LOSE flag) 
+++ mksetq compiled, 22 + 24 bytes
+++ pairvars compiled, 40 + 32 bytes
+++ prin2t compiled, 5 + 12 bytes

*** princ not defined (LOSE flag) 
+++ putc compiled, 19 + 24 bytes

*** reversip not defined (LOSE flag) 

*** smemq not defined (LOSE flag) 
+++ subsetp compiled, 16 + 8 bytes

*** union not defined (LOSE flag) 

*** intersection not defined (LOSE flag) 

*** geq not defined (LOSE flag) 

*** leq not defined (LOSE flag) 

*** neq not defined (LOSE flag) 
+++ setdiff not compiled (C version available)
+++ aconc!* not compiled (C version available)
+++ nconc!* compiled as link to nconc
+++ reversip!* compiled as link to reversip
+++ rplaca!* compiled as link to rplaca
+++ rplacd!* compiled as link to rplacd
+++ lispapply not compiled (C version available)
+++ lispeval compiled as link to eval

*** apply1 not defined (LOSE flag) 

*** apply2 not defined (LOSE flag) 

*** apply3 not defined (LOSE flag) 
+++ gettype compiled, 68 + 68 bytes
Completed FASL files for "rsupport"



*** Compiling slfns ... 


FASLOUT "slfns": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "slfns"



*** Compiling superv ... 


FASLOUT "superv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ errorp not compiled (C version available)

*** printprompt not defined (LOSE flag) 
+++ setcloc!* not compiled (C version available)
+++ commdemo compiled, 101 + 64 bytes
+++ command1 not compiled (C version available)
+++ command not compiled (C version available)
+++ update_prompt compiled, 32 + 44 bytes
+++ begin1 compiled, 308 + 268 bytes
+++ begin11 compiled, 389 + 264 bytes
+++ getsetvarlis compiled, 63 + 32 bytes
+++ getsetvars not compiled (C version available)
+++ close!-input!-files compiled, 20 + 16 bytes
+++ close!-output!-files compiled, 19 + 16 bytes
+++ add2buflis compiled, 28 + 20 bytes
+++ add2inputbuf not compiled (C version available)
+++ add2resultbuf not compiled (C version available)
+++ condterpri not compiled (C version available)
+++ eofcheck not compiled (C version available)
+++ resetparser compiled, 6 + 20 bytes
+++ terminalp not compiled (C version available)
+++ dfprint compiled, 27 + 28 bytes
+++ showtime compiled, 57 + 52 bytes
+++ sinitl not compiled (C version available)
+++ read!-init!-file compiled, 177 + 120 bytes
Completed FASL files for "superv"



*** Compiling tok ... 


FASLOUT "tok": IN files;  or type in expressions
When all done, execute FASLEND;
+++ prin2x not compiled (C version available)
+++ mkstrng not compiled (C version available)
+++ readch1 not compiled (C version available)
+++ tokquote compiled, 12 + 36 bytes
+++ token!-number not compiled (C version available)
+++ token1 not compiled (C version available)
+++ tokbquote compiled, 13 + 36 bytes
+++ token compiled as link to token1
+++ filenderr compiled, 23 + 36 bytes
+++ ptoken compiled, 25 + 32 bytes
+++ rread1 compiled, 85 + 80 bytes
+++ rrdls compiled, 49 + 48 bytes
+++ rread compiled, 4 + 20 bytes
+++ delcp not compiled (C version available)
+++ toknump not compiled (C version available)
+++ addcomment not compiled (C version available)
+++ scan not compiled (C version available)

*** local variable u in procedure read-comment1 not used 
+++ read!-comment1 not compiled (C version available)
Completed FASL files for "tok"



*** Compiling xread ... 


FASLOUT "xread": IN files;  or type in expressions
When all done, execute FASLEND;
+++ chknewnam not compiled (C version available)

*** local variable v in procedure mkvar not used 
+++ mkvar not compiled (C version available)
+++ remcomma not compiled (C version available)
+++ eolcheck not compiled (C version available)
+++ xcomment not compiled (C version available)
+++ xread1 not compiled (C version available)
+++ xread not compiled (C version available)
+++ expread compiled, 3 + 16 bytes
Completed FASL files for "xread"



*** Compiling lpri ... 


FASLOUT "lpri": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lpri compiled, 11 + 16 bytes
+++ lpriw compiled, 43 + 28 bytes
+++ lprim compiled, 8 + 20 bytes
+++ lprie compiled, 21 + 32 bytes
+++ printty compiled, 23 + 20 bytes

*** local variable packagename in procedure rerror not used 

*** local variable number in procedure rerror not used 
+++ rerror compiled, 5 + 16 bytes
+++ rederr compiled, 7 + 16 bytes
+++ symerr compiled, 88 + 76 bytes
+++ typerr compiled, 11 + 24 bytes
Completed FASL files for "lpri"



*** Compiling parser ... 


FASLOUT "parser": IN files;  or type in expressions
When all done, execute FASLEND;
+++ comm1 compiled, 33 + 40 bytes
+++ ifstat compiled, 47 + 52 bytes
+++ functionstat compiled, 32 + 44 bytes
+++ lamstat compiled, 18 + 24 bytes
+++ readprogn compiled, 16 + 36 bytes
+++ endstat compiled, 8 + 20 bytes
Completed FASL files for "parser"



*** Compiling block ... 


FASLOUT "block": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gostat compiled, 14 + 24 bytes
+++ decl compiled, 78 + 72 bytes
+++ decstat compiled, 31 + 56 bytes
+++ blocktyperr compiled, 9 + 24 bytes
+++ mapovercar compiled, 14 + 12 bytes
+++ blockstat compiled, 84 + 100 bytes
+++ mkblock compiled, 5 + 12 bytes
+++ rblock_tube8alw5476 compiled, 11 + 16 bytes
+++ symbvarlst compiled, 51 + 44 bytes
+++ formblock compiled, 29 + 24 bytes
+++ initprogvars compiled, 38 + 20 bytes
+++ formprog compiled, 20 + 20 bytes
+++ formprog1 compiled, 73 + 44 bytes
+++ retstat compiled, 22 + 40 bytes
Completed FASL files for "block"



*** Compiling form ... 


FASLOUT "form": IN files;  or type in expressions
When all done, execute FASLEND;
+++ formcond compiled, 8 + 16 bytes
+++ formcond1 compiled, 29 + 20 bytes
+++ formlamb compiled, 20 + 20 bytes
+++ formprogn compiled, 8 + 16 bytes
+++ expdrmacro not compiled (C version available)
+++ getrmacro not compiled (C version available)
+++ applmacro compiled, 6 + 8 bytes
+++ set!-global!-mode compiled, 17 + 28 bytes
+++ form1 not compiled (C version available)
+++ form2 compiled, 18 + 20 bytes
+++ argnochk not compiled (C version available)
+++ argsofopr not compiled (C version available)
+++ intexprnp not compiled (C version available)
+++ intexprlisp not compiled (C version available)
+++ formlis not compiled (C version available)
+++ formclis compiled, 18 + 16 bytes
+++ form not compiled (C version available)
+++ macrochk not compiled (C version available)
+++ symbid compiled, 55 + 60 bytes
+++ algid not compiled (C version available)
+++ intid compiled, 42 + 40 bytes
+++ convertmode not compiled (C version available)
+++ convertmode1 not compiled (C version available)

*** local variable vars in procedure **a2s not used 
+++ !*!*a2s not compiled (C version available)

*** local variable vars in procedure **s2a not used 
+++ !*!*s2a compiled, 1 + 8 bytes
+++ formc not compiled (C version available)
+++ intargfn not compiled (C version available)
+++ !*!*a2i not compiled (C version available)
+++ ieval compiled, 4 + 16 bytes

*** local variable vars in procedure **s2i not used 
+++ !*!*s2i compiled, 9 + 12 bytes
+++ !*s2i compiled, 9 + 16 bytes

*** local variable vars in procedure identity not used 
+++ identity not compiled (C version available)
+++ formbool compiled, 140 + 76 bytes
+++ formboollis compiled, 33 + 20 bytes
+++ bool!-eval compiled as link to lispeval
+++ boolvalue!* compiled, 9 + 12 bytes
+++ formc!* compiled, 12 + 24 bytes
+++ revalx not compiled (C version available)
+++ formrerror compiled, 66 + 40 bytes
+++ formrederr compiled, 10 + 16 bytes
+++ formreturn compiled, 10 + 16 bytes
+++ rsverr compiled, 9 + 24 bytes
+++ mksetshare compiled, 9 + 20 bytes
+++ formsetq compiled, 246 + 148 bytes
+++ setcar compiled, 4 + 8 bytes
+++ setcdr not compiled (C version available)
+++ formfunc compiled, 37 + 44 bytes
+++ rlis not compiled (C version available)
+++ flagop compiled, 8 + 12 bytes
+++ rlistat compiled, 13 + 20 bytes

*** local variable mode in procedure formrlis not used 
+++ formrlis compiled, 69 + 56 bytes
+++ mkarg compiled, 43 + 24 bytes

*** local variable vars in procedure dnform not used 
+++ dnform compiled, 50 + 44 bytes

*** local variable vars in procedure intform not used 
+++ intform compiled, 19 + 20 bytes
Completed FASL files for "form"



*** Compiling proc ... 


FASLOUT "proc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mkprogn compiled, 15 + 12 bytes
+++ formproc compiled, 296 + 164 bytes
+++ pairxvars compiled, 73 + 36 bytes
+++ procstat1 compiled, 220 + 132 bytes
+++ procstat compiled, 3 + 12 bytes
Completed FASL files for "proc"



*** Compiling forstat ... 


FASLOUT "forstat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ forstat not compiled (C version available)
+++ forloop compiled, 176 + 80 bytes
+++ formfor compiled, 255 + 100 bytes
+++ algmodep not compiled (C version available)
+++ aminusp!: compiled, 33 + 48 bytes
+++ aminusp!:1 compiled, 69 + 40 bytes
+++ foreachstat compiled, 73 + 52 bytes
+++ formforeach compiled, 95 + 52 bytes
+++ forformat compiled, 218 + 144 bytes

*** lastpair not defined (LOSE flag) 
+++ unreval not compiled (C version available)
Completed FASL files for "forstat"



*** Compiling loops ... 


FASLOUT "loops": IN files;  or type in expressions
When all done, execute FASLEND;
+++ repeatstat compiled, 41 + 44 bytes
+++ repeat_ocldoosay5d8 compiled, 34 + 28 bytes
+++ formrepeat compiled, 27 + 32 bytes
+++ whilstat compiled, 41 + 44 bytes
+++ while_w3ui03gzzzn compiled, 40 + 32 bytes
+++ formwhile compiled, 27 + 32 bytes
Completed FASL files for "loops"



*** Compiling statmisc ... 


FASLOUT "statmisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ define compiled, 36 + 32 bytes
+++ formwrite compiled, 95 + 56 bytes
+++ formechopr compiled, 33 + 40 bytes
Completed FASL files for "statmisc"



*** Compiling smacro ... 


FASLOUT "smacro": IN files;  or type in expressions
When all done, execute FASLEND;
+++ applsmacro compiled, 254 + 64 bytes
+++ no!-side!-effectp compiled, 33 + 40 bytes
+++ no!-side!-effect!-listp compiled, 13 + 12 bytes
+++ one!-entryp compiled, 23 + 12 bytes
+++ one!-entry!-listp compiled, 15 + 12 bytes
+++ subla!-q compiled, 30 + 12 bytes
Completed FASL files for "smacro"



*** Compiling io ... 


FASLOUT "io": IN files;  or type in expressions
When all done, execute FASLEND;
+++ file!-transform compiled, 35 + 32 bytes
+++ infile compiled, 7 + 20 bytes
+++ in compiled as link to in_non_empty_list
+++ in_non_empty_list compiled, 60 + 56 bytes
+++ mkfil!* compiled, 29 + 28 bytes
+++ in_list1 compiled, 92 + 80 bytes
+++ out compiled as link to out_non_empty_list
+++ out_non_empty_list compiled, 88 + 64 bytes
+++ shut compiled as link to shut_non_empty_list
+++ shut_non_empty_list compiled, 120 + 80 bytes
Completed FASL files for "io"



*** Compiling infix ... 


FASLOUT "infix": IN files;  or type in expressions
When all done, execute FASLEND;
+++ forminfix compiled, 68 + 28 bytes
+++ infix compiled, 27 + 16 bytes
+++ precedence compiled, 48 + 40 bytes
Completed FASL files for "infix"



*** Compiling switch ... 


FASLOUT "switch": IN files;  or type in expressions
When all done, execute FASLEND;
+++ on compiled, 15 + 12 bytes
+++ off compiled, 15 + 12 bytes
+++ off1 not compiled (C version available)
+++ on1 not compiled (C version available)
+++ onoff compiled, 80 + 64 bytes
+++ switch compiled, 64 + 40 bytes
Completed FASL files for "switch"



*** Compiling where ... 


FASLOUT "where": IN files;  or type in expressions
When all done, execute FASLEND;
+++ formwhere compiled, 87 + 52 bytes
Completed FASL files for "where"



*** Compiling list ... 


FASLOUT "list": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable u in procedure quotelist not used 
+++ quotelist not compiled (C version available)
+++ xreadlist compiled, 55 + 56 bytes

*** { redefined 

*** { redefined 

*** } redefined 

*** } redefined 
+++ getrlist compiled, 19 + 28 bytes
+++ listeval compiled, 123 + 72 bytes
+++ makelist not compiled (C version available)
+++ lengthcdr compiled, 3 + 8 bytes
+++ listpri compiled, 66 + 76 bytes
+++ treesizep compiled, 5 + 16 bytes
+++ treesizep1 not compiled (C version available)
+++ listeval0 compiled, 51 + 48 bytes
+++ rfirst compiled, 30 + 40 bytes
+++ parterr compiled, 10 + 24 bytes
+++ rsecond compiled, 34 + 40 bytes
+++ rthird compiled, 39 + 40 bytes
+++ rrest compiled, 71 + 44 bytes
+++ rappend compiled, 37 + 36 bytes
+++ rcons not compiled (C version available)
+++ rreverse compiled, 20 + 36 bytes
+++ listmap compiled, 68 + 24 bytes
+++ lambda_8umob4nurre8 compiled, 12 + 24 bytes
+++ listsort compiled, 50 + 52 bytes
Completed FASL files for "list"



*** Compiling array ... 


FASLOUT "array": IN files;  or type in expressions
When all done, execute FASLEND;
+++ getel not compiled (C version available)
+++ getel1 not compiled (C version available)
+++ setel not compiled (C version available)
+++ setel1 not compiled (C version available)
+++ dimension compiled, 4 + 8 bytes
+++ typechk compiled, 27 + 28 bytes
+++ arrayfn compiled, 88 + 48 bytes
+++ add1lis not compiled (C version available)
+++ mkarray_sezq4s0ujcwb compiled, 15 + 28 bytes
+++ mkarray1 not compiled (C version available)
+++ formarray compiled, 90 + 44 bytes
+++ arraychk not compiled (C version available)

*** local variable v in procedure arrayeval not used 
+++ arrayeval compiled, 9 + 24 bytes
+++ arraylength compiled, 6 + 16 bytes
Completed FASL files for "array"



*** Compiling inter ... 


FASLOUT "inter": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pause compiled, 13 + 20 bytes
+++ pause1 compiled, 110 + 88 bytes
+++ assoccar compiled, 14 + 8 bytes
+++ yesp compiled, 71 + 60 bytes
+++ yesp1 compiled, 38 + 40 bytes
+++ cont compiled, 73 + 60 bytes
Completed FASL files for "inter"

The system is about to do a restart...
REDUCE



*** Compiling alg ... 


FASLOUT "alg": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "alg"



*** Compiling alg-form ... 


FASLOUT "alg-form": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable vars in procedure forminput not used 

*** local variable mode in procedure forminput not used 
+++ forminput compiled, 30 + 36 bytes

*** local variable vars in procedure formws not used 

*** local variable mode in procedure formws not used 
+++ formws compiled, 31 + 40 bytes
Completed FASL files for "alg-form"



*** Compiling intro ... 


FASLOUT "intro": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mkid compiled, 41 + 24 bytes
+++ multiple!-result compiled, 338 + 160 bytes
+++ fillin compiled, 7 + 12 bytes
+++ fillin1 compiled, 35 + 16 bytes

*** local variable pline* in procedure msgpri not used 
+++ msgpri compiled, 116 + 76 bytes
+++ errach compiled, 19 + 52 bytes
+++ errpri1 compiled, 10 + 24 bytes
+++ errpri2 compiled, 10 + 20 bytes
+++ redmsg compiled, 37 + 44 bytes
+++ typerr compiled, 52 + 44 bytes
Completed FASL files for "intro"



*** Compiling general ... 


FASLOUT "general": IN files;  or type in expressions
When all done, execute FASLEND;
+++ atomlis compiled, 14 + 8 bytes
+++ carx not compiled (C version available)
+++ delasc not compiled (C version available)
+++ eqexpr not compiled (C version available)

*** evenp not defined (LOSE flag) 

*** lengthc not defined (LOSE flag) 
+++ makearbcomplex compiled, 11 + 20 bytes
+++ mapcons not compiled (C version available)
+++ mappend compiled, 36 + 8 bytes
+++ nlist compiled, 16 + 16 bytes
+++ nth not compiled (C version available)
+++ pnth not compiled (C version available)
+++ permp compiled, 25 + 16 bytes
+++ permutations compiled, 52 + 16 bytes
+++ posintegerp compiled, 10 + 12 bytes
+++ remove not compiled (C version available)
+++ repasc compiled, 39 + 28 bytes
+++ repeats compiled, 23 + 12 bytes
+++ revpr not compiled (C version available)
+++ smember not compiled (C version available)
+++ smemql not compiled (C version available)
+++ smemqlp not compiled (C version available)

*** spaces not defined (LOSE flag) 

*** subla not defined (LOSE flag) 
+++ xnp not compiled (C version available)
Completed FASL files for "general"



*** Compiling farith ... 


FASLOUT "farith": IN files;  or type in expressions
When all done, execute FASLEND;

*** iplus2 not defined (LOSE flag) 

*** itimes2 not defined (LOSE flag) 

*** isub1 not defined (LOSE flag) 

*** iadd1 not defined (LOSE flag) 

*** iminus not defined (LOSE flag) 

*** idifference not defined (LOSE flag) 

*** iquotient not defined (LOSE flag) 

*** iremainder not defined (LOSE flag) 

*** igreaterp not defined (LOSE flag) 

*** ilessp not defined (LOSE flag) 

*** iminusp not defined (LOSE flag) 

*** # redefined 

*** # redefined 

*** #+ redefined 

*** #+ redefined 

*** #- redefined 

*** #- redefined 

*** #* redefined 

*** #* redefined 

*** #/ redefined 

*** #/ redefined 

*** #> redefined 

*** #> redefined 

*** #< redefined 

*** #< redefined 

*** #= redefined 

*** #= redefined 
Completed FASL files for "farith"



*** Compiling numsup ... 


FASLOUT "numsup": IN files;  or type in expressions
When all done, execute FASLEND;

*** gcdn not defined (LOSE flag) 
Completed FASL files for "numsup"



*** Compiling genmod ... 


FASLOUT "genmod": IN files;  or type in expressions
When all done, execute FASLEND;
+++ set!-general!-modulus compiled, 29 + 28 bytes
+++ general!-modular!-plus not compiled (C version available)
+++ general!-modular!-difference compiled, 12 + 12 bytes
+++ general!-modular!-number not compiled (C version available)
+++ general!-modular!-times not compiled (C version available)
+++ general!-modular!-reciprocal not compiled (C version available)
+++ general!-modular!-quotient not compiled (C version available)
+++ general!-modular!-minus compiled, 8 + 16 bytes
+++ general!-reciprocal!-by!-gcd compiled, 46 + 36 bytes
+++ reverse!-num compiled, 29 + 20 bytes
+++ reverse!-num1 compiled, 81 + 32 bytes
+++ rnreverse!-num!* compiled, 19 + 24 bytes
+++ simpreverse!-num compiled, 28 + 36 bytes
+++ general!-modular!-expt compiled, 93 + 52 bytes
Completed FASL files for "genmod"



*** Compiling random ... 


FASLOUT "random": IN files;  or type in expressions
When all done, execute FASLEND;
+++ random_new_seed compiled, 147 + 60 bytes
+++ next!-random!-number compiled, 50 + 32 bytes
+++ random compiled, 76 + 32 bytes
Completed FASL files for "random"



*** Compiling smallmod ... 


FASLOUT "smallmod": IN files;  or type in expressions
When all done, execute FASLEND;
+++ set!-modulus compiled as link to set-general-modulus

*** set-small-modulus not defined (LOSE flag) 

*** modular-plus not defined (LOSE flag) 

*** modular-difference not defined (LOSE flag) 

*** modular-number not defined (LOSE flag) 

*** modular-times not defined (LOSE flag) 

*** modular-reciprocal not defined (LOSE flag) 
+++ reciprocal!-by!-gcd compiled, 49 + 36 bytes

*** modular-quotient not defined (LOSE flag) 

*** modular-minus not defined (LOSE flag) 

*** modular-expt not defined (LOSE flag) 
Completed FASL files for "smallmod"



*** Compiling zfactor ... 


FASLOUT "zfactor": IN files;  or type in expressions
When all done, execute FASLEND;
+++ add!-factor compiled, 33 + 12 bytes
+++ zfactor compiled, 4 + 16 bytes
+++ zfactor1 compiled, 104 + 36 bytes
+++ mcfactor!* compiled, 85 + 44 bytes
+++ mcfactor compiled, 152 + 24 bytes
+++ primep compiled, 71 + 48 bytes
+++ internal!-primep compiled, 11 + 20 bytes
+++ small!-primep compiled, 115 + 36 bytes
+++ general!-primep compiled, 116 + 48 bytes
+++ nextprime compiled, 61 + 48 bytes
+++ nrootnn compiled, 175 + 44 bytes
Completed FASL files for "zfactor"



*** Compiling sort ... 


FASLOUT "sort": IN files;  or type in expressions
When all done, execute FASLEND;

*** sort not defined (LOSE flag) 

*** stable-sort not defined (LOSE flag) 

*** stable-sortip not defined (LOSE flag) 
+++ idsort compiled, 4 + 16 bytes
+++ idcompare compiled, 10 + 12 bytes
+++ idcomp1 compiled, 22 + 12 bytes
+++ lesspcar compiled, 4 + 8 bytes
+++ lesspcdr compiled, 4 + 8 bytes
+++ lessppair compiled, 12 + 8 bytes
+++ greaterpcdr compiled, 4 + 8 bytes
+++ lesspcdadr compiled, 6 + 8 bytes
+++ lesspdeg compiled, 19 + 12 bytes
+++ ordopcar compiled, 4 + 12 bytes
+++ orderfactors compiled, 12 + 12 bytes
+++ sort!-factors compiled, 4 + 16 bytes
Completed FASL files for "sort"



*** Compiling reval ... 


FASLOUT "reval": IN files;  or type in expressions
When all done, execute FASLEND;
+++ reval not compiled (C version available)
+++ aeval not compiled (C version available)
+++ aeval!* not compiled (C version available)
+++ reval1 not compiled (C version available)
+++ rmmbreval compiled, 164 + 64 bytes
+++ remember compiled, 49 + 44 bytes
+++ recursiveerror compiled, 9 + 20 bytes
+++ opfneval compiled, 148 + 36 bytes
+++ reval2 not compiled (C version available)
+++ getrtype not compiled (C version available)

*** local variable u in procedure getrtype1 not used 
+++ getrtype1 not compiled (C version available)
+++ getrtype2 not compiled (C version available)
+++ rtypecar compiled, 19 + 20 bytes
+++ getrtypecar not compiled (C version available)
+++ getrtypeor not compiled (C version available)
+++ !*eqn2a compiled, 43 + 32 bytes
+++ prepsqyy compiled, 9 + 16 bytes
+++ getelv not compiled (C version available)
+++ setelv compiled, 41 + 16 bytes
+++ reval_without_mod not compiled (C version available)
+++ revlis not compiled (C version available)
+++ revop1 compiled, 8 + 16 bytes
+++ mk!*sq not compiled (C version available)
+++ !*sq_85s6pmpw09k9 compiled, 6 + 12 bytes
+++ expchk not compiled (C version available)
+++ lengthreval compiled, 79 + 72 bytes
+++ yetunknowntypeeval compiled, 5 + 16 bytes
+++ eval!-yetunknowntypeexpr compiled, 82 + 36 bytes
Completed FASL files for "reval"



*** Compiling algbool ... 


FASLOUT "algbool": IN files;  or type in expressions
When all done, execute FASLEND;
+++ evalequal compiled, 30 + 20 bytes

*** local variable u in procedure quoteequation not used 
+++ quoteequation compiled, 2 + 12 bytes
+++ evalgreaterp compiled, 36 + 40 bytes
+++ evalgeq compiled, 4 + 16 bytes
+++ evallessp compiled, 3 + 12 bytes
+++ evalleq compiled, 4 + 16 bytes
+++ evalneq compiled, 4 + 16 bytes
+++ evalnumberp compiled, 32 + 20 bytes
+++ ratnump compiled, 13 + 12 bytes
Completed FASL files for "algbool"



*** Compiling simp ... 


FASLOUT "simp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ noncom compiled, 16 + 16 bytes
+++ noncom1 compiled, 8 + 20 bytes
+++ simp!* not compiled (C version available)
+++ rationalizei not compiled (C version available)
+++ subs2 not compiled (C version available)
+++ simp not compiled (C version available)
+++ opmtchrevop not compiled (C version available)
+++ simp_without_resimp not compiled (C version available)
+++ getinfix compiled, 8 + 12 bytes
+++ !*ssave not compiled (C version available)
+++ numlis not compiled (C version available)
+++ simpatom not compiled (C version available)
+++ mkop compiled, 41 + 52 bytes
+++ operatorp compiled, 5 + 16 bytes
+++ simpcar not compiled (C version available)
+++ share compiled, 100 + 64 bytes

*** boundp not defined (LOSE flag) 
+++ setifngfl compiled, 11 + 16 bytes
+++ simpexpon not compiled (C version available)
+++ simpexpon1 not compiled (C version available)
+++ simpexpt not compiled (C version available)
+++ simpexpt1 compiled, 281 + 128 bytes
+++ simpexptfctr compiled, 33 + 24 bytes
+++ simpexpt11 compiled, 43 + 28 bytes
+++ simpexpt2 compiled, 340 + 124 bytes
+++ posnump compiled, 26 + 24 bytes
+++ posnumlistp compiled, 13 + 12 bytes
+++ split!-sign compiled, 49 + 20 bytes
+++ conv2gid compiled, 51 + 24 bytes
+++ conv2gi2 compiled, 116 + 40 bytes
+++ simpx1 compiled, 497 + 140 bytes
+++ expf compiled, 75 + 44 bytes
+++ simprad compiled, 162 + 96 bytes
+++ radfa compiled, 50 + 28 bytes
+++ radfb compiled, 20 + 32 bytes
+++ mkrootlsq compiled, 16 + 36 bytes
+++ mkrootlsq1 compiled, 27 + 24 bytes
+++ mkrootsq compiled, 105 + 76 bytes
+++ mkrootsql compiled, 35 + 28 bytes
+++ check!-radf!-sign compiled, 48 + 32 bytes
+++ radf compiled, 247 + 136 bytes
+++ radf1 compiled, 59 + 36 bytes
+++ radd compiled, 72 + 44 bytes
+++ iroot compiled, 12 + 12 bytes
+++ iroot!-ceiling compiled, 12 + 12 bytes
+++ mkexpt compiled, 9 + 16 bytes
+++ nrootn compiled, 66 + 24 bytes
+++ simpiden not compiled (C version available)
+++ not_imag_num compiled, 73 + 76 bytes
+++ domainvalchk not compiled (C version available)
+++ valuechk not compiled (C version available)
+++ znumrnil compiled, 9 + 16 bytes
+++ znumr compiled, 42 + 16 bytes
+++ opfchk!! compiled, 169 + 112 bytes
+++ intconv compiled, 14 + 20 bytes
+++ simpcr compiled, 37 + 40 bytes
+++ simprd compiled, 14 + 24 bytes
+++ simplist compiled, 190 + 40 bytes
+++ mconv compiled, 5 + 20 bytes
+++ dmconv0 compiled, 15 + 24 bytes
+++ dmconv1 compiled, 57 + 20 bytes
+++ mconv1 compiled, 24 + 12 bytes
+++ drnconv compiled, 24 + 12 bytes
+++ simpabs compiled, 47 + 40 bytes
+++ simpabs1 compiled, 183 + 72 bytes
+++ sign!-abs compiled, 26 + 24 bytes
+++ constant_exprp compiled, 66 + 52 bytes
+++ constant_expr_listp compiled, 41 + 24 bytes
+++ mkabsf0 compiled, 9 + 24 bytes
+++ mkabsf1 compiled, 76 + 64 bytes
+++ mkabsfd compiled, 33 + 48 bytes
+++ positive!-sfp compiled, 43 + 36 bytes
+++ positive!-powp compiled, 12 + 16 bytes
+++ split!-comfac!-part compiled, 6 + 16 bytes
+++ split!-comfac compiled, 71 + 32 bytes
+++ simpdiff not compiled (C version available)
+++ simpminus not compiled (C version available)
+++ simpplus not compiled (C version available)
+++ ckpreci!# not compiled (C version available)
+++ timesip not compiled (C version available)
+++ ckprec2!# compiled, 46 + 24 bytes
+++ !?a2bf compiled, 19 + 20 bytes
+++ ckprec3!# compiled, 30 + 16 bytes
+++ simpquot not compiled (C version available)
+++ simprecip not compiled (C version available)
+++ simpset compiled, 24 + 36 bytes
+++ simpsqrt compiled, 80 + 80 bytes
+++ xsimp not compiled (C version available)
+++ simptimes not compiled (C version available)
+++ resimp not compiled (C version available)
+++ resimp1 not compiled (C version available)
+++ simp!*sq compiled, 11 + 16 bytes
Completed FASL files for "simp"



*** Compiling exptchk ... 


FASLOUT "exptchk": IN files;  or type in expressions
When all done, execute FASLEND;
+++ exptchksq not compiled (C version available)
+++ exptchk not compiled (C version available)
+++ exptchk0 compiled, 60 + 28 bytes
+++ expttermp compiled, 12 + 16 bytes
+++ expttermp1 compiled, 24 + 12 bytes
+++ exptunwind compiled, 58 + 32 bytes
+++ mergex compiled, 96 + 36 bytes
+++ mergey compiled, 58 + 44 bytes
+++ intcoeff compiled, 26 + 12 bytes
+++ meldx compiled, 34 + 20 bytes
+++ meldx0 compiled, 22 + 12 bytes
+++ meldx1 compiled, 26 + 12 bytes
Completed FASL files for "exptchk"



*** Compiling simplog ... 


FASLOUT "simplog": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simplog compiled, 47 + 56 bytes
+++ simplogi compiled, 159 + 96 bytes
+++ one_complexlist compiled, 25 + 20 bytes
+++ multsq!* compiled, 8 + 20 bytes
+++ simplogsq compiled, 56 + 60 bytes
+++ simplog2 compiled, 96 + 68 bytes
+++ simplogn compiled, 52 + 36 bytes
+++ mergeminus compiled, 35 + 16 bytes
+++ formlog compiled, 11 + 20 bytes
+++ formlogterm compiled, 81 + 52 bytes
+++ formlog2 compiled, 11 + 24 bytes
Completed FASL files for "simplog"



*** Compiling logsort ... 


FASLOUT "logsort": IN files;  or type in expressions
When all done, execute FASLEND;
+++ clogsq!* compiled, 30 + 52 bytes
+++ logsort compiled, 28 + 48 bytes
+++ comblog compiled, 61 + 40 bytes
+++ clogsq compiled, 8 + 12 bytes
+++ clogf compiled, 48 + 32 bytes
+++ clogf1 compiled, 31 + 28 bytes
+++ clogf2 compiled, 324 + 80 bytes
+++ logarg compiled, 9 + 16 bytes
+++ coefgcd compiled, 20 + 12 bytes
Completed FASL files for "logsort"



*** Compiling sub ... 


FASLOUT "sub": IN files;  or type in expressions
When all done, execute FASLEND;
+++ subeval compiled, 41 + 48 bytes
+++ subeval0 compiled, 172 + 84 bytes
+++ subeval1 compiled, 62 + 60 bytes
+++ subsq compiled, 28 + 32 bytes
+++ subs2!* not compiled (C version available)
+++ subf compiled, 137 + 68 bytes
+++ noncomexpf compiled, 25 + 16 bytes
+++ subf1 not compiled (C version available)
+++ wtchk not compiled (C version available)
+++ subsublis compiled, 146 + 40 bytes
+++ subsubf compiled, 152 + 48 bytes
+++ listsub compiled, 40 + 16 bytes
Completed FASL files for "sub"



*** Compiling order ... 


FASLOUT "order": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ordad not compiled (C version available)
+++ ordn compiled, 22 + 16 bytes
+++ ord2 not compiled (C version available)

*** ordp not defined (LOSE flag) 
+++ ordpl compiled, 23 + 16 bytes
+++ ordpv compiled, 16 + 16 bytes
+++ ordpv1 compiled, 37 + 12 bytes
+++ ordop not compiled (C version available)
+++ ordpp not compiled (C version available)
+++ ordpa not compiled (C version available)
Completed FASL files for "order"



*** Compiling forall ... 


FASLOUT "forall": IN files;  or type in expressions
When all done, execute FASLEND;
+++ forallstat compiled, 60 + 60 bytes
+++ forall compiled, 61 + 36 bytes
+++ arbstat compiled, 8 + 32 bytes
+++ newvar compiled, 23 + 24 bytes
+++ formforall compiled, 71 + 60 bytes
+++ def compiled, 50 + 48 bytes
+++ formlet1 compiled, 114 + 32 bytes
+++ requote compiled, 15 + 20 bytes
+++ requote1 not compiled (C version available)
+++ !*s2arg not compiled (C version available)
+++ formclear compiled, 9 + 16 bytes
+++ formclear1 compiled, 63 + 24 bytes
+++ formlet compiled, 9 + 16 bytes
+++ formmatch compiled, 9 + 16 bytes
+++ let compiled as link to let0
+++ let0 compiled, 9 + 20 bytes
+++ let00 compiled, 23 + 36 bytes
+++ let1 compiled, 109 + 80 bytes
+++ revalruletst compiled, 14 + 24 bytes
+++ let2 not compiled (C version available)
+++ let3 not compiled (C version available)
+++ letscalar not compiled (C version available)
+++ letexprn compiled, 322 + 132 bytes
+++ clearrules compiled, 10 + 20 bytes
+++ rule!-list compiled, 128 + 84 bytes
+++ rule!* compiled, 111 + 64 bytes
+++ rule compiled, 127 + 64 bytes
+++ tildepri compiled, 6 + 16 bytes

*** => redefined 

*** => redefined 
+++ equalreplaceby compiled, 4 + 12 bytes
+++ formreplaceby compiled, 26 + 24 bytes
+++ formwhen compiled, 24 + 28 bytes
+++ evalwhereexp compiled, 17 + 28 bytes
+++ evalletsub compiled, 15 + 32 bytes
+++ evalletsub2 compiled, 17 + 24 bytes
+++ set_rules compiled, 88 + 56 bytes
+++ restore_rules compiled, 99 + 56 bytes
+++ restore_props compiled, 32 + 16 bytes
+++ resimpcar compiled, 3 + 12 bytes
+++ validrule compiled, 9 + 12 bytes
+++ validrule1 compiled, 56 + 20 bytes
+++ remove!-free!-vars!* not compiled (C version available)
+++ remove!-free!-vars not compiled (C version available)
+++ remove!-free!-vars!-l not compiled (C version available)
+++ get!-free!-form compiled, 49 + 32 bytes
+++ term!-split compiled, 25 + 12 bytes
+++ tpowadd compiled, 19 + 8 bytes
+++ frvarsof not compiled (C version available)
+++ simp0 not compiled (C version available)
+++ let!-prepf compiled, 45 + 16 bytes
+++ match compiled, 9 + 20 bytes
+++ match00 compiled, 29 + 24 bytes
+++ clear compiled, 24 + 40 bytes
+++ clear1 compiled, 105 + 52 bytes
+++ typelet compiled, 191 + 84 bytes
+++ setk not compiled (C version available)
+++ setk0 compiled, 79 + 44 bytes
+++ setk1 compiled, 185 + 88 bytes
+++ put!-avalue not compiled (C version available)
+++ sq_member not compiled (C version available)
+++ sf_member not compiled (C version available)
+++ mvar_member not compiled (C version available)
+++ arglist_member not compiled (C version available)
+++ put!-kvalue not compiled (C version available)
+++ klistt not compiled (C version available)
+++ kernlp not compiled (C version available)
+++ xadd compiled, 75 + 20 bytes
+++ updoldrules compiled, 75 + 32 bytes
+++ xadd!* compiled, 120 + 44 bytes
+++ powlisp compiled, 20 + 12 bytes
+++ rsubla compiled, 25 + 12 bytes
Completed FASL files for "forall"



*** Compiling eqn ... 


FASLOUT "eqn": IN files;  or type in expressions
When all done, execute FASLEND;
+++ equalreval compiled, 28 + 24 bytes
+++ eqnerr compiled, 4 + 16 bytes
+++ evaleqn compiled, 184 + 68 bytes
+++ evaleqn1 compiled, 27 + 20 bytes
+++ lhs compiled, 4 + 16 bytes
+++ rhs compiled, 4 + 16 bytes
+++ lhs!-rhs compiled, 28 + 20 bytes
+++ eqnsub compiled, 61 + 24 bytes
+++ eqnlength compiled, 3 + 8 bytes
Completed FASL files for "eqn"



*** Compiling rmsubs ... 


FASLOUT "rmsubs": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rmsubs not compiled (C version available)
Completed FASL files for "rmsubs"



*** Compiling algdcl ... 


FASLOUT "algdcl": IN files;  or type in expressions
When all done, execute FASLEND;
+++ formopr compiled, 21 + 32 bytes
+++ operator compiled, 15 + 12 bytes
+++ remopr compiled, 66 + 60 bytes
+++ den compiled, 7 + 20 bytes
+++ num compiled, 7 + 20 bytes
+++ formsaveas compiled, 9 + 16 bytes
+++ saveas compiled, 69 + 40 bytes
Completed FASL files for "algdcl"



*** Compiling opmtch ... 


FASLOUT "opmtch": IN files;  or type in expressions
When all done, execute FASLEND;

*** // redefined 

*** // redefined 
+++ emtch not compiled (C version available)
+++ opmtch not compiled (C version available)
+++ mcharg not compiled (C version available)
+++ mcharg1 not compiled (C version available)
+++ reform!-minus compiled, 41 + 16 bytes
+++ reform!-minus2 compiled, 51 + 20 bytes
+++ mchcomb not compiled (C version available)
+++ mchcomb2 compiled, 82 + 16 bytes
+++ comb not compiled (C version available)
+++ mcharg2 not compiled (C version available)
+++ msappend not compiled (C version available)
+++ updtemplate not compiled (C version available)
+++ reval!-without compiled, 33 + 36 bytes
+++ mchk not compiled (C version available)
+++ mchkopt not compiled (C version available)
+++ mchkopt1 not compiled (C version available)
+++ rule_error compiled, 7 + 20 bytes
+++ mchkminus not compiled (C version available)
+++ mkbin compiled, 16 + 8 bytes
+++ mtp not compiled (C version available)
+++ mchsarg not compiled (C version available)
+++ noncomfree compiled, 22 + 16 bytes
+++ noncomperm not compiled (C version available)
+++ noncomdel not compiled (C version available)
+++ noncomdel1 compiled, 30 + 20 bytes
+++ noncomp!* not compiled (C version available)
Completed FASL files for "opmtch"



*** Compiling prep ... 


FASLOUT "prep": IN files;  or type in expressions
When all done, execute FASLEND;
+++ prepsqxx not compiled (C version available)
+++ negnumberchk not compiled (C version available)
+++ prepsqx not compiled (C version available)
+++ prepsq not compiled (C version available)
+++ sqform not compiled (C version available)
+++ prepf not compiled (C version available)
+++ prepf1 not compiled (C version available)
+++ prepd not compiled (C version available)
+++ prepd1 compiled, 9 + 12 bytes
+++ exchk not compiled (C version available)
+++ exchk1 not compiled (C version available)
+++ exchk2 not compiled (C version available)
+++ assoc2 compiled, 14 + 8 bytes
+++ replus not compiled (C version available)
+++ unplus not compiled (C version available)
+++ retimes not compiled (C version available)
+++ retimes1 not compiled (C version available)
+++ sqchk not compiled (C version available)
+++ prepcadr compiled, 4 + 12 bytes
+++ prepexpt compiled, 8 + 12 bytes
Completed FASL files for "prep"



*** Compiling extout ... 


FASLOUT "extout": IN files;  or type in expressions
When all done, execute FASLEND;
+++ factor compiled, 6 + 20 bytes
+++ factor1 compiled, 105 + 44 bytes
+++ remfac compiled, 6 + 16 bytes
+++ order compiled, 40 + 24 bytes
+++ up compiled, 6 + 20 bytes
+++ down compiled, 6 + 20 bytes
+++ formop not compiled (C version available)
+++ multop not compiled (C version available)
+++ quotof not compiled (C version available)
+++ quotofd not compiled (C version available)
+++ quotodd not compiled (C version available)
+++ lowest!-terms compiled, 65 + 36 bytes
+++ dcombine!* compiled, 14 + 12 bytes
+++ ckrn not compiled (C version available)
+++ ckrn1 not compiled (C version available)
+++ gck2 not compiled (C version available)
+++ cdarx not compiled (C version available)
+++ negf!* compiled, 11 + 24 bytes
+++ prepsq!* compiled, 235 + 96 bytes
+++ prepsq!*0 not compiled (C version available)
+++ prepsq!*1 not compiled (C version available)
+++ addfactors not compiled (C version available)
+++ rmplus not compiled (C version available)
+++ prepsq!*2 not compiled (C version available)
+++ ckrn!* compiled, 36 + 24 bytes
+++ mkkl not compiled (C version available)
+++ quotfm not compiled (C version available)
Completed FASL files for "extout"



*** Compiling depend ... 


FASLOUT "depend": IN files;  or type in expressions
When all done, execute FASLEND;
+++ depend compiled, 4 + 16 bytes
+++ nodepend compiled, 5 + 16 bytes
+++ depend1 compiled, 73 + 32 bytes
+++ depends not compiled (C version available)
+++ ldepends not compiled (C version available)
+++ dependsl compiled, 13 + 12 bytes
+++ freeof not compiled (C version available)
+++ depend0 compiled, 95 + 28 bytes
Completed FASL files for "depend"



*** Compiling str ... 


FASLOUT "str": IN files;  or type in expressions
When all done, execute FASLEND;
+++ structr compiled, 189 + 104 bytes
+++ structr1 compiled, 195 + 44 bytes
+++ structf compiled, 85 + 40 bytes
+++ structk compiled, 45 + 20 bytes
+++ subchk1 compiled, 27 + 12 bytes
+++ subchk2 compiled, 34 + 16 bytes
+++ structvar compiled, 26 + 20 bytes
Completed FASL files for "str"



*** Compiling coeff ... 


FASLOUT "coeff": IN files;  or type in expressions
When all done, execute FASLEND;
+++ coeffeval compiled, 38 + 40 bytes
+++ coeff1 compiled, 175 + 96 bytes
+++ coeffn compiled, 129 + 80 bytes
Completed FASL files for "coeff"



*** Compiling weight ... 


FASLOUT "weight": IN files;  or type in expressions
When all done, execute FASLEND;
+++ weight compiled, 223 + 68 bytes
+++ wtlevel compiled, 56 + 40 bytes
Completed FASL files for "weight"



*** Compiling linop ... 


FASLOUT "linop": IN files;  or type in expressions
When all done, execute FASLEND;
+++ linear compiled, 28 + 20 bytes
+++ formlnr compiled, 209 + 84 bytes
+++ formseparate compiled, 57 + 24 bytes
+++ expt!-separate compiled, 25 + 24 bytes
+++ expt!-separate1 compiled, 33 + 24 bytes
+++ formlntms compiled, 36 + 24 bytes
+++ formlnquot compiled, 264 + 60 bytes
+++ formlnrecip compiled, 107 + 52 bytes
+++ mktimes compiled, 9 + 12 bytes
+++ reval!* compiled, 9 + 24 bytes
Completed FASL files for "linop"



*** Compiling elem ... 


FASLOUT "elem": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mksqrt compiled, 33 + 56 bytes
+++ sign!-of compiled, 11 + 12 bytes
+++ simp!-sign compiled, 52 + 60 bytes
+++ simp!-sign!-times compiled, 67 + 36 bytes
+++ simp!-sign!-plus compiled, 61 + 28 bytes
+++ rd!-sign compiled, 89 + 84 bytes
+++ knowledge_about compiled, 69 + 60 bytes
+++ trigquot compiled, 72 + 36 bytes
Completed FASL files for "elem"



*** Compiling showrule ... 


FASLOUT "showrule": IN files;  or type in expressions
When all done, execute FASLEND;
+++ showrules compiled, 71 + 56 bytes
+++ showruleskvalue compiled, 78 + 24 bytes
+++ showonerule compiled, 32 + 28 bytes
+++ showrulesopmtch compiled, 50 + 16 bytes
+++ showrulesdfn compiled, 9 + 16 bytes
+++ showrulesdfn1 compiled, 39 + 24 bytes
+++ showrulesdfn1!* compiled, 142 + 36 bytes
+++ mkrule compiled, 24 + 24 bytes
+++ strip!~ compiled, 55 + 16 bytes
+++ separate!~ compiled, 53 + 16 bytes
+++ showrulesdfn2 compiled, 73 + 24 bytes
+++ showrules!*match compiled, 140 + 36 bytes
+++ showrulespowlis!* compiled, 62 + 20 bytes
+++ showrulespowlis1!* compiled, 82 + 20 bytes
+++ showrulesasymplis!* compiled, 46 + 24 bytes
+++ showrulespowlis!*opr compiled, 85 + 24 bytes
+++ showrulespowlis1!*opr compiled, 105 + 24 bytes
+++ showrulesasymplis!*opr compiled, 70 + 28 bytes
+++ selectletvars compiled, 22 + 16 bytes
+++ simpletsymbolic compiled, 67 + 32 bytes
+++ needs!-lisp!-tag compiled, 36 + 28 bytes
+++ needs!-lisp!-tag1 compiled, 11 + 12 bytes
+++ isboolfn compiled, 13 + 16 bytes
+++ arbvars compiled, 54 + 12 bytes
Completed FASL files for "showrule"



*** Compiling nestrad ... 


FASLOUT "nestrad": IN files;  or type in expressions
When all done, execute FASLEND;
+++ unnest!-sqrt!-sqrt!* compiled, 122 + 56 bytes
+++ unnest!-sqrt!-sqrt compiled, 40 + 36 bytes
+++ chkabs compiled, 18 + 24 bytes
Completed FASL files for "nestrad"



*** Compiling maxmin ... 


FASLOUT "maxmin": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpmax compiled, 8 + 20 bytes
+++ simpmin compiled, 8 + 20 bytes
+++ s_simpmaxmin compiled, 188 + 60 bytes
+++ !*trim compiled, 23 + 12 bytes
+++ flattenmaxmin compiled, 167 + 20 bytes
Completed FASL files for "maxmin"



*** Compiling nssimp ... 


FASLOUT "nssimp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ nssimp not compiled (C version available)
+++ dsimp not compiled (C version available)
+++ dsimptimes not compiled (C version available)
+++ addns not compiled (C version available)
+++ getelx compiled, 16 + 28 bytes
Completed FASL files for "nssimp"



*** Compiling part ... 


FASLOUT "part": IN files;  or type in expressions
When all done, execute FASLEND;
+++ revalpart compiled, 213 + 64 bytes
+++ parterr2 compiled, 13 + 24 bytes
+++ revalsetpart compiled, 28 + 28 bytes
+++ revalsetp1 compiled, 92 + 44 bytes
+++ ssl compiled, 38 + 20 bytes
+++ rtypepart compiled, 7 + 16 bytes
+++ arglength compiled, 23 + 32 bytes
+++ partlengthreval compiled, 28 + 40 bytes
Completed FASL files for "part"



*** Compiling map ... 


FASLOUT "map": IN files;  or type in expressions
When all done, execute FASLEND;
+++ getrtypecadr compiled, 4 + 12 bytes
+++ lambda_xwwv19lu7y09 compiled, 1 + 8 bytes
+++ map!-eval compiled, 18 + 36 bytes
+++ lambda_m0ew1rqnw52h compiled, 6 + 16 bytes
+++ !~map compiled, 14 + 28 bytes
+++ map!-eval1 compiled, 309 + 64 bytes
+++ map!-eval2 compiled, 30 + 32 bytes
+++ map!-frvarsof compiled, 25 + 12 bytes
+++ lambda_xwwv19lu7y09 compiled, 1 + 8 bytes
+++ select!-eval compiled, 166 + 100 bytes
+++ freequote compiled, 34 + 24 bytes
Completed FASL files for "map"

The system is about to do a restart...
REDUCE



*** Compiling poly ... 


FASLOUT "poly": IN files;  or type in expressions
When all done, execute FASLEND;

*** .+ redefined 

*** .+ redefined 

*** .* redefined 

*** .* redefined 

*** .^ redefined 

*** .^ redefined 

*** .** redefined 

*** .** redefined 

*** ./ redefined 

*** ./ redefined 
+++ !*a2f compiled, 4 + 16 bytes
+++ !*a2k compiled, 21 + 28 bytes
+++ !*a2kwoweight compiled, 30 + 40 bytes
+++ !*d2q not compiled (C version available)
+++ !*ff2a compiled, 12 + 24 bytes
+++ !*n2f not compiled (C version available)
+++ !*q2a not compiled (C version available)
+++ !*q2a1 not compiled (C version available)
+++ !*q2f compiled, 10 + 24 bytes
+++ !*q2k compiled, 13 + 24 bytes
Completed FASL files for "poly"

*** .+ redefined 

*** .* redefined 

*** .^ redefined 

*** .** redefined 

*** ./ redefined 



*** Compiling polrep ... 


FASLOUT "polrep": IN files;  or type in expressions
When all done, execute FASLEND;
+++ addsq not compiled (C version available)
+++ multsq not compiled (C version available)
+++ negsq not compiled (C version available)
+++ cancel compiled, 29 + 32 bytes
+++ addf not compiled (C version available)
+++ addd not compiled (C version available)
+++ adddm not compiled (C version available)

*** SMACRO domainp redefined 
+++ domainp compiled, 10 + 8 bytes
+++ noncomp not compiled (C version available)
+++ noncomp1 not compiled (C version available)
+++ noncomlistp not compiled (C version available)
+++ multf not compiled (C version available)
+++ noncomfp not compiled (C version available)
+++ noncomfp1 not compiled (C version available)
+++ multfnc not compiled (C version available)
+++ multd not compiled (C version available)
+++ multdm not compiled (C version available)
+++ negf not compiled (C version available)
+++ degreef compiled, 26 + 16 bytes
+++ !*sqlength compiled, 15 + 16 bytes
+++ terms compiled, 7 + 24 bytes
+++ termsf not compiled (C version available)
+++ tmsf compiled, 55 + 28 bytes
+++ tmsf!* compiled, 16 + 20 bytes
+++ tms compiled, 5 + 16 bytes
+++ offexpchk compiled, 21 + 28 bytes
+++ freevarinexptchk compiled, 26 + 12 bytes
+++ mkprod compiled, 169 + 84 bytes
+++ expnd compiled, 24 + 32 bytes
+++ expnd1 compiled, 61 + 28 bytes
+++ canprod compiled, 226 + 44 bytes
+++ sfpf compiled, 16 + 16 bytes
+++ sfp not compiled (C version available)
+++ reprod compiled, 14 + 16 bytes
+++ cprod1 compiled, 50 + 24 bytes
+++ cprod2 compiled, 102 + 32 bytes
+++ mkspm not compiled (C version available)
+++ sub2chk not compiled (C version available)
+++ quotsq not compiled (C version available)
+++ quotf!* compiled, 26 + 28 bytes
+++ quotf not compiled (C version available)
+++ quotf1 not compiled (C version available)
+++ rnconc not compiled (C version available)
+++ quotfd not compiled (C version available)
+++ divd not compiled (C version available)
+++ divdm compiled, 26 + 28 bytes
+++ quotdd not compiled (C version available)
+++ quotk not compiled (C version available)
+++ rank not compiled (C version available)
+++ lt!* not compiled (C version available)
+++ remf compiled, 12 + 28 bytes
+++ qremf compiled, 187 + 56 bytes
+++ praddf not compiled (C version available)
+++ qremd compiled, 61 + 44 bytes
+++ lqremf compiled, 22 + 16 bytes
+++ minusf not compiled (C version available)
+++ absf!* compiled, 21 + 28 bytes
+++ absf not compiled (C version available)
+++ canonsq not compiled (C version available)
+++ fieldconv compiled, 103 + 48 bytes
+++ simpgd compiled, 24 + 28 bytes
+++ lnc not compiled (C version available)
+++ invsq not compiled (C version available)
+++ gcdchk compiled, 18 + 20 bytes
Completed FASL files for "polrep"



*** Compiling quotf ... 


FASLOUT "quotf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ quotfx compiled, 10 + 24 bytes
+++ quotfx1 compiled, 188 + 68 bytes
+++ quotkx compiled, 28 + 12 bytes
+++ quotfdx compiled, 23 + 32 bytes

*** local variable u in procedure quotfxerr not used 

*** local variable v in procedure quotfxerr not used 
+++ quotfxerr compiled, 3 + 16 bytes
+++ cutf compiled, 11 + 16 bytes
+++ cutf1 compiled, 28 + 12 bytes
Completed FASL files for "quotf"



*** Compiling gcd ... 


FASLOUT "gcd": IN files;  or type in expressions
When all done, execute FASLEND;
+++ comfac not compiled (C version available)
+++ degr not compiled (C version available)
+++ gcdf!* not compiled (C version available)
+++ gcdf not compiled (C version available)
+++ free!-powerp not compiled (C version available)
+++ gcdf1 not compiled (C version available)
+++ gcdf2 not compiled (C version available)
+++ gcdfnc compiled, 36 + 16 bytes
+++ num!-exponents not compiled (C version available)
+++ gcdfd not compiled (C version available)
+++ gcdfd1 not compiled (C version available)
+++ gcddd not compiled (C version available)
+++ gcdk compiled, 208 + 68 bytes
+++ addlc compiled, 24 + 20 bytes
+++ delallasc not compiled (C version available)
+++ kernord compiled, 12 + 16 bytes
+++ kernord!-split compiled, 73 + 12 bytes
+++ kernord!-sort not compiled (C version available)
+++ maxdeg not compiled (C version available)
+++ powers not compiled (C version available)
+++ powers0 not compiled (C version available)
+++ lcm!* compiled, 9 + 24 bytes
+++ lcm not compiled (C version available)
+++ remk compiled, 58 + 36 bytes
+++ prim!-part compiled, 7 + 20 bytes
+++ comfac!-to!-poly not compiled (C version available)
Completed FASL files for "gcd"



*** Compiling exptf ... 


FASLOUT "exptf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ exptsq not compiled (C version available)
+++ exptf compiled, 30 + 36 bytes
+++ exptf1 compiled, 22 + 20 bytes
+++ exptf2 compiled, 37 + 24 bytes
Completed FASL files for "exptf"



*** Compiling kernel ... 


FASLOUT "kernel": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fkern not compiled (C version available)
+++ kernels not compiled (C version available)
+++ kernels1 not compiled (C version available)
+++ kernp not compiled (C version available)
Completed FASL files for "kernel"



*** Compiling mksp ... 


FASLOUT "mksp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ getpower not compiled (C version available)
+++ mksp not compiled (C version available)
+++ to compiled as link to cons
+++ mksp!* compiled, 36 + 36 bytes
+++ mksfpf compiled, 61 + 40 bytes
+++ mksq not compiled (C version available)
Completed FASL files for "mksp"



*** Compiling reord ... 


FASLOUT "reord": IN files;  or type in expressions
When all done, execute FASLEND;
+++ reordsq not compiled (C version available)
+++ reorder not compiled (C version available)
+++ raddf not compiled (C version available)
+++ rmultpf not compiled (C version available)
+++ reordop not compiled (C version available)
+++ kernel!-list compiled, 59 + 24 bytes
+++ korder compiled, 13 + 24 bytes
+++ setkorder not compiled (C version available)
+++ updkorder compiled, 19 + 16 bytes
Completed FASL files for "reord"



*** Compiling dmode ... 


FASLOUT "dmode": IN files;  or type in expressions
When all done, execute FASLEND;
+++ initdmode compiled, 30 + 32 bytes
+++ setdmode compiled, 86 + 84 bytes
+++ setdmode1 compiled, 117 + 68 bytes
+++ offmoderr compiled, 14 + 28 bytes
+++ dmodechk compiled, 169 + 88 bytes
+++ dmoderr compiled, 21 + 36 bytes
+++ mkdmoderr not compiled (C version available)
Completed FASL files for "dmode"



*** Compiling dmodeop ... 


FASLOUT "dmodeop": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !:difference not compiled (C version available)
+++ !:divide compiled, 26 + 36 bytes
+++ dividef compiled, 22 + 12 bytes
+++ !:expt compiled, 111 + 60 bytes
+++ !:gcd compiled, 30 + 24 bytes
+++ !:minus not compiled (C version available)
+++ !:minusp not compiled (C version available)
+++ !:onep not compiled (C version available)
+++ !:plus not compiled (C version available)
+++ !:quotient compiled, 50 + 48 bytes
+++ !:recip compiled, 45 + 44 bytes
+++ !:rn2rd compiled, 8 + 20 bytes
+++ !:times not compiled (C version available)
+++ !:zerop not compiled (C version available)
+++ fieldp compiled, 12 + 16 bytes
+++ gettransferfn compiled, 9 + 12 bytes
+++ dcombine compiled, 231 + 80 bytes
+++ int!-equiv!-chk not compiled (C version available)
Completed FASL files for "dmodeop"



*** Compiling rational ... 


FASLOUT "rational": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rnexpt!: compiled, 57 + 16 bytes
+++ mkratnum compiled, 20 + 24 bytes
+++ mkrn not compiled (C version available)
+++ !*i2rn not compiled (C version available)
+++ rnminus!: compiled, 9 + 12 bytes
+++ rnminusp!: compiled, 14 + 12 bytes
+++ rnplus!: not compiled (C version available)
+++ rntimes!: not compiled (C version available)
+++ rndifference!: compiled, 22 + 12 bytes
+++ rnquotient!: not compiled (C version available)
+++ rnzerop!: not compiled (C version available)
+++ rnonep!: not compiled (C version available)
+++ rnfactor!: compiled, 114 + 56 bytes
+++ rnprep!: compiled, 18 + 20 bytes
+++ rnprin compiled, 9 + 16 bytes
+++ rnequiv not compiled (C version available)
+++ rn!:root compiled, 21 + 20 bytes
Completed FASL files for "rational"



*** Compiling rnelem ... 


FASLOUT "rnelem": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rnfix!* compiled, 7 + 8 bytes
+++ rnfixchk compiled, 20 + 24 bytes
+++ rnfloor!* compiled, 16 + 8 bytes
+++ rnceiling!* compiled, 17 + 12 bytes
+++ rnround!* compiled, 41 + 48 bytes
+++ rnilog2!* compiled, 4 + 16 bytes
+++ rnfactorial!* compiled, 24 + 28 bytes
+++ rnperm!* compiled, 8 + 16 bytes
+++ perm compiled, 42 + 16 bytes
+++ rnchoose!* compiled, 8 + 16 bytes
+++ choose compiled, 9 + 16 bytes
+++ simprn compiled, 54 + 28 bytes
+++ rnirootn!* compiled, 8 + 20 bytes
Completed FASL files for "rnelem"



*** Compiling gint ... 


FASLOUT "gint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ setcmpxmode compiled, 154 + 76 bytes
+++ intgcdd compiled, 44 + 8 bytes
+++ !:gi!:unitconv compiled, 9 + 20 bytes
+++ unitconv compiled, 42 + 24 bytes
+++ !*i2gi compiled, 6 + 16 bytes
+++ giminusp!: compiled, 14 + 12 bytes
+++ gizerop!: not compiled (C version available)
+++ gionep!: compiled, 12 + 16 bytes
+++ gintequiv!: compiled, 8 + 12 bytes

*** local variable u in procedure mkdgi not used 
+++ mkdgi compiled, 8 + 20 bytes
+++ mkgi not compiled (C version available)
+++ giplus!: compiled, 14 + 12 bytes
+++ gidifference!: compiled, 14 + 12 bytes
+++ gitimes!: compiled, 33 + 12 bytes
+++ giquotient!: compiled, 71 + 20 bytes
+++ gidivide!: compiled, 138 + 20 bytes
+++ giremainder compiled, 136 + 20 bytes
+++ gigcd!: compiled, 17 + 20 bytes
+++ fqa compiled, 59 + 16 bytes
+++ gifactor!: compiled, 358 + 108 bytes
+++ normalize!-lcgi compiled, 67 + 44 bytes
+++ contains!-oddpower compiled, 14 + 12 bytes
+++ power!-sort compiled, 17 + 16 bytes
+++ sqfrp compiled, 32 + 44 bytes
+++ realp compiled, 42 + 24 bytes
+++ fd2f compiled, 43 + 36 bytes
+++ giprep!: compiled, 38 + 24 bytes
+++ giprim compiled, 11 + 20 bytes
+++ giprn!: compiled, 18 + 32 bytes
+++ girationalize!: compiled, 57 + 64 bytes
+++ gigcdsq compiled, 29 + 24 bytes
+++ giintgcd compiled, 40 + 16 bytes
+++ conjgd compiled, 83 + 32 bytes
Completed FASL files for "gint"



*** Compiling cpxrn ... 


FASLOUT "cpxrn": IN files;  or type in expressions
When all done, execute FASLEND;
+++ crn!:minusp compiled, 12 + 12 bytes
+++ mkcrn compiled, 5 + 12 bytes
+++ crn!:simp compiled, 6 + 16 bytes

*** local variable u in procedure mkdcrn not used 
+++ mkdcrn compiled, 13 + 20 bytes
+++ i2crn!* compiled, 10 + 20 bytes
+++ !*crn2rn compiled, 12 + 20 bytes
+++ !*rn2crn compiled, 7 + 20 bytes
+++ !*crn2rd compiled, 14 + 28 bytes
+++ !*rd2crn compiled, 12 + 28 bytes
+++ !*gi2crn compiled, 12 + 16 bytes
+++ crn!:plus compiled, 28 + 20 bytes
+++ crn!:differ compiled, 28 + 20 bytes
+++ crn!:times compiled, 44 + 28 bytes
+++ crn!:quotient compiled, 58 + 32 bytes
+++ crn!:minus compiled, 20 + 12 bytes
+++ crn!:zerop compiled, 14 + 12 bytes
+++ crn!:onep compiled, 13 + 16 bytes
+++ crn!:prep compiled, 12 + 16 bytes
+++ crn!:factor compiled, 130 + 72 bytes
+++ crnprimp compiled, 22 + 32 bytes
+++ crnprep1 compiled, 39 + 36 bytes
+++ crn!:prin compiled, 24 + 36 bytes
+++ crnequiv compiled, 12 + 16 bytes
Completed FASL files for "cpxrn"



*** Compiling compopr ... 


FASLOUT "compopr": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simprepart compiled, 11 + 24 bytes
+++ repartsq compiled, 37 + 24 bytes
+++ simpimpart compiled, 11 + 24 bytes
+++ impartsq compiled, 38 + 28 bytes
+++ simpconj compiled, 4 + 16 bytes
+++ conjsq compiled, 19 + 36 bytes
+++ splitcomplex compiled, 51 + 56 bytes
+++ expand!-imrepart compiled, 36 + 24 bytes
+++ expand!-imrepartpow compiled, 60 + 64 bytes
+++ mkrepart compiled, 29 + 36 bytes
+++ mkimpart compiled, 23 + 32 bytes
+++ take!-realpart compiled, 5 + 12 bytes
+++ repartf compiled, 74 + 52 bytes
+++ take!-impart compiled, 5 + 12 bytes
+++ impartf compiled, 79 + 52 bytes
+++ realvalued compiled, 29 + 24 bytes
+++ notrealvalued compiled, 27 + 24 bytes
+++ realvaluedp compiled, 33 + 24 bytes
+++ realvaluedlist compiled, 13 + 12 bytes
+++ reimsin compiled, 42 + 52 bytes
+++ reimcos compiled, 45 + 56 bytes
+++ reimexpt compiled, 95 + 80 bytes
Completed FASL files for "compopr"



*** Compiling modular ... 


FASLOUT "modular": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*modular2f not compiled (C version available)
+++ exptmod!: compiled, 5 + 16 bytes
+++ !:mod!:unitconv compiled, 51 + 44 bytes
+++ !:mod!:units compiled, 42 + 20 bytes
+++ !*i2mod not compiled (C version available)
+++ modcnv compiled, 13 + 32 bytes
+++ modminusp!: compiled, 9 + 20 bytes
+++ modplus!: not compiled (C version available)
+++ modtimes!: not compiled (C version available)
+++ moddifference!: compiled, 5 + 16 bytes

*** local variable v in procedure moddivide: not used 
+++ moddivide!: compiled, 5 + 16 bytes

*** local variable u in procedure modgcd: not used 

*** local variable v in procedure modgcd: not used 
+++ modgcd!: compiled, 3 + 16 bytes
+++ modquotient!: compiled, 7 + 20 bytes
+++ modzerop!: not compiled (C version available)
+++ modonep!: not compiled (C version available)
+++ factormod!: compiled, 16 + 36 bytes
+++ modprep!: compiled as link to cdr
+++ setmod compiled, 53 + 48 bytes
+++ evalmod compiled, 75 + 56 bytes
+++ mod!-domainvalchk compiled, 19 + 24 bytes
+++ mod!-expt!-fract compiled, 134 + 72 bytes
+++ mod!-error compiled, 7 + 20 bytes
Completed FASL files for "modular"



*** Compiling facform ... 


FASLOUT "facform": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fac!-merge compiled, 11 + 12 bytes
+++ factorize compiled, 113 + 104 bytes
+++ facform2list compiled, 169 + 76 bytes
+++ facform2list2 compiled, 126 + 48 bytes
+++ old_factorize compiled, 11 + 24 bytes
+++ pairlist2list compiled, 39 + 16 bytes
+++ fctrf compiled, 201 + 148 bytes
+++ fctrf1 compiled, 125 + 72 bytes
+++ factorize!-form!-recursion compiled as link to fctrf1
+++ factor!-prim!-f compiled, 120 + 64 bytes
+++ factor!-prim!-sqfree!-f compiled, 198 + 80 bytes
+++ unifactor compiled, 107 + 56 bytes
+++ distribute!.multiplicity compiled, 34 + 8 bytes
+++ factorf compiled, 199 + 92 bytes
+++ factor!-prim!-sqfree!-f!-1 compiled, 48 + 16 bytes
+++ sqfrf compiled, 291 + 120 bytes
+++ square_free compiled, 55 + 32 bytes
+++ diff compiled, 48 + 24 bytes
+++ diffp1 compiled, 22 + 20 bytes
Completed FASL files for "facform"



*** Compiling homog ... 


FASLOUT "homog": IN files;  or type in expressions
When all done, execute FASLEND;
+++ homogp compiled, 51 + 20 bytes
+++ subs0 compiled, 20 + 16 bytes
+++ varss compiled, 16 + 12 bytes
+++ rconstnm compiled, 40 + 20 bytes
+++ rconst1 compiled, 29 + 16 bytes
+++ rconst compiled, 78 + 48 bytes
Completed FASL files for "homog"



*** Compiling tdconv ... 


FASLOUT "tdconv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ setunion compiled, 22 + 8 bytes
+++ searchtm compiled, 11 + 12 bytes
+++ searchpl compiled, 28 + 16 bytes
+++ qsort compiled, 41 + 12 bytes
+++ mapins compiled, 19 + 12 bytes
+++ mkzl compiled, 16 + 20 bytes
+++ sq2sstm compiled, 52 + 24 bytes
+++ sq2sscfpl compiled, 26 + 16 bytes
+++ sq2sspl compiled, 30 + 12 bytes
+++ sdlist compiled, 59 + 8 bytes
+++ univsdl2sq compiled, 35 + 8 bytes
+++ mapdel compiled, 18 + 12 bytes
+++ mulvsdl2sq compiled, 81 + 20 bytes
+++ sdl2sq compiled, 10 + 20 bytes
+++ termorder1 compiled, 46 + 20 bytes
+++ listsum not compiled (C version available)
+++ termorder compiled, 44 + 24 bytes
+++ lambda_rh5q1wxdb66b compiled, 6 + 12 bytes
+++ xxsort compiled, 4 + 16 bytes
+++ lambda_6wz8qijdlm96 compiled, 6 + 12 bytes
+++ lxsort compiled, 4 + 16 bytes
+++ delet compiled, 32 + 12 bytes
+++ lx2xx compiled, 32 + 20 bytes
+++ lastnondomain compiled, 22 + 16 bytes
+++ xx2lx compiled, 32 + 20 bytes
+++ sf2ss compiled, 26 + 28 bytes
+++ ss2sf compiled, 14 + 20 bytes
Completed FASL files for "tdconv"



*** Compiling primfac ... 


FASLOUT "primfac": IN files;  or type in expressions
When all done, execute FASLEND;
+++ prsqfrfacf compiled, 138 + 60 bytes
+++ factor!-ordered!-sqfree!-prim!-f compiled, 171 + 80 bytes
+++ downpower compiled, 7 + 12 bytes
+++ downpower1 compiled, 34 + 12 bytes
+++ uppower compiled, 15 + 16 bytes
+++ uppower1 compiled, 33 + 12 bytes
+++ uppower2 compiled, 50 + 12 bytes
+++ univariatep compiled, 17 + 16 bytes
+++ univariatep1 compiled, 34 + 8 bytes
+++ special!-case!-factor compiled, 31 + 40 bytes
+++ degreegcd compiled, 42 + 16 bytes
+++ factor!-coeffs compiled, 4 + 12 bytes
Completed FASL files for "primfac"



*** Compiling specfac ... 


FASLOUT "specfac": IN files;  or type in expressions
When all done, execute FASLEND;
+++ coeffs compiled, 82 + 16 bytes
+++ shift!-pol compiled, 86 + 40 bytes
+++ quadraticf!* compiled, 90 + 64 bytes
+++ quadraticf compiled, 67 + 32 bytes
+++ quadraticf1 compiled, 173 + 76 bytes
+++ rootxf compiled, 257 + 84 bytes
+++ mkrootf compiled, 36 + 44 bytes
+++ nrootn!* compiled, 30 + 32 bytes
+++ cubicf compiled, 130 + 76 bytes
+++ powsubsf compiled, 24 + 28 bytes
+++ quarticf compiled, 574 + 132 bytes
Completed FASL files for "specfac"



*** Compiling kronf ... 


FASLOUT "kronf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ linfacf compiled, 4 + 16 bytes
+++ quadfacf compiled, 4 + 16 bytes
+++ trykrf compiled, 241 + 44 bytes
+++ subuf compiled, 44 + 20 bytes
+++ adddm!* compiled, 9 + 12 bytes
+++ multdm!* compiled, 8 + 12 bytes
+++ dfactors compiled, 39 + 36 bytes
+++ combinationtimes compiled, 35 + 20 bytes
+++ putin compiled, 16 + 8 bytes
+++ search4facf compiled, 29 + 12 bytes
+++ tryfactorf compiled, 48 + 28 bytes
+++ linethroughf compiled, 39 + 24 bytes
+++ quadthroughf compiled, 96 + 28 bytes
Completed FASL files for "kronf"



*** Compiling conj ... 


FASLOUT "conj": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rationalizesq not compiled (C version available)
+++ lowertowerp compiled, 74 + 24 bytes
+++ lowertowerp1 compiled, 30 + 24 bytes
+++ exprsize compiled, 20 + 12 bytes
+++ rationalizef compiled, 86 + 64 bytes
+++ conjquadratic compiled, 31 + 40 bytes
+++ conjcubic compiled, 113 + 52 bytes
+++ conj2 compiled, 23 + 28 bytes
+++ conjquartic compiled, 195 + 60 bytes
+++ mkmain compiled, 9 + 20 bytes
Completed FASL files for "conj"



*** Compiling diff ... 


FASLOUT "diff": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpdf not compiled (C version available)
+++ d2int compiled, 39 + 20 bytes
+++ prekernp compiled, 28 + 20 bytes
+++ diffsq not compiled (C version available)
+++ difff not compiled (C version available)
+++ diffp not compiled (C version available)
+++ dfform_int compiled, 78 + 64 bytes
+++ not_df_p compiled, 26 + 20 bytes
+++ dfn_prop not compiled (C version available)
+++ find_sub_df compiled, 13 + 12 bytes
+++ is_sub_df compiled, 70 + 20 bytes
+++ dot_df_args compiled, 30 + 12 bytes
+++ merge!-ind!-vars compiled, 24 + 24 bytes
+++ derad!* compiled, 33 + 12 bytes
+++ derad compiled, 73 + 16 bytes
+++ letdf compiled, 249 + 108 bytes
+++ frlp compiled, 15 + 12 bytes
+++ lpos compiled, 11 + 12 bytes
Completed FASL files for "diff"



*** Compiling polyop ... 


FASLOUT "polyop": IN files;  or type in expressions
When all done, execute FASLEND;
+++ deg compiled, 19 + 32 bytes
+++ tstpolyarg2 compiled, 58 + 28 bytes
+++ numrdeg compiled, 42 + 32 bytes
+++ lcofeval compiled, 84 + 56 bytes
+++ lcof compiled, 57 + 40 bytes
+++ lpower compiled, 63 + 40 bytes
+++ lterm compiled, 60 + 40 bytes
+++ mainvar compiled, 23 + 20 bytes
+++ sfchk compiled, 8 + 16 bytes
+++ reduct compiled, 56 + 40 bytes
+++ tstpolyarg compiled, 17 + 28 bytes
Completed FASL files for "polyop"



*** Compiling decompos ... 


FASLOUT "decompos": IN files;  or type in expressions
When all done, execute FASLEND;
+++ decomposesf compiled, 23 + 40 bytes
+++ decomposef1 compiled, 6 + 16 bytes

*** local variable msg in procedure decomposef2 not used 
+++ decomposef2 compiled, 227 + 92 bytes
+++ decomposesfvars compiled, 33 + 8 bytes
+++ decomposesfuni0 compiled, 35 + 16 bytes
+++ decomposesfuni compiled, 163 + 64 bytes
+++ decomposefctrf compiled, 32 + 24 bytes
+++ decomposefctrf1 compiled, 166 + 28 bytes
+++ decomposebacksubstuni compiled, 157 + 68 bytes
+++ decomposedf compiled, 44 + 24 bytes
+++ decomposeint compiled, 55 + 24 bytes
+++ decomposecoeff compiled, 12 + 20 bytes
+++ decomposecoeff1 compiled, 27 + 8 bytes
+++ decomposetdg compiled, 32 + 16 bytes
+++ decomposedegr compiled, 30 + 12 bytes
+++ compose compiled, 17 + 16 bytes
+++ decomposesfmulti compiled, 203 + 100 bytes
+++ decomposesfmulti1 compiled, 468 + 84 bytes
+++ decomposelmon compiled, 19 + 12 bytes
+++ decomposenormfac compiled, 27 + 32 bytes
+++ decomposecont compiled, 29 + 12 bytes
+++ decomposesign compiled, 20 + 20 bytes
+++ decomposesfmnorm compiled, 222 + 60 bytes
+++ decomposehomog compiled, 25 + 16 bytes
+++ decomposehomog1 compiled, 103 + 24 bytes
+++ decomposegensym compiled, 11 + 16 bytes
Completed FASL files for "decompos"



*** Compiling interpol ... 


FASLOUT "interpol": IN files;  or type in expressions
When all done, execute FASLEND;
+++ interpol compiled, 184 + 64 bytes
Completed FASL files for "interpol"



*** Compiling subs2q ... 


FASLOUT "subs2q": IN files;  or type in expressions
When all done, execute FASLEND;
+++ subs2q not compiled (C version available)
+++ subs2f not compiled (C version available)
+++ subs2f1 not compiled (C version available)
+++ subs2p compiled, 40 + 32 bytes
+++ raddsq compiled, 12 + 24 bytes
+++ mtchp not compiled (C version available)

*** local variable bool in procedure mtchp1 not used 
+++ mtchp1 not compiled (C version available)
+++ powmtch compiled, 29 + 8 bytes
+++ mchk!* not compiled (C version available)
Completed FASL files for "subs2q"



*** Compiling subs3q ... 


FASLOUT "subs3q": IN files;  or type in expressions
When all done, execute FASLEND;
+++ subs3q not compiled (C version available)
+++ subs3f not compiled (C version available)
+++ subs3f1 not compiled (C version available)
+++ subs3t not compiled (C version available)
+++ sizchk not compiled (C version available)
+++ mtchk not compiled (C version available)
+++ nocp not compiled (C version available)
Completed FASL files for "subs3q"



*** Compiling subs4q ... 


FASLOUT "subs4q": IN files;  or type in expressions
When all done, execute FASLEND;
+++ subs4q compiled, 85 + 44 bytes
Completed FASL files for "subs4q"



*** Compiling horner ... 


FASLOUT "horner": IN files;  or type in expressions
When all done, execute FASLEND;
+++ hornersq compiled, 37 + 40 bytes
+++ hornerf compiled, 20 + 32 bytes
+++ hornerf1 compiled, 160 + 36 bytes
Completed FASL files for "horner"

The system is about to do a restart...
REDUCE



*** Compiling polydiv ... 


FASLOUT "polydiv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ poly!-divide compiled, 6 + 12 bytes
+++ poly!-remainder compiled, 6 + 16 bytes
+++ poly!-quotient compiled, 6 + 16 bytes
+++ pseudo!-divide compiled, 6 + 16 bytes
+++ pseudo!-remainder compiled, 6 + 20 bytes
+++ pseudo!-quotient compiled, 6 + 20 bytes
+++ poly!-divide!* compiled, 139 + 84 bytes
+++ pseudo!-qremf compiled, 239 + 48 bytes
+++ coeffs!-to!-form compiled, 12 + 12 bytes
+++ coeffs!-to!-form1 compiled, 27 + 16 bytes
+++ domainp_list compiled, 20 + 8 bytes
Completed FASL files for "polydiv"

The system is about to do a restart...
REDUCE



*** Compiling arith ... 


FASLOUT "arith": IN files;  or type in expressions
When all done, execute FASLEND;

*** rndpwr not defined (LOSE flag) 

*** msd: not defined (LOSE flag) 

*** SMACRO ashift redefined 
+++ ashift compiled, 25 + 16 bytes

*** SMACRO lshift redefined 
+++ lshift compiled as link to ash1

*** timbf not defined (LOSE flag) 
+++ dn!:simp compiled, 60 + 52 bytes
+++ dn!:prin compiled, 6 + 12 bytes
Completed FASL files for "arith"



*** Compiling smlbflot ... 


FASLOUT "smlbflot": IN files;  or type in expressions
When all done, execute FASLEND;
+++ bflerrmsg compiled, 7 + 20 bytes
+++ bfzerop!: not compiled (C version available)

*** fl2bf not defined (LOSE flag) 
+++ bfprin!: compiled as link to bfprin0
+++ divide!-by!-power!-of!-ten compiled, 44 + 44 bytes
+++ multiply!-by!-power!-of!-ten compiled, 45 + 40 bytes
+++ round!:dec compiled, 79 + 56 bytes
+++ round!:dec1 compiled, 247 + 120 bytes
+++ bfprin0 compiled, 24 + 32 bytes
+++ bfprin0x compiled, 18 + 20 bytes
+++ bfexplode0 compiled, 23 + 32 bytes
+++ bfexplode0x compiled, 134 + 48 bytes
+++ bfprin!:lst compiled, 303 + 84 bytes
+++ smallcompress compiled, 36 + 28 bytes
+++ smallsplit compiled, 27 + 16 bytes
+++ scientific_notation compiled, 77 + 44 bytes
+++ order!: not compiled (C version available)
+++ conv!:mt compiled, 75 + 32 bytes
+++ round!:mt not compiled (C version available)
+++ round!:ep compiled, 49 + 28 bytes
+++ round!:last not compiled (C version available)
+++ cut!:mt compiled, 50 + 28 bytes
+++ cut!:ep not compiled (C version available)
+++ bftrim!: not compiled (C version available)
+++ decimal2internal compiled, 28 + 24 bytes
+++ read!:num compiled, 225 + 80 bytes
+++ abs!: not compiled (C version available)
+++ minus!: not compiled (C version available)
+++ plus!: compiled, 64 + 20 bytes
+++ difference!: compiled, 66 + 24 bytes
+++ times!: not compiled (C version available)
+++ divide!: not compiled (C version available)
+++ max2!: compiled, 6 + 12 bytes
+++ max!:_w4682dm3e6v2 compiled, 6 + 16 bytes
+++ min2!: compiled, 6 + 12 bytes
+++ min!:_c8oebuuhjg87 compiled, 6 + 16 bytes
+++ greaterp!: compiled, 81 + 28 bytes
+++ equal!: not compiled (C version available)
+++ lessp!: not compiled (C version available)
+++ leq!: compiled, 4 + 16 bytes
+++ minusp!: compiled, 17 + 16 bytes
+++ make!:ratnum compiled, 30 + 32 bytes
+++ ratnump!: compiled, 4 + 12 bytes
+++ conv!:r2bf compiled, 33 + 28 bytes
Completed FASL files for "smlbflot"



*** Compiling bfauxil ... 


FASLOUT "bfauxil": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable r in procedure normbf not used 

*** local variable ep1 in procedure normbf not used 

*** SMACRO normbf redefined 
+++ normbf compiled, 89 + 48 bytes
+++ bfdivide compiled, 14 + 20 bytes
+++ bftimes compiled, 8 + 12 bytes
+++ plubf compiled, 145 + 32 bytes
+++ bfplus compiled, 8 + 12 bytes
+++ difbf compiled, 148 + 36 bytes
+++ bfdiffer compiled, 8 + 12 bytes
+++ invbf compiled, 8 + 24 bytes
+++ bfinverse compiled, 10 + 16 bytes
+++ bfminus compiled, 9 + 12 bytes
+++ bflessp compiled, 8 + 12 bytes
+++ grpbf compiled, 99 + 24 bytes
+++ !!shbinflp compiled, 28 + 40 bytes
+++ vv!!!*1e10 compiled, 5 + 16 bytes
+++ bfsqrt compiled, 170 + 104 bytes
+++ realrat compiled, 148 + 40 bytes
+++ fl2int compiled, 15 + 20 bytes
+++ cflot compiled, 14 + 12 bytes
+++ conv!:bf2i compiled, 6 + 12 bytes
+++ bf2flr compiled, 72 + 52 bytes
+++ gf2fl compiled, 29 + 16 bytes
+++ gf2bf compiled, 61 + 32 bytes
+++ r2bf compiled, 93 + 44 bytes
+++ r2fl compiled, 58 + 32 bytes
+++ gfplus compiled, 9 + 16 bytes
+++ gffplus compiled, 10 + 8 bytes
+++ gbfplus compiled, 10 + 12 bytes
+++ gfdiffer compiled, 9 + 16 bytes
+++ gffdiff compiled, 10 + 8 bytes
+++ gbfdiff compiled, 10 + 12 bytes
+++ gftimes compiled, 9 + 16 bytes
+++ gfftimes compiled, 31 + 8 bytes
+++ gbftimes compiled, 31 + 20 bytes
+++ gfquotient compiled, 9 + 16 bytes
+++ gffquot compiled, 48 + 8 bytes
+++ gbfquot compiled, 57 + 32 bytes
+++ gfminus compiled, 8 + 12 bytes
+++ gfrotate compiled, 5 + 12 bytes
+++ gfdot compiled, 9 + 16 bytes
+++ gffdot compiled, 10 + 8 bytes
+++ gbfdot compiled, 10 + 16 bytes
+++ gfrsq compiled, 4 + 12 bytes
+++ gffrsq compiled, 10 + 8 bytes
+++ gbfrsq compiled, 10 + 16 bytes
+++ gffmult compiled, 10 + 8 bytes
+++ gffsqrt compiled, 68 + 52 bytes
+++ gbfmult compiled, 37 + 32 bytes
+++ gbfsqrt compiled, 67 + 72 bytes
+++ gfsqrt compiled, 121 + 56 bytes
+++ sgn compiled, 15 + 20 bytes
+++ exptbf compiled, 22 + 20 bytes
+++ icbrt compiled, 6 + 16 bytes

*** fix2 not defined (LOSE flag) 
+++ ilog2 compiled, 64 + 20 bytes
+++ isqrt compiled, 16 + 24 bytes
+++ qroundup compiled, 21 + 8 bytes
+++ irootn compiled, 80 + 44 bytes
+++ irootn!-power2 compiled, 84 + 36 bytes
+++ irootn1 compiled, 102 + 24 bytes
Completed FASL files for "bfauxil"



*** Compiling paraset ... 


FASLOUT "paraset": IN files;  or type in expressions
When all done, execute FASLEND;
+++ find!!nfpd compiled, 47 + 36 bytes
+++ find!!nbfpd compiled, 47 + 32 bytes

*** find!maxbflexp not defined (LOSE flag) 
+++ infinityp compiled, 15 + 16 bytes
+++ !!mfefix compiled, 38 + 48 bytes
Completed FASL files for "paraset"



*** Compiling math ... 


FASLOUT "math": IN files;  or type in expressions
When all done, execute FASLEND;
+++ terrlst compiled, 9 + 20 bytes

*** sqrt not defined (LOSE flag) 

*** cbrt not defined (LOSE flag) 

*** hypot not defined (LOSE flag) 

*** floor not defined (LOSE flag) 

*** ceiling not defined (LOSE flag) 

*** round not defined (LOSE flag) 
+++ rounddec compiled, 55 + 28 bytes

*** log not defined (LOSE flag) 
+++ sclogx!-1 compiled, 69 + 24 bytes

*** atan not defined (LOSE flag) 

*** atand not defined (LOSE flag) 

*** sin not defined (LOSE flag) 

*** sind not defined (LOSE flag) 

*** tan not defined (LOSE flag) 

*** tand not defined (LOSE flag) 
+++ !!scalsintan compiled, 120 + 68 bytes
+++ !!scalsintand compiled, 120 + 68 bytes
+++ !!sints compiled, 103 + 36 bytes
+++ !!sinhts compiled, 77 + 36 bytes

*** exp not defined (LOSE flag) 
+++ iexpt compiled, 49 + 28 bytes

*** expt not defined (LOSE flag) 
+++ fsplit compiled, 90 + 40 bytes
+++ f_multiply compiled, 24 + 12 bytes
+++ fexpt compiled, 10 + 16 bytes
+++ fexpt1 compiled, 45 + 32 bytes
+++ rexpt compiled, 289 + 84 bytes
+++ ft2rn1 compiled, 19 + 16 bytes
+++ ft2rn2 compiled, 113 + 32 bytes

*** cos not defined (LOSE flag) 

*** cot not defined (LOSE flag) 

*** sec not defined (LOSE flag) 

*** csc not defined (LOSE flag) 

*** acot not defined (LOSE flag) 

*** asin not defined (LOSE flag) 

*** acos not defined (LOSE flag) 

*** acsc not defined (LOSE flag) 

*** asec not defined (LOSE flag) 

*** cosd not defined (LOSE flag) 

*** cotd not defined (LOSE flag) 

*** secd not defined (LOSE flag) 

*** cscd not defined (LOSE flag) 

*** acotd not defined (LOSE flag) 

*** asind not defined (LOSE flag) 

*** acosd not defined (LOSE flag) 

*** acscd not defined (LOSE flag) 

*** asecd not defined (LOSE flag) 

*** sinh not defined (LOSE flag) 

*** cosh not defined (LOSE flag) 

*** tanh not defined (LOSE flag) 

*** coth not defined (LOSE flag) 

*** asinh not defined (LOSE flag) 

*** acosh not defined (LOSE flag) 

*** atanh not defined (LOSE flag) 

*** acoth not defined (LOSE flag) 

*** sech not defined (LOSE flag) 

*** csch not defined (LOSE flag) 

*** asech not defined (LOSE flag) 

*** acsch not defined (LOSE flag) 

*** ln not defined (LOSE flag) 

*** log10 not defined (LOSE flag) 

*** logb not defined (LOSE flag) 

*** atan2 not defined (LOSE flag) 

*** atan2d not defined (LOSE flag) 
+++ factorial compiled, 20 + 28 bytes
+++ nfactorial compiled, 29 + 20 bytes
+++ fac!-part compiled, 29 + 12 bytes
Completed FASL files for "math"



*** Compiling rounded ... 


FASLOUT "rounded": IN files;  or type in expressions
When all done, execute FASLEND;
+++ logfp compiled, 30 + 24 bytes
+++ roundconstants compiled, 47 + 72 bytes
+++ roundbfon compiled, 3 + 16 bytes
+++ roundbfoff compiled, 5 + 20 bytes
+++ round!* not compiled (C version available)
+++ mkround not compiled (C version available)
+++ print!-precision compiled, 36 + 32 bytes
+++ print_precision compiled as link to print-precision
+++ precision0 compiled, 59 + 68 bytes
+++ precision compiled, 20 + 32 bytes
+++ decprec2internal compiled, 7 + 20 bytes
+++ precision1 compiled, 95 + 84 bytes

*** local variable n in procedure *rd2rn not used 
+++ !*rd2rn compiled, 128 + 76 bytes
+++ rd2rn1 compiled, 9 + 16 bytes
+++ bf2rn1 compiled, 155 + 60 bytes
+++ !*rn2rd compiled, 5 + 20 bytes
+++ precmsg compiled, 20 + 28 bytes
+++ rd!:simp compiled, 63 + 56 bytes
+++ rndbfon compiled, 21 + 44 bytes
+++ i2rd!* not compiled (C version available)
+++ chkint!* compiled, 80 + 44 bytes
+++ chkrn!* compiled, 6 + 16 bytes
+++ bf2flck compiled, 30 + 44 bytes
+++ convchk not compiled (C version available)
+++ convprec!* not compiled (C version available)
+++ convprec not compiled (C version available)
+++ rd!:minusp not compiled (C version available)
+++ convprc2 compiled, 68 + 40 bytes
+++ rdzchk compiled, 89 + 40 bytes
+++ rd!:plus compiled, 126 + 76 bytes
+++ rd!:difference compiled, 139 + 80 bytes
+++ rd!:times compiled, 119 + 72 bytes
+++ rd!:quotient compiled, 158 + 100 bytes
+++ rdqoterr compiled, 4 + 20 bytes

*** safe-fp-plus not defined (LOSE flag) 

*** safe-fp-times not defined (LOSE flag) 

*** safe-fp-quot not defined (LOSE flag) 
+++ rd!:zerop not compiled (C version available)
+++ rd!:minus not compiled (C version available)
+++ rd!:onep not compiled (C version available)
+++ rd!:root compiled, 25 + 32 bytes
+++ rd!:prep compiled, 21 + 32 bytes
+++ rdprep1 not compiled (C version available)
+++ rd!:prin compiled, 11 + 20 bytes
+++ rd!:explode compiled, 11 + 20 bytes
Completed FASL files for "rounded"



*** Compiling comprd ... 


FASLOUT "comprd": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cr!:minusp compiled, 27 + 8 bytes
+++ striptag not compiled (C version available)
+++ mkcr compiled, 10 + 16 bytes
+++ gf2cr!: compiled, 10 + 16 bytes
+++ crprcd compiled, 11 + 12 bytes
+++ crprcd2 compiled, 7 + 16 bytes
+++ cr!:simp compiled, 6 + 20 bytes
+++ i2cr!* compiled, 13 + 24 bytes
+++ trimcrrl compiled, 4 + 12 bytes
+++ trimcr compiled, 41 + 32 bytes
+++ cr2rderr compiled, 4 + 20 bytes
+++ !*cr2rn compiled, 38 + 36 bytes
+++ !*rn2cr compiled, 14 + 28 bytes
+++ !*cr2crn compiled, 11 + 24 bytes
+++ !*crn2cr compiled, 48 + 44 bytes
+++ !*cr2rd compiled, 35 + 24 bytes
+++ !*rd2cr compiled, 13 + 24 bytes
+++ !*gi2cr compiled, 44 + 40 bytes
+++ bfrsq compiled, 26 + 16 bytes
+++ crzchk compiled, 53 + 40 bytes
+++ cr!:plus compiled, 63 + 52 bytes
+++ cr!:differ compiled, 68 + 60 bytes
+++ cr!:times compiled, 54 + 52 bytes
+++ cr!:quotient compiled, 82 + 64 bytes
+++ safe!-crfp!-plus compiled, 20 + 16 bytes
+++ safe!-crfp!-diff compiled, 28 + 20 bytes
+++ safe!-crfp!-times compiled, 68 + 20 bytes
+++ safe!-crfp!-quot compiled, 88 + 20 bytes
+++ cr!:minus compiled, 5 + 20 bytes
+++ cr!:zerop compiled, 52 + 16 bytes
+++ cr!:onep compiled, 43 + 24 bytes
+++ cr!:prep compiled, 15 + 20 bytes
+++ crprep1 compiled, 71 + 40 bytes
+++ crprimp compiled, 19 + 28 bytes
+++ cr!:prin compiled, 24 + 36 bytes
+++ crone!* compiled, 6 + 20 bytes
+++ crhalf!* compiled, 6 + 20 bytes
+++ cri!* compiled, 6 + 20 bytes
+++ cri!/2 compiled, 6 + 20 bytes
+++ cr2i!* compiled, 6 + 20 bytes
Completed FASL files for "comprd"



*** Compiling rdelem ... 


FASLOUT "rdelem": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rdexp!* compiled, 66 + 56 bytes
+++ rdsqrt!* compiled, 13 + 24 bytes
+++ rdexpt!* compiled, 156 + 68 bytes
+++ rdlog!* compiled, 13 + 24 bytes
+++ rdatan2!* compiled, 32 + 44 bytes
+++ atan2!* compiled, 55 + 52 bytes
+++ rde!* compiled, 8 + 24 bytes
+++ rdpi!* compiled, 9 + 24 bytes
+++ pi!/2!* compiled, 5 + 20 bytes
+++ deg2rad!* compiled, 13 + 24 bytes
+++ rad2deg!* compiled, 13 + 24 bytes
+++ deg2rad compiled, 4 + 12 bytes
+++ rad2deg compiled, 4 + 12 bytes
+++ deg2rad!: compiled, 12 + 32 bytes
+++ rad2deg!: compiled, 12 + 32 bytes
+++ rdsin!* compiled, 13 + 24 bytes
+++ rdcos!* compiled, 13 + 24 bytes
+++ rdtan!* compiled, 13 + 24 bytes
+++ rdasin!* compiled, 13 + 24 bytes
+++ rdacos!* compiled, 13 + 24 bytes
+++ rdatan!* compiled, 14 + 20 bytes
+++ rdsinh!* compiled, 13 + 24 bytes
+++ rdcosh!* compiled, 13 + 24 bytes
+++ sinh!* compiled, 12 + 28 bytes
+++ cosh!* compiled, 12 + 28 bytes
+++ rdsec!* compiled, 14 + 28 bytes
+++ rdcsc!* compiled, 14 + 28 bytes
+++ rdcot!* compiled, 17 + 32 bytes
+++ rdtanh!* compiled, 22 + 40 bytes
+++ rdcoth!* compiled, 21 + 40 bytes
+++ rdsech!* compiled, 14 + 28 bytes
+++ rdcsch!* compiled, 14 + 28 bytes
+++ rdasinh!* compiled, 13 + 24 bytes
+++ rdacosh!* compiled, 13 + 24 bytes
+++ asinh!* compiled, 82 + 72 bytes
+++ acosh!* compiled, 44 + 68 bytes
+++ rdacot!* compiled, 19 + 32 bytes
+++ rdasec!* compiled, 20 + 36 bytes
+++ rdacsc!* compiled, 14 + 28 bytes
+++ rdatanh!* compiled, 13 + 24 bytes
+++ atanh!* compiled, 40 + 68 bytes
+++ rdacoth!* compiled, 14 + 28 bytes
+++ rdasech!* compiled, 33 + 48 bytes
+++ rdacsch!* compiled, 25 + 40 bytes
+++ rdlogb!* compiled, 16 + 24 bytes
+++ rdlog10!* compiled, 15 + 28 bytes
+++ logb!* compiled, 55 + 64 bytes
+++ rdhypot!* compiled, 16 + 24 bytes
+++ hypot!* compiled, 66 + 56 bytes
+++ simpdms compiled, 83 + 24 bytes
+++ round2a!* compiled, 6 + 12 bytes
+++ dms2rad!* compiled, 4 + 16 bytes
+++ dms2deg!* compiled, 25 + 28 bytes
+++ dms2deg compiled, 14 + 12 bytes
+++ dms2deg!: compiled, 122 + 44 bytes
+++ rad2dms compiled, 4 + 16 bytes
+++ rad2dms!* compiled, 4 + 16 bytes
+++ deg2dms!* compiled, 13 + 24 bytes
+++ mklist3!* compiled, 44 + 32 bytes
+++ deg2dms compiled, 28 + 16 bytes
+++ deg2dms!: compiled, 83 + 44 bytes
+++ rdnorm!* compiled, 8 + 16 bytes
+++ rdarg!* compiled, 8 + 20 bytes
+++ rdone!* compiled, 6 + 20 bytes
+++ rdtwo!* compiled, 6 + 20 bytes
+++ rdhalf!* compiled, 6 + 20 bytes
+++ rdzero!* compiled, 6 + 20 bytes
+++ texpt!: compiled, 36 + 32 bytes
+++ quotient!: compiled, 70 + 20 bytes
+++ texpt!:any compiled, 226 + 132 bytes
+++ integerp!: compiled, 47 + 28 bytes
Completed FASL files for "rdelem"



*** Compiling crelem ... 


FASLOUT "crelem": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cre!* compiled, 6 + 20 bytes
+++ crpi!* compiled, 6 + 20 bytes
+++ crexpt!* compiled, 17 + 36 bytes
+++ crnorm!* compiled, 12 + 16 bytes
+++ crarg!* compiled, 12 + 16 bytes
+++ crsqrt!* compiled, 5 + 20 bytes
+++ crr2d!* compiled, 14 + 20 bytes
+++ crd2r!* compiled, 14 + 20 bytes
+++ crsin!* compiled, 29 + 36 bytes
+++ crcos!* compiled, 31 + 40 bytes
+++ crtan!* compiled, 24 + 44 bytes
+++ crcot!* compiled, 24 + 44 bytes
+++ cratan2!* compiled, 148 + 84 bytes
+++ crlog!* compiled, 9 + 24 bytes
+++ crlogb!* compiled, 8 + 16 bytes
+++ timesi!* compiled, 4 + 16 bytes
+++ crasin!* compiled, 6 + 20 bytes
+++ cracos!* compiled, 15 + 32 bytes
+++ cratan!* compiled, 17 + 36 bytes
+++ cracot!* compiled, 18 + 36 bytes
+++ crsec!* compiled, 8 + 24 bytes
+++ crcsc!* compiled, 8 + 24 bytes
+++ crasec!* compiled, 6 + 24 bytes
+++ cracsc!* compiled, 6 + 24 bytes
+++ crsinh!* compiled, 16 + 36 bytes
+++ crcosh!* compiled, 16 + 36 bytes
+++ crtanh!* compiled, 20 + 40 bytes
+++ crcoth!* compiled, 20 + 40 bytes
+++ crsech!* compiled, 16 + 32 bytes
+++ crcsch!* compiled, 16 + 32 bytes
+++ crasinh!* compiled, 44 + 52 bytes
+++ cracosh!* compiled, 16 + 36 bytes
+++ cratanh!* compiled, 20 + 40 bytes
+++ cracoth!* compiled, 20 + 40 bytes
+++ crasech!* compiled, 6 + 24 bytes
+++ cracsch!* compiled, 6 + 24 bytes
+++ crexp!* compiled, 24 + 32 bytes
Completed FASL files for "crelem"



*** Compiling bfelem ... 


FASLOUT "bfelem": IN files;  or type in expressions
When all done, execute FASLEND;
+++ allfixp compiled, 14 + 8 bytes
+++ read!:lnum compiled, 86 + 56 bytes
+++ exp!* compiled, 4 + 16 bytes
+++ log!* compiled, 4 + 16 bytes
+++ sin!* compiled, 4 + 16 bytes
+++ cos!* compiled, 4 + 16 bytes
+++ tan!* compiled, 4 + 16 bytes
+++ asin!* compiled, 4 + 16 bytes
+++ acos!* compiled, 4 + 16 bytes
+++ atan!* compiled, 4 + 16 bytes
+++ sqrt!* compiled, 4 + 16 bytes
+++ pi!* compiled, 11 + 28 bytes
+++ e!* compiled, 3 + 16 bytes
+++ !:pi compiled, 142 + 64 bytes
+++ !:bigpi compiled, 155 + 108 bytes
+++ !:e compiled, 82 + 48 bytes
+++ !:e0625 compiled, 20 + 28 bytes
+++ !:log2 compiled, 20 + 28 bytes
+++ !:log3 compiled, 20 + 28 bytes
+++ !:log5 compiled, 20 + 28 bytes
+++ !:log10 compiled, 20 + 28 bytes
+++ !:logpi compiled, 24 + 32 bytes
+++ !:sqrt2 compiled, 20 + 28 bytes
+++ !:sqrt3 compiled, 20 + 28 bytes
+++ !:sqrt5 compiled, 20 + 28 bytes
+++ !:sqrt10 compiled, 20 + 28 bytes
+++ !:sqrtpi compiled, 24 + 32 bytes
+++ !:sqrte compiled, 24 + 32 bytes
+++ !:cbrt2 compiled, 20 + 28 bytes
+++ !:cbrt3 compiled, 20 + 28 bytes
+++ !:cbrt5 compiled, 20 + 28 bytes
+++ !:cbrt10 compiled, 20 + 28 bytes
+++ !:cbrtpi compiled, 24 + 32 bytes
+++ !:cbrte compiled, 24 + 32 bytes
+++ get!:const compiled, 39 + 28 bytes
+++ save!:const compiled, 26 + 28 bytes
+++ set!:const compiled, 6 + 16 bytes
+++ sqrt!: compiled, 180 + 104 bytes
+++ cbrt!: compiled, 248 + 128 bytes
+++ exp!: compiled, 215 + 116 bytes
+++ log!: compiled, 274 + 136 bytes
+++ sin!: compiled, 364 + 156 bytes
+++ cos!: compiled, 331 + 140 bytes
+++ tan!: compiled, 191 + 104 bytes
+++ asin!: compiled, 93 + 88 bytes
+++ acos!: compiled, 101 + 84 bytes
+++ atan!: compiled, 249 + 132 bytes
Completed FASL files for "bfelem"

The system is about to do a restart...
REDUCE



*** Compiling mathpr ... 


FASLOUT "mathpr": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "mathpr"



*** Compiling mprint ... 


FASLOUT "mprint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mathprint compiled, 7 + 20 bytes
+++ maprin not compiled (C version available)
+++ maprint not compiled (C version available)
+++ vec!-maprin compiled, 43 + 44 bytes
+++ exptpri not compiled (C version available)

*** local variable z in procedure inprint not used 
+++ inprint not compiled (C version available)
+++ flatsizec compiled, 19 + 12 bytes
+++ oprin not compiled (C version available)
+++ prin2!* not compiled (C version available)
+++ add_prin_char not compiled (C version available)
+++ prin2lint compiled, 68 + 40 bytes
+++ terpri!* not compiled (C version available)
+++ scprint not compiled (C version available)
+++ writepri compiled, 8 + 12 bytes
+++ exppri compiled, 6 + 12 bytes
+++ assgnpri not compiled (C version available)
+++ evalvars not compiled (C version available)
+++ revlis_without_mode not compiled (C version available)
+++ symbol not compiled (C version available)
+++ condpri compiled, 57 + 52 bytes
+++ revalpri compiled, 6 + 12 bytes
+++ boolvalpri compiled, 4 + 12 bytes
+++ lambda_z5tyh7f1l5fh compiled, 3 + 12 bytes
+++ progpri compiled, 16 + 32 bytes
Completed FASL files for "mprint"



*** Compiling sqprint ... 


FASLOUT "sqprint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*sqprint not compiled (C version available)
+++ printsq compiled, 7 + 20 bytes
+++ sqprint compiled, 102 + 84 bytes
+++ prepreform not compiled (C version available)
+++ prepreform1 not compiled (C version available)
+++ sqhorner!* not compiled (C version available)
+++ printsf compiled, 5 + 16 bytes
+++ prinsf compiled, 8 + 20 bytes

*** local variable w in procedure xprinf not used 
+++ xprinf compiled, 13 + 24 bytes
+++ xprinf2 compiled, 45 + 44 bytes
+++ xprint compiled, 59 + 56 bytes
+++ xprinp compiled, 108 + 80 bytes
Completed FASL files for "sqprint"



*** Compiling ratprin ... 


FASLOUT "ratprin": IN files;  or type in expressions
When all done, execute FASLEND;
+++ quotpri not compiled (C version available)
+++ ratfunpri1 not compiled (C version available)
+++ layout!-formula not compiled (C version available)
+++ update!-pline not compiled (C version available)
+++ prinfit not compiled (C version available)
+++ putpline not compiled (C version available)
Completed FASL files for "ratprin"



*** Compiling dfprin ... 


FASLOUT "dfprin": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dfprintfn not compiled (C version available)
+++ dflayout compiled, 114 + 64 bytes
+++ dfsublayout compiled, 40 + 28 bytes
+++ remember!-args compiled, 15 + 12 bytes
+++ farg compiled, 44 + 48 bytes
+++ clfarg compiled, 3 + 12 bytes
+++ setprifn compiled, 43 + 36 bytes
+++ indexprin compiled, 23 + 36 bytes
+++ indexpower compiled, 18 + 28 bytes
+++ indexlayout compiled, 54 + 36 bytes
+++ indexpowerlayout compiled, 104 + 48 bytes
+++ noargsprin compiled, 13 + 28 bytes
+++ doindex compiled, 4 + 16 bytes
+++ offindex compiled, 4 + 12 bytes
+++ donoargs compiled, 4 + 16 bytes
+++ offnoargs compiled, 4 + 12 bytes
Completed FASL files for "dfprin"



*** Compiling fortpri ... 


FASLOUT "fortpri": IN files;  or type in expressions
When all done, execute FASLEND;
+++ varname compiled, 12 + 24 bytes
+++ flength compiled, 53 + 24 bytes
+++ flenlis compiled, 24 + 12 bytes
+++ fmprint compiled, 210 + 108 bytes
+++ fnprint compiled, 45 + 28 bytes
+++ fexppri compiled, 111 + 64 bytes
+++ foprin compiled, 12 + 16 bytes
+++ fvarpri compiled, 154 + 136 bytes
+++ fortpri compiled, 81 + 84 bytes
+++ fout compiled, 91 + 32 bytes
+++ fout1 compiled, 19 + 28 bytes
+++ fprin2!* compiled, 100 + 76 bytes
+++ prin2!-downcase not compiled (C version available)
+++ prin2!-upcase compiled, 26 + 16 bytes
+++ fprin2 not compiled (C version available)
+++ red!-char!-downcase not compiled (C version available)
+++ red!-char!-upcase compiled, 9 + 16 bytes
+++ fterpri compiled, 10 + 16 bytes
+++ genvar compiled, 17 + 16 bytes
+++ fo_no_period compiled, 9 + 16 bytes
Completed FASL files for "fortpri"

The system is about to do a restart...
REDUCE



*** Compiling ezgcd ... 


FASLOUT "ezgcd": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*d2n not compiled (C version available)
+++ adjoin!-term not compiled (C version available)
+++ errorf compiled, 9 + 24 bytes
+++ printvec compiled, 27 + 24 bytes
Completed FASL files for "ezgcd"



*** Compiling alphas ... 


FASLOUT "alphas": IN files;  or type in expressions
When all done, execute FASLEND;
+++ get!-alpha compiled, 18 + 28 bytes
+++ divide!-all!-alphas compiled, 74 + 28 bytes
+++ multiply!-alphas compiled, 71 + 32 bytes
+++ multiply!-alphas!-recip compiled, 19 + 20 bytes
Completed FASL files for "alphas"



*** Compiling coeffts ... 


FASLOUT "coeffts": IN files;  or type in expressions
When all done, execute FASLEND;
+++ determine!-more!-coeffts compiled, 188 + 112 bytes
+++ convert!-factor!-to!-termvector compiled, 63 + 24 bytes
+++ try!-first!-coefft compiled, 131 + 48 bytes
+++ solve!-next!-coefft compiled, 124 + 76 bytes
+++ split!-term!-list compiled, 87 + 48 bytes
+++ factors!-complete compiled, 37 + 24 bytes
+++ convert!-and!-trial!-divide compiled, 258 + 136 bytes
+++ set!-up!-globals compiled, 188 + 80 bytes
+++ get!-term compiled, 85 + 16 bytes
+++ get!-term!-n compiled, 22 + 12 bytes
Completed FASL files for "coeffts"



*** Compiling ezgcdf ... 


FASLOUT "ezgcdf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ezgcdf compiled, 33 + 44 bytes
+++ ezgcdf1 compiled, 14 + 28 bytes
+++ simpnprimitive compiled, 39 + 40 bytes
+++ poly!-gcd compiled, 61 + 40 bytes
+++ ezgcd!-comfac compiled, 76 + 16 bytes
+++ gcd!-with!-number compiled, 38 + 24 bytes
+++ contents!-with!-respect!-to compiled, 29 + 28 bytes
+++ numeric!-content compiled, 30 + 20 bytes
+++ gcdlist compiled, 406 + 64 bytes
+++ gcdlist1 compiled, 218 + 64 bytes
+++ gcdlist2 compiled, 372 + 104 bytes
+++ gcdlist!-mod!-p compiled, 16 + 16 bytes
+++ deg2vars compiled, 23 + 16 bytes
+++ vdelete compiled, 23 + 12 bytes
+++ vintersection compiled, 47 + 12 bytes
+++ vunion compiled, 40 + 8 bytes
+++ mapcarcar compiled, 30 + 8 bytes
+++ gcdld compiled, 33 + 20 bytes
+++ split!-wrt!-variables compiled, 44 + 12 bytes
+++ gcdlist3 compiled, 467 + 100 bytes
+++ gcdlist31 compiled, 416 + 112 bytes
+++ make!-a!-list!-of!-variables compiled, 21 + 20 bytes
+++ make!-order!-consistent compiled, 36 + 20 bytes
+++ try!-max!-zeros!-for!-image!-set compiled, 221 + 40 bytes
+++ reconstruct!-gcd compiled, 283 + 196 bytes
+++ initialise!-hensel!-fluids compiled, 86 + 80 bytes
+++ division!-test compiled, 14 + 16 bytes
+++ degree!-order compiled, 19 + 12 bytes
+++ make!-image!-mod!-p compiled, 16 + 24 bytes
+++ make!-univariate!-image!-mod!-p compiled, 51 + 28 bytes
+++ image!-of!-power compiled, 26 + 16 bytes
+++ make!-numeric!-image!-mod!-p compiled, 46 + 16 bytes
+++ total!-degree!-in!-powers compiled, 45 + 8 bytes
+++ powers1 compiled, 8 + 16 bytes
+++ powers3 compiled, 25 + 8 bytes
+++ powers2 not compiled (C version available)
+++ powers4 compiled, 172 + 16 bytes
+++ ezgcd!-pp compiled, 7 + 20 bytes
+++ ezgcd!-sqfrf compiled, 50 + 32 bytes
+++ reduced!-degree compiled, 136 + 56 bytes
Completed FASL files for "ezgcdf"



*** Compiling facmisc ... 


FASLOUT "facmisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ multivariatep compiled, 25 + 12 bytes
+++ variables!-in!-form compiled, 4 + 12 bytes
+++ get!.coefft!.bound compiled, 11 + 28 bytes
+++ sumof compiled, 25 + 12 bytes
+++ fixexpfloat compiled, 18 + 24 bytes
+++ quotfail compiled, 17 + 24 bytes
+++ quotfail1 compiled, 14 + 20 bytes
+++ set!-teeny!-primes compiled, 104 + 60 bytes
+++ random!-small!-prime compiled, 15 + 16 bytes
+++ small!-random!-number compiled, 42 + 36 bytes
+++ random!-teeny!-prime compiled, 23 + 24 bytes
+++ random!-prime compiled, 95 + 52 bytes
+++ pseudo!-prime!-p compiled, 44 + 24 bytes
+++ form!-sum!-and!-product!-mod!-p compiled, 30 + 24 bytes
+++ form!-sum!-and!-product!-mod!-m compiled, 30 + 24 bytes
+++ reduce!-vec!-by!-one!-var!-mod!-p compiled, 34 + 16 bytes
+++ make!-bivariate!-vec!-mod!-p compiled, 35 + 16 bytes
+++ times!-vector!-mod!-p compiled, 23 + 16 bytes
+++ make!-vec!-modular!-symmetric compiled, 23 + 16 bytes
+++ make!-zerovarset compiled, 26 + 16 bytes
+++ make!-zeroset!-list compiled, 22 + 16 bytes
+++ kcombns compiled, 153 + 20 bytes
+++ list!-with!-one!-a compiled, 58 + 12 bytes
+++ make!-next!-zset compiled, 260 + 36 bytes
Completed FASL files for "facmisc"



*** Compiling facstr ... 


FASLOUT "facstr": IN files;  or type in expressions
When all done, execute FASLEND;
+++ reconstruct!-multivariate!-factors compiled, 617 + 244 bytes
Completed FASL files for "facstr"



*** Compiling interfac ... 


FASLOUT "interfac": IN files;  or type in expressions
When all done, execute FASLEND;
+++ assoc!-alpha compiled as link to assoc
+++ termvector2sf compiled, 36 + 24 bytes
+++ force!-lc compiled, 6 + 8 bytes
+++ merge!-terms compiled, 12 + 20 bytes
+++ merge!-terms1 compiled, 96 + 28 bytes
+++ list!-terms!-in!-factor compiled, 24 + 12 bytes
+++ try!-other!-coeffts compiled, 68 + 36 bytes
+++ derivative!-wrt!-main!-variable compiled, 38 + 20 bytes
+++ fac!-univariatep compiled, 17 + 16 bytes
+++ variables!.in!.form compiled, 29 + 8 bytes
+++ degree!-in!-variable compiled, 33 + 24 bytes
+++ get!-height compiled, 21 + 16 bytes
+++ poly!-minusp compiled, 17 + 8 bytes
+++ poly!-abs compiled, 8 + 16 bytes
+++ fac!-printfactors compiled, 28 + 24 bytes
+++ invert!.poly compiled, 29 + 28 bytes
+++ invert!.poly1 compiled, 40 + 12 bytes
+++ trailing!.coefft compiled, 16 + 8 bytes
+++ make!-image!-lc!-list compiled, 43 + 12 bytes
+++ make!-image!-lc!-list1 compiled, 77 + 32 bytes
+++ horner!-rule!-for!-one!-var compiled, 66 + 20 bytes
+++ make!-image compiled, 29 + 24 bytes
+++ evaluate!-in!-order not compiled (C version available)
+++ horner!-rule compiled, 94 + 16 bytes
+++ max!-degree compiled, 36 + 8 bytes
+++ diff!-over!-k!-mod!-p compiled, 72 + 28 bytes
+++ diff!-k!-times!-mod!-p compiled, 68 + 24 bytes
+++ spreadvar compiled, 36 + 8 bytes
+++ root!-squares compiled, 32 + 12 bytes
+++ poly!-to!-vector compiled, 26 + 20 bytes
+++ vector!-to!-poly compiled, 41 + 24 bytes
Completed FASL files for "interfac"



*** Compiling linmodp ... 


FASLOUT "linmodp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lu!-factorize!-mod!-p compiled, 197 + 24 bytes
+++ back!-substitute compiled, 169 + 28 bytes
Completed FASL files for "linmodp"



*** Compiling mhensfns ... 


FASLOUT "mhensfns": IN files;  or type in expressions
When all done, execute FASLEND;
+++ set!-degree!-bounds compiled, 56 + 20 bytes
+++ get!-degree!-bound compiled, 19 + 24 bytes
+++ choose!-larger!-prime compiled, 165 + 108 bytes
+++ binomial!-coefft!-mod!-p compiled, 70 + 20 bytes
+++ make!-multivariate!-hatvec!-mod!-p compiled, 50 + 16 bytes
+++ max!-degree!-in!-var compiled, 31 + 24 bytes
+++ make!-growth!-factor compiled, 23 + 24 bytes
+++ terms!-done!-mod!-p compiled, 44 + 28 bytes
+++ terms!-done1!-mod!-p compiled, 142 + 24 bytes
+++ primitive!.parts compiled, 213 + 92 bytes
+++ make!-predicted!-forms compiled, 99 + 44 bytes
+++ make!-correction!-vectors compiled, 37 + 16 bytes
+++ construct!-soln!-matrices compiled, 47 + 24 bytes
+++ construct!-ith!-matrix compiled, 88 + 24 bytes
+++ construct!-matrix!-row compiled, 56 + 24 bytes
+++ print!-linear!-systems compiled, 29 + 24 bytes
+++ print!-linear!-system compiled, 190 + 104 bytes
+++ try!-prediction compiled, 274 + 104 bytes
+++ try!-factor compiled, 64 + 48 bytes
+++ try!-alpha compiled, 77 + 48 bytes
Completed FASL files for "mhensfns"



*** Compiling modpoly ... 


FASLOUT "modpoly": IN files;  or type in expressions
When all done, execute FASLEND;
+++ plus!-mod!-p not compiled (C version available)
+++ times!-mod!-p not compiled (C version available)
+++ times!-term!-mod!-p not compiled (C version available)
+++ difference!-mod!-p compiled, 6 + 16 bytes
+++ minus!-mod!-p not compiled (C version available)
+++ reduce!-mod!-p compiled, 24 + 16 bytes
+++ monic!-mod!-p compiled, 35 + 24 bytes
+++ quotfail!-mod!-p compiled, 13 + 28 bytes
+++ quotient!-mod!-p compiled, 65 + 36 bytes
+++ xquotient!-mod!-p compiled, 82 + 40 bytes
+++ negate!-term compiled, 5 + 12 bytes
+++ remainder!-mod!-p compiled, 24 + 20 bytes
+++ xremainder!-mod!-p compiled, 65 + 36 bytes
+++ multiply!-by!-constant!-mod!-p not compiled (C version available)
+++ gcd!-mod!-p compiled, 40 + 28 bytes
+++ ordered!-gcd!-mod!-p compiled, 49 + 28 bytes
+++ reduce!-degree!-mod!-p compiled, 39 + 28 bytes
+++ derivative!-mod!-p compiled, 18 + 16 bytes
+++ derivative!-mod!-p!-1 compiled, 42 + 24 bytes
+++ square!-free!-mod!-p compiled, 26 + 16 bytes
+++ evaluate!-mod!-p compiled, 53 + 28 bytes
+++ horner!-rule!-mod!-p compiled, 66 + 20 bytes
+++ expt!-mod!-p compiled, 30 + 24 bytes
+++ make!-bivariate!-mod!-p compiled, 34 + 20 bytes
+++ make!-univariate!-mod!-p compiled, 31 + 20 bytes
+++ evaluate!-in!-order!-mod!-p compiled, 29 + 16 bytes
+++ horner!-rule!-in!-order!-mod!-p compiled, 72 + 16 bytes
+++ make!-modular!-symmetric compiled, 30 + 24 bytes
Completed FASL files for "modpoly"



*** Compiling multihen ... 


FASLOUT "multihen": IN files;  or type in expressions
When all done, execute FASLEND;
+++ find!-multivariate!-factors!-mod!-p compiled, 622 + 180 bytes
+++ multihen1 compiled, 1226 + 228 bytes
+++ multihen!-msg compiled, 134 + 108 bytes
+++ multihen!-exit compiled, 96 + 80 bytes
+++ find!-msg1 compiled, 79 + 84 bytes
+++ find!-msg2 compiled, 56 + 48 bytes
+++ find!-msg3 compiled, 73 + 76 bytes
+++ find!-msg4 compiled, 63 + 68 bytes
+++ find!-msg5 compiled, 117 + 84 bytes
+++ solve!-for!-corrections compiled, 779 + 208 bytes
+++ solve!-msg1 compiled, 93 + 92 bytes
+++ solve!-msg2 compiled, 66 + 72 bytes
+++ solve!-msg3 compiled, 112 + 80 bytes
Completed FASL files for "multihen"



*** Compiling unihens ... 


FASLOUT "unihens": IN files;  or type in expressions
When all done, execute FASLEND;
+++ uhensel!.extend compiled, 732 + 232 bytes
+++ uhensel!.extend1 compiled, 396 + 168 bytes
+++ uhensel!.extend2 compiled, 65 + 40 bytes
+++ get!-coefft!-bound compiled, 19 + 28 bytes
+++ binomial!-coefft compiled, 47 + 16 bytes
+++ find!-alphas!-in!-a!-ring compiled, 308 + 92 bytes
+++ alphas compiled, 135 + 36 bytes
+++ xgcd!-mod!-p compiled, 59 + 24 bytes
+++ hensel!-mod!-p compiled, 605 + 240 bytes
+++ hensel!-exit compiled, 72 + 64 bytes
+++ hensel!-msg1 compiled, 139 + 120 bytes
+++ initialize!-hensel compiled, 54 + 52 bytes

*** local variable n in procedure reset-quadratic-step-fluids not used 
+++ reset!-quadratic!-step!-fluids compiled, 198 + 64 bytes
+++ quadratic!-step compiled, 301 + 156 bytes
+++ terms!-done compiled, 44 + 28 bytes
+++ terms!.done compiled, 142 + 24 bytes
+++ try!.combining compiled, 11 + 16 bytes
+++ try!.combining1 compiled, 570 + 124 bytes
+++ koutof compiled, 156 + 24 bytes
+++ lazy!-adjoin compiled, 60 + 20 bytes
+++ factor!-trialdiv compiled, 393 + 108 bytes
+++ eval!-at!-1 compiled, 25 + 8 bytes

*** local variable l in procedure combine not used 
+++ combine compiled, 118 + 56 bytes
+++ combine!.alphas compiled, 165 + 44 bytes
+++ adjust!-growth compiled, 686 + 212 bytes
+++ vec2list!-without!-k compiled, 25 + 16 bytes
+++ set!-fluids!-for!-newhensel compiled, 69 + 52 bytes
+++ set!-hensel!-fluids!-back compiled, 131 + 68 bytes
Completed FASL files for "unihens"

The system is about to do a restart...
REDUCE



*** Compiling factor ... 


FASLOUT "factor": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable u in procedure carcheck not used 
+++ ttab!* compiled, 28 + 32 bytes
+++ set!-trace!-factor compiled, 15 + 24 bytes
+++ clear!-trace!-factor compiled, 19 + 16 bytes
+++ close!-trace!-files compiled, 8 + 16 bytes
Completed FASL files for "factor"


*** Compile time: (setq *fastfor t)

*** Compiling bigmodp ... 


FASLOUT "bigmodp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ general!-plus!-mod!-p not compiled (C version available)
+++ general!-times!-mod!-p compiled, 77 + 28 bytes
+++ general!-times!-term!-mod!-p not compiled (C version available)
+++ gen!-mult!-by!-const!-mod!-p not compiled (C version available)
+++ general!-difference!-mod!-p compiled, 6 + 16 bytes
+++ general!-minus!-mod!-p compiled, 29 + 16 bytes
+++ general!-reduce!-mod!-p compiled, 23 + 20 bytes
+++ general!-make!-modular!-symmetric compiled, 30 + 24 bytes
Completed FASL files for "bigmodp"


*** Compile time: (setq *fastfor t)

*** Compiling degsets ... 


FASLOUT "degsets": IN files;  or type in expressions
When all done, execute FASLEND;
+++ check!-degree!-sets compiled, 125 + 48 bytes
+++ check!-degree!-sets!-1 compiled, 512 + 100 bytes
+++ sum!-list compiled, 26 + 8 bytes
Completed FASL files for "degsets"


*** Compile time: (setq *fastfor t)

*** Compiling facprim ... 


FASLOUT "facprim": IN files;  or type in expressions
When all done, execute FASLEND;
+++ factorize!-primitive!-polynomial compiled, 213 + 160 bytes
+++ check!-inverted compiled, 69 + 40 bytes
+++ getcof compiled, 50 + 24 bytes
+++ factorize!-quadratic compiled, 115 + 76 bytes
+++ sqrtd2 compiled, 57 + 24 bytes
+++ pmam!-sqrt compiled, 51 + 32 bytes
+++ sqrtf2 compiled, 99 + 40 bytes
+++ initialize!-fluids compiled, 240 + 188 bytes
+++ variables!-to!-kill compiled, 78 + 28 bytes
+++ get!-some!-random!-sets compiled, 162 + 88 bytes
+++ choose!-the!-best!-set compiled, 375 + 168 bytes
+++ reconstruct!-image!-factors!-over!-integers compiled, 511 + 168 bytes
+++ do!-quadratic!-growth compiled, 173 + 80 bytes
+++ fix!-alphas compiled, 102 + 64 bytes
+++ determine!.leading!.coeffts compiled, 484 + 188 bytes
Completed FASL files for "facprim"


*** Compile time: (setq *fastfor t)

*** Compiling facmod ... 


FASLOUT "facmod": IN files;  or type in expressions
When all done, execute FASLEND;
+++ get!-factor!-count!-mod!-p compiled, 38 + 32 bytes
+++ modular!-factor!-count compiled, 133 + 56 bytes
+++ count!-linear!-factors!-mod!-p compiled, 197 + 56 bytes
+++ make!-x!-to!-p compiled, 147 + 36 bytes
+++ find!-linear!-factors!-mod!-p compiled, 97 + 52 bytes
+++ use!-berlekamp compiled, 244 + 40 bytes
+++ find!-null!-space compiled, 37 + 28 bytes
+++ print!-m compiled, 57 + 24 bytes
+++ clear!-column not compiled (C version available)
+++ tidy!-up!-null!-vectors compiled, 72 + 20 bytes
+++ build!-null!-vector compiled, 38 + 12 bytes
+++ get!-factors!-mod!-p compiled, 19 + 20 bytes
+++ convert!-null!-vectors!-to!-factors compiled, 96 + 72 bytes
+++ try!-all!-constants compiled, 52 + 24 bytes
+++ split!-further compiled, 130 + 44 bytes
+++ append!-new!-factors compiled, 21 + 16 bytes
Completed FASL files for "facmod"


*** Compile time: (setq *fastfor t)

*** Compiling facuni ... 


FASLOUT "facuni": IN files;  or type in expressions
When all done, execute FASLEND;
+++ univariate!-factorize compiled, 25 + 36 bytes
+++ univariate!-factorize1 compiled, 154 + 100 bytes
+++ initialize!-univariate!-fluids compiled, 20 + 40 bytes
+++ get!-some!-random!-primes compiled, 54 + 48 bytes
+++ choose!-the!-best!-prime compiled, 198 + 116 bytes
+++ reconstruct!-factors!-over!-integers compiled, 54 + 72 bytes
+++ reconstruct!.over!.integers compiled, 197 + 124 bytes
+++ testx!*!*n!+1 compiled, 22 + 16 bytes
+++ testx!*!*n!-1 compiled, 22 + 20 bytes
+++ factorizex!*!*n!+1 compiled, 70 + 24 bytes
+++ negate!-variable compiled, 58 + 16 bytes
+++ integer!-factors compiled, 73 + 28 bytes
+++ factored!-divisors compiled, 56 + 12 bytes
+++ factorizex!*!*n!-1 compiled, 86 + 44 bytes
+++ cyclotomic!-polynomial compiled, 76 + 24 bytes
Completed FASL files for "facuni"


*** Compile time: (setq *fastfor t)

*** Compiling imageset ... 


FASLOUT "imageset": IN files;  or type in expressions
When all done, execute FASLEND;
+++ generate!-an!-image!-set!-with!-prime compiled, 107 + 108 bytes
+++ get!-new!-set compiled, 396 + 84 bytes
+++ find!-a!-valid!-prime compiled, 135 + 84 bytes
+++ get!-new!-prime compiled, 48 + 28 bytes
+++ unique!-f!-nos compiled, 136 + 24 bytes
+++ get!.content compiled, 38 + 44 bytes
+++ distribute!.lc compiled, 783 + 164 bytes
+++ dist!.lc!.msg1 compiled, 185 + 148 bytes
+++ dist!.lc!.msg2 compiled, 71 + 56 bytes
+++ dist!.lc!.msg3 compiled, 81 + 64 bytes
+++ dist!.lc!.msg4 compiled, 68 + 64 bytes
Completed FASL files for "imageset"


*** Compile time: (setq *fastfor t)

*** Compiling pfactor ... 


FASLOUT "pfactor": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pfactor compiled, 152 + 112 bytes
+++ mod!-adjust compiled, 6 + 16 bytes
+++ mod!-adjust1 compiled, 45 + 24 bytes
+++ factor!-form!-mod!-p compiled, 4 + 16 bytes
+++ factorize!-by!-square!-free!-mod!-p compiled, 95 + 56 bytes
+++ divide!-exponents!-by!-p compiled, 29 + 16 bytes
+++ exactquotient compiled, 21 + 24 bytes
+++ multiply!-multiplicities compiled, 19 + 12 bytes
+++ mergefactors compiled, 14 + 12 bytes
+++ addfactor compiled, 33 + 8 bytes
+++ factorize!-pp!-mod!-p compiled, 27 + 28 bytes
+++ unifac!-mod!-p compiled, 84 + 36 bytes
Completed FASL files for "pfactor"


*** Compile time: (setq *fastfor t)

*** Compiling vecpoly ... 


FASLOUT "vecpoly": IN files;  or type in expressions
When all done, execute FASLEND;
+++ copy!-vector compiled, 27 + 12 bytes
+++ times!-in!-vector not compiled (C version available)
+++ quotfail!-in!-vector compiled, 168 + 28 bytes
+++ remainder!-in!-vector not compiled (C version available)
+++ evaluate!-in!-vector compiled, 32 + 8 bytes
+++ gcd!-in!-vector compiled, 149 + 32 bytes
Completed FASL files for "vecpoly"


*** Compile time: (setq *fastfor t)

*** Compiling pfacmult ... 


FASLOUT "pfacmult": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fctrfkronm compiled, 523 + 136 bytes
+++ fctrfmk1 compiled, 38 + 20 bytes
+++ fctrfmk2 compiled, 48 + 24 bytes
+++ fctrfmk3 compiled, 16 + 12 bytes
+++ fctrfmk4 compiled, 24 + 24 bytes
Completed FASL files for "pfacmult"

The system is about to do a restart...
REDUCE



*** Compiling hephys ... 


FASLOUT "hephys": IN files;  or type in expressions
When all done, execute FASLEND;
+++ vector compiled as link to vector1
+++ vector1 compiled, 45 + 36 bytes
+++ index compiled, 8 + 24 bytes
+++ remind compiled, 5 + 16 bytes
+++ mass compiled, 51 + 36 bytes
+++ getmas compiled, 16 + 28 bytes
+++ vecdim compiled, 3 + 12 bytes
+++ mshell compiled, 31 + 32 bytes
+++ nospur compiled, 9 + 20 bytes
+++ spur compiled, 10 + 20 bytes

*** local variable v in procedure veval not used 
+++ veval not compiled (C version available)
+++ vmult not compiled (C version available)
+++ vmult1 not compiled (C version available)
+++ simpdot not compiled (C version available)
+++ dotord not compiled (C version available)
+++ mkvarg not compiled (C version available)
+++ simpgamma compiled, 61 + 68 bytes
+++ simpeps compiled, 4 + 16 bytes
+++ epsord compiled, 11 + 20 bytes
+++ mkepsk compiled, 29 + 40 bytes
+++ mkepsq compiled, 14 + 24 bytes
+++ mkg1 not compiled (C version available)
+++ mkf compiled as link to multf
+++ multd!* not compiled (C version available)
+++ isimpa compiled, 11 + 24 bytes
+++ isimpq compiled, 71 + 68 bytes
+++ isimp1 not compiled (C version available)
+++ isimp2 not compiled (C version available)
+++ nb not compiled (C version available)
+++ dotsum compiled, 271 + 88 bytes
+++ mksf not compiled (C version available)
+++ gadd not compiled (C version available)
+++ spur0 not compiled (C version available)
+++ spur0i not compiled (C version available)
+++ spurdim compiled, 249 + 64 bytes
+++ appn not compiled (C version available)
+++ other compiled, 8 + 8 bytes
+++ kahane not compiled (C version available)
+++ appr not compiled (C version available)
+++ exc not compiled (C version available)
+++ brace not compiled (C version available)
+++ spr1 compiled, 69 + 36 bytes
+++ spr2 compiled, 70 + 48 bytes
+++ hevenp not compiled (C version available)
+++ bassoc not compiled (C version available)
+++ memlis not compiled (C version available)
+++ spurr not compiled (C version available)
+++ sprgen not compiled (C version available)
+++ asign compiled, 19 + 16 bytes
+++ asign1 compiled, 13 + 8 bytes
+++ sprgen1 not compiled (C version available)
+++ mkepsf compiled, 13 + 20 bytes
+++ esum compiled, 135 + 56 bytes
+++ emult compiled, 31 + 20 bytes
+++ emult1 compiled, 129 + 72 bytes
Completed FASL files for "hephys"

The system is about to do a restart...
REDUCE



*** Compiling int ... 


FASLOUT "int": IN files;  or type in expressions
When all done, execute FASLEND;
+++ flatten compiled, 37 + 12 bytes
+++ int!-gensym1 compiled, 23 + 16 bytes
+++ mknill compiled, 16 + 16 bytes

*** printc not defined (LOSE flag) 
Completed FASL files for "int"



*** Compiling contents ... 


FASLOUT "contents": IN files;  or type in expressions
When all done, execute FASLEND;
+++ contents compiled, 31 + 20 bytes
+++ contentsmv compiled, 35 + 16 bytes
+++ makemainvar compiled, 28 + 16 bytes
+++ mulcoeffsby compiled, 37 + 12 bytes
+++ mergeadd compiled, 109 + 16 bytes
+++ sqfree compiled, 80 + 48 bytes
+++ sqmerge compiled, 67 + 12 bytes
+++ multup compiled, 21 + 16 bytes
+++ diflist compiled, 49 + 32 bytes
+++ l2lsf compiled, 20 + 20 bytes
+++ dfnumr compiled, 133 + 56 bytes
+++ difflogs compiled, 93 + 60 bytes
+++ factorlistlist compiled, 32 + 20 bytes
+++ facbypp compiled, 37 + 20 bytes
Completed FASL files for "contents"



*** Compiling csolve ... 


FASLOUT "csolve": IN files;  or type in expressions
When all done, execute FASLEND;
+++ findpivot compiled, 25 + 16 bytes
+++ subst4eliminatedcs compiled, 84 + 36 bytes
+++ backsubst4cs compiled, 122 + 60 bytes
+++ createcmap compiled, 43 + 36 bytes
+++ spreadc compiled, 81 + 36 bytes
Completed FASL files for "csolve"



*** Compiling idepend ... 


FASLOUT "idepend": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dependsp compiled, 57 + 32 bytes
+++ involvesq compiled, 10 + 12 bytes
+++ involvesf compiled, 25 + 12 bytes
+++ dependspl compiled, 13 + 12 bytes
+++ taylorp compiled, 18 + 16 bytes
Completed FASL files for "idepend"



*** Compiling df2q ... 


FASLOUT "df2q": IN files;  or type in expressions
When all done, execute FASLEND;
+++ df2q compiled, 106 + 52 bytes
+++ tidy!-powersq compiled, 142 + 44 bytes
+++ find!-expts compiled, 82 + 36 bytes
+++ xl2f compiled, 71 + 32 bytes
Completed FASL files for "df2q"



*** Compiling distrib ... 


FASLOUT "distrib": IN files;  or type in expressions
When all done, execute FASLEND;
+++ plusdf compiled, 65 + 16 bytes
+++ orddf compiled, 34 + 32 bytes
+++ exptcompare compiled, 16 + 12 bytes
+++ negdf compiled, 18 + 16 bytes
+++ multdf compiled, 26 + 16 bytes
+++ multerm compiled, 12 + 20 bytes
+++ mulpower compiled, 25 + 32 bytes
+++ reduceroots compiled, 21 + 16 bytes
+++ tryreduction compiled, 56 + 40 bytes
+++ addexptsdf compiled, 35 + 28 bytes
+++ exptplus compiled, 22 + 16 bytes
+++ multdfconst compiled, 23 + 20 bytes
+++ f2df compiled, 57 + 36 bytes
+++ vp1 compiled, 29 + 24 bytes
+++ vp2 compiled, 14 + 16 bytes
+++ vp2df compiled, 31 + 28 bytes
+++ dfconst compiled, 10 + 16 bytes
+++ df2printform compiled, 67 + 40 bytes
+++ xl2q compiled, 106 + 36 bytes
+++ multbyarbpowers compiled, 18 + 16 bytes
+++ addarbexptsdf compiled, 17 + 20 bytes
Completed FASL files for "distrib"



*** Compiling divide ... 


FASLOUT "divide": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dfquotdf compiled, 93 + 72 bytes
+++ fquotf compiled, 25 + 36 bytes
+++ dfquotdf1 compiled, 41 + 36 bytes
+++ dfquotdf2 compiled, 95 + 60 bytes
+++ rootextractdf compiled, 23 + 16 bytes
+++ rootextractsq compiled, 15 + 16 bytes
+++ rootextractf compiled, 145 + 52 bytes
+++ simpdf!* compiled, 13 + 20 bytes
+++ xpdiff compiled, 35 + 24 bytes
+++ conjsqrt compiled, 20 + 16 bytes
+++ conjterm compiled, 16 + 20 bytes
+++ involvesp compiled, 20 + 20 bytes
Completed FASL files for "divide"



*** Compiling driver ... 


FASLOUT "driver": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpint compiled, 877 + 332 bytes
+++ int!-resub compiled, 21 + 24 bytes
+++ int!-subsq compiled, 36 + 32 bytes
+++ numlistp compiled, 13 + 8 bytes
+++ int!-simp compiled, 5 + 20 bytes
+++ integratesq compiled, 149 + 104 bytes
+++ zvars compiled, 65 + 36 bytes
+++ pseudodiff compiled, 127 + 44 bytes
+++ look_for_substitute compiled, 35 + 16 bytes
+++ look_for_rational compiled, 56 + 32 bytes
+++ look_for_rational1 compiled, 98 + 76 bytes
+++ look_for_quad compiled, 535 + 172 bytes
+++ look_for_asin compiled, 205 + 136 bytes
+++ look_for_invhyp compiled, 338 + 176 bytes
+++ simpint1 compiled, 83 + 60 bytes
+++ simpint!* compiled, 15 + 28 bytes
+++ remakesf compiled, 53 + 32 bytes
+++ allowedfns compiled, 52 + 36 bytes
+++ look_for_power compiled, 73 + 28 bytes
+++ even_power compiled, 78 + 20 bytes
+++ even_prep compiled, 34 + 16 bytes
+++ sqrt_substitute compiled, 103 + 88 bytes
Completed FASL files for "driver"



*** Compiling symint ... 


FASLOUT "symint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ symint compiled, 65 + 64 bytes
+++ nestedintdf compiled, 105 + 44 bytes
+++ intdf compiled, 26 + 24 bytes
+++ intdfvars compiled, 53 + 24 bytes
+++ partialint compiled, 125 + 48 bytes
+++ partialintdf compiled, 39 + 32 bytes
+++ partialintint compiled, 35 + 24 bytes
+++ xpartialint compiled, 117 + 44 bytes
+++ xpartialintdf compiled, 57 + 28 bytes
+++ xpartialintint compiled, 59 + 28 bytes
Completed FASL files for "symint"



*** Compiling intfac ... 


FASLOUT "intfac": IN files;  or type in expressions
When all done, execute FASLEND;
+++ int!-fac compiled, 11 + 28 bytes
+++ int!-fac!-inner compiled, 102 + 32 bytes
+++ fac2int compiled, 99 + 52 bytes
+++ int!-quadterm compiled, 205 + 108 bytes
+++ rootxf!* compiled, 28 + 28 bytes
Completed FASL files for "intfac"



*** Compiling ibasics ... 


FASLOUT "ibasics": IN files;  or type in expressions
When all done, execute FASLEND;
+++ printdf compiled, 8 + 20 bytes
+++ interr compiled, 14 + 24 bytes
+++ partialdiff compiled, 57 + 20 bytes
+++ mkilist compiled, 13 + 12 bytes
+++ removeduplicates compiled, 31 + 12 bytes
+++ jsqfree compiled, 45 + 56 bytes
+++ stt compiled, 79 + 32 bytes
+++ mapply compiled, 22 + 24 bytes
+++ mapvec compiled, 25 + 12 bytes
Completed FASL files for "ibasics"



*** Compiling makevars ... 


FASLOUT "makevars": IN files;  or type in expressions
When all done, execute FASLEND;
+++ varsinlist compiled, 16 + 12 bytes
+++ getvariables compiled, 7 + 12 bytes
+++ varsinsf compiled, 27 + 12 bytes
+++ findzvars compiled, 107 + 48 bytes
+++ findzvarssq compiled, 10 + 12 bytes
+++ findzvarsf compiled, 31 + 12 bytes
+++ createindices compiled, 6 + 16 bytes
+++ crindex1 compiled, 19 + 20 bytes
+++ cdrmember compiled, 14 + 8 bytes
+++ mergein compiled, 25 + 16 bytes
Completed FASL files for "makevars"



*** Compiling jpatches ... 


FASLOUT "jpatches": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*addsq compiled, 90 + 36 bytes
+++ !*multsq compiled, 78 + 32 bytes
+++ !*invsq compiled, 9 + 20 bytes
+++ !*multf compiled, 272 + 68 bytes
+++ makeupsf compiled, 81 + 40 bytes
+++ !*multfsqrt compiled, 34 + 40 bytes
+++ !*multfexpt compiled, 146 + 76 bytes
+++ prefix!-rational!-numberp compiled, 15 + 12 bytes
+++ squashsqrt compiled, 91 + 40 bytes
+++ !*exptsq compiled, 48 + 28 bytes
+++ !*exptf compiled, 33 + 24 bytes
Completed FASL files for "jpatches"



*** Compiling reform ... 


FASLOUT "reform": IN files;  or type in expressions
When all done, execute FASLEND;
+++ substinulist compiled, 34 + 28 bytes
+++ evaluateuconst compiled, 45 + 28 bytes
+++ logstosq compiled, 54 + 40 bytes
Completed FASL files for "reform"



*** Compiling simpsqrt ... 


FASLOUT "simpsqrt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ proper!-simpsqrt compiled, 6 + 16 bytes
+++ simpsqrti compiled, 143 + 76 bytes
+++ simpsqrtsq compiled, 8 + 12 bytes
+++ simpsqrt2 compiled, 30 + 32 bytes
+++ simpsqrt3 compiled, 41 + 24 bytes
+++ sqrtsave compiled, 76 + 32 bytes
+++ newplace compiled, 28 + 28 bytes
+++ mknewsqrt compiled, 151 + 128 bytes
+++ actualsimpsqrt compiled, 11 + 24 bytes
+++ actualsqrtinner compiled, 92 + 48 bytes
+++ actualsimpsqrt2 compiled, 87 + 44 bytes
+++ int!-sqrt compiled, 34 + 28 bytes
+++ int!-nr compiled, 32 + 20 bytes
+++ formsqrt compiled, 153 + 84 bytes
+++ findatom compiled, 8 + 8 bytes
Completed FASL files for "simpsqrt"



*** Compiling hacksqrt ... 


FASLOUT "hacksqrt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ sqrtsintree compiled, 54 + 28 bytes
+++ sqrtsinsq compiled, 11 + 12 bytes
+++ sqrtsinsql compiled, 18 + 12 bytes
+++ sqrtsinsf compiled, 65 + 32 bytes
+++ easysqrtsign compiled, 29 + 16 bytes
+++ hardsqrtsign compiled, 152 + 20 bytes
+++ degreenest compiled, 54 + 32 bytes
+++ degreenestl compiled, 26 + 20 bytes
+++ sortsqrts compiled, 65 + 40 bytes
+++ sqrtsign compiled, 16 + 24 bytes
Completed FASL files for "hacksqrt"



*** Compiling sqrtf ... 


FASLOUT "sqrtf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ sqrtf compiled, 32 + 36 bytes
+++ zlistp compiled, 23 + 12 bytes
+++ sqrtf1 compiled, 92 + 52 bytes
Completed FASL files for "sqrtf"



*** Compiling isolve ... 


FASLOUT "isolve": IN files;  or type in expressions
When all done, execute FASLEND;
+++ uterm compiled, 50 + 28 bytes
+++ solve!-for!-u compiled, 205 + 156 bytes
+++ squashconstants compiled, 137 + 80 bytes
+++ checku compiled, 13 + 8 bytes
+++ checku1 compiled, 31 + 28 bytes
+++ negind compiled, 15 + 8 bytes
+++ evaluatecoeffts compiled, 49 + 32 bytes
+++ valuecoefft compiled, 21 + 20 bytes
+++ addinds compiled, 34 + 24 bytes
+++ pickupu compiled, 76 + 52 bytes
+++ patchuptan compiled, 349 + 164 bytes
+++ killsingles compiled, 22 + 8 bytes
+++ rmve compiled, 18 + 8 bytes
+++ subdf compiled, 46 + 28 bytes
+++ testord compiled, 16 + 12 bytes
+++ tansfrom compiled, 82 + 40 bytes
+++ tanextract compiled, 72 + 36 bytes
+++ coefdf compiled, 14 + 8 bytes
+++ purgeconst compiled, 22 + 12 bytes
+++ maxorder compiled, 63 + 36 bytes
+++ maxfrom compiled, 7 + 16 bytes
+++ maxfrom1 compiled, 13 + 16 bytes
+++ addctomap compiled, 102 + 48 bytes
+++ addtovector compiled, 36 + 16 bytes
+++ checkcoeffts compiled, 20 + 20 bytes
+++ nextu compiled, 32 + 20 bytes
+++ subtractinds compiled, 29 + 8 bytes
+++ gausselimn compiled, 77 + 68 bytes
+++ makeprim compiled, 93 + 36 bytes
Completed FASL files for "isolve"



*** Compiling tidysqrt ... 


FASLOUT "tidysqrt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ tidysqrt compiled, 18 + 24 bytes
+++ tidysqrtf compiled, 87 + 56 bytes
+++ multoutdenr compiled, 48 + 32 bytes
+++ conjugateexpt compiled, 168 + 64 bytes
+++ sqrt2top compiled, 71 + 36 bytes
+++ findsquareroot compiled, 28 + 12 bytes

*** local variable p in procedure findnthroot not used 
+++ findnthroot compiled, 1 + 8 bytes
+++ conjugatewrt compiled, 73 + 24 bytes
+++ gcdcoeffsofsqrts compiled, 61 + 28 bytes
Completed FASL files for "tidysqrt"



*** Compiling trcase ... 


FASLOUT "trcase": IN files;  or type in expressions
When all done, execute FASLEND;
+++ transcendentalcase compiled, 1163 + 452 bytes
+++ checkdffail compiled, 16 + 12 bytes
+++ printfactors compiled, 70 + 48 bytes
Completed FASL files for "trcase"



*** Compiling halfangl ... 


FASLOUT "halfangl": IN files;  or type in expressions
When all done, execute FASLEND;
+++ transform compiled, 78 + 48 bytes
+++ tan!-function!-in compiled, 20 + 16 bytes
+++ halfangle!-confusion compiled, 21 + 24 bytes
+++ quotqq compiled, 6 + 16 bytes
+++ !*subtrq compiled, 6 + 16 bytes
+++ !*int2qm compiled, 11 + 16 bytes
+++ halfangle compiled, 10 + 16 bytes
+++ hfaglf compiled, 33 + 32 bytes
+++ hfaglk compiled, 425 + 124 bytes
+++ hfaglargs compiled, 17 + 20 bytes
+++ untanf compiled, 241 + 80 bytes
+++ untan compiled, 26 + 32 bytes
+++ sinsqrdchk compiled, 9 + 20 bytes
+++ sinsqchkf compiled, 128 + 56 bytes
+++ cossqchkf compiled, 158 + 56 bytes
+++ cossqchk compiled, 16 + 32 bytes
+++ lrootchk compiled, 13 + 12 bytes
+++ krootchk compiled, 42 + 32 bytes
+++ rootchk1p compiled, 23 + 12 bytes
+++ rootcheckp compiled, 10 + 12 bytes
Completed FASL files for "halfangl"



*** Compiling trialdiv ... 


FASLOUT "trialdiv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ countz compiled, 28 + 16 bytes
+++ arrangelistz compiled, 46 + 12 bytes
+++ findtrialdivs compiled, 53 + 32 bytes
+++ exportan compiled, 25 + 28 bytes
+++ findsqrts compiled, 16 + 12 bytes
+++ trialdiv compiled, 45 + 28 bytes
Completed FASL files for "trialdiv"



*** Compiling vect ... 


FASLOUT "vect": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mkuniquevect compiled, 35 + 16 bytes
+++ mkvec compiled, 27 + 12 bytes
+++ mkvecf2q compiled, 36 + 16 bytes
+++ mkidenm compiled, 72 + 16 bytes
+++ copyvec compiled, 29 + 12 bytes
+++ vecsort compiled, 78 + 20 bytes
+++ swap compiled, 22 + 8 bytes
+++ non!-null!-vec compiled, 28 + 12 bytes
+++ mkvect2 compiled, 26 + 12 bytes
Completed FASL files for "vect"



*** Compiling dint ... 


FASLOUT "dint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpdint compiled, 249 + 124 bytes
+++ defint!* compiled, 15 + 28 bytes
+++ indefint!* compiled, 19 + 32 bytes
+++ mkdint compiled, 90 + 68 bytes
+++ mkinfint compiled, 73 + 56 bytes
Completed FASL files for "dint"

The system is about to do a restart...
REDUCE



*** Compiling matrix ... 


FASLOUT "matrix": IN files;  or type in expressions
When all done, execute FASLEND;
+++ matrix compiled, 176 + 80 bytes
+++ nzero compiled, 16 + 16 bytes
+++ matstat compiled, 59 + 60 bytes
+++ formmat compiled, 57 + 20 bytes

*** local variable u in procedure quotematrix not used 
+++ quotematrix not compiled (C version available)
+++ mkscalmat compiled, 6 + 12 bytes
+++ getmatelem compiled, 97 + 72 bytes
+++ setmatelem compiled, 91 + 72 bytes
+++ matlength compiled, 26 + 36 bytes
+++ matrixmap compiled, 147 + 44 bytes
Completed FASL files for "matrix"



*** Compiling matsm ... 


FASLOUT "matsm": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable v in procedure matsm* not used 
+++ matsm!* compiled, 4 + 16 bytes
+++ matsm!*1 compiled, 115 + 24 bytes
+++ matsm compiled, 31 + 28 bytes
+++ matsm1 compiled, 473 + 136 bytes
+++ lchk compiled, 28 + 12 bytes
+++ addm compiled, 50 + 24 bytes
+++ addm1 compiled, 36 + 28 bytes
+++ tp compiled, 4 + 16 bytes
+++ tp1 compiled, 44 + 8 bytes
+++ scalprod compiled, 29 + 36 bytes
+++ multm compiled, 111 + 20 bytes
+++ multsm compiled, 111 + 16 bytes
+++ matsub compiled, 111 + 16 bytes
Completed FASL files for "matsm"



*** Compiling matpri ... 


FASLOUT "matpri": IN files;  or type in expressions
When all done, execute FASLEND;
+++ setmatpri compiled, 4 + 12 bytes
+++ matpri compiled, 4 + 12 bytes
+++ matpri1 compiled, 848 + 136 bytes
+++ matpri2 compiled, 75 + 76 bytes
Completed FASL files for "matpri"



*** Compiling extops ... 


FASLOUT "extops": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*sf2ex compiled, 39 + 12 bytes
+++ !*ex2sf compiled, 32 + 24 bytes
+++ extmult not compiled (C version available)
+++ extadd compiled, 82 + 20 bytes
+++ ordexp compiled, 27 + 16 bytes
+++ ordexn compiled, 45 + 16 bytes
+++ quotexf!* compiled, 19 + 16 bytes
+++ quotfexf!*1 compiled, 42 + 48 bytes
+++ negex compiled, 18 + 16 bytes
+++ splitup compiled, 35 + 8 bytes
+++ innprodpex compiled, 32 + 16 bytes
+++ innprodp2 not compiled (C version available)
+++ innprodkp compiled, 28 + 12 bytes
+++ subs2chkex compiled, 18 + 12 bytes
+++ subs2chk not compiled (C version available)
Completed FASL files for "extops"



*** Compiling bareiss ... 


FASLOUT "bareiss": IN files;  or type in expressions
When all done, execute FASLEND;
+++ matinverse compiled, 7 + 16 bytes
+++ lnrsolve compiled, 473 + 116 bytes
+++ prsum compiled, 29 + 20 bytes
+++ solvebareiss compiled, 164 + 60 bytes
+++ coeffrow compiled, 34 + 16 bytes
+++ augment compiled, 19 + 12 bytes
+++ generateident compiled, 46 + 12 bytes
+++ normmat compiled, 92 + 24 bytes
+++ sparse_bareiss compiled, 412 + 88 bytes
+++ choose_pivot_rows compiled, 230 + 56 bytes
+++ sparse_backsub compiled, 111 + 32 bytes
+++ quotff compiled, 22 + 28 bytes
Completed FASL files for "bareiss"



*** Compiling det ... 


FASLOUT "det": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpdet compiled, 38 + 56 bytes

*** array $hash redefined 

*** gethash not defined (LOSE flag) 

*** puthash not defined (LOSE flag) 

*** clrhash not defined (LOSE flag) 
+++ detq compiled, 44 + 32 bytes
+++ detq1 compiled, 97 + 48 bytes
+++ twomem compiled, 7 + 12 bytes
+++ bareiss!-det compiled, 214 + 96 bytes
+++ simptrace compiled, 50 + 44 bytes
Completed FASL files for "det"



*** Compiling glmat ... 


FASLOUT "glmat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ clnrsolve compiled, 5 + 16 bytes
+++ minv compiled, 4 + 16 bytes
+++ matinv compiled, 290 + 76 bytes
+++ singularchk compiled, 6 + 12 bytes
+++ mateigen compiled, 661 + 116 bytes
+++ mateigen1 compiled, 348 + 44 bytes
+++ reduce!-mod!-eig compiled, 90 + 28 bytes
+++ reduce!-mod!-eigf compiled, 21 + 32 bytes
+++ reduce!-eival!-powers compiled, 21 + 16 bytes
+++ reduce!-eival!-powers1 compiled, 69 + 28 bytes
+++ detex compiled, 100 + 40 bytes
+++ mkglimat compiled, 45 + 28 bytes
+++ glmatterm compiled, 50 + 12 bytes
+++ mkgleig compiled, 55 + 40 bytes
+++ glsoleig compiled, 61 + 20 bytes
+++ c!:extmult compiled, 61 + 28 bytes
+++ c!:subs2multf compiled, 29 + 44 bytes
+++ c!:extadd compiled, 64 + 16 bytes
+++ c!:ordexp not compiled (C version available)
+++ c!:ordexn not compiled (C version available)
+++ c!:ordxp not compiled (C version available)
Completed FASL files for "glmat"



*** Compiling nullsp ... 


FASLOUT "nullsp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ nullspace!-eval compiled, 254 + 60 bytes
+++ nullspace!-alg compiled, 275 + 44 bytes
+++ nullspace!-elim compiled, 427 + 60 bytes
Completed FASL files for "nullsp"



*** Compiling rank ... 


FASLOUT "rank": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rank!-eval compiled, 210 + 68 bytes
+++ rank!-matrix compiled, 90 + 32 bytes
Completed FASL files for "rank"



*** Compiling nestdom ... 


FASLOUT "nestdom": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ident compiled, 1 + 8 bytes
+++ !*i2nest compiled, 17 + 24 bytes
+++ rn2nest compiled, 15 + 20 bytes
+++ nestcnv compiled, 9 + 24 bytes
+++ nestminusp!: compiled, 27 + 20 bytes
+++ sq2nestedf compiled, 9 + 20 bytes
+++ nest2op!: compiled, 258 + 48 bytes
+++ nestplus!: compiled, 6 + 16 bytes
+++ nesttimes!: compiled, 6 + 16 bytes
+++ lambda_2xe4es7asmue compiled, 6 + 16 bytes
+++ nestdifference!: compiled, 7 + 16 bytes
+++ nestdivide!: compiled, 9 + 20 bytes
+++ nestquotient!: compiled, 6 + 16 bytes
+++ nestzerop!: compiled, 14 + 12 bytes
+++ nestonep!: compiled, 21 + 16 bytes
+++ setnest compiled, 12 + 24 bytes
+++ simpco compiled, 38 + 36 bytes
+++ nestprep!: compiled, 26 + 24 bytes
Completed FASL files for "nestdom"



*** Compiling resultnt ... 


FASLOUT "resultnt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpresultant compiled, 32 + 52 bytes
+++ resultant compiled, 62 + 36 bytes
+++ resultantsq compiled, 183 + 68 bytes
+++ coefflist compiled, 32 + 12 bytes
+++ polyresultantf compiled, 199 + 52 bytes
+++ lcr compiled, 14 + 8 bytes
+++ ldegr compiled, 15 + 12 bytes
+++ pseudo_remf compiled, 15 + 28 bytes
+++ bezout_resultant compiled, 281 + 56 bytes
+++ !*sf2exb compiled, 32 + 20 bytes
+++ b!:extmult compiled, 60 + 28 bytes
+++ b!:extadd compiled, 64 + 16 bytes
+++ b!:ordexp compiled, 22 + 12 bytes
+++ b!:ordexn compiled, 45 + 12 bytes
Completed FASL files for "resultnt"



*** Compiling cofactor ... 


FASLOUT "cofactor": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cofactorq compiled, 115 + 68 bytes
+++ simpcofactor compiled, 15 + 28 bytes
Completed FASL files for "cofactor"

The system is about to do a restart...
REDUCE



*** Compiling rlisp88 ... 


FASLOUT "rlisp88": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rlisp88_on compiled, 148 + 168 bytes
+++ rlisp88_off compiled, 177 + 188 bytes
Completed FASL files for "rlisp88"



*** Compiling for88 ... 


FASLOUT "for88": IN files;  or type in expressions
When all done, execute FASLEND;
+++ forstat88 compiled, 42 + 56 bytes
+++ forfrag compiled, 67 + 64 bytes
+++ erroreval compiled, 13 + 20 bytes
+++ eachfrag compiled, 26 + 40 bytes
+++ fortail compiled, 99 + 72 bytes
+++ formfor88 compiled, 137 + 48 bytes
+++ for88_ow2q5nhs9ts3 compiled, 865 + 268 bytes
+++ forcond compiled, 18 + 16 bytes
+++ forprog compiled, 5 + 16 bytes
+++ fornilchk compiled, 21 + 12 bytes
+++ max2!* compiled, 7 + 8 bytes
+++ min2!* compiled, 7 + 8 bytes
+++ null2zero compiled, 5 + 12 bytes
+++ mkfn compiled, 14 + 12 bytes
Completed FASL files for "for88"



*** Compiling loops88 ... 


FASLOUT "loops88": IN files;  or type in expressions
When all done, execute FASLEND;
+++ repeatstat88 compiled, 74 + 56 bytes

*** local variable lab in procedure repeat88 not used 
+++ repeat88_sxv4moix5gcc compiled, 73 + 60 bytes
+++ remcomma!* compiled, 6 + 12 bytes
+++ x!-car compiled, 5 + 8 bytes
+++ x!-cdr compiled, 6 + 8 bytes
+++ formrepeat88 compiled, 96 + 28 bytes
+++ whilstat88 compiled, 74 + 56 bytes

*** local variable lab in procedure while88 not used 
+++ while88_rnr2lznuuuc9 compiled, 124 + 88 bytes
+++ formwhile88 compiled, 96 + 28 bytes
Completed FASL files for "loops88"



*** Compiling bquote ... 


FASLOUT "bquote": IN files;  or type in expressions
When all done, execute FASLEND;
+++ tokbquote compiled, 13 + 36 bytes

*** local variable vars in procedure formbquote not used 

*** local variable mode in procedure formbquote not used 
+++ formbquote compiled, 4 + 12 bytes
+++ mkbquote compiled, 87 + 48 bytes
+++ bquotstat compiled, 7 + 20 bytes
+++ rl2l compiled, 66 + 20 bytes
Completed FASL files for "bquote"



*** Compiling comment ... 


FASLOUT "comment": IN files;  or type in expressions
When all done, execute FASLEND;

*** /* redefined 
Completed FASL files for "comment"



*** Compiling rvector ... 


FASLOUT "rvector": IN files;  or type in expressions
When all done, execute FASLEND;
+++ xreadvec compiled, 54 + 56 bytes

*** [ redefined 

*** [ redefined 

*** ] redefined 

*** ] redefined 
+++ vec!* compiled, 31 + 12 bytes
+++ getvect compiled, 13 + 24 bytes
+++ expandgetv compiled, 18 + 20 bytes
+++ putvect compiled, 23 + 28 bytes
+++ expandputv compiled, 32 + 28 bytes
+++ evalvecarg compiled, 19 + 16 bytes
+++ mkar1 compiled, 33 + 12 bytes
+++ array_4ricxr02hxs9 compiled, 9 + 16 bytes
Completed FASL files for "rvector"



*** Compiling mstruct ... 


FASLOUT "mstruct": IN files;  or type in expressions
When all done, execute FASLEND;
+++ defstruct_b2wkaybmofgd compiled, 154 + 52 bytes
+++ get_defstruct_options compiled, 123 + 44 bytes
+++ explodeid compiled, 49 + 20 bytes
+++ build_defstruct_constructor_macro compiled, 99 + 56 bytes
+++ mklist compiled, 4 + 12 bytes
+++ defstruct_constructor compiled, 40 + 12 bytes
+++ find_struct_key compiled, 21 + 12 bytes
+++ defstructvector compiled, 34 + 12 bytes
+++ build_defstruct_predicate_function compiled, 20 + 36 bytes
+++ build_defstruct_accessor_macro compiled, 17 + 28 bytes
+++ structfetch_2rscjhhh4y44 compiled, 12 + 20 bytes
+++ rsetf_728plgnhvpxa compiled, 8 + 12 bytes
+++ expandrsetf compiled, 60 + 44 bytes
Completed FASL files for "mstruct"



*** Compiling records ... 


FASLOUT "records": IN files;  or type in expressions
When all done, execute FASLEND;
+++ recordstat compiled, 37 + 40 bytes
+++ recordstat1 compiled, 55 + 56 bytes

*** local variable vars in procedure formrecord not used 

*** local variable mode in procedure formrecord not used 
+++ lambda_90ox64m31p32 compiled, 76 + 64 bytes
+++ formrecord compiled, 6 + 16 bytes
+++ tconc compiled, 29 + 8 bytes
+++ form_structure_specification compiled, 124 + 44 bytes
+++ form_field_specifications compiled, 71 + 24 bytes
+++ form_record_constructor compiled, 49 + 28 bytes
Completed FASL files for "records"



*** Compiling inspect ... 


FASLOUT "inspect": IN files;  or type in expressions
When all done, execute FASLEND;
+++ describe compiled, 124 + 112 bytes
+++ i!&idnewnam compiled, 25 + 32 bytes
+++ i!&recordp compiled, 6 + 16 bytes
+++ i!&record compiled, 7 + 24 bytes
+++ i!&recordinstp compiled, 49 + 28 bytes
+++ i!&recordinst compiled, 37 + 44 bytes
+++ i!&functionp compiled, 9 + 16 bytes
+++ i!&function compiled, 38 + 48 bytes
+++ i!&function!-smacro compiled, 69 + 60 bytes
+++ i!&function!-expr compiled, 65 + 56 bytes

*** local variable d in procedure i&function-fexpr not used 
+++ i!&function!-fexpr compiled, 22 + 32 bytes

*** local variable d in procedure i&function-macro not used 
+++ i!&function!-macro compiled, 22 + 32 bytes
+++ i!&whereis compiled, 16 + 32 bytes
+++ i!&constantp compiled as link to constantp
+++ i!&id compiled, 22 + 36 bytes
+++ i!&id1 compiled, 43 + 48 bytes
+++ i!&constant compiled, 5 + 20 bytes
+++ i!&modulep compiled, 4 + 12 bytes
+++ i!&module compiled, 50 + 40 bytes
+++ i!&module1 compiled, 102 + 72 bytes
+++ i!&module2 compiled, 22 + 24 bytes
+++ i!&dcomp compiled, 13 + 20 bytes
+++ i!&dt compiled, 12 + 16 bytes
+++ i!&sdt compiled, 12 + 16 bytes
+++ i!&moduleb compiled, 37 + 28 bytes
+++ i!&dump compiled, 62 + 28 bytes
+++ i!&makelines compiled, 34 + 16 bytes
+++ i!&spcount compiled, 14 + 16 bytes
+++ i!&delspace compiled, 20 + 12 bytes
+++ i!&prn compiled, 18 + 12 bytes
+++ i!&makecomment compiled, 15 + 28 bytes
+++ nformproc compiled, 62 + 44 bytes

*** local variable vars in procedure formmodule not used 

*** local variable mode in procedure formmodule not used 
+++ formmodule compiled, 66 + 48 bytes
+++ formglobalfluid compiled, 80 + 64 bytes
+++ fmtcmt compiled, 252 + 76 bytes
+++ fmtblankline compiled, 18 + 20 bytes
+++ fmtfulllineof compiled, 18 + 12 bytes
+++ fmtremoveline compiled, 13 + 12 bytes
+++ fmtdumptok compiled, 59 + 16 bytes
Completed FASL files for "inspect"

The system is about to do a restart...
REDUCE



*** Compiling rprint ... 


FASLOUT "rprint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rprint compiled, 47 + 60 bytes
+++ rprin1 compiled, 31 + 44 bytes
+++ mprino compiled, 7 + 16 bytes
+++ mprino1 compiled, 228 + 116 bytes

*** local variable u in procedure strangeop not used 
+++ strangeop compiled, 1 + 8 bytes
+++ mprargs compiled, 22 + 36 bytes
+++ inprinox compiled, 33 + 40 bytes
+++ inprino compiled, 100 + 72 bytes
+++ oprino compiled, 31 + 28 bytes
+++ prin2ox compiled, 15 + 16 bytes
+++ explodex compiled, 27 + 12 bytes
+++ explodex1 compiled, 28 + 20 bytes
+++ explodey compiled, 47 + 16 bytes
+++ check!-downcase compiled, 14 + 12 bytes
+++ prinox compiled, 23 + 20 bytes
+++ omark compiled, 9 + 12 bytes
+++ omarko compiled, 5 + 16 bytes
+++ comprox compiled, 53 + 32 bytes
+++ rlistatp compiled, 7 + 16 bytes
+++ rlpri compiled, 18 + 40 bytes
+++ condox compiled, 89 + 72 bytes
+++ blockox compiled, 83 + 72 bytes
+++ retox compiled, 24 + 40 bytes
+++ varprx compiled, 47 + 48 bytes
+++ progox compiled, 42 + 16 bytes
+++ labchk compiled, 31 + 12 bytes
+++ gox compiled, 5 + 20 bytes
+++ labox compiled, 5 + 20 bytes
+++ quotoxx compiled, 62 + 60 bytes
+++ quotox compiled, 12 + 24 bytes
+++ prinsox compiled, 51 + 52 bytes
+++ prognox compiled, 33 + 48 bytes
+++ listox compiled, 33 + 48 bytes
+++ repeatox compiled, 26 + 44 bytes
+++ whileox compiled, 26 + 44 bytes
+++ procox compiled, 27 + 40 bytes
+++ procox1 compiled, 27 + 48 bytes
+++ proceox compiled, 41 + 44 bytes
+++ proceox1 compiled, 55 + 68 bytes
+++ proceox0 compiled, 50 + 16 bytes
+++ deox compiled, 10 + 16 bytes
+++ dsox compiled, 10 + 16 bytes
+++ stringox compiled, 7 + 16 bytes
+++ lambdox compiled, 13 + 28 bytes
+++ eachox compiled, 16 + 24 bytes
+++ forox compiled, 65 + 64 bytes
+++ forallox compiled, 48 + 60 bytes
+++ aevalox compiled, 4 + 16 bytes
+++ aevalox1 compiled, 44 + 16 bytes
+++ minuspox compiled, 17 + 24 bytes
+++ princom compiled, 181 + 52 bytes
+++ addblanks compiled, 18 + 16 bytes
+++ addmarks compiled, 43 + 32 bytes
+++ prinos compiled, 20 + 32 bytes
+++ prinoy compiled, 65 + 40 bytes
+++ spaceleft compiled, 59 + 28 bytes
+++ prinom compiled, 135 + 80 bytes
+++ chars2 compiled, 4 + 16 bytes
+++ chars21 compiled, 12 + 12 bytes
+++ charspace compiled, 51 + 20 bytes
+++ spaces20x compiled, 13 + 20 bytes
+++ prin2rox compiled, 135 + 60 bytes
+++ nospace compiled, 37 + 28 bytes
+++ breakp compiled, 5 + 12 bytes
+++ stringspace compiled, 18 + 16 bytes
+++ prin20x compiled, 9 + 16 bytes
+++ terpri0x compiled, 9 + 16 bytes
Completed FASL files for "rprint"

The system is about to do a restart...
REDUCE



*** Compiling fmprint ... 


FASLOUT "fmprint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fmp!-switch compiled, 26 + 28 bytes
+++ fancy!-out!-header compiled, 6 + 20 bytes
+++ fancy!-out!-trailer compiled, 7 + 20 bytes
+++ fancy!-tex compiled, 22 + 24 bytes
+++ fancy!-out!-item compiled, 114 + 92 bytes
+++ set!-fancymode compiled, 27 + 52 bytes
+++ fancy!-output compiled, 43 + 56 bytes
+++ fancy!-flush compiled, 58 + 48 bytes
+++ fancy!-special!-symbol compiled, 17 + 24 bytes
+++ fancy!-prin2 compiled, 4 + 12 bytes
+++ fancy!-prin2!* compiled, 151 + 88 bytes
+++ fancy!-last!-symbol compiled, 6 + 12 bytes
+++ red!-char!-downcase not compiled (C version available)
+++ fancy!-prin2number compiled, 16 + 24 bytes
+++ fancy!-prin2number1 compiled, 38 + 36 bytes
+++ fancy!-esc compiled, 19 + 16 bytes
+++ fancy!-lower!-digits compiled, 20 + 28 bytes
+++ fancy!-lower!-digits1 compiled, 107 + 28 bytes
+++ fancy!-lower!-digitstrail compiled, 26 + 12 bytes

*** local variable u in procedure fancy-terpri* not used 
+++ fancy!-terpri!* compiled, 21 + 36 bytes
+++ fancy!-level_sdniqcjau4jc compiled, 24 + 40 bytes
+++ fancy!-begin compiled, 4 + 16 bytes
+++ fancy!-end compiled, 9 + 20 bytes
+++ fancy!-mode compiled, 11 + 20 bytes
+++ fancy!-maprin0 compiled, 15 + 28 bytes
+++ fancy!-maprint compiled, 274 + 124 bytes
+++ fancy!-convert compiled, 23 + 32 bytes
+++ fancy!-print!-function!-arguments compiled, 20 + 36 bytes
+++ fancy!-maprint!-atom compiled, 151 + 96 bytes
+++ fancy!-print!-indexlist compiled, 6 + 16 bytes
+++ fancy!-print!-indexlist1 compiled, 45 + 56 bytes
+++ fancy!-print!-one!-index compiled, 45 + 60 bytes
+++ fancy!-in!-brackets compiled, 88 + 60 bytes
+++ fancy!-adjust!-bkt!-levels compiled, 24 + 12 bytes
+++ fancy!-exptpri compiled, 183 + 112 bytes
+++ fancy!-inprint compiled, 272 + 160 bytes
+++ fancy!-inprint1 compiled, 64 + 52 bytes
+++ fancy!-inprint2 compiled, 71 + 52 bytes

*** local variable p in procedure fancy-inprintlist not used 
+++ fancy!-inprintlist compiled, 81 + 52 bytes
+++ fancy!-oprin compiled, 94 + 88 bytes
+++ fancy!-condpri0 compiled, 4 + 16 bytes
+++ fancy!-condpri compiled, 94 + 68 bytes
+++ fancy!-revalpri compiled, 5 + 16 bytes
+++ fancy!-unquote compiled, 44 + 16 bytes
+++ fancy!-patpri compiled, 15 + 24 bytes
+++ fancy!-boolvalpri compiled, 4 + 12 bytes
+++ fancy!-quotpri compiled, 72 + 60 bytes
+++ fancy!-maprint!-tex!-bkt compiled, 74 + 64 bytes
+++ fancy!-fail compiled, 9 + 24 bytes
+++ fancy!-prinfit compiled, 141 + 76 bytes
+++ print_format compiled, 14 + 16 bytes
+++ fancy!-print!-format compiled, 50 + 32 bytes

*** local variable y in procedure fancy-print-format1 not used 
+++ fancy!-print!-format1 compiled, 128 + 64 bytes
+++ fancy!-prefix!-operator compiled, 28 + 32 bytes
+++ fancy!-sqrtpri compiled, 5 + 16 bytes
+++ fancy!-sqrtpri!* compiled, 57 + 60 bytes
+++ fancy!-sub compiled, 108 + 96 bytes

*** local variable n in procedure fancy-factorial not used 
+++ fancy!-factorial compiled, 47 + 60 bytes

*** local variable n in procedure fancy-binomial not used 
+++ fancy!-binomial compiled, 54 + 48 bytes
+++ fancy!-intpri compiled, 144 + 96 bytes
+++ fancy!-height compiled, 106 + 40 bytes
+++ fancy!-sumpri!* compiled, 160 + 104 bytes
+++ fancy!-sumpri compiled, 6 + 16 bytes
+++ fancy!-prodpri compiled, 6 + 16 bytes
+++ fancy!-limpri compiled, 88 + 80 bytes
+++ fancy!-listpri compiled, 43 + 56 bytes
+++ fancy!-sqreform compiled, 5 + 16 bytes
+++ fancy!-dfpri compiled, 55 + 56 bytes
+++ fancy!-partialdfpri compiled, 6 + 16 bytes
+++ fancy!-dfpri0 compiled, 151 + 64 bytes

*** local variable l in procedure fancy-dfpriindexed not used 
+++ fancy!-dfpriindexed compiled, 31 + 36 bytes
+++ fancy!-dfpriindexedx compiled, 68 + 16 bytes
+++ fancy!-rdprin compiled, 35 + 32 bytes
+++ fancy!-rdprin1 compiled, 123 + 48 bytes
+++ fancy!-cmpxprin compiled, 39 + 40 bytes
+++ fancy!-dn!:prin compiled, 21 + 20 bytes
+++ fancy!-setmatpri compiled, 4 + 12 bytes
+++ fancy!-matpri compiled, 4 + 12 bytes
+++ fancy!-matpri1 compiled, 16 + 24 bytes
+++ fancy!-matpri2 compiled, 486 + 100 bytes
+++ fancy!-matpri3 compiled, 83 + 56 bytes
+++ fancy!-matpriflat compiled, 21 + 44 bytes

*** local variable p in procedure fancy-matpriflat1 not used 
+++ fancy!-matpriflat1 compiled, 113 + 80 bytes

*** local variable p in procedure fancy-matfit not used 
+++ fancy!-matfit compiled, 129 + 60 bytes
+++ fancy!-bessel compiled, 35 + 36 bytes
+++ fancy!-hypergeometric compiled, 139 + 88 bytes
+++ fancy!-meijerg compiled, 151 + 72 bytes
Completed FASL files for "fmprint"

The system is about to do a restart...
REDUCE



*** Compiling pretty ... 


FASLOUT "pretty": IN files;  or type in expressions
When all done, execute FASLEND;
+++ prettyprint compiled, 8 + 12 bytes
+++ superprintm compiled, 12 + 20 bytes

*** eqcar not defined (LOSE flag) 

*** spaces not defined (LOSE flag) 
+++ superprinm compiled, 103 + 92 bytes
+++ prindent compiled, 325 + 140 bytes
+++ explodes compiled as link to explode
+++ prvector compiled, 73 + 52 bytes
+++ putblank compiled, 28 + 24 bytes
+++ endlist compiled, 5 + 12 bytes
+++ finishpending compiled, 46 + 28 bytes
+++ quotep compiled, 26 + 20 bytes
+++ putch compiled, 64 + 56 bytes
+++ overflow compiled, 300 + 128 bytes
Completed FASL files for "pretty"

The system is about to do a restart...
REDUCE



*** Compiling solve ... 


FASLOUT "solve": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simp!-arbcomplex compiled, 12 + 24 bytes
+++ freeofl compiled, 15 + 12 bytes
+++ allkern compiled, 26 + 16 bytes
+++ topkern compiled, 54 + 20 bytes
+++ coeflis compiled, 46 + 16 bytes
+++ solveeval compiled, 66 + 28 bytes
+++ odesolve!* compiled, 31 + 40 bytes
+++ solveeval1 compiled, 132 + 108 bytes
+++ !*solvelist2solveeqlist compiled, 280 + 76 bytes
+++ solveorder compiled, 75 + 20 bytes
+++ depassoc compiled, 19 + 12 bytes
Completed FASL files for "solve"



*** Compiling solve1 ... 


FASLOUT "solve1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ solve0 compiled, 331 + 140 bytes
+++ basic!-kern compiled, 19 + 16 bytes
+++ basic!-kern1 compiled, 53 + 20 bytes
+++ algebraic!-function compiled, 25 + 28 bytes
+++ allbkern compiled, 27 + 20 bytes
+++ solvevars compiled, 26 + 20 bytes
+++ solutionp compiled, 18 + 16 bytes
+++ root_of_soln_p compiled, 17 + 16 bytes
+++ solveargchk compiled, 20 + 24 bytes
+++ solve!-clean!-info compiled, 187 + 52 bytes
+++ solvesq compiled, 120 + 40 bytes
+++ subfx compiled, 21 + 28 bytes
+++ solvesq1 compiled, 298 + 124 bytes
+++ solvedecomp compiled, 94 + 44 bytes
+++ adjustmul compiled, 52 + 12 bytes
+++ solve1 compiled, 16 + 24 bytes
+++ solve11 compiled, 421 + 172 bytes
+++ solnsmerge compiled, 23 + 12 bytes
+++ getcoeff compiled, 26 + 12 bytes
+++ putcoeff compiled, 45 + 8 bytes
+++ solvehipow compiled, 428 + 116 bytes
+++ solnmerge compiled, 48 + 8 bytes
+++ nilchk compiled, 7 + 12 bytes
+++ solve1test1 compiled, 47 + 20 bytes
+++ solve1test2 compiled, 49 + 24 bytes
+++ solveabs compiled, 35 + 28 bytes
+++ solveexpt compiled, 217 + 124 bytes
+++ solveexpt!-rootsof compiled, 14 + 28 bytes
+++ solveexpt!-logterm compiled, 7 + 20 bytes
+++ solvelog compiled, 24 + 36 bytes
+++ solveinvpat compiled, 120 + 48 bytes
+++ mkexp compiled, 34 + 48 bytes
+++ solvecoeff compiled, 59 + 32 bytes
+++ solveroots compiled, 63 + 56 bytes
+++ solvesys compiled, 85 + 56 bytes
+++ solvemixedsys compiled, 461 + 80 bytes
+++ siftnonlnr compiled, 43 + 12 bytes
+++ nonlnrsys compiled, 13 + 12 bytes
+++ nonlnr compiled, 47 + 20 bytes
+++ mkrootsoftag compiled, 25 + 24 bytes
+++ mkrootsof compiled, 79 + 48 bytes
+++ root_of_eval compiled, 119 + 60 bytes
+++ subrootof compiled, 152 + 48 bytes
+++ polypeval compiled, 38 + 28 bytes
+++ expand_cases compiled, 221 + 36 bytes
+++ expand_case1 compiled, 29 + 16 bytes
+++ expand_merge compiled, 143 + 12 bytes
+++ expand_case2 compiled, 110 + 40 bytes
+++ check_solve_inv_trig compiled, 108 + 84 bytes
+++ is_solution compiled, 100 + 36 bytes
+++ check!-condition compiled, 15 + 20 bytes
Completed FASL files for "solve1"



*** Compiling ppsoln ... 


FASLOUT "ppsoln": IN files;  or type in expressions
When all done, execute FASLEND;
+++ solve!-fractional!-power compiled, 55 + 52 bytes
+++ principle!-of!-powers!-soln compiled, 27 + 20 bytes
+++ pr!-pow!-soln1 compiled, 83 + 80 bytes
+++ check!-solns compiled, 64 + 48 bytes
+++ check!-solns1 compiled, 169 + 76 bytes
+++ check!-solns2 compiled, 21 + 28 bytes
+++ suitable!-expt compiled, 26 + 20 bytes
+++ freevarl compiled, 36 + 24 bytes
+++ varsift compiled, 88 + 40 bytes
+++ numvalue compiled, 159 + 92 bytes
+++ numvchk compiled, 47 + 48 bytes
Completed FASL files for "ppsoln"



*** Compiling solvelnr ... 


FASLOUT "solvelnr": IN files;  or type in expressions
When all done, execute FASLEND;
+++ solvelnrsys compiled, 56 + 56 bytes
+++ exptexpflistp compiled, 11 + 12 bytes
+++ exptexpfp compiled, 28 + 16 bytes
+++ solvesyspost compiled, 420 + 40 bytes
+++ solvecramer compiled as link to glnrsolve
+++ solvesparsecheck compiled, 548 + 88 bytes
+++ solvevarordp compiled, 21 + 8 bytes
+++ solvevaradjust compiled, 83 + 24 bytes
+++ solvesparseprint compiled, 46 + 28 bytes
+++ topkerns compiled, 18 + 12 bytes
+++ solvesparsesort compiled, 38 + 16 bytes
Completed FASL files for "solvelnr"



*** Compiling glsolve ... 


FASLOUT "glsolve": IN files;  or type in expressions
When all done, execute FASLEND;
+++ glnrsolve compiled, 367 + 88 bytes
+++ inconsistency!-chk compiled, 15 + 8 bytes
Completed FASL files for "glsolve"



*** Compiling solvealg ... 


FASLOUT "solvealg": IN files;  or type in expressions
When all done, execute FASLEND;
+++ solvenonlnrsys compiled, 6 + 12 bytes
+++ solvenonlnrsys0 compiled, 267 + 72 bytes
+++ topkernlis compiled, 13 + 12 bytes
+++ solvenonlnrcollectexpt compiled, 78 + 36 bytes
+++ solvenonlnrsyslin compiled, 366 + 76 bytes
+++ solvenonlnrsysone compiled, 24 + 28 bytes
+++ add!-variable!-to!-tagged!-solutions compiled, 86 + 20 bytes
+++ merge!-two!-tagged!-solutions compiled, 23 + 20 bytes
+++ solvenonlnrsyssep compiled, 473 + 56 bytes
+++ solve!-psysp compiled, 15 + 12 bytes
+++ solve!-psysp1 compiled, 34 + 12 bytes
+++ solve!-psysp2 compiled, 16 + 16 bytes
+++ solvenonlnrsys1 compiled, 70 + 72 bytes
+++ solvenonlnrsyspre compiled, 48 + 28 bytes
+++ solvenlnrsimp compiled as link to simp*
+++ lambda_5ecvmqn0s7d8 compiled as link to depends
+++ solvenonlnrsys2 compiled, 408 + 212 bytes
+++ solvealgk0 compiled, 30 + 16 bytes
+++ solvealgk1 compiled, 35 + 16 bytes
+++ solvealgk2 compiled, 53 + 56 bytes
+++ solvealgtest compiled, 6 + 12 bytes
+++ solvealgtest0 compiled, 10 + 20 bytes
+++ solvealgtest1 compiled, 30 + 16 bytes
+++ solvealgvb compiled, 7 + 16 bytes
+++ solvealgvb0 compiled, 24 + 36 bytes
+++ allkernels compiled, 44 + 20 bytes
+++ allkernels1 compiled, 33 + 12 bytes
+++ solvealgexpt compiled, 75 + 56 bytes
+++ solvealgexptgen compiled, 50 + 48 bytes
+++ solve!-gensym compiled, 26 + 24 bytes
+++ solvealgexptgen1 compiled, 193 + 44 bytes
+++ solvealgradx compiled, 14 + 20 bytes
+++ solvealgrad compiled, 90 + 72 bytes
+++ solvealgtrig0 compiled, 85 + 28 bytes
+++ solvealgtrig01 compiled, 31 + 20 bytes
+++ solvealgtrig compiled, 147 + 108 bytes
+++ solvealghyp compiled, 147 + 108 bytes
+++ solvealgtrig2 compiled, 114 + 36 bytes
+++ solvealghyp2 compiled, 121 + 40 bytes
+++ solvealggen compiled, 48 + 60 bytes
+++ solvealgid compiled, 20 + 28 bytes
+++ solvealginner compiled, 39 + 48 bytes
+++ solvealgupd compiled, 195 + 48 bytes
+++ solvealginv compiled, 1174 + 200 bytes
+++ solvealgdepends compiled, 37 + 16 bytes
+++ test_trig compiled, 67 + 48 bytes
+++ test_hyp compiled, 67 + 48 bytes
+++ solvealg!-verify compiled, 196 + 68 bytes
+++ solvealg!-verify1 compiled, 140 + 44 bytes
+++ sublis!-pat compiled, 42 + 16 bytes
+++ sublis!-pat1 compiled, 24 + 16 bytes
+++ solvenonlnrtansub compiled, 83 + 24 bytes
+++ solvenonlnrtansolve compiled, 124 + 96 bytes
+++ solvenonlnrtansolve1 compiled, 41 + 36 bytes
+++ solvenonlnrtanhsub compiled, 83 + 24 bytes
+++ solvenonlnrtanhsolve compiled, 109 + 84 bytes
+++ solvenonlnrtanhsolve1 compiled, 41 + 36 bytes
Completed FASL files for "solvealg"



*** Compiling solvetab ... 


FASLOUT "solvetab": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lambertp compiled, 12 + 16 bytes
+++ solve!-apply!-rules compiled, 60 + 44 bytes
Completed FASL files for "solvetab"



*** Compiling quartic ... 


FASLOUT "quartic": IN files;  or type in expressions
When all done, execute FASLEND;
+++ multfq compiled, 17 + 20 bytes
+++ quotsqf compiled, 16 + 20 bytes
+++ cubertq compiled, 7 + 24 bytes
+++ sqrtq compiled, 7 + 24 bytes
+++ solvequadratic compiled, 128 + 80 bytes
+++ numcoef compiled, 16 + 12 bytes
+++ mkpolyexp2 compiled, 24 + 24 bytes
+++ solvecubic compiled, 386 + 144 bytes
+++ pos_num compiled, 51 + 72 bytes
+++ trigsq compiled, 8 + 20 bytes
+++ all_real compiled, 49 + 56 bytes
+++ real_1 compiled, 22 + 12 bytes
+++ one_real compiled, 35 + 56 bytes
+++ solvequartic compiled, 520 + 136 bytes
Completed FASL files for "quartic"

The system is about to do a restart...
REDUCE



*** Compiling desir ... 


FASLOUT "desir": IN files;  or type in expressions
When all done, execute FASLEND;
+++ deg compiled, 20 + 32 bytes
+++ desir compiled, 520 + 212 bytes
+++ solvalide compiled, 631 + 200 bytes
+++ solvireg compiled, 185 + 116 bytes
+++ altmin compiled, 64 + 36 bytes
+++ valterm compiled, 65 + 52 bytes
+++ standsol compiled, 232 + 88 bytes
+++ sorsol compiled, 400 + 172 bytes
+++ changehom compiled, 239 + 128 bytes
+++ changevar compiled, 234 + 136 bytes
+++ changefonc compiled, 241 + 140 bytes
+++ sorparam compiled, 593 + 172 bytes
+++ sorparamcond compiled, 791 + 176 bytes
+++ solparam compiled, 478 + 128 bytes
+++ solparamcond compiled, 972 + 152 bytes
+++ lectabcoef compiled, 450 + 192 bytes
+++ delire compiled, 698 + 240 bytes
+++ testparam compiled, 82 + 52 bytes
+++ coeffp compiled, 91 + 48 bytes
+++ transformation compiled, 347 + 164 bytes
+++ subsfonc compiled, 201 + 72 bytes
+++ change compiled, 188 + 84 bytes
+++ !&d compiled, 52 + 52 bytes
+++ newton compiled, 583 + 232 bytes
+++ newtonarete compiled, 611 + 204 bytes
+++ squelette compiled, 366 + 132 bytes
+++ polygonenrm compiled, 690 + 172 bytes
+++ nouveauxaj compiled, 290 + 116 bytes
+++ decomplu compiled, 309 + 128 bytes
+++ racinesequ compiled, 332 + 168 bytes
+++ !&w compiled, 65 + 52 bytes
+++ frobenius compiled, 249 + 152 bytes
+++ classement2r compiled, 377 + 136 bytes
+++ classement2rne compiled, 787 + 172 bytes
+++ classement3r compiled, 774 + 124 bytes
+++ class3rne compiled, 272 + 96 bytes
+++ equaind compiled, 636 + 152 bytes
+++ frobeniussimple compiled, 254 + 128 bytes
+++ frobeniusgeneral compiled, 843 + 176 bytes
+++ racine compiled, 87 + 60 bytes
+++ membre compiled, 33 + 24 bytes
Completed FASL files for "desir"

The system is about to do a restart...
REDUCE



*** Compiling ineq ... 


FASLOUT "ineq": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ineqseval!*!* compiled, 18 + 24 bytes
+++ ineqseval!* compiled, 12 + 16 bytes
+++ ineqseval compiled, 369 + 80 bytes
+++ ggvars compiled, 30 + 16 bytes
+++ ggvars1 compiled, 17 + 16 bytes
+++ ggvars2 compiled, 39 + 24 bytes
+++ ggvars3 compiled, 14 + 12 bytes
Completed FASL files for "ineq"



*** Compiling linineq ... 


FASLOUT "linineq": IN files;  or type in expressions
When all done, execute FASLEND;
+++ linineqeval compiled, 1169 + 216 bytes
+++ linineqseval compiled, 86 + 28 bytes
+++ linineqevaltest compiled, 38 + 24 bytes
+++ linineq0 compiled, 66 + 28 bytes
+++ linineqint compiled, 452 + 132 bytes
+++ linineq1 compiled, 928 + 216 bytes
+++ linineq2 compiled, 66 + 60 bytes
+++ linineqnormalize compiled, 116 + 52 bytes
+++ linineqevalmin compiled, 4 + 12 bytes
+++ linineqevalmin1 compiled, 23 + 20 bytes
+++ linineqevalmax compiled, 4 + 12 bytes
+++ linineqevalmax1 compiled, 23 + 20 bytes
+++ sqlessp compiled, 13 + 20 bytes
+++ liqsimp!-maxmin compiled, 4 + 16 bytes
Completed FASL files for "linineq"



*** Compiling liqsimp1 ... 


FASLOUT "liqsimp1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ liqsimp1!-maxmin compiled, 9 + 20 bytes
+++ liqsimp1!-maxmin1 compiled, 44 + 20 bytes
+++ liqsimp1!-reducecases compiled, 158 + 32 bytes
+++ liqsimp1!-check compiled, 11 + 20 bytes
+++ liqsimp1!-check1 compiled, 95 + 28 bytes
+++ liqsimp1!-maxmin1leaf compiled, 53 + 24 bytes
Completed FASL files for "liqsimp1"



*** Compiling liqsimp2 ... 


FASLOUT "liqsimp2": IN files;  or type in expressions
When all done, execute FASLEND;
+++ liqsimp2!-maxmin compiled, 122 + 44 bytes
+++ ql2minmax compiled, 45 + 12 bytes
+++ minmax2ql compiled, 45 + 16 bytes
+++ liqsimp2!-maxmin1 compiled, 24 + 12 bytes
+++ liqsimp2!-reducecases compiled, 275 + 24 bytes
+++ liqsimp2_mk_edges compiled, 23 + 24 bytes
+++ sfnegativep compiled, 22 + 28 bytes
+++ liqsimp2_mk_edges1 compiled, 316 + 60 bytes
+++ liqsimp2_mk_edges_check compiled, 202 + 36 bytes
+++ liqsimp2_mk_edges2 compiled, 31 + 32 bytes
+++ linineqprint1 compiled, 17 + 32 bytes
+++ linineqprint2 compiled, 81 + 44 bytes
+++ linineqprint3 compiled, 51 + 32 bytes
Completed FASL files for "liqsimp2"



*** Compiling polineq ... 


FASLOUT "polineq": IN files;  or type in expressions
When all done, execute FASLEND;
+++ polineqeval compiled, 76 + 28 bytes
+++ polineq0 compiled, 398 + 116 bytes
+++ polineqcheck compiled, 18 + 20 bytes
+++ polineq!-realroots compiled, 186 + 48 bytes
Completed FASL files for "polineq"

The system is about to do a restart...
REDUCE



*** Compiling modsr ... 


FASLOUT "modsr": IN files;  or type in expressions
When all done, execute FASLEND;
+++ general!-evaluate!-mod!-p compiled, 53 + 28 bytes
+++ general!-horner!-rule!-mod!-p compiled, 66 + 20 bytes
+++ general!-expt!-mod!-p compiled, 30 + 24 bytes
+++ general!-monic!-mod!-p compiled, 34 + 28 bytes
+++ general!-quotient!-mod!-p compiled, 64 + 40 bytes
+++ general!-xquotient!-mod!-p compiled, 82 + 40 bytes
+++ general!-negate!-term compiled, 5 + 12 bytes
+++ general!-remainder!-mod!-p compiled, 24 + 20 bytes
+++ general!-xremainder!-mod!-p compiled, 65 + 36 bytes
+++ general!-multiply!-by!-constant!-mod!-p compiled, 29 + 24 bytes
+++ general!-gcd!-mod!-p compiled, 40 + 28 bytes
+++ general!-ordered!-gcd!-mod!-p compiled, 49 + 28 bytes
+++ general!-reduce!-degree!-mod!-p compiled, 39 + 36 bytes
+++ modp compiled, 11 + 8 bytes
+++ lowestdeg compiled, 25 + 12 bytes
+++ reduce!-mod!-p!* compiled, 10 + 20 bytes
+++ moduntag compiled, 25 + 12 bytes
+++ safe!-modrecip compiled, 37 + 40 bytes
Completed FASL files for "modsr"



*** Compiling modsqrt ... 


FASLOUT "modsqrt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ modsqrt compiled, 42 + 44 bytes
+++ modsqrt1 compiled, 53 + 24 bytes
+++ modsqrt2 compiled, 154 + 52 bytes
+++ modsqrt!* compiled, 5 + 20 bytes
+++ legendre!-symbol compiled, 9 + 16 bytes
+++ legendre_symbol1 compiled, 91 + 80 bytes
Completed FASL files for "modsqrt"



*** Compiling modroots ... 


FASLOUT "modroots": IN files;  or type in expressions
When all done, execute FASLEND;
+++ modroots0 compiled, 119 + 32 bytes
+++ modroots1 compiled, 143 + 44 bytes
+++ modroots2 compiled, 63 + 32 bytes
+++ x!*!*p!-w compiled, 8 + 20 bytes
+++ modroots3 compiled, 72 + 56 bytes
+++ modroots31 compiled, 222 + 92 bytes
+++ modroots4 compiled, 39 + 24 bytes
Completed FASL files for "modroots"



*** Compiling modsolve ... 


FASLOUT "modsolve": IN files;  or type in expressions
When all done, execute FASLEND;
+++ msolve compiled, 125 + 52 bytes
+++ msolve!-result compiled, 127 + 20 bytes
+++ msolvesys compiled, 279 + 56 bytes
+++ msolve!-poly1 compiled, 197 + 76 bytes
+++ msolve!-poly compiled, 60 + 44 bytes
+++ msolve!-polyn compiled, 150 + 28 bytes
+++ msolve!-polya compiled, 87 + 48 bytes
+++ msolve!-psys compiled, 321 + 76 bytes
+++ msolve!-psys1 compiled, 85 + 24 bytes
Completed FASL files for "modsolve"

The system is about to do a restart...
REDUCE



*** Compiling rsolve ... 


FASLOUT "rsolve": IN files;  or type in expressions
When all done, execute FASLEND;
+++ i_solve!-eval compiled, 11 + 24 bytes
+++ r_solve!-eval compiled, 150 + 92 bytes
+++ tr_write compiled, 21 + 16 bytes
+++ r_solve!-eval1 compiled, 127 + 96 bytes
+++ r_solve!-output compiled, 466 + 64 bytes
+++ makeqn!-maybe compiled, 8 + 12 bytes
+++ !*n2a compiled, 8 + 12 bytes
+++ mod!# not compiled (C version available)
+++ mod!/ compiled, 15 + 24 bytes
+++ r_solve compiled, 852 + 180 bytes
+++ resimpf compiled, 11 + 20 bytes
+++ balance_mod compiled, 11 + 8 bytes
+++ eval_uni_poly compiled, 48 + 8 bytes
+++ eval_uni_poly_q compiled, 57 + 24 bytes
+++ mod_eval_uni_poly compiled, 61 + 24 bytes
Completed FASL files for "rsolve"

The system is about to do a restart...
REDUCE



*** Compiling algint ... 


FASLOUT "algint": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable u in procedure maninp not used 

*** local variable v in procedure maninp not used 

*** local variable w in procedure maninp not used 
+++ superprint compiled as link to prettyprint

*** local variable u in procedure tayshorten not used 
Completed FASL files for "algint"



*** Compiling afactor ... 


FASLOUT "afactor": IN files;  or type in expressions
When all done, execute FASLEND;
+++ afactor compiled, 60 + 52 bytes
+++ algfactor2 compiled, 125 + 60 bytes
+++ algfactor3 compiled, 117 + 48 bytes
+++ algfactor compiled, 343 + 88 bytes
+++ demonise compiled, 48 + 36 bytes
+++ gcdinonevar compiled, 94 + 52 bytes
+++ makemonic compiled, 79 + 20 bytes
+++ jfactor compiled, 160 + 80 bytes
Completed FASL files for "afactor"



*** Compiling algfn ... 


FASLOUT "algfn": IN files;  or type in expressions
When all done, execute FASLEND;
+++ algfnp compiled, 62 + 56 bytes
+++ algfnpl compiled, 15 + 12 bytes
+++ algfnsq compiled, 10 + 12 bytes
+++ algfnsf compiled, 22 + 12 bytes
+++ algint!-ratnump compiled, 20 + 12 bytes
+++ algebraicsf compiled, 17 + 12 bytes
+++ algebraicp compiled, 18 + 24 bytes
Completed FASL files for "algfn"



*** Compiling antisubs ... 


FASLOUT "antisubs": IN files;  or type in expressions
When all done, execute FASLEND;
+++ antisubs compiled, 40 + 20 bytes
+++ anti2 compiled, 151 + 76 bytes
+++ detimes compiled, 56 + 36 bytes
+++ deplist compiled, 23 + 16 bytes
+++ deplus compiled, 63 + 36 bytes
Completed FASL files for "antisubs"



*** Compiling coates ... 


FASLOUT "coates": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable x in procedure coates not used 
+++ coates compiled, 30 + 28 bytes
+++ coates!-real compiled, 270 + 104 bytes
+++ coatesmodule compiled, 180 + 100 bytes
+++ makeinitialbasis compiled, 77 + 36 bytes
+++ multbyallcombinations compiled, 14 + 12 bytes
+++ multsql compiled, 16 + 16 bytes
+++ checkpoles compiled, 76 + 60 bytes
+++ coates!-hpfsd compiled, 792 + 132 bytes
+++ findzeros compiled, 625 + 208 bytes
Completed FASL files for "coates"



*** Compiling coatesid ... 


FASLOUT "coatesid": IN files;  or type in expressions
When all done, execute FASLEND;
+++ coatessolve compiled, 91 + 56 bytes
+++ coatesmatrix compiled, 476 + 124 bytes
+++ printmatrix compiled, 53 + 28 bytes
+++ vecprod compiled, 36 + 24 bytes
+++ coates!-lineq compiled, 101 + 36 bytes
+++ jhdsolve compiled, 577 + 112 bytes
+++ desparse compiled, 282 + 44 bytes
+++ astore compiled, 8 + 8 bytes
Completed FASL files for "coatesid"



*** Compiling findmagc ... 


FASLOUT "findmagc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ findmagic compiled, 278 + 76 bytes
Completed FASL files for "findmagc"



*** Compiling findres ... 


FASLOUT "findres": IN files;  or type in expressions
When all done, execute FASLEND;
+++ find!-residue compiled, 273 + 168 bytes
+++ residues!-at!-new!-point compiled, 169 + 140 bytes
+++ findpoles compiled, 84 + 48 bytes
Completed FASL files for "findres"



*** Compiling finitise ... 


FASLOUT "finitise": IN files;  or type in expressions
When all done, execute FASLEND;
+++ finitise compiled, 346 + 68 bytes
+++ multiplicity!-factor compiled, 34 + 20 bytes
Completed FASL files for "finitise"



*** Compiling fixsubf ... 


FASLOUT "fixsubf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ algint!-subf compiled as link to algint-subf1
+++ algint!-subsq compiled, 11 + 20 bytes
+++ algint!-subf1 compiled, 320 + 96 bytes
+++ algint!-subsublis compiled, 68 + 20 bytes
+++ algint!-subsubf compiled, 153 + 48 bytes
+++ algint!-simpsub compiled, 95 + 72 bytes
Completed FASL files for "fixsubf"



*** Compiling fracdi ... 


FASLOUT "fracdi": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fdi!-print compiled, 22 + 32 bytes
+++ fdi!-revertsq compiled, 14 + 20 bytes
+++ fdi!-revert compiled, 21 + 28 bytes
+++ fdi!-revertpow compiled, 55 + 64 bytes
+++ fdi!-upgrade compiled, 162 + 76 bytes
+++ fdi!-upgr2 compiled, 67 + 60 bytes
+++ fractional!-degree!-at!-infinity compiled, 12 + 20 bytes
+++ fdi2 compiled, 51 + 48 bytes
+++ lcmn compiled, 9 + 8 bytes
Completed FASL files for "fracdi"



*** Compiling genus ... 


FASLOUT "genus": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpgenus compiled, 135 + 100 bytes
+++ !*n2sq compiled, 11 + 16 bytes
+++ differentials!-1 compiled, 601 + 184 bytes
Completed FASL files for "genus"



*** Compiling intbasis ... 


FASLOUT "intbasis": IN files;  or type in expressions
When all done, execute FASLEND;
+++ deleteplace compiled, 24 + 16 bytes
+++ completeplaces compiled, 91 + 28 bytes
+++ completeplaces2 compiled, 49 + 48 bytes
+++ intbasisreduction compiled, 364 + 152 bytes
+++ integralbasis compiled, 275 + 80 bytes
+++ cl6roweval compiled, 145 + 44 bytes
+++ replicatebasis compiled, 71 + 40 bytes
+++ shorten!-basis compiled, 46 + 32 bytes
Completed FASL files for "intbasis"



*** Compiling jhddiff ... 


FASLOUT "jhddiff": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*diffsq compiled, 21 + 28 bytes
+++ !*difff compiled, 56 + 28 bytes
+++ !*diffp compiled, 47 + 48 bytes
Completed FASL files for "jhddiff"



*** Compiling jhdriver ... 


FASLOUT "jhdriver": IN files;  or type in expressions
When all done, execute FASLEND;
+++ operateon compiled, 70 + 56 bytes
+++ findfunction compiled, 179 + 88 bytes
+++ correct!-mults compiled, 37 + 16 bytes
+++ algebraiccase compiled, 265 + 168 bytes
+++ doalggeom compiled, 78 + 68 bytes
+++ algebraic!-divisor compiled, 10 + 20 bytes
+++ coates!-multiple compiled, 75 + 44 bytes
+++ mazurp compiled, 42 + 44 bytes
Completed FASL files for "jhdriver"



*** Compiling linrel ... 


FASLOUT "linrel": IN files;  or type in expressions
When all done, execute FASLEND;
+++ firstlinearrelation compiled, 176 + 36 bytes
Completed FASL files for "linrel"



*** Compiling log2atan ... 


FASLOUT "log2atan": IN files;  or type in expressions
When all done, execute FASLEND;
+++ combine!-logs compiled, 291 + 152 bytes
+++ split!-real!-imag compiled, 147 + 52 bytes
+++ mul!-complex compiled, 23 + 20 bytes
+++ exp!-complex compiled, 33 + 20 bytes
+++ split!-real!-imagvar compiled, 164 + 84 bytes
Completed FASL files for "log2atan"



*** Compiling maninp ... 


FASLOUT "maninp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ findmaninparm compiled, 52 + 40 bytes
Completed FASL files for "maninp"



*** Compiling modify ... 


FASLOUT "modify": IN files;  or type in expressions
When all done, execute FASLEND;
+++ modify!-sqrts compiled, 163 + 80 bytes
+++ combine!-sqrts compiled, 124 + 64 bytes
+++ modify2 compiled, 185 + 64 bytes
+++ modify!-quotf compiled, 49 + 44 bytes
Completed FASL files for "modify"



*** Compiling modlineq ... 


FASLOUT "modlineq": IN files;  or type in expressions
When all done, execute FASLEND;
+++ modp!-nth!-root compiled, 33 + 12 bytes
+++ modp!-sqrt compiled, 71 + 32 bytes
+++ check!-lineq compiled, 484 + 116 bytes
+++ varsinsq compiled, 7 + 12 bytes
+++ modp!-subst compiled, 11 + 12 bytes
+++ modp!-subf compiled, 42 + 20 bytes
+++ mod!-jhdsolve compiled, 473 + 40 bytes
Completed FASL files for "modlineq"



*** Compiling nagell ... 


FASLOUT "nagell": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lutz!-nagell compiled, 47 + 32 bytes
+++ lutz!-nagell!-2 compiled, 141 + 76 bytes
+++ wst!-convert compiled, 14 + 20 bytes
+++ elliptic!-sum compiled, 33 + 16 bytes
+++ elliptic!-multiply compiled, 56 + 36 bytes
+++ elliptic!-add compiled, 350 + 92 bytes
+++ infinitep compiled, 11 + 16 bytes
+++ lutz!-nagell!-bound compiled, 328 + 100 bytes
+++ lutz!-reduce compiled, 60 + 44 bytes
+++ lutz!-reduce2 compiled, 93 + 28 bytes
Completed FASL files for "nagell"



*** Compiling nbasis ... 


FASLOUT "nbasis": IN files;  or type in expressions
When all done, execute FASLEND;
+++ normalbasis compiled, 462 + 156 bytes
+++ !*fmksp compiled, 13 + 20 bytes
+++ cl8roweval compiled, 112 + 44 bytes
Completed FASL files for "nbasis"



*** Compiling places ... 


FASLOUT "places": IN files;  or type in expressions
When all done, execute FASLEND;
+++ getsqrtsfromplaces compiled, 287 + 100 bytes
+++ sqrtsinplaces compiled, 44 + 16 bytes
+++ get!-correct!-sqrts compiled, 22 + 28 bytes
+++ basicplace compiled, 20 + 12 bytes
+++ extenplace compiled, 10 + 8 bytes
+++ equalplace compiled, 28 + 12 bytes
+++ remove!-extra!-sqrts compiled, 128 + 28 bytes
+++ printplace compiled, 177 + 104 bytes
+++ degreein compiled, 23 + 16 bytes
Completed FASL files for "places"



*** Compiling precoats ... 


FASLOUT "precoats": IN files;  or type in expressions
When all done, execute FASLEND;
+++ infsubs compiled, 15 + 12 bytes

*** local variable movedtoinfinity in procedure precoates not used 
+++ precoates compiled, 348 + 152 bytes
+++ dlist compiled, 16 + 8 bytes
+++ debranch compiled, 260 + 52 bytes
+++ pbuild compiled, 94 + 92 bytes
+++ findord compiled, 39 + 44 bytes
+++ mkord1 compiled, 42 + 48 bytes
Completed FASL files for "precoats"



*** Compiling removecm ... 


FASLOUT "removecm": IN files;  or type in expressions
When all done, execute FASLEND;
+++ removecmsq compiled, 8 + 12 bytes
+++ removecmsf compiled, 68 + 40 bytes
+++ cmgcdf compiled, 79 + 28 bytes
+++ remove!-maxdeg compiled, 31 + 20 bytes
+++ cmgcdf2 compiled, 35 + 32 bytes
+++ collectterms compiled, 70 + 20 bytes
+++ remove!-constantp compiled, 35 + 24 bytes
+++ remove!-const!-content compiled, 39 + 20 bytes
Completed FASL files for "removecm"



*** Compiling sqfrnorm ... 


FASLOUT "sqfrnorm": IN files;  or type in expressions
When all done, execute FASLEND;
+++ res!-sqrt compiled, 128 + 36 bytes
+++ sqfr!-norm2 compiled, 101 + 84 bytes
+++ nsqfrp compiled, 43 + 36 bytes
+++ ldegvar compiled, 32 + 16 bytes
+++ modeval compiled, 80 + 32 bytes
+++ modevalvar compiled, 71 + 64 bytes
Completed FASL files for "sqfrnorm"



*** Compiling substns ... 


FASLOUT "substns": IN files;  or type in expressions
When all done, execute FASLEND;
+++ xsubstitutep compiled, 4 + 16 bytes
+++ xsubstitutep2 compiled, 15 + 8 bytes
+++ xsubstitutesq compiled, 11 + 20 bytes
+++ substitutevec compiled, 27 + 16 bytes
+++ substitutesq compiled, 126 + 28 bytes
+++ subzero compiled, 20 + 24 bytes
+++ subzero2 compiled, 94 + 44 bytes
+++ pvarsub compiled, 59 + 28 bytes
Completed FASL files for "substns"



*** Compiling inttaylr ... 


FASLOUT "inttaylr": IN files;  or type in expressions
When all done, execute FASLEND;
+++ taylorform compiled, 40 + 40 bytes
+++ taylorformp compiled, 238 + 100 bytes
+++ taylorevaluate compiled, 33 + 16 bytes
+++ tayloreval2 compiled, 35 + 12 bytes
+++ taylorconst compiled, 13 + 16 bytes

*** local variable a in procedure return0 not used 

*** local variable b in procedure return0 not used 

*** local variable c in procedure return0 not used 
+++ return0 compiled, 4 + 12 bytes
+++ firstterm compiled, 32 + 24 bytes
+++ tayloroneterm compiled, 12 + 12 bytes
+++ tayprepf compiled, 29 + 28 bytes
+++ tayprept compiled, 41 + 24 bytes
+++ taylorpoly compiled, 50 + 24 bytes

*** local variable texpr in procedure taylorplus not used 
+++ taylorplus compiled, 42 + 20 bytes
+++ initialtaylorplus compiled, 31 + 24 bytes

*** local variable texpr in procedure taylorminus not used 
+++ taylorminus compiled, 5 + 16 bytes
+++ initialtaylorminus compiled, 6 + 12 bytes
+++ tayloroptminus compiled, 55 + 28 bytes
+++ taylorneglist compiled, 36 + 12 bytes
+++ tayloroptplus compiled, 44 + 20 bytes
+++ joinret compiled, 84 + 16 bytes

*** local variable texpr in procedure taylorctimes not used 
+++ taylorctimes compiled, 20 + 16 bytes
+++ initialtaylortimes compiled, 13 + 12 bytes
+++ tayloroptctimes compiled, 180 + 36 bytes
+++ multconst compiled, 12 + 16 bytes

*** local variable texpr in procedure taylorbtimes not used 
+++ taylorbtimes compiled, 49 + 28 bytes
+++ lambda_zjikdl3rwcad compiled, 5 + 12 bytes
+++ taylorformertimes compiled, 169 + 76 bytes
+++ taylorformerexpt compiled, 40 + 36 bytes
+++ initialtaylorquotient compiled, 15 + 16 bytes
+++ taylorquotient compiled, 59 + 28 bytes
+++ taylorformersqrt compiled, 97 + 64 bytes

*** local variable slist in procedure initialtaylorsqrtx not used 
+++ initialtaylorsqrtx compiled, 6 + 16 bytes
+++ taylorsqrtx compiled, 45 + 36 bytes
Completed FASL files for "inttaylr"



*** Compiling torsionb ... 


FASLOUT "torsionb": IN files;  or type in expressions
When all done, execute FASLEND;
+++ bound!-torsion compiled, 296 + 108 bytes
+++ max!-power compiled, 19 + 12 bytes

*** local variable curve in procedure good-reduction not used 

*** local variable dof1k in procedure good-reduction not used 
+++ good!-reduction compiled, 8 + 20 bytes
Completed FASL files for "torsionb"



*** Compiling wstrass ... 


FASLOUT "wstrass": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpwstrass compiled, 155 + 112 bytes
+++ weierstrass!-form compiled, 656 + 180 bytes
+++ !*lcm!* compiled, 9 + 20 bytes
+++ weierstrass!-form1 compiled, 309 + 112 bytes
+++ sqrts!-at!-infinity compiled, 106 + 56 bytes
+++ coates!-wstrass compiled, 229 + 100 bytes
+++ wstrassmodule compiled, 184 + 104 bytes
+++ force!-pole compiled, 119 + 36 bytes
+++ wstrass!-lineq compiled, 309 + 56 bytes
+++ algint!-numeric!-content compiled, 31 + 16 bytes
Completed FASL files for "wstrass"



*** Compiling zmodule ... 


FASLOUT "zmodule": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lambda_s2am4n88eqm compiled, 9 + 20 bytes
+++ zmodule compiled, 284 + 64 bytes
+++ bexprn compiled, 77 + 28 bytes
+++ mkbasis compiled, 142 + 40 bytes
+++ obvindep compiled, 33 + 16 bytes
+++ sf2df compiled, 43 + 16 bytes
+++ check!-sqrts!-dependence compiled, 188 + 100 bytes
+++ lindep compiled, 444 + 56 bytes
Completed FASL files for "zmodule"

The system is about to do a restart...
REDUCE



*** Compiling arnum ... 


FASLOUT "arnum": IN files;  or type in expressions
When all done, execute FASLEND;
+++ defpoly compiled, 68 + 52 bytes
+++ defpoly1 compiled, 21 + 28 bytes
+++ mkextension compiled, 16 + 36 bytes
+++ initalgnum compiled, 90 + 72 bytes
+++ put!-current!-representation compiled, 6 + 16 bytes
+++ get!-current!-representation compiled, 4 + 12 bytes
+++ mkdar compiled, 19 + 24 bytes
+++ release compiled, 25 + 20 bytes
+++ mk!-algebraic!-number!-vars compiled, 32 + 32 bytes
+++ uncurrep compiled, 17 + 12 bytes
+++ update!-extension compiled, 30 + 24 bytes

*** local variable u in procedure express-in-arvars not used 
+++ express!-in!-arvars compiled, 6 + 24 bytes
+++ mkreexpressl compiled, 3 + 12 bytes
+++ rn2ar compiled, 12 + 16 bytes
+++ ar2rn compiled, 24 + 32 bytes
+++ !*i2ar compiled, 4 + 12 bytes
+++ arconv compiled, 13 + 32 bytes
+++ arminusp!: compiled, 3 + 12 bytes
+++ arzerop!: not compiled (C version available)
+++ aronep!: not compiled (C version available)
+++ arintequiv!: compiled, 18 + 16 bytes
+++ arplus!: compiled, 13 + 28 bytes
+++ ardifference!: compiled, 14 + 32 bytes
+++ artimes!: compiled, 14 + 32 bytes
+++ arquotient!: compiled, 140 + 100 bytes
+++ arfactor!: compiled, 246 + 124 bytes
+++ afactorize compiled, 80 + 56 bytes
+++ arprep!: compiled, 9 + 20 bytes
+++ arprn!: compiled, 22 + 36 bytes
+++ monicize compiled, 98 + 84 bytes
+++ polynorm compiled, 46 + 48 bytes
+++ resultantft compiled as link to resultant
+++ factorft compiled, 6 + 16 bytes
+++ fd2q compiled, 37 + 28 bytes
+++ sqfrnorm compiled, 66 + 52 bytes
+++ algebnp compiled, 23 + 16 bytes
+++ ar!-sqfrp compiled, 18 + 16 bytes
+++ primitive_elem compiled, 153 + 132 bytes
+++ not_in_extension compiled, 77 + 52 bytes
+++ split_field1 compiled, 743 + 180 bytes
+++ split!-field!-eval compiled, 29 + 40 bytes
+++ arrationalize!: compiled, 81 + 60 bytes
+++ reducepowers compiled, 53 + 28 bytes
+++ mkqmatr compiled, 153 + 36 bytes
+++ mkqcol compiled, 113 + 24 bytes
+++ ratn compiled, 23 + 36 bytes
+++ inormmat compiled, 86 + 20 bytes
+++ ilcm compiled, 25 + 16 bytes
+++ ilnrsolve compiled, 126 + 36 bytes
+++ ar!-augment compiled, 19 + 12 bytes
+++ ar!-rhside compiled, 18 + 16 bytes
+++ ibareiss compiled, 374 + 28 bytes
+++ ibacksub compiled, 113 + 40 bytes
Completed FASL files for "arnum"



*** Compiling arinv ... 


FASLOUT "arinv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ arquot compiled, 439 + 80 bytes
+++ arquot1 compiled, 438 + 76 bytes
+++ arinv compiled, 325 + 60 bytes
+++ arnum!-mkglsol compiled, 50 + 32 bytes
+++ arnum!-glsolterm compiled, 45 + 12 bytes
Completed FASL files for "arinv"

The system is about to do a restart...
REDUCE



*** Compiling assist ... 


FASLOUT "assist": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "assist"



*** Compiling sl2psl ... 


FASLOUT "sl2psl": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lconc compiled, 31 + 12 bytes
+++ tconc compiled, 29 + 8 bytes
+++ adjoin compiled, 8 + 8 bytes
+++ list2set compiled, 23 + 12 bytes
+++ delqip1 compiled, 19 + 8 bytes
+++ delqip compiled, 12 + 12 bytes
Completed FASL files for "sl2psl"



*** Compiling switchxt ... 


FASLOUT "switchxt": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "switchxt"



*** Compiling baglist ... 


FASLOUT "baglist": IN files;  or type in expressions
When all done, execute FASLEND;
+++ flattens1 compiled, 21 + 8 bytes
+++ frequency compiled, 13 + 28 bytes
+++ frequency1 compiled, 93 + 52 bytes
+++ sequences compiled, 11 + 28 bytes
+++ sequsymb compiled, 64 + 20 bytes
+++ sequalg compiled, 106 + 48 bytes
+++ split compiled, 235 + 72 bytes
+++ extremum compiled, 15 + 12 bytes
+++ maximum3 compiled, 23 + 8 bytes
+++ rmklis compiled, 64 + 28 bytes
+++ algnlist compiled, 6 + 20 bytes
+++ insert_keep_order compiled, 26 + 32 bytes
+++ insert_keep_order1 compiled, 30 + 8 bytes
+++ merge_list compiled, 9 + 16 bytes
+++ merge_list1 compiled, 32 + 8 bytes
+++ !:delete compiled, 56 + 16 bytes
+++ !:bagno compiled, 10 + 16 bytes
+++ !:bagyes compiled, 42 + 44 bytes
+++ simpbagprop compiled, 117 + 72 bytes
+++ putbag compiled, 5 + 16 bytes
+++ clearbag compiled, 5 + 16 bytes
+++ bagp compiled, 12 + 16 bytes
+++ nbglp compiled, 31 + 28 bytes
+++ bglp!:!: compiled, 16 + 20 bytes
+++ baglistp compiled, 17 + 20 bytes
+++ nul!: compiled, 9 + 12 bytes
+++ alistp compiled, 12 + 12 bytes
+++ abaglistp compiled, 23 + 20 bytes
+++ rexplis compiled, 55 + 36 bytes
+++ rlisbag compiled, 20 + 20 bytes
+++ rfirst compiled, 34 + 36 bytes
+++ rsecond compiled, 42 + 36 bytes
+++ rthird compiled, 52 + 36 bytes
+++ rrest compiled, 34 + 28 bytes
+++ rreverse compiled, 25 + 28 bytes
+++ rlast compiled, 30 + 32 bytes
+++ rdc compiled, 15 + 12 bytes
+++ rbelast compiled, 19 + 28 bytes
+++ rappend compiled, 35 + 36 bytes
+++ rappendn compiled, 62 + 36 bytes
+++ rcons compiled, 80 + 80 bytes
+++ isimpa compiled, 22 + 36 bytes
+++ lengthreval compiled, 73 + 64 bytes
+++ rremove compiled, 33 + 44 bytes
+++ rdelete compiled, 16 + 16 bytes
+++ delete_all compiled, 6 + 16 bytes
+++ del_all_obj compiled, 22 + 12 bytes
+++ rmember compiled, 26 + 24 bytes
+++ relmult compiled, 48 + 44 bytes
+++ rpair compiled, 112 + 36 bytes
+++ delpair compiled, 78 + 16 bytes
+++ depth!: compiled, 22 + 20 bytes
+++ rdepth compiled, 16 + 28 bytes
+++ rinsert compiled, 85 + 40 bytes
+++ rposition compiled, 56 + 52 bytes
+++ !:assoc compiled, 80 + 44 bytes
+++ !:rassoc compiled, 82 + 48 bytes
+++ !:assoc2 compiled, 91 + 48 bytes
+++ lastassoc!* compiled, 26 + 12 bytes
+++ !:lassoc compiled, 80 + 48 bytes
+++ rasflist compiled, 70 + 32 bytes
+++ rasslist compiled, 70 + 32 bytes
+++ !:sublis compiled, 222 + 44 bytes
+++ !:subst compiled, 15 + 12 bytes
+++ !:repla compiled, 32 + 36 bytes
+++ !:repld compiled, 33 + 36 bytes
+++ !:union compiled, 39 + 40 bytes
+++ setp compiled, 5 + 12 bytes
+++ rmkset compiled, 16 + 20 bytes
+++ !:setdiff compiled, 33 + 32 bytes
+++ !:symdiff compiled, 42 + 32 bytes
+++ !:xn compiled, 30 + 32 bytes
Completed FASL files for "baglist"



*** Compiling hcvctors ... 


FASLOUT "hcvctors": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mkrandtabl compiled, 174 + 76 bytes
+++ upbve not compiled (C version available)
+++ dimvect compiled, 29 + 16 bytes
+++ index_elt compiled, 27 + 20 bytes
+++ vect2list compiled, 59 + 12 bytes
+++ list_str compiled, 21 + 12 bytes
+++ n_first_lst compiled, 18 + 16 bytes
+++ homo_lst compiled, 62 + 28 bytes
+++ list_to_array compiled, 23 + 32 bytes
+++ array_to_list compiled, 7 + 20 bytes
+++ list2vectn compiled, 71 + 44 bytes
+++ list2vect compiled, 4 + 16 bytes
+++ list2vect!* compiled, 45 + 24 bytes
+++ vect_to_array compiled, 29 + 32 bytes
+++ vectappend compiled, 95 + 28 bytes
+++ vectappend1 compiled, 46 + 16 bytes
+++ vectadd compiled, 55 + 24 bytes
+++ setelve compiled, 24 + 8 bytes
+++ ltrident compiled, 70 + 24 bytes
Completed FASL files for "hcvctors"



*** Compiling genpurfn ... 


FASLOUT "genpurfn": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rmkidnew compiled, 17 + 20 bytes
+++ list_to_ids compiled, 53 + 20 bytes
+++ simpsetf compiled, 35 + 40 bytes

*** == redefined 
+++ oddp compiled, 5 + 12 bytes
+++ followline compiled, 6 + 8 bytes
+++ charnump!: compiled, 35 + 52 bytes
+++ charnump compiled, 13 + 16 bytes
+++ detidnum compiled, 31 + 20 bytes
+++ dellastdigit compiled, 19 + 16 bytes
+++ randomlist compiled, 38 + 20 bytes
+++ transpose compiled, 20 + 20 bytes
+++ combnum compiled, 40 + 40 bytes
+++ cyclicpermlist compiled, 45 + 20 bytes
+++ rpermutation compiled, 110 + 32 bytes
+++ perm_to_num compiled, 124 + 36 bytes
+++ num_to_perm compiled, 65 + 40 bytes
+++ !:comb compiled, 68 + 36 bytes
+++ simpsumsym compiled, 335 + 120 bytes
+++ sortnumlist compiled, 23 + 28 bytes
+++ sortlist compiled, 47 + 48 bytes
+++ bubblesort1 compiled, 54 + 24 bytes
+++ bubsort1 compiled, 56 + 24 bytes
+++ find_pivot_index compiled, 39 + 20 bytes
+++ partition compiled, 44 + 20 bytes
+++ quicksort_i_to_j compiled, 46 + 28 bytes
+++ algsort compiled, 6 + 20 bytes
+++ checkproplist1 compiled, 70 + 36 bytes
+++ checkproplist compiled, 9 + 20 bytes
+++ extractlist1 compiled, 71 + 24 bytes
+++ extractlist compiled, 21 + 32 bytes
+++ putflag compiled, 73 + 44 bytes
+++ putprop compiled, 77 + 48 bytes
+++ rdisplayprop compiled, 51 + 28 bytes
+++ rdisplayflag compiled, 33 + 20 bytes
+++ clrflg!: compiled, 27 + 20 bytes
+++ clearflag compiled, 47 + 28 bytes
+++ clrprp!: compiled, 31 + 20 bytes
+++ clearprop compiled, 51 + 28 bytes
Completed FASL files for "genpurfn"



*** Compiling control ... 


FASLOUT "control": IN files;  or type in expressions
When all done, execute FASLEND;
+++ nordp compiled, 4 + 16 bytes
+++ depvarp compiled, 7 + 16 bytes
+++ alatomp compiled, 9 + 12 bytes
+++ alkernp compiled, 11 + 20 bytes
+++ precp compiled, 38 + 24 bytes
+++ korderlist compiled, 2 + 12 bytes
+++ remsym compiled, 36 + 16 bytes
+++ listofvars compiled, 24 + 20 bytes
+++ varsinargs compiled, 26 + 12 bytes
+++ rfuncvar compiled, 64 + 36 bytes
+++ implicit compiled, 64 + 32 bytes
+++ depatom compiled, 21 + 24 bytes
+++ explicit compiled, 53 + 24 bytes
+++ simplify compiled, 6 + 24 bytes
+++ remnoncom compiled, 20 + 16 bytes
+++ remvector compiled, 23 + 20 bytes
+++ remindex compiled, 29 + 24 bytes
+++ mkgam compiled, 51 + 48 bytes
+++ !*revpri declared fluid
+++ switches compiled, 185 + 192 bytes
+++ switchorg compiled, 114 + 104 bytes
+++ remvar!: compiled, 76 + 36 bytes
+++ displayscal compiled, 10 + 28 bytes
+++ displaylst compiled, 10 + 28 bytes
+++ clearscal compiled, 7 + 20 bytes
+++ clearlst compiled, 7 + 20 bytes
+++ remsvar!: compiled, 103 + 52 bytes
+++ displaysvar compiled, 4 + 16 bytes
+++ clearsvar compiled, 4 + 16 bytes
+++ rema!: compiled, 73 + 36 bytes
+++ displayar compiled, 3 + 16 bytes
+++ clearar compiled, 3 + 12 bytes
+++ remm!: compiled, 89 + 44 bytes
+++ displaymat compiled, 9 + 28 bytes
+++ clearmat compiled, 6 + 20 bytes
+++ remv!: compiled, 85 + 44 bytes
+++ displayvec compiled, 15 + 32 bytes
+++ clearvec compiled, 9 + 24 bytes
+++ remf!: compiled, 83 + 36 bytes
+++ displayform compiled, 9 + 28 bytes
+++ clearform compiled, 6 + 20 bytes
+++ clear_all compiled, 26 + 48 bytes
+++ show compiled, 107 + 96 bytes
+++ suppress compiled, 64 + 88 bytes
+++ clearop compiled, 80 + 52 bytes
+++ clearfunctions compiled, 218 + 140 bytes
Completed FASL files for "control"



*** Compiling polyexns ... 


FASLOUT "polyexns": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fix_or_str compiled, 10 + 8 bytes
+++ rgcdnl compiled, 18 + 24 bytes
+++ alg_to_symb compiled, 48 + 16 bytes
+++ symb_to_alg compiled, 145 + 40 bytes
+++ mkdepth_one compiled, 6 + 24 bytes
+++ addfd compiled, 57 + 16 bytes
+++ distribute compiled, 20 + 36 bytes
+++ distri_pol compiled, 63 + 20 bytes
+++ leadterm compiled, 25 + 24 bytes
+++ redexpr compiled, 26 + 28 bytes
+++ list_of_monom compiled, 30 + 8 bytes
+++ monom compiled, 63 + 44 bytes
+++ coeff_mon compiled, 15 + 8 bytes
+++ list_coeff_pol compiled, 59 + 36 bytes
+++ norm_mon compiled, 22 + 32 bytes
+++ norm_pol compiled, 68 + 44 bytes
+++ pol_ordp compiled, 18 + 12 bytes
+++ !&dpol compiled, 87 + 72 bytes
+++ lowestdeg compiled, 61 + 48 bytes
+++ erase_pol_cst compiled, 18 + 12 bytes
+++ splitterms compiled, 115 + 28 bytes
+++ splitplusminus compiled, 97 + 60 bytes
Completed FASL files for "polyexns"



*** Compiling transfns ... 


FASLOUT "transfns": IN files;  or type in expressions
When all done, execute FASLEND;
+++ trigexpand compiled, 305 + 80 bytes
+++ hypexpand compiled, 305 + 80 bytes
+++ trigreduce compiled, 139 + 72 bytes
+++ hypreduce compiled, 122 + 64 bytes
Completed FASL files for "transfns"



*** Compiling vectorop ... 


FASLOUT "vectorop": IN files;  or type in expressions
When all done, execute FASLEND;
+++ depthl1!: compiled, 12 + 16 bytes
+++ depthl1 compiled, 11 + 20 bytes
+++ !:vect compiled, 25 + 20 bytes
+++ rsumvect compiled, 158 + 44 bytes
+++ rminvect compiled, 159 + 48 bytes
+++ !:scalprd compiled, 32 + 20 bytes
+++ sscalvect compiled, 118 + 44 bytes
+++ !:pvect3 compiled, 173 + 56 bytes
+++ rcrossvect compiled, 40 + 20 bytes
+++ smpvect compiled, 71 + 52 bytes
Completed FASL files for "vectorop"



*** Compiling grassman ... 


FASLOUT "grassman": IN files;  or type in expressions
When all done, execute FASLEND;
+++ putgrass compiled, 40 + 40 bytes
+++ remgrass compiled, 33 + 20 bytes
+++ grassp compiled, 12 + 16 bytes
+++ grassparityini compiled, 8 + 20 bytes
+++ grassparity compiled, 80 + 48 bytes
+++ ghostfactor compiled, 16 + 32 bytes
Completed FASL files for "grassman"



*** Compiling matrext ... 


FASLOUT "matrext": IN files;  or type in expressions
When all done, execute FASLEND;
+++ natnumlis compiled, 23 + 12 bytes
+++ mkidm compiled as link to mkid
+++ baglmat compiled, 162 + 68 bytes
+++ rcoercemat compiled, 83 + 52 bytes
+++ n!-1zero compiled, 39 + 20 bytes
+++ unitmat compiled, 110 + 72 bytes
+++ submat compiled, 70 + 36 bytes
+++ matsubr compiled, 128 + 64 bytes
+++ matsubc compiled, 131 + 68 bytes
+++ rmatextr compiled, 105 + 48 bytes
+++ rmatextc compiled, 107 + 52 bytes
+++ hconcmat compiled, 8 + 16 bytes
+++ hconcmat!: compiled, 27 + 8 bytes
+++ vconcmat compiled, 9 + 12 bytes
+++ tprodl compiled, 16 + 16 bytes
+++ tpmat compiled, 53 + 28 bytes
+++ hermat compiled, 334 + 84 bytes
+++ seteltmat compiled, 17 + 24 bytes
+++ simpgetelt compiled, 11 + 16 bytes
Completed FASL files for "matrext"



*** Compiling helpasst ... 


FASLOUT "helpasst": IN files;  or type in expressions
When all done, execute FASLEND;
+++ assist compiled, 113 + 84 bytes
+++ assisthelp compiled, 125 + 92 bytes
Completed FASL files for "helpasst"

The system is about to do a restart...
REDUCE



*** Compiling dummy ... 


FASLOUT "dummy": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fullcopy not compiled (C version available)
Completed FASL files for "dummy"



*** Compiling perms ... 


FASLOUT "perms": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pe_mult compiled, 42 + 20 bytes
+++ pe_inv compiled, 36 + 20 bytes
+++ copy_vect compiled, 31 + 12 bytes
+++ sd_addgen compiled, 313 + 36 bytes
+++ sd_create compiled, 121 + 32 bytes
+++ sc_create compiled, 32 + 24 bytes
+++ sd_recomp_transversal compiled, 98 + 28 bytes
+++ sc_swapbase compiled, 730 + 60 bytes
+++ sc_setbase compiled, 58 + 28 bytes
Completed FASL files for "perms"



*** Compiling backtrck ... 


FASLOUT "backtrck": IN files;  or type in expressions
When all done, execute FASLEND;
+++ generate_next_choice compiled, 117 + 68 bytes
+++ candidate_extensions compiled, 87 + 20 bytes
+++ process_new_automorphism compiled, 65 + 32 bytes
+++ canon_order compiled, 11 + 20 bytes
Completed FASL files for "backtrck"



*** Compiling dummycnt ... 


FASLOUT "dummycnt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ad_splitname compiled, 45 + 16 bytes
+++ anticom_assoc compiled, 32 + 12 bytes
+++ ad_signsort compiled, 122 + 24 bytes
+++ cdr_sort compiled, 56 + 8 bytes
+++ cdr_signsort compiled, 125 + 24 bytes
+++ lambda_2nw9jgkcyi62 compiled as link to leq
+++ num_signsort compiled, 4 + 16 bytes
+++ cons_ordp compiled, 43 + 12 bytes
+++ atom_compare compiled, 24 + 16 bytes
+++ idcons_ordp compiled, 6 + 16 bytes
+++ skp_ordp compiled, 6 + 16 bytes
+++ lambda_2nw9jgkcyi62 compiled as link to leq
+++ numlist_ordp compiled, 7 + 16 bytes
+++ lambda_2nw9jgkcyi62 compiled as link to leq
+++ ad_numsort compiled, 4 + 16 bytes
+++ sc_kern not compiled (C version available)
+++ sc_rep compiled, 7 + 12 bytes
+++ sc_desc compiled, 7 + 12 bytes
+++ dummyp compiled, 55 + 36 bytes
+++ dv_ind2var compiled, 17 + 24 bytes
+++ lambda_27y7bp69qf9h compiled, 5 + 8 bytes
+++ sc_repkern compiled, 177 + 36 bytes
+++ pa_list2vect compiled, 92 + 20 bytes
+++ pa_part2list compiled, 91 + 28 bytes
+++ pa_vect2list compiled, 86 + 24 bytes
+++ lambda_0hlrhzqrok0b compiled, 20 + 12 bytes
+++ pa_coinc_split compiled, 236 + 28 bytes
+++ st_flatten compiled, 46 + 16 bytes
+++ st_extract_symcells compiled, 66 + 44 bytes
+++ st_extract_symcells1 compiled, 103 + 16 bytes
+++ st_signchange compiled, 16 + 20 bytes
+++ st_signchange1 compiled, 126 + 28 bytes
+++ st_sorttree compiled, 7 + 12 bytes
+++ st_sorttree1 compiled, 283 + 32 bytes
+++ st_ad_numsorttree compiled, 9 + 12 bytes
+++ st_ad_numsorttree1 compiled, 390 + 48 bytes
+++ st_consolidate compiled, 101 + 16 bytes
+++ dv_cambhead compiled, 23 + 20 bytes
+++ dv_skelhead compiled, 3 + 12 bytes
+++ dv_skelsplit compiled, 224 + 72 bytes
+++ dv_skelsplit1 compiled, 351 + 28 bytes
+++ nodum_varp compiled, 27 + 36 bytes
+++ list_is_all_free compiled, 13 + 16 bytes
+++ lambda_15zo0rxxtzr3 compiled, 4 + 12 bytes
+++ lambda_15zo0rxxtzr3 compiled, 4 + 12 bytes
+++ lambda_15zo0rxxtzr3 compiled, 4 + 12 bytes
+++ dv_skelprod compiled, 506 + 92 bytes
+++ dv_skel2factor1 compiled, 40 + 16 bytes
+++ pst_termnodep compiled, 8 + 12 bytes
+++ pst_mkpst compiled, 6 + 16 bytes
+++ st_multtermnodep compiled, 26 + 16 bytes
+++ pst_mkpst1 compiled, 359 + 32 bytes
+++ pst_subpst compiled, 6 + 8 bytes
+++ pst_reduce compiled, 538 + 32 bytes
+++ pst_isolable compiled, 112 + 16 bytes
+++ pst_isolate compiled, 14 + 16 bytes
+++ pst_isolate1 compiled, 81 + 28 bytes
+++ pst_equitable compiled, 44 + 16 bytes
+++ pst_equitable1 compiled, 238 + 40 bytes
+++ pst_d1 compiled, 142 + 20 bytes
+++ pst_d compiled, 233 + 20 bytes
+++ lambda_fv6f03crmx26 compiled, 4 + 12 bytes
+++ pst_partition compiled, 80 + 20 bytes
+++ dv_next_choice compiled, 142 + 80 bytes
+++ can_rep_cell compiled, 11 + 12 bytes
+++ last_part_kern compiled, 4 + 8 bytes
+++ dv_compare compiled, 193 + 60 bytes
+++ dv_fill_comp_info compiled, 162 + 52 bytes
+++ dv_null_first_kern compiled, 75 + 36 bytes
+++ dv_new_aut_hook compiled, 135 + 52 bytes
+++ dv_canon_monomial compiled, 469 + 124 bytes
+++ dv_skel2factor compiled, 57 + 24 bytes
+++ canonical compiled, 47 + 40 bytes
+++ symtree compiled, 10 + 16 bytes
+++ remsym compiled, 39 + 20 bytes
+++ dummy_names compiled, 25 + 44 bytes
+++ show_dummy_names compiled, 10 + 24 bytes
+++ dummy_base compiled, 18 + 40 bytes
+++ clear_dummy_base compiled, 4 + 16 bytes
+++ clear_dummy_names compiled, 4 + 16 bytes
+++ anticom compiled, 26 + 16 bytes
+++ remanticom compiled, 23 + 20 bytes
Completed FASL files for "dummycnt"

The system is about to do a restart...
REDUCE



*** Compiling cantens ... 


FASLOUT "cantens": IN files;  or type in expressions
When all done, execute FASLEND;
+++ depends compiled, 106 + 40 bytes
+++ permp!: compiled, 25 + 16 bytes
Completed FASL files for "cantens"



*** Compiling ctintro ... 


FASLOUT "ctintro": IN files;  or type in expressions
When all done, execute FASLEND;
+++ remsym compiled, 39 + 20 bytes
+++ sym_sign compiled, 15 + 24 bytes
+++ simpsumsym compiled, 644 + 156 bytes
+++ dummy_nam compiled, 9 + 28 bytes
+++ dv_skelsplit compiled, 304 + 84 bytes
+++ dummyp compiled, 72 + 44 bytes
+++ dv_skel2factor1 compiled, 62 + 24 bytes
Completed FASL files for "ctintro"



*** Compiling auxitens ... 


FASLOUT "auxitens": IN files;  or type in expressions
When all done, execute FASLEND;
+++ raiseind!: compiled, 6 + 8 bytes
+++ lowerind_lst compiled, 34 + 12 bytes
+++ raiseind_lst compiled, 32 + 12 bytes
+++ flatindxl compiled, 56 + 12 bytes
+++ cov_lst_idsp compiled, 13 + 16 bytes
+++ cont_lst_idsp compiled, 12 + 12 bytes
+++ identify_pos_cov_lst compiled, 24 + 16 bytes
+++ identify_pos_cont_lst compiled, 24 + 16 bytes
+++ splitlist!: compiled, 23 + 12 bytes
+++ list_to_ids!: compiled, 53 + 20 bytes
+++ split!: compiled, 128 + 20 bytes
+++ symtree_splitlst compiled, 206 + 24 bytes
+++ symtree_zerop compiled, 87 + 32 bytes
+++ partsym_zerop compiled, 16 + 16 bytes
+++ cont_before_cov compiled, 11 + 20 bytes
Completed FASL files for "auxitens"



*** Compiling gentens ... 


FASLOUT "gentens": IN files;  or type in expressions
When all done, execute FASLEND;
+++ make_bloc_diagonal compiled, 8 + 24 bytes
+++ rem_value_tens compiled, 131 + 44 bytes
+++ rem_tensor1 compiled, 101 + 80 bytes
+++ elim_names compiled, 58 + 52 bytes
+++ tensor compiled, 122 + 88 bytes
+++ make_tensor compiled, 62 + 68 bytes
+++ rem_tensor compiled, 60 + 24 bytes
+++ tensorp compiled, 12 + 16 bytes
+++ tensorp!: compiled, 17 + 16 bytes
+++ make_tensor_belong_space compiled, 41 + 40 bytes
+++ make_tensor_belong_anyspace compiled, 34 + 20 bytes
+++ simptensor compiled, 394 + 120 bytes
+++ split_cov_cont_ids compiled, 34 + 12 bytes
+++ verify_tens_ids compiled, 31 + 36 bytes
+++ make_variables compiled, 20 + 16 bytes
+++ remove_variables compiled, 20 + 16 bytes
+++ extract_vars compiled, 23 + 20 bytes
+++ select_vars compiled, 48 + 28 bytes
+++ symb_belong_several_spaces compiled, 74 + 32 bytes
+++ num_ids_range compiled, 74 + 68 bytes
+++ restore_tens_idx compiled, 49 + 20 bytes
+++ clean_numid compiled, 22 + 16 bytes
+++ extract_num_id compiled, 22 + 16 bytes
+++ extract_numid compiled, 16 + 12 bytes
+++ mkindxlist compiled, 80 + 16 bytes
+++ !*num2id compiled, 28 + 20 bytes
+++ !*id2num compiled, 10 + 12 bytes
+++ num_indlistp compiled, 38 + 16 bytes
+++ out_of_range compiled, 49 + 32 bytes
+++ revalind compiled, 26 + 36 bytes
+++ revalindl compiled, 32 + 12 bytes

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ymax* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ymax* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ymin* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ymin* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ymax* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ymax* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ymin* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable ymin* in procedure indvarprt 

*** nonlocal use of undeclared variable ycoord* in procedure indvarprt 

*** nonlocal use of undeclared variable obrkp* in procedure indvarprt 

*** nonlocal use of undeclared variable obrkp* in procedure indvarprt 
+++ ycoord!* declared fluid
+++ ymax!* declared fluid
+++ ymin!* declared fluid
+++ obrkp!* declared fluid
+++ indvarprt compiled, 282 + 136 bytes
+++ xindvarprt_tens compiled, 205 + 96 bytes
Completed FASL files for "gentens"



*** Compiling spaces ... 


FASLOUT "spaces": IN files;  or type in expressions
When all done, execute FASLEND;
+++ charnump!: compiled, 49 + 68 bytes
+++ get_dim_space compiled, 13 + 12 bytes
+++ get_sign_space compiled, 26 + 20 bytes
+++ affinep compiled, 12 + 16 bytes
+++ get_indexrange_space compiled, 42 + 12 bytes
+++ onespace compiled, 12 + 28 bytes
+++ wholespace_dim compiled, 26 + 40 bytes
+++ global_sign compiled, 8 + 16 bytes
+++ signature compiled, 16 + 24 bytes

*** .. redefined 
+++ mkinterval compiled, 6 + 16 bytes
+++ lst_belong_interval compiled, 14 + 16 bytes
+++ idx_belong_interval compiled, 19 + 12 bytes
+++ numids2_belong_same_space compiled, 82 + 28 bytes
+++ num_ids_belong_same_space compiled, 30 + 16 bytes
+++ symb_ids_belong_same_space compiled, 43 + 20 bytes
+++ symb_ids_belong_same_space!: compiled, 40 + 16 bytes
+++ ind_same_space_tens compiled, 23 + 32 bytes
+++ define_spaces compiled, 143 + 100 bytes
+++ whole_euclid_space compiled, 19 + 32 bytes
+++ whole_space compiled, 59 + 28 bytes
+++ space_index_range compiled, 16 + 16 bytes
+++ rem_spaces compiled, 61 + 56 bytes
+++ mkequal compiled, 7 + 16 bytes
+++ insert_sign_equal compiled, 28 + 16 bytes
+++ show_spaces compiled, 208 + 32 bytes
+++ mk_ids_belong_space compiled, 36 + 28 bytes
+++ mk_ids_belong_anyspace compiled, 19 + 16 bytes
+++ space_of_idx compiled, 65 + 76 bytes
+++ space_dim_of_idx compiled, 17 + 24 bytes
+++ extract_dummy_ids compiled, 23 + 16 bytes
+++ rem_dummy_indices compiled, 36 + 32 bytes
+++ dummy_indices compiled, 3 + 16 bytes
+++ mk_dummy_ids compiled, 21 + 32 bytes
+++ mk_lst_for_dummy compiled, 60 + 12 bytes
+++ multiplicity_elt compiled, 16 + 12 bytes
+++ mult_leq_onep compiled, 16 + 20 bytes
+++ eqn_indices compiled, 17 + 12 bytes
Completed FASL files for "spaces"



*** Compiling partitns ... 


FASLOUT "partitns": IN files;  or type in expressions
When all done, execute FASLEND;
+++ make_partic_tens compiled, 234 + 188 bytes
+++ find_name compiled, 18 + 28 bytes
+++ simpdelt compiled, 144 + 80 bytes
+++ simpdel compiled, 512 + 156 bytes
+++ simpdelnum compiled, 11 + 20 bytes
+++ extract_delt compiled, 178 + 72 bytes
+++ idx_not_member_whosp compiled, 12 + 16 bytes
+++ ids_not_member_whosp compiled, 13 + 16 bytes
+++ simpeta compiled, 178 + 116 bytes
+++ num_eta compiled, 15 + 20 bytes
+++ simpepsi compiled, 241 + 136 bytes
+++ num_epsi_non_euclid compiled, 178 + 52 bytes
+++ show_epsilons compiled, 89 + 28 bytes
+++ match_kvalue compiled, 32 + 16 bytes
+++ num_epsi_euclid compiled, 12 + 24 bytes
+++ simpmetric compiled, 226 + 96 bytes
+++ mult_spaces_num_metric compiled, 61 + 40 bytes
Completed FASL files for "partitns"



*** Compiling checkind ... 


FASLOUT "checkind": IN files;  or type in expressions
When all done, execute FASLEND;
+++ split_free_dum_ids compiled, 86 + 48 bytes
+++ check_ids compiled, 119 + 64 bytes
Completed FASL files for "checkind"



*** Compiling opertens ... 


FASLOUT "opertens": IN files;  or type in expressions
When all done, execute FASLEND;
+++ restorealldfs compiled, 34 + 20 bytes
+++ clearallnewids compiled, 31 + 28 bytes
+++ dftypetooper compiled, 345 + 96 bytes
+++ opertodftype compiled, 272 + 36 bytes
+++ makedfperm compiled, 6 + 24 bytes
Completed FASL files for "opertens"



*** Compiling contrtns ... 


FASLOUT "contrtns": IN files;  or type in expressions
When all done, execute FASLEND;
+++ no_dum_varp compiled, 12 + 20 bytes
+++ sep_tens_from_other compiled, 102 + 40 bytes
+++ all_index_lst compiled, 39 + 16 bytes
+++ del_affin_tens compiled, 22 + 16 bytes
+++ dv_canon_covcont compiled, 133 + 44 bytes
+++ cov_contp compiled, 16 + 16 bytes
+++ belong_to_spacep compiled, 18 + 20 bytes
+++ extract_tens compiled, 22 + 12 bytes
+++ treat_dummy_ids compiled, 163 + 68 bytes
+++ canonical compiled, 29 + 40 bytes
+++ canonical1 compiled, 76 + 48 bytes
+++ tensor_has_dummy_idx compiled, 14 + 16 bytes
+++ tens_list_is_generic compiled, 14 + 16 bytes
+++ mk_delta_first compiled, 28 + 28 bytes
+++ dv_canon_tensor compiled, 143 + 52 bytes
+++ simptensexpr compiled, 88 + 48 bytes
+++ simpdeltetaexpr compiled, 102 + 36 bytes
+++ select_epsi_pairs compiled, 24 + 16 bytes
+++ mk_eps_lst compiled, 90 + 40 bytes
+++ get_sign_space!: compiled, 8 + 20 bytes
+++ epsi_to_del compiled, 67 + 48 bytes
+++ simpepsi_mon_expr compiled, 71 + 36 bytes
Completed FASL files for "contrtns"

The system is about to do a restart...
REDUCE



*** Compiling atensor ... 


FASLOUT "atensor": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "atensor"



*** Compiling perm1 ... 


FASLOUT "perm1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gperm not compiled (C version available)
+++ gperm0 compiled, 10 + 12 bytes
+++ gperm3 compiled, 17 + 12 bytes
+++ gperm2 not compiled (C version available)
+++ gperm1 not compiled (C version available)
+++ rev not compiled (C version available)
+++ mkunitp compiled, 22 + 16 bytes
+++ pfind compiled, 94 + 36 bytes
+++ prev compiled, 48 + 24 bytes
+++ psign compiled, 125 + 24 bytes

*** local variable ok in procedure pmult not used 
+++ pmult compiled, 44 + 24 bytes
+++ pappl not compiled (C version available)
+++ pappl0 not compiled (C version available)
+++ pupright compiled, 38 + 16 bytes
+++ pupleft compiled, 68 + 20 bytes
+++ pappend compiled, 52 + 16 bytes
+++ dssoc compiled, 14 + 8 bytes
+++ pkp not compiled (C version available)
+++ unpkp not compiled (C version available)
+++ porder compiled, 4 + 12 bytes
+++ hugep compiled, 12 + 16 bytes
Completed FASL files for "perm1"



*** Compiling pvector ... 


FASLOUT "pvector": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pv_simp compiled, 9 + 16 bytes
+++ pv_minus compiled, 5 + 12 bytes

*** local variable u in procedure pv_minusp not used 
+++ pv_minusp compiled, 1 + 8 bytes
+++ pv_plus compiled, 41 + 20 bytes
+++ pv_times compiled, 31 + 20 bytes
+++ pv_times1 compiled, 16 + 12 bytes
+++ pv_times2 compiled, 17 + 16 bytes
+++ pv_times3 compiled, 10 + 12 bytes
+++ pv_difference compiled, 6 + 16 bytes
+++ pv_zerop compiled, 4 + 8 bytes

*** local variable u in procedure pv_onep not used 
+++ pv_onep compiled, 1 + 8 bytes
+++ pv_prep compiled, 1 + 8 bytes
+++ pv_pri compiled, 45 + 44 bytes
+++ pv_intequiv compiled, 6 + 8 bytes
+++ i2pvector compiled, 4 + 12 bytes
+++ pv_expt compiled, 10 + 20 bytes
+++ pv_quotient compiled, 16 + 24 bytes

*** local variable u in procedure pv_divide not used 

*** local variable v in procedure pv_divide not used 
+++ pv_divide compiled, 6 + 16 bytes

*** local variable v in procedure pv_gcd not used 
+++ pv_gcd compiled, 4 + 12 bytes
+++ pv_add not compiled (C version available)
+++ pv_neg compiled, 20 + 8 bytes
+++ pv_multc not compiled (C version available)
+++ pv_sort not compiled (C version available)
+++ pv_sort1 not compiled (C version available)
+++ pv_sort2 not compiled (C version available)
+++ pv_sort2a not compiled (C version available)
+++ pv_compress compiled, 18 + 12 bytes
+++ pv_renorm not compiled (C version available)
+++ pappl_pv not compiled (C version available)
+++ pv_applp not compiled (C version available)
+++ pv_upright compiled, 38 + 12 bytes
+++ vupleft compiled, 38 + 12 bytes
Completed FASL files for "pvector"



*** Compiling basis ... 


FASLOUT "basis": IN files;  or type in expressions
When all done, execute FASLEND;
+++ sieve_pv not compiled (C version available)
+++ sieve_pv0 not compiled (C version available)
+++ reduce_pv not compiled (C version available)
+++ reduce_pv0 compiled, 73 + 28 bytes
+++ insert_pv not compiled (C version available)
+++ insert_pv1 not compiled (C version available)
+++ insert_pv_ compiled, 73 + 20 bytes
+++ update_pv compiled, 41 + 24 bytes
Completed FASL files for "basis"



*** Compiling dummy1 ... 


FASLOUT "dummy1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cross compiled, 6 + 12 bytes
+++ cross1 compiled, 28 + 8 bytes
+++ suppl compiled, 6 + 12 bytes
+++ suppl1 compiled, 30 + 8 bytes
+++ suppl2 compiled, 28 + 12 bytes
+++ tn_equal compiled, 13 + 12 bytes
+++ th_equal compiled, 12 + 16 bytes
+++ il_equal compiled, 7 + 16 bytes
+++ il_equal1 compiled, 66 + 20 bytes
+++ dfind compiled, 15 + 12 bytes
+++ il_simp compiled, 4 + 12 bytes
+++ il_simp1 compiled, 38 + 16 bytes
+++ di_subst compiled, 6 + 12 bytes
+++ di_subst1 compiled, 29 + 8 bytes
+++ di_new compiled, 16 + 28 bytes
+++ di_restore compiled, 4 + 12 bytes
+++ di_restore1 compiled, 53 + 28 bytes
Completed FASL files for "dummy1"



*** Compiling dummy2 ... 


FASLOUT "dummy2": IN files;  or type in expressions
When all done, execute FASLEND;
+++ adddummy compiled, 4 + 16 bytes
+++ adddummy0 compiled, 18 + 16 bytes
+++ adddummy0b compiled, 24 + 12 bytes
+++ adddummy0a compiled, 79 + 20 bytes
+++ adddummy1 compiled, 52 + 40 bytes
+++ adddummy1a not compiled (C version available)
+++ mk_dsym0 compiled, 13 + 16 bytes
+++ mk_dsym compiled, 18 + 20 bytes
+++ mk_dsym1 compiled, 17 + 20 bytes
+++ dl_get compiled, 4 + 12 bytes
+++ dl_get2 compiled, 26 + 16 bytes
+++ eqdummy compiled, 16 + 12 bytes
+++ di_insert compiled, 43 + 12 bytes
+++ il_update compiled, 6 + 12 bytes
+++ il_update1 compiled, 61 + 16 bytes
+++ di_next compiled, 19 + 20 bytes
+++ mk_flips compiled, 19 + 12 bytes
+++ mk_flip compiled, 10 + 16 bytes
+++ mk_flip1 compiled, 35 + 8 bytes
+++ mk_flip_ compiled, 100 + 28 bytes
+++ mk_ddsym compiled, 18 + 20 bytes
+++ mk_ddsym1 compiled, 17 + 20 bytes
+++ mk_fflips compiled, 20 + 12 bytes
+++ mk_fflips1 compiled, 20 + 12 bytes
+++ mk_fflip1 compiled, 13 + 16 bytes
+++ mk_fflip2 compiled, 62 + 12 bytes
Completed FASL files for "dummy2"



*** Compiling tensor1 ... 


FASLOUT "tensor1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ th2pe compiled, 122 + 32 bytes
+++ t_pri1 compiled, 56 + 28 bytes
+++ pappl_t compiled, 58 + 16 bytes
+++ t_add compiled, 24 + 28 bytes
+++ sieve_t compiled, 9 + 12 bytes
+++ sieve_t0 compiled, 28 + 12 bytes
+++ sieve_t1 compiled, 59 + 32 bytes
+++ sieve_t2 compiled, 109 + 56 bytes
+++ t_addf compiled, 30 + 20 bytes
+++ t_add2 compiled, 63 + 28 bytes
+++ t_match compiled, 4 + 12 bytes
+++ th_match compiled, 17 + 16 bytes
+++ th_match0 compiled, 16 + 8 bytes
+++ th_match_ compiled, 18 + 16 bytes
+++ th_match1 compiled, 19 + 8 bytes
+++ t_neg compiled, 45 + 12 bytes
+++ t_mult compiled, 30 + 16 bytes
+++ t_mult1 compiled, 34 + 12 bytes
+++ t_mult2 compiled, 37 + 28 bytes
+++ c_mult compiled, 50 + 12 bytes

*** local variable tt1 in procedure t_upright not used 
+++ t_upright compiled, 33 + 12 bytes

*** local variable tt1 in procedure t_upleft not used 
+++ t_upleft compiled, 33 + 12 bytes
+++ b_expand compiled, 19 + 20 bytes
+++ b_expand1 compiled, 48 + 16 bytes
+++ b_expand2 compiled, 7 + 12 bytes
+++ b_expand2b compiled, 23 + 16 bytes
+++ b_expand2a compiled, 26 + 20 bytes
+++ b_expand3 compiled, 15 + 8 bytes
+++ b_join compiled, 6 + 12 bytes
+++ b_join1 compiled, 50 + 16 bytes
+++ b_join2 compiled, 14 + 12 bytes
+++ t_prod compiled, 47 + 24 bytes
+++ il_join compiled, 29 + 12 bytes
+++ wi_new compiled, 18 + 28 bytes
Completed FASL files for "tensor1"



*** Compiling tensor ... 


FASLOUT "tensor": IN files;  or type in expressions
When all done, execute FASLEND;
+++ t_simp compiled, 79 + 52 bytes
+++ t_minus compiled, 15 + 20 bytes
+++ t_minus1 compiled, 21 + 12 bytes

*** local variable u in procedure t_minusp not used 
+++ t_minusp compiled, 1 + 8 bytes
+++ t_plus compiled, 32 + 28 bytes
+++ t_plus1 compiled, 20 + 12 bytes
+++ t_plus2 compiled, 35 + 16 bytes
+++ t_times compiled, 38 + 28 bytes
+++ t_timesc compiled, 22 + 12 bytes
+++ t_times1 compiled, 20 + 12 bytes
+++ t_times2 compiled, 19 + 16 bytes
+++ t_times3 compiled, 49 + 24 bytes
+++ t_times4 compiled, 22 + 16 bytes
+++ t_split compiled, 25 + 28 bytes
+++ t_split1 compiled, 66 + 32 bytes
+++ pv_rescale compiled, 4 + 12 bytes
+++ pv_rescale1 compiled, 21 + 12 bytes
+++ p_rescale compiled, 37 + 8 bytes
+++ l_split compiled, 25 + 12 bytes
+++ unpkpv compiled, 4 + 12 bytes
+++ unpkpv1 compiled, 21 + 12 bytes
+++ t_fuse compiled, 10 + 12 bytes
+++ t_fuse1 compiled, 54 + 16 bytes
+++ t_fuse2 compiled, 14 + 12 bytes
+++ t_fuse3 compiled, 54 + 36 bytes
+++ addmultsym compiled, 8 + 12 bytes
+++ addmsym compiled, 54 + 24 bytes
+++ addmsym0 compiled, 33 + 28 bytes
+++ msymperm0 compiled, 177 + 24 bytes

*** local variable t1 in procedure addmultsym_ not used 

*** local variable t2 in procedure addmultsym_ not used 
+++ addmultsym_ compiled, 1 + 8 bytes
+++ addmultsym__ compiled, 58 + 40 bytes
+++ msymperm compiled, 71 + 20 bytes
+++ addmultsym2 compiled, 16 + 20 bytes
+++ addmultsym1 compiled, 9 + 16 bytes
+++ pkt compiled, 6 + 12 bytes
+++ pkpv compiled, 21 + 12 bytes
+++ t_difference compiled, 6 + 16 bytes
+++ t_zerop compiled, 4 + 8 bytes
+++ t_onep compiled, 4 + 12 bytes
+++ t_prep compiled, 20 + 20 bytes
+++ t_prep1 compiled, 30 + 16 bytes
+++ t_pri compiled, 4 + 12 bytes
+++ t_intequiv compiled, 4 + 8 bytes
+++ i2tensor compiled, 4 + 12 bytes
+++ t_expt compiled, 18 + 20 bytes
+++ t_quotient compiled, 16 + 24 bytes

*** local variable u in procedure t_divide not used 

*** local variable v in procedure t_divide not used 
+++ t_divide compiled, 6 + 16 bytes

*** local variable u in procedure t_gcd not used 
+++ t_gcd compiled, 11 + 20 bytes
Completed FASL files for "tensor"



*** Compiling tensorio ... 


FASLOUT "tensorio": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable dl in procedure mkth not used 
+++ bassoc compiled, 13 + 12 bytes
+++ tensor compiled, 52 + 48 bytes
+++ tclear compiled, 9 + 20 bytes
+++ tclear0 compiled, 66 + 36 bytes
+++ tsym compiled, 9 + 16 bytes
+++ tsym1 compiled, 20 + 16 bytes
+++ tsym2 compiled, 70 + 28 bytes
+++ tsym4 not compiled (C version available)
+++ kbasis compiled, 15 + 12 bytes
+++ basis1 compiled, 69 + 44 bytes
+++ tnequal compiled, 18 + 8 bytes
Completed FASL files for "tensorio"

The system is about to do a restart...
REDUCE



*** Compiling avector ... 


FASLOUT "avector": IN files;  or type in expressions
When all done, execute FASLEND;
+++ vecp compiled, 57 + 44 bytes

*** threevectorp not defined (LOSE flag) 
+++ hasonevector not compiled (C version available)
+++ areallvectors compiled, 18 + 12 bytes
+++ isvectorindex compiled, 7 + 20 bytes
+++ getvectorindex compiled, 41 + 36 bytes
+++ locate compiled, 16 + 12 bytes
+++ getrtype1 compiled, 7 + 16 bytes
+++ getrtype2 compiled, 31 + 24 bytes
+++ vec compiled, 45 + 40 bytes
+++ makenewvector compiled, 19 + 32 bytes

*** local variable w in procedure vecpri* not used 
+++ vecpri!* compiled as link to vecpri
+++ vecpri compiled, 79 + 52 bytes
+++ getavalue compiled, 10 + 12 bytes
+++ indexedvectorp compiled, 9 + 16 bytes
+++ setvectorelement compiled, 13 + 20 bytes

*** local variable b in procedure veclet not used 
+++ veclet compiled, 81 + 72 bytes
+++ setvectortozero compiled, 37 + 32 bytes

*** local variable v in procedure *vecsm* not used 
+++ !*vecsm!* compiled as link to vecsm*
+++ prtblanks compiled, 19 + 28 bytes
+++ vecsimp!* compiled, 8 + 16 bytes
+++ vecsm!* compiled, 208 + 120 bytes
+++ vectormapping compiled, 6 + 8 bytes
+++ vectormultiply compiled, 95 + 56 bytes
+++ matrixtimesvector compiled, 116 + 68 bytes
+++ !*typeof compiled as link to getrtype
+++ vectorplus compiled, 24 + 16 bytes
+++ vectoradd compiled, 67 + 44 bytes
+++ vectordiff compiled, 13 + 20 bytes
+++ vectorquot compiled, 34 + 44 bytes
+++ vectorcrossprod compiled, 113 + 36 bytes
+++ vectormod compiled, 18 + 24 bytes
+++ vectordot compiled, 56 + 32 bytes
+++ vectoravec compiled, 44 + 44 bytes
+++ vectorgrad compiled, 72 + 40 bytes
+++ vectordiv compiled, 118 + 52 bytes
+++ vectorcurl compiled, 182 + 52 bytes
+++ vectordelsq compiled, 179 + 72 bytes
+++ vectorsub compiled, 49 + 24 bytes
+++ vectorapply compiled, 55 + 24 bytes
+++ scalarapply compiled, 13 + 12 bytes
+++ coordinates compiled, 83 + 72 bytes
+++ scalefactors compiled, 34 + 40 bytes
+++ !*hfac compiled, 24 + 36 bytes
+++ getcsystem compiled, 120 + 124 bytes
+++ putcsystem compiled, 38 + 60 bytes
+++ vectordf compiled, 74 + 64 bytes
+++ defint compiled, 34 + 28 bytes
+++ component compiled, 15 + 32 bytes
+++ volintegral compiled, 81 + 52 bytes
+++ lineint compiled, 79 + 56 bytes
+++ deflineint compiled, 37 + 28 bytes

*** ^ redefined 

*** ^ redefined 
+++ rcons compiled, 78 + 60 bytes
+++ vsurfint compiled, 116 + 76 bytes
+++ vvecsub compiled, 102 + 80 bytes
Completed FASL files for "avector"

*** dot already defined as operator 

*** cross already defined as operator 

*** ^ redefined 

The system is about to do a restart...
REDUCE



*** Compiling invbase ... 


FASLOUT "invbase": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "invbase"



*** Compiling invbint ... 


FASLOUT "invbint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ invtorder compiled, 67 + 36 bytes
+++ invbase compiled, 229 + 68 bytes
+++ invlex compiled, 243 + 80 bytes

*** local variable r in procedure invtest not used 
+++ invtest compiled, 96 + 48 bytes
+++ gvarlis compiled, 6 + 20 bytes
+++ gvarlis1 compiled, 26 + 16 bytes
+++ gvar1 compiled, 53 + 32 bytes
Completed FASL files for "invbint"



*** Compiling invbcomp ... 


FASLOUT "invbcomp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ c_zero not compiled (C version available)
+++ cneg compiled as link to negf
+++ csum compiled as link to addf
+++ cprod compiled as link to multf
+++ cdiv not compiled (C version available)
+++ trass compiled, 11 + 16 bytes
+++ leftzeros compiled, 28 + 16 bytes
+++ class compiled, 20 + 28 bytes
+++ ord compiled, 11 + 20 bytes
+++ ljet compiled as link to caar
+++ sub01 compiled, 21 + 20 bytes
+++ !*v2j compiled, 13 + 28 bytes
+++ nonmult compiled, 16 + 16 bytes
+++ insert compiled, 36 + 20 bytes
+++ addnew compiled, 23 + 28 bytes
+++ dlesslex not compiled (C version available)
+++ dless not compiled (C version available)
+++ ddmult compiled, 19 + 12 bytes
+++ dquot not compiled (C version available)
+++ pcmult not compiled (C version available)
+++ pcdiv compiled, 38 + 12 bytes
+++ pdmult not compiled (C version available)
+++ psum not compiled (C version available)
+++ pneg not compiled (C version available)
+++ pdif compiled, 6 + 16 bytes
+++ dd compiled, 63 + 60 bytes
+++ dlcm compiled, 82 + 28 bytes
+++ nf compiled, 205 + 104 bytes
+++ gcdout compiled, 40 + 36 bytes
+++ newbasis compiled, 37 + 24 bytes
+++ !*f2di compiled, 146 + 40 bytes
+++ !*di2q0 compiled, 71 + 48 bytes
+++ !*di2q compiled, 50 + 24 bytes
+++ show compiled, 61 + 48 bytes
+++ addgt compiled, 12 + 20 bytes
+++ printsys compiled, 101 + 64 bytes
+++ answer compiled, 37 + 60 bytes
+++ wr compiled, 35 + 60 bytes
+++ invtest!* compiled, 82 + 60 bytes
+++ redall compiled, 181 + 84 bytes
+++ remred compiled, 62 + 28 bytes

*** local variable r in procedure invbase* not used 
+++ invbase!* compiled, 465 + 156 bytes
+++ njets compiled, 8 + 12 bytes
+++ combin compiled, 55 + 16 bytes

*** local variable s in procedure dim not used 

*** local variable dp in procedure dim not used 

*** local variable mon in procedure dim not used 
+++ dim compiled, 182 + 68 bytes
+++ nroots compiled, 44 + 28 bytes
+++ stat compiled, 35 + 52 bytes
+++ !*g2lex compiled, 23 + 12 bytes
+++ lexorder compiled, 35 + 28 bytes
+++ gi compiled, 33 + 20 bytes
+++ monic compiled, 69 + 24 bytes

*** local variable p in procedure monicmember not used 
+++ monicmember compiled, 26 + 24 bytes
+++ montest compiled, 38 + 32 bytes
+++ invlex!* compiled, 101 + 80 bytes
+++ readsys compiled, 92 + 68 bytes
Completed FASL files for "invbcomp"

The system is about to do a restart...
REDUCE



*** Compiling misc ... 


FASLOUT "misc": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "misc"

The system is about to do a restart...
REDUCE



*** Compiling boolean ... 


FASLOUT "boolean": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simp!-prop compiled, 175 + 100 bytes
+++ simp!-prop1 compiled, 246 + 96 bytes
+++ simp!-prop2 compiled, 94 + 28 bytes
+++ lambda_pihlhzg653re compiled, 8 + 8 bytes
+++ simp!-prop!-condense compiled, 45 + 24 bytes
+++ lambda_936zd8sndgib compiled, 6 + 12 bytes
+++ lambda_936zd8sndgib compiled, 6 + 12 bytes
+++ simp!-prop!-dist compiled, 85 + 28 bytes
+++ simp!-prop!-order compiled, 19 + 16 bytes
+++ simp!-prop!-form compiled, 181 + 32 bytes
+++ test!-bool compiled, 6 + 20 bytes
+++ boolean!-eval1 compiled, 27 + 32 bytes
+++ boolean!-eval2 compiled, 95 + 56 bytes
Completed FASL files for "boolean"

The system is about to do a restart...
REDUCE



*** Compiling cedit ... 


FASLOUT "cedit": IN files;  or type in expressions
When all done, execute FASLEND;

*** rplacw not defined (LOSE flag) 
+++ cedit compiled, 124 + 68 bytes
+++ cedit0 compiled, 29 + 20 bytes
+++ cedit1 compiled, 221 + 188 bytes
+++ editc compiled, 12 + 16 bytes
+++ editd compiled, 15 + 20 bytes
+++ editf compiled, 44 + 20 bytes
+++ edith compiled, 42 + 72 bytes
+++ editi compiled, 26 + 16 bytes
+++ editn compiled, 8 + 16 bytes
+++ editp compiled, 5 + 12 bytes
+++ editp1 compiled, 23 + 16 bytes
+++ edits compiled, 34 + 24 bytes
+++ edmatch compiled, 17 + 8 bytes
+++ lprim!* compiled, 5 + 12 bytes
+++ editdef compiled, 3 + 12 bytes
+++ editdef1 compiled, 114 + 108 bytes
+++ add2buf compiled, 5 + 12 bytes
+++ addter2buf compiled, 5 + 16 bytes
+++ display compiled, 54 + 28 bytes
Completed FASL files for "cedit"

The system is about to do a restart...
REDUCE



*** Compiling rcref ... 


FASLOUT "rcref": IN files;  or type in expressions
When all done, execute FASLEND;
+++ crefon compiled, 101 + 156 bytes
+++ undefdchk compiled, 10 + 16 bytes
+++ princng compiled, 4 + 16 bytes
+++ crefoff compiled, 426 + 264 bytes
+++ crefoff1 compiled, 165 + 76 bytes
+++ punused compiled, 18 + 36 bytes
+++ cref52 compiled, 19 + 24 bytes
+++ cref5 compiled, 134 + 144 bytes
+++ cref51 compiled, 14 + 32 bytes
+++ cref6 compiled, 50 + 80 bytes
+++ cref61 compiled, 20 + 36 bytes
+++ do!-global compiled, 46 + 32 bytes
+++ add2locs compiled, 100 + 76 bytes
+++ qerline compiled, 12 + 28 bytes
+++ globind compiled, 20 + 20 bytes
+++ remlocs compiled, 56 + 44 bytes
+++ efface1 compiled, 16 + 8 bytes
+++ add2calls compiled, 27 + 28 bytes
+++ anform compiled, 39 + 36 bytes
+++ anforml compiled, 42 + 36 bytes
+++ anform1 compiled, 73 + 48 bytes
+++ anlsetq compiled, 16 + 24 bytes
+++ ersanform compiled, 6 + 16 bytes
+++ anlmap compiled, 28 + 36 bytes
+++ quotp compiled, 10 + 16 bytes
+++ outref compiled, 80 + 68 bytes
+++ traput compiled, 28 + 16 bytes
+++ outrefend compiled, 186 + 96 bytes
+++ recref compiled, 21 + 48 bytes
+++ outrdefun compiled, 98 + 96 bytes
+++ qtypnm compiled, 96 + 52 bytes
+++ defineargs compiled, 30 + 24 bytes
+++ instdof compiled, 33 + 52 bytes
+++ hasarg compiled, 41 + 60 bytes
+++ checkargcount compiled, 30 + 28 bytes
+++ refprint compiled, 80 + 60 bytes
+++ filemk compiled, 140 + 56 bytes
+++ qcputx compiled, 21 + 20 bytes
+++ anputx compiled, 124 + 72 bytes
+++ outdefr compiled, 10 + 12 bytes
+++ qcrf compiled, 22 + 24 bytes
Completed FASL files for "rcref"



*** Compiling redio ... 


FASLOUT "redio": IN files;  or type in expressions
When all done, execute FASLEND;
+++ initio compiled, 22 + 52 bytes
+++ setpgln compiled, 10 + 12 bytes
+++ getes compiled, 33 + 20 bytes
+++ prtatm compiled as link to prin2
+++ prtlst compiled, 20 + 12 bytes
+++ prtnum compiled, 17 + 12 bytes
+++ princn compiled, 8 + 12 bytes

*** spaces not defined (LOSE flag) 
+++ spaces!-to compiled, 19 + 16 bytes
+++ setpage compiled, 5 + 16 bytes
+++ newline compiled, 19 + 24 bytes
+++ newpage compiled, 54 + 60 bytes
+++ underline2 compiled, 58 + 24 bytes
+++ lprint compiled, 127 + 52 bytes
+++ rempropss compiled, 31 + 8 bytes
+++ remflagss compiled, 17 + 8 bytes
+++ formfeed compiled, 12 + 20 bytes
Completed FASL files for "redio"

The system is about to do a restart...
REDUCE



*** Compiling reset ... 


FASLOUT "reset": IN files;  or type in expressions
When all done, execute FASLEND;

*** nonlocal use of undeclared variable *asterisk in procedure resetreduce 

*** nonlocal use of undeclared variable *dfprint in procedure resetreduce 

*** nonlocal use of undeclared variable *fortupper in procedure resetreduce 

*** nonlocal use of undeclared variable *horner in procedure resetreduce 

*** nonlocal use of undeclared variable *list in procedure resetreduce 

*** nonlocal use of undeclared variable *noarg in procedure resetreduce 

*** nonlocal use of undeclared variable *nosplit in procedure resetreduce 

*** nonlocal use of undeclared variable *ratpri in procedure resetreduce 

*** nonlocal use of undeclared variable *revpri in procedure resetreduce 
+++ !*asterisk declared fluid
+++ !*dfprint declared fluid
+++ !*fortupper declared fluid
+++ !*horner declared fluid
+++ !*list declared fluid
+++ !*noarg declared fluid
+++ !*nosplit declared fluid
+++ !*ratpri declared fluid
+++ !*revpri declared fluid
+++ resetreduce compiled, 303 + 380 bytes
+++ algreset compiled, 242 + 84 bytes
+++ symbreset compiled, 45 + 28 bytes
Completed FASL files for "reset"

The system is about to do a restart...
REDUCE



*** Compiling cali ... 


FASLOUT "cali": IN files;  or type in expressions
When all done, execute FASLEND;
+++ setcalitrace compiled, 6 + 20 bytes
+++ setcaliprintterms compiled, 15 + 32 bytes
+++ clearcaliprintterms compiled, 9 + 24 bytes
+++ cali_trace not compiled (C version available)
+++ strcat compiled, 79 + 24 bytes
+++ numberlistp compiled, 13 + 12 bytes
+++ merge compiled, 32 + 8 bytes
+++ listexpand compiled, 5 + 12 bytes
+++ listtest compiled, 21 + 12 bytes
+++ listminimize compiled, 10 + 12 bytes
+++ cali!=min compiled, 31 + 12 bytes
+++ subsetp compiled, 14 + 12 bytes
+++ disjoint compiled, 14 + 12 bytes
+++ print_lf compiled, 13 + 16 bytes
+++ cali_choose compiled, 92 + 12 bytes
Completed FASL files for "cali"



*** Compiling bcsf ... 


FASLOUT "bcsf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ setrules compiled, 5 + 16 bytes
+++ setrules!* compiled, 126 + 68 bytes
+++ getrules compiled, 54 + 28 bytes
+++ bc!=simp not compiled (C version available)
+++ bc_minus!? compiled as link to minusf
+++ bc_zero!? compiled, 23 + 32 bytes
+++ bc_fi compiled, 5 + 12 bytes
+++ bc_one!? compiled, 4 + 12 bytes
+++ bc_inv compiled, 19 + 20 bytes
+++ bc_neg compiled as link to negf
+++ bc_prod not compiled (C version available)
+++ bc_quot compiled, 13 + 24 bytes
+++ bc_sum compiled as link to addf
+++ bc_diff compiled, 6 + 16 bytes
+++ bc_power compiled, 4 + 16 bytes
+++ bc_from_a compiled, 5 + 16 bytes
+++ bc_2a compiled as link to prepf
+++ bc_prin compiled, 33 + 44 bytes
+++ bc_divmod compiled as link to qremf
+++ bc_gcd compiled as link to gcdf*
+++ bc_lcm compiled, 9 + 20 bytes
Completed FASL files for "bcsf"



*** Compiling ring ... 


FASLOUT "ring": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ring_define compiled, 14 + 16 bytes
+++ setring!* compiled, 15 + 36 bytes
+++ setecart!* compiled, 29 + 40 bytes
+++ ring_2a compiled, 55 + 28 bytes
+++ ring_from_a compiled, 166 + 80 bytes
+++ ring!=testtord compiled, 43 + 16 bytes
+++ ring!=lengthtest compiled, 19 + 16 bytes
+++ ring!=contenttest compiled, 14 + 16 bytes
+++ ring_names compiled as link to cdadr
+++ ring_all_names compiled as link to cadr
+++ ring_degrees compiled as link to caddr
+++ ring_tag compiled as link to cadddr
+++ ring_ecart not compiled (C version available)
+++ ring!=trans compiled, 83 + 12 bytes
+++ ring!=testlex compiled, 13 + 16 bytes
+++ ring!=testlex1 compiled, 15 + 16 bytes
+++ ring!=testrevlex compiled, 13 + 16 bytes
+++ ring!=testrevlex1 compiled, 14 + 12 bytes
+++ ring_isnoetherian compiled, 15 + 32 bytes
+++ ring!=degpos compiled, 14 + 16 bytes
+++ ring_checkecart compiled, 13 + 12 bytes
+++ ring!=test compiled, 11 + 28 bytes
+++ eliminationorder compiled, 53 + 28 bytes
+++ degreeorder compiled, 47 + 28 bytes
+++ localorder compiled, 47 + 28 bytes
+++ blockorder compiled, 53 + 28 bytes
+++ blockorder!* compiled, 182 + 24 bytes
+++ eliminationorder!* compiled, 104 + 16 bytes
+++ degreeorder!* compiled, 36 + 12 bytes
+++ localorder!* compiled, 36 + 12 bytes
+++ ring_rlp compiled, 206 + 40 bytes
+++ ring_lp compiled, 149 + 36 bytes
+++ ring_sum compiled, 201 + 44 bytes
Completed FASL files for "ring"



*** Compiling mo ... 


FASLOUT "mo": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mo!=sprod not compiled (C version available)
+++ mo!=deglist not compiled (C version available)
+++ mo_neworder compiled, 8 + 16 bytes
+++ mo_degneworder compiled, 36 + 12 bytes
+++ mo!=shorten not compiled (C version available)
+++ mo_zero compiled, 5 + 12 bytes
+++ mo_zero!? compiled, 3 + 12 bytes
+++ mo!=zero compiled, 14 + 12 bytes
+++ mo_equal!? compiled, 8 + 12 bytes
+++ mo_divides!? not compiled (C version available)
+++ mo!=modiv1 compiled, 19 + 12 bytes
+++ mo_compare not compiled (C version available)
+++ mo_dlexcomp compiled, 6 + 16 bytes
+++ mo!=degcomp not compiled (C version available)
+++ mo!=revlexcomp compiled, 34 + 20 bytes
+++ mo!=lexcomp not compiled (C version available)
+++ mo_comp compiled, 7 + 12 bytes
+++ mo_from_ei compiled, 13 + 20 bytes
+++ mo_vdivides!? not compiled (C version available)
+++ mo_deletecomp compiled, 23 + 16 bytes
+++ mo_times_ei compiled, 20 + 12 bytes
+++ mo_deg compiled as link to cdr
+++ mo_getdegree compiled, 16 + 20 bytes
+++ mo_lcm compiled, 48 + 16 bytes
+++ mo_gcd compiled, 38 + 16 bytes
+++ mo_neg compiled, 80 + 8 bytes
+++ mo_sum not compiled (C version available)
+++ mo!=sum not compiled (C version available)
+++ mo_diff compiled, 6 + 16 bytes
+++ mo_qrem compiled, 64 + 24 bytes
+++ mo_power compiled, 84 + 8 bytes
+++ mo!=pair compiled, 20 + 12 bytes
+++ mo_2list compiled, 63 + 28 bytes
+++ mo_varexp compiled, 24 + 32 bytes
+++ mo_inc compiled, 78 + 32 bytes
+++ mo_linear compiled, 14 + 16 bytes
+++ mo_ecart not compiled (C version available)
+++ mo_radical compiled, 52 + 20 bytes
+++ mo_seed compiled, 56 + 36 bytes
+++ mo_wconvert compiled, 61 + 24 bytes
+++ mo_from_a compiled, 68 + 40 bytes
+++ mo_2a compiled, 6 + 20 bytes
+++ mo!=expvec2a1 compiled, 42 + 24 bytes
+++ mo_prin compiled, 7 + 20 bytes
+++ mo!=dpevlpri1 compiled, 35 + 32 bytes
+++ mo_support compiled, 31 + 24 bytes
Completed FASL files for "mo"



*** Compiling dpoly ... 


FASLOUT "dpoly": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dp_lc compiled as link to cdar
+++ dp_lmon compiled as link to caar
+++ dp_term not compiled (C version available)
+++ dp_from_ei compiled, 9 + 24 bytes
+++ dp_fi compiled, 12 + 24 bytes
+++ dp_fbc compiled, 11 + 20 bytes
+++ dp!=comp compiled, 25 + 20 bytes
+++ dp_comp compiled, 38 + 16 bytes
+++ dp!=mocompare compiled, 7 + 16 bytes
+++ dp_neworder compiled, 43 + 20 bytes
+++ dp_neg compiled, 36 + 12 bytes
+++ dp_times_mo compiled, 38 + 12 bytes
+++ dp_times_bc not compiled (C version available)
+++ dp_times_bcmo compiled, 46 + 16 bytes
+++ dp_times_ei compiled, 44 + 16 bytes
+++ dp_project compiled, 55 + 16 bytes
+++ dp_content compiled, 28 + 28 bytes
+++ dp_mondelete compiled, 64 + 24 bytes
+++ dp!=cmf compiled, 27 + 24 bytes
+++ dp_unit!? compiled, 7 + 16 bytes
+++ dp_simp compiled, 81 + 44 bytes
+++ dp_prod compiled, 15 + 12 bytes
+++ dp!=prod compiled, 28 + 16 bytes
+++ dp_sum not compiled (C version available)
+++ dp_diff not compiled (C version available)
+++ dp_power compiled, 31 + 36 bytes
+++ dp!=power1 compiled, 14 + 28 bytes
+++ dp!=power compiled, 33 + 20 bytes
+++ dp_tcpart compiled, 28 + 12 bytes
+++ dp_deletecomp compiled, 42 + 16 bytes
+++ dp_factor compiled, 48 + 40 bytes
+++ dp_from_a compiled, 87 + 44 bytes
+++ dp!=a2dpatom compiled, 36 + 44 bytes
+++ dp!=fnsum compiled, 20 + 12 bytes
+++ dp!=fnprod compiled, 20 + 12 bytes
+++ dp!=fndif compiled, 5 + 12 bytes
+++ dp!=fnpow compiled as link to dp_power
+++ dp!=fnneg compiled, 16 + 24 bytes
+++ dp!=fnquot compiled, 27 + 36 bytes
+++ dp!=fnquot1 compiled, 24 + 24 bytes
+++ dp_2a compiled, 8 + 20 bytes
+++ dp!=2a compiled, 44 + 44 bytes
+++ dp!=replus compiled, 12 + 12 bytes
+++ dp!=retimes compiled, 21 + 16 bytes
+++ dp_print compiled, 10 + 12 bytes
+++ dp_print1 compiled, 65 + 60 bytes
+++ dp_print2 compiled, 77 + 36 bytes
+++ dp_ecart not compiled (C version available)
+++ dp!=ecart not compiled (C version available)
+++ dp_homogenize compiled, 87 + 28 bytes
+++ dp_seed compiled, 48 + 20 bytes
+++ dp!=compact compiled, 25 + 12 bytes
+++ dp_xlt compiled, 90 + 28 bytes
+++ dp_pseudodivmod compiled, 31 + 48 bytes
+++ dpgcd compiled, 15 + 28 bytes
+++ dpgcd!* compiled, 49 + 60 bytes
Completed FASL files for "dpoly"



*** Compiling bas ... 


FASLOUT "bas": IN files;  or type in expressions
When all done, execute FASLEND;
+++ bas_dpoly compiled as link to cadr
+++ bas_dplen compiled as link to caddr
+++ bas_nr compiled as link to car
+++ bas_dpecart compiled as link to cadddr
+++ bas_rep not compiled (C version available)
+++ bas_newnumber compiled, 4 + 8 bytes
+++ bas_make compiled, 13 + 12 bytes
+++ bas_make1 not compiled (C version available)
+++ bas_getelement compiled, 26 + 16 bytes
+++ bas_sort compiled, 4 + 16 bytes
+++ bas_print compiled, 31 + 32 bytes
+++ bas_renumber compiled, 44 + 16 bytes
+++ bas_setrelations compiled, 30 + 20 bytes
+++ bas_removerelations compiled, 19 + 8 bytes
+++ bas_getrelations compiled, 27 + 20 bytes
+++ bas_from_a compiled, 50 + 32 bytes
+++ bas_2a compiled, 42 + 20 bytes
+++ bas_neworder compiled, 54 + 28 bytes
+++ bas_zerodelete compiled, 22 + 16 bytes
+++ bas_simpelement compiled, 164 + 64 bytes
+++ bas_simp compiled, 34 + 12 bytes
+++ bas_zero!? compiled, 15 + 12 bytes
+++ bas_sieve compiled, 109 + 64 bytes
+++ bas_homogenize compiled, 58 + 28 bytes
+++ bas_dehomogenize compiled, 80 + 48 bytes
+++ bas!=factorunits compiled, 62 + 44 bytes
+++ bas!=delprod compiled, 32 + 28 bytes
+++ lambda_dgt3bub0lgee compiled, 5 + 16 bytes
+++ bas!=detectunits compiled, 23 + 32 bytes
+++ bas_factorunits compiled, 9 + 24 bytes
+++ bas_detectunits compiled, 9 + 24 bytes
Completed FASL files for "bas"



*** Compiling dpmat ... 


FASLOUT "dpmat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dpmat_rows compiled as link to cadr
+++ dpmat_cols compiled as link to caddr
+++ dpmat_list compiled as link to cadddr
+++ dpmat_coldegs compiled, 4 + 16 bytes
+++ dpmat_gbtag compiled, 4 + 16 bytes
+++ dpmat_rowdegrees compiled, 89 + 40 bytes
+++ dpmat_make compiled, 14 + 12 bytes
+++ dpmat_element compiled, 11 + 28 bytes
+++ dpmat_print compiled, 4 + 16 bytes
+++ getleadterms!* compiled, 80 + 52 bytes
+++ savemat!* compiled, 126 + 108 bytes
+++ initmat!* compiled, 128 + 84 bytes
+++ savemat compiled, 11 + 24 bytes
+++ initmat compiled, 10 + 24 bytes
+++ dpmat!=dpsubst compiled, 27 + 28 bytes
+++ dpmat_mult compiled, 103 + 68 bytes
+++ dpmat_times_dpoly compiled, 98 + 56 bytes
+++ dpmat_neg compiled, 89 + 60 bytes
+++ dpmat_diff compiled, 6 + 16 bytes
+++ dpmat_sum compiled, 174 + 76 bytes
+++ dpmat_from_dpoly compiled, 25 + 28 bytes
+++ dpmat_unit compiled, 52 + 28 bytes
+++ dpmat_unitideal!? compiled, 15 + 28 bytes
+++ dpmat_transpose compiled, 11 + 24 bytes
+++ dpmat!=transpose compiled, 126 + 56 bytes
+++ ideal2mat!* compiled, 92 + 76 bytes
+++ dpmat_renumber compiled, 100 + 72 bytes
+++ mathomogenize!* compiled, 26 + 40 bytes
+++ mathomogenize compiled, 14 + 36 bytes
+++ matdehomogenize!* compiled, 26 + 40 bytes
+++ dpmat_sieve compiled, 29 + 36 bytes
+++ dpmat_neworder compiled, 14 + 32 bytes
+++ dpmat_zero!? compiled, 4 + 16 bytes
+++ dpmat_project compiled, 64 + 40 bytes
+++ dpmat_2a compiled, 193 + 44 bytes
+++ dpmat_from_a compiled, 109 + 72 bytes
+++ dpmat_sub compiled, 16 + 32 bytes
+++ dpmat_det compiled, 22 + 44 bytes
Completed FASL files for "dpmat"



*** Compiling red ... 


FASLOUT "red": IN files;  or type in expressions
When all done, execute FASLEND;
+++ red_better compiled, 8 + 12 bytes
+++ red_prepare compiled, 17 + 36 bytes
+++ red_extract compiled, 23 + 36 bytes
+++ red_subst compiled as link to red=subst1
+++ red!=subst1 compiled, 139 + 112 bytes
+++ red!=subst2 compiled, 68 + 80 bytes
+++ red_topredbe compiled, 43 + 48 bytes
+++ red_divtestbe not compiled (C version available)
+++ red_divtest compiled, 16 + 20 bytes
+++ red_topred compiled, 39 + 36 bytes
+++ red_update compiled, 97 + 64 bytes
+++ red!=cancelsimp compiled, 15 + 24 bytes
+++ red!=hide compiled, 42 + 20 bytes
+++ red!=hidelt compiled, 19 + 32 bytes
+++ red!=recover compiled, 44 + 32 bytes
+++ red_tailreddriver compiled, 29 + 20 bytes
+++ red_tailred compiled, 14 + 24 bytes
+++ red_totalred compiled, 6 + 16 bytes
+++ red_straight compiled, 49 + 28 bytes
+++ lambda_sm1s5cb2qn9e compiled, 10 + 20 bytes
+++ red_collect compiled, 11 + 20 bytes
+++ red_topinterreduce compiled, 74 + 64 bytes
+++ red_redpol compiled, 17 + 28 bytes
+++ red_interreduce compiled, 9 + 20 bytes
Completed FASL files for "red"



*** Compiling groeb ... 


FASLOUT "groeb": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gbtestversion compiled, 21 + 36 bytes
+++ groeb!=postprocess compiled, 43 + 56 bytes
+++ groeb_stbasis compiled, 11 + 16 bytes
+++ groeb!=choose_driver compiled, 374 + 156 bytes
+++ groeb!=generaldriver compiled, 281 + 180 bytes
+++ groeb!=rf1 compiled, 5 + 12 bytes
+++ groeb!=rf2 compiled, 51 + 40 bytes
+++ groeb!=rf3 compiled, 25 + 20 bytes
+++ groeb_lazystbasis compiled, 11 + 16 bytes
+++ groeb!=lazymocompare compiled, 8 + 12 bytes
+++ groeb!=queuesort compiled, 10 + 20 bytes
+++ groeb!=nextspol compiled, 18 + 32 bytes
+++ groeb!=lazydriver compiled, 318 + 188 bytes
+++ groeb!=crita compiled, 4 + 16 bytes
+++ groeb!=testa not compiled (C version available)
+++ groeb!=critb compiled, 53 + 16 bytes
+++ groeb!=testb compiled, 53 + 52 bytes
+++ groeb!=critc compiled, 51 + 16 bytes
+++ groeb!=testc1 compiled, 21 + 40 bytes
+++ groeb_updatepl compiled, 76 + 56 bytes
+++ groeb_makepairlist compiled, 22 + 12 bytes
+++ groeb!=i compiled, 5 + 20 bytes
+++ groeb!=j compiled, 5 + 20 bytes
+++ groeb!=better compiled, 30 + 28 bytes
+++ groeb!=weight compiled, 14 + 16 bytes
+++ groeb!=newpair compiled, 27 + 24 bytes
+++ groeb_printpairlist compiled, 26 + 32 bytes
+++ groeb_printpair compiled, 22 + 36 bytes
+++ groeb_spol compiled, 123 + 92 bytes
+++ groeb_mingb compiled, 84 + 48 bytes
+++ groeb!=delete compiled, 21 + 12 bytes
+++ groeb_minimize compiled, 281 + 108 bytes
+++ groeb_homstbasis compiled, 213 + 112 bytes
+++ homstbasis compiled, 11 + 28 bytes
+++ homstbasis!* compiled, 12 + 20 bytes
+++ lazystbasis compiled, 11 + 28 bytes
+++ lazystbasis!* compiled, 11 + 16 bytes
Completed FASL files for "groeb"



*** Compiling groebf ... 


FASLOUT "groebf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebf!=problemsort compiled, 34 + 20 bytes
+++ groebf!=resultsort compiled, 8 + 12 bytes
+++ intf!=groebfactor compiled, 110 + 56 bytes
+++ listgroebfactor compiled, 84 + 36 bytes
+++ listgroebfactor!* compiled, 114 + 32 bytes
+++ groebfactor!* compiled, 92 + 76 bytes
+++ intf!=extendedgroebfactor compiled, 132 + 56 bytes
+++ extendedgroebfactor!* compiled, 95 + 80 bytes
+++ groebf!=extendedmasterprocess compiled, 151 + 52 bytes
+++ intf!=extendedgroebfactor1 compiled, 132 + 56 bytes
+++ extendedgroebfactor1!* compiled, 130 + 88 bytes
+++ lambda_m7nfykh8nvke compiled, 5 + 12 bytes
+++ groebf!=extendedmasterprocess1 compiled, 250 + 80 bytes
+++ groebf!=masterprocess compiled, 340 + 96 bytes
+++ groebf!=initproblem compiled, 18 + 28 bytes
+++ lambda_j0xlkptninn2 compiled, 4 + 12 bytes
+++ groebf!=redtest compiled, 24 + 28 bytes
+++ groebf!=sieve compiled, 81 + 28 bytes
+++ groebf!=test compiled, 40 + 36 bytes
+++ groebf!=newcon compiled, 86 + 28 bytes
+++ groebf!=preprocess compiled, 200 + 112 bytes
+++ groebf!=slave compiled, 535 + 192 bytes
+++ groebf!=postprocess1 compiled, 89 + 52 bytes
+++ groebf!=postprocess2 compiled, 1196 + 152 bytes
+++ groebf!=elcbe compiled, 80 + 28 bytes
+++ groebf!=postprocess3 compiled, 45 + 32 bytes
+++ groebf!=prod compiled, 67 + 36 bytes
+++ groebf!=zerosolve compiled, 117 + 40 bytes
+++ groebf_zeroprimes1 compiled, 258 + 84 bytes
Completed FASL files for "groebf"



*** Compiling matop ... 


FASLOUT "matop": IN files;  or type in expressions
When all done, execute FASLEND;
+++ matop!=testdpmatlist compiled, 66 + 40 bytes
+++ matappend!* compiled, 107 + 48 bytes
+++ matop!=matappend compiled, 41 + 24 bytes
+++ mat2list!* compiled, 196 + 60 bytes
+++ matsum!* compiled, 4 + 16 bytes
+++ matop!=matsum compiled, 41 + 24 bytes
+++ matop!=idealprod2 compiled, 192 + 64 bytes
+++ idealprod!* compiled, 32 + 24 bytes
+++ matop!=idealprod compiled, 41 + 24 bytes
+++ idealpower!* compiled, 48 + 44 bytes
+++ idealpower compiled, 14 + 32 bytes
+++ matop!=shiftdegs compiled, 38 + 8 bytes
+++ directsum!* compiled, 166 + 84 bytes
+++ matop!=directsum compiled, 41 + 24 bytes
+++ deleteunits compiled, 15 + 32 bytes
+++ deleteunits!* compiled, 60 + 40 bytes
+++ interreduce!* compiled, 32 + 44 bytes
+++ interreduce compiled, 13 + 32 bytes
+++ gbasis!* compiled, 16 + 20 bytes
+++ matop!=tangentcone compiled, 29 + 40 bytes
+++ tangentcone!* compiled, 94 + 72 bytes
+++ syzygies1!* compiled, 21 + 36 bytes
+++ syzygies!* compiled, 4 + 16 bytes
+++ normalform!* compiled, 191 + 80 bytes
+++ matop_pseudomod compiled, 4 + 12 bytes
+++ mod!* compiled, 30 + 44 bytes
+++ mod compiled, 348 + 88 bytes
+++ normalform compiled, 36 + 36 bytes
+++ eliminate!* compiled, 92 + 88 bytes
+++ eliminate compiled, 26 + 44 bytes
+++ matintersect!* compiled, 262 + 124 bytes
+++ matop!=matintersect compiled, 41 + 24 bytes
+++ matop!=equalp compiled, 67 + 60 bytes
+++ modequalp!* compiled, 8 + 12 bytes
+++ matop!=submodulep compiled, 51 + 68 bytes
+++ submodulep!* compiled, 74 + 52 bytes
Completed FASL files for "matop"



*** Compiling quot ... 


FASLOUT "quot": IN files;  or type in expressions
When all done, execute FASLEND;
+++ matquot compiled, 30 + 52 bytes
+++ matquot!* compiled, 19 + 32 bytes
+++ quot!=quot compiled, 94 + 60 bytes
+++ idealquotient compiled, 18 + 32 bytes
+++ modulequotient compiled, 18 + 32 bytes
+++ annihilator compiled, 13 + 32 bytes
+++ idealquotient2!* compiled, 75 + 52 bytes
+++ modulequotient2!* compiled, 198 + 80 bytes
+++ quot!=mquot compiled, 95 + 60 bytes
+++ annihilator2!* compiled, 25 + 36 bytes
+++ idealquotient1!* compiled, 186 + 124 bytes
+++ modulequotient1!* compiled, 279 + 144 bytes
+++ annihilator1!* compiled, 22 + 32 bytes
+++ matqquot compiled, 30 + 52 bytes
+++ matqquot!* compiled, 25 + 32 bytes
+++ matstabquot compiled, 18 + 32 bytes
+++ matstabquot!* compiled, 189 + 76 bytes
+++ quot!=stabquot compiled, 194 + 128 bytes
Completed FASL files for "quot"



*** Compiling moid ... 


FASLOUT "moid": IN files;  or type in expressions
When all done, execute FASLEND;
+++ moid_from_bas compiled, 35 + 20 bytes
+++ moid_from_dpmat compiled, 170 + 40 bytes
+++ moid_2a compiled, 47 + 28 bytes
+++ moid_from_a compiled, 42 + 28 bytes
+++ moid_print compiled, 4 + 16 bytes
+++ moid_sum compiled, 5 + 12 bytes
+++ moid_intersect compiled, 52 + 16 bytes
+++ moid_sort compiled, 4 + 16 bytes
+++ moid_red compiled, 4 + 16 bytes
+++ moid!=red compiled, 20 + 12 bytes
+++ moid_member compiled, 13 + 12 bytes
+++ moid_radical compiled, 38 + 16 bytes
+++ moid_quot compiled, 46 + 20 bytes

*** local variable c in procedure moid_primes not used 
+++ moid_primes compiled, 107 + 36 bytes
+++ moid!=primes compiled, 173 + 32 bytes
+++ moid!=sps compiled, 53 + 12 bytes
+++ lambda_t7euxoou26hh compiled, 9 + 8 bytes
+++ moid_max compiled, 8 + 16 bytes
+++ indepvarsets!* compiled, 85 + 40 bytes
+++ lambda_t7euxoou26hh compiled, 9 + 8 bytes
+++ moid_goodindepvarset compiled, 163 + 40 bytes
+++ dim!* compiled, 13 + 28 bytes
+++ codim!* compiled, 9 + 20 bytes
+++ easyindepset compiled, 13 + 32 bytes
+++ easyindepset!* compiled, 73 + 28 bytes
+++ moid!=ept compiled, 14 + 16 bytes
+++ easydim compiled, 11 + 28 bytes
+++ easydim!* compiled, 51 + 36 bytes
Completed FASL files for "moid"



*** Compiling hf ... 


FASLOUT "hf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ hftestversion compiled, 19 + 36 bytes
+++ hf!=whilb1 compiled, 83 + 48 bytes
+++ hf!=whilbmon compiled, 94 + 40 bytes
+++ hf!=powers compiled, 16 + 20 bytes
+++ hf!=whilb2 compiled, 101 + 60 bytes
+++ hf_whilb3 compiled, 39 + 28 bytes
+++ hf!=whilb3 compiled, 47 + 44 bytes
+++ hf_whilb compiled, 104 + 76 bytes
+++ hf!=whilb2hs compiled, 54 + 48 bytes
+++ weightedhilbertseries!* compiled, 5 + 16 bytes
+++ hf_whs_from_resolution compiled, 5 + 16 bytes
+++ hilbertseries!* compiled, 7 + 20 bytes
+++ hf_mult compiled, 5 + 20 bytes
+++ hf!=sum_up compiled, 17 + 16 bytes
+++ hf_dim compiled, 43 + 24 bytes
+++ degree!* compiled, 4 + 16 bytes
+++ weightedhilbertseries compiled, 92 + 52 bytes
Completed FASL files for "hf"



*** Compiling res ... 


FASLOUT "res": IN files;  or type in expressions
When all done, execute FASLEND;
+++ resolve!* compiled, 68 + 48 bytes
+++ bettinumbers!* compiled, 32 + 12 bytes
+++ gradedbettinumbers!* compiled, 198 + 36 bytes
Completed FASL files for "res"



*** Compiling intf ... 


FASLOUT "intf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ intf!=clean compiled, 17 + 12 bytes
+++ intf_test compiled, 13 + 24 bytes
+++ intf_get compiled, 23 + 44 bytes
+++ intf!=set compiled, 58 + 52 bytes
+++ intf!=setideal compiled, 73 + 80 bytes
+++ intf!=setmodule compiled, 69 + 80 bytes
+++ intf!=setring compiled, 29 + 48 bytes
+++ intf!=getring compiled, 19 + 28 bytes
+++ ideal2mat compiled, 53 + 36 bytes
+++ mat2list compiled, 122 + 44 bytes
+++ intf!=setgbasis compiled, 16 + 28 bytes
+++ setdegrees compiled, 96 + 44 bytes
+++ intf!=getdegrees compiled, 42 + 24 bytes
+++ getecart compiled, 10 + 28 bytes
+++ intf!=gbasis compiled, 27 + 32 bytes
+++ setmonset compiled, 12 + 28 bytes
+++ setmonset!* compiled, 15 + 32 bytes
+++ getmonset compiled, 3 + 16 bytes
+++ intf!=resolve compiled, 135 + 52 bytes
+++ intf!=syzygies compiled, 27 + 32 bytes
+++ intf!=indepvarsets compiled, 116 + 44 bytes
+++ intf_getleadterms compiled, 29 + 40 bytes
+++ intf!=hilbertseries compiled, 46 + 44 bytes
+++ intf_getmult compiled, 46 + 44 bytes
+++ intf!=dim compiled, 56 + 52 bytes
+++ intf!=codim compiled, 9 + 20 bytes
+++ intf!=bettinumbers compiled, 18 + 36 bytes
+++ intf!=gradedbettinumbers compiled, 53 + 36 bytes
+++ intf!=degsfromresolution compiled, 127 + 48 bytes
+++ sieve compiled, 20 + 32 bytes
Completed FASL files for "intf"



*** Compiling odim ... 


FASLOUT "odim": IN files;  or type in expressions
When all done, execute FASLEND;
+++ odim!=zerop compiled, 32 + 44 bytes
+++ dimzerop!* compiled, 5 + 12 bytes
+++ odim_parameter compiled, 4 + 16 bytes
+++ odim!=parameter compiled, 12 + 12 bytes
+++ odim!=parameter1 compiled, 100 + 32 bytes
+++ odim!=evkbase compiled, 27 + 40 bytes
+++ getkbase!* compiled, 60 + 44 bytes
+++ odim!=kbase compiled, 68 + 24 bytes
+++ odim_up compiled, 108 + 104 bytes
+++ odim!=greater compiled, 10 + 20 bytes
+++ odim!=reduce compiled, 101 + 64 bytes
+++ lambda_92q4ydyoore9 compiled, 4 + 8 bytes
+++ lambda_92q4ydyoore9 compiled, 4 + 8 bytes
+++ lambda_92q4ydyoore9 compiled, 4 + 8 bytes
+++ lambda_92q4ydyoore9 compiled, 4 + 8 bytes
+++ lambda_vwmylj2k5qw compiled, 4 + 8 bytes
+++ odim_borderbasis compiled, 550 + 116 bytes
+++ odim!=interior compiled, 30 + 28 bytes
Completed FASL files for "odim"



*** Compiling prime ... 


FASLOUT "prime": IN files;  or type in expressions
When all done, execute FASLEND;
+++ prime!=mksqrfree compiled, 20 + 36 bytes
+++ prime!=evzero compiled, 28 + 40 bytes
+++ zeroradical!* compiled, 94 + 68 bytes
+++ prime!=eviszero compiled, 32 + 44 bytes
+++ iszeroradical!* compiled, 56 + 56 bytes
+++ zeroprimes compiled, 48 + 36 bytes
+++ zeroprimes!* compiled, 57 + 44 bytes
+++ prime_iszeroprime compiled, 30 + 44 bytes
+++ prime_zeroprimes1 compiled, 403 + 88 bytes
+++ prime!=iszeroprime1 compiled, 71 + 60 bytes
+++ prime_gpchange compiled, 75 + 64 bytes
+++ prime!=zeroprimes2 compiled, 358 + 128 bytes
+++ prime!=zeroprimes3 compiled, 124 + 72 bytes
+++ prime!=iszeroprime2 compiled, 103 + 92 bytes
+++ prime!=iszeroprime3 compiled, 61 + 60 bytes
+++ prime!=isprime compiled, 32 + 44 bytes
+++ isprime!* compiled, 173 + 124 bytes
+++ isolatedprimes compiled, 48 + 36 bytes
+++ isolatedprimes!* compiled, 55 + 44 bytes
+++ prime!=isoprimes compiled, 326 + 128 bytes
+++ prime!=factorisoprimes compiled, 364 + 132 bytes
+++ prime!=quot compiled, 67 + 32 bytes
+++ radical compiled, 15 + 36 bytes
+++ radical!* compiled, 214 + 128 bytes
+++ unmixedradical compiled, 15 + 36 bytes
+++ unmixedradical!* compiled, 194 + 132 bytes
+++ eqhull compiled, 15 + 36 bytes
+++ eqhull!* compiled, 10 + 20 bytes
+++ prime!=eqhull compiled, 170 + 124 bytes
+++ prime_separate compiled, 46 + 12 bytes
+++ prime!=polynomial compiled, 39 + 40 bytes
+++ zeroprimarydecomposition compiled, 67 + 44 bytes
+++ zeroprimarydecomposition!* compiled, 83 + 36 bytes
+++ easyprimarydecomposition compiled, 67 + 44 bytes
+++ easyprimarydecomposition!* compiled, 91 + 28 bytes
+++ primarydecomposition compiled, 69 + 48 bytes
+++ primarydecomposition!* compiled, 55 + 36 bytes
+++ prime!=decompose1 compiled, 569 + 152 bytes
+++ prime!=decompose2 compiled, 570 + 156 bytes
+++ prime!=necessary compiled, 166 + 64 bytes
Completed FASL files for "prime"



*** Compiling scripts ... 


FASLOUT "scripts": IN files;  or type in expressions
When all done, execute FASLEND;
+++ varopt compiled, 11 + 28 bytes
+++ lambda_x9hgwkw3owh3 compiled, 4 + 8 bytes
+++ varopt!* compiled, 72 + 36 bytes
+++ preimage compiled, 32 + 40 bytes
+++ preimage!* compiled, 154 + 100 bytes
+++ ratpreimage compiled, 32 + 40 bytes
+++ ratpreimage!* compiled, 264 + 128 bytes
+++ affine_points1!* compiled, 206 + 52 bytes
+++ scripts!=ideal compiled, 98 + 40 bytes
+++ proj_points1!* compiled, 102 + 44 bytes
+++ affine_monomial_curve compiled, 17 + 28 bytes
+++ affine_monomial_curve!* compiled, 163 + 120 bytes
+++ proj_monomial_curve compiled, 17 + 28 bytes
+++ proj_monomial_curve!* compiled, 234 + 136 bytes
+++ blowup compiled, 25 + 32 bytes
+++ blowup!* compiled, 318 + 156 bytes
+++ assgrad compiled, 25 + 32 bytes
+++ assgrad!* compiled, 31 + 36 bytes
+++ analytic_spread compiled, 11 + 28 bytes
+++ analytic_spread!* compiled, 88 + 72 bytes
+++ sym compiled, 17 + 32 bytes
+++ sym!* compiled, 111 + 100 bytes
+++ minimal_generators compiled, 13 + 32 bytes
+++ minimal_generators!* compiled, 7 + 16 bytes
+++ symbolic_power compiled, 16 + 32 bytes
+++ symbolic_power!* compiled, 4 + 16 bytes
+++ scripts!=nzdp compiled, 50 + 64 bytes
+++ nzdp!* compiled, 5 + 16 bytes
Completed FASL files for "scripts"



*** Compiling calimat ... 


FASLOUT "calimat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ matjac compiled, 147 + 44 bytes
+++ random_linear_form compiled, 63 + 36 bytes
+++ singular_locus compiled, 17 + 32 bytes
+++ singular_locus!* compiled, 19 + 40 bytes
+++ minors compiled, 329 + 44 bytes
+++ ideal_of_minors compiled, 10 + 24 bytes
+++ ideal_of_minors!* compiled, 15 + 36 bytes
+++ calimat!=submat compiled, 112 + 12 bytes
+++ calimat!=sum compiled, 110 + 16 bytes
+++ calimat!=neg compiled, 100 + 12 bytes
+++ calimat!=tp compiled, 6 + 12 bytes
+++ calimat!=zero!? compiled, 38 + 12 bytes
+++ calimat!=skewsymmetric!? compiled, 7 + 20 bytes
+++ pfaffian compiled, 124 + 40 bytes
+++ calimat!=pfaff compiled, 146 + 40 bytes
+++ ideal_of_pfaffians compiled, 10 + 24 bytes
+++ ideal_of_pfaffians!* compiled, 225 + 68 bytes
Completed FASL files for "calimat"



*** Compiling lf ... 


FASLOUT "lf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lf_dualbasis compiled, 238 + 116 bytes
+++ lf!=sort compiled, 10 + 20 bytes
+++ lf_dualhbasis compiled, 247 + 124 bytes
+++ lambda_es43dh2jeg09 compiled, 8 + 16 bytes
+++ lf!=compact compiled, 58 + 24 bytes
+++ lf!=zero compiled, 4 + 8 bytes
+++ lf!=sum compiled, 10 + 16 bytes
+++ lf!=times_bc compiled, 10 + 16 bytes
+++ lf!=times_bc1 compiled, 43 + 16 bytes
+++ lf!=sum1 compiled, 71 + 24 bytes
+++ lf!=simp compiled, 126 + 36 bytes
+++ lf!=lvar compiled as link to caadr
+++ lf!=lc compiled as link to cdadr
+++ lf!=less compiled, 12 + 20 bytes
+++ lf!=reduce compiled, 92 + 68 bytes
+++ affine_points compiled, 11 + 28 bytes
+++ affine_points!* compiled, 179 + 84 bytes
+++ proj_points compiled, 11 + 28 bytes
+++ proj_points!* compiled, 186 + 84 bytes
+++ lf!=pointevlf compiled, 63 + 48 bytes
+++ lf!=pointvarlessp compiled, 4 + 16 bytes
+++ lf!=change_termorder compiled, 53 + 72 bytes
+++ change_termorder!* compiled, 201 + 136 bytes
+++ lf!=tovarlessp compiled, 5 + 16 bytes
+++ lf!=toevlf compiled, 186 + 56 bytes
+++ lf!=reducebc compiled, 30 + 32 bytes
+++ lf!=denom compiled, 18 + 20 bytes
+++ lf!=change_termorder1 compiled, 53 + 72 bytes
+++ change_termorder1!* compiled, 176 + 104 bytes
+++ lf!=tovarlessp1 compiled, 17 + 32 bytes
+++ lf!=toevlf1 compiled, 45 + 48 bytes
Completed FASL files for "lf"



*** Compiling triang ... 


FASLOUT "triang": IN files;  or type in expressions
When all done, execute FASLEND;
+++ triang!=trsort compiled, 8 + 16 bytes
+++ triang!=makedpmat compiled, 38 + 16 bytes
+++ zerosolve compiled, 11 + 28 bytes
+++ zerosolve!* compiled, 71 + 56 bytes
+++ triang_triang compiled, 67 + 56 bytes
+++ triang!=triang compiled, 177 + 56 bytes
+++ zerosolve1 compiled, 11 + 28 bytes
+++ zerosolve1!* compiled, 39 + 20 bytes
+++ triang_triang1 compiled, 62 + 52 bytes
+++ triang!=triang1 compiled, 284 + 104 bytes
+++ triang!=triang1a compiled, 181 + 64 bytes
+++ zerosolve2 compiled, 11 + 28 bytes
+++ zerosolve2!* compiled, 39 + 20 bytes
+++ triang_triang2 compiled, 62 + 52 bytes
+++ triang!=triang2 compiled, 313 + 120 bytes
+++ triang!=triang2a compiled, 181 + 64 bytes
Completed FASL files for "triang"

The system is about to do a restart...
REDUCE



*** Compiling camal ... 


FASLOUT "camal": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fs!:make!-nullangle compiled, 26 + 16 bytes
+++ fs!:null!-angle!: compiled, 3 + 12 bytes
+++ fs!:null!-angle compiled, 22 + 24 bytes
Completed FASL files for "camal"



*** Compiling fourdom ... 


FASLOUT "fourdom": IN files;  or type in expressions
When all done, execute FASLEND;
+++ i2fourier compiled, 7 + 20 bytes
+++ !*d2fourier compiled, 42 + 40 bytes
+++ !*sq2fourier compiled, 40 + 40 bytes
+++ fs!:minusp!: compiled, 3 + 12 bytes
+++ fs!:minusp compiled, 20 + 20 bytes
+++ fs!:times!: compiled, 85 + 28 bytes
+++ fs!:timescoeff compiled, 64 + 36 bytes
+++ fs!:times compiled, 19 + 20 bytes
+++ fs!:timesterm not compiled (C version available)

*** local variable ans in procedure fs:timestermterm not used 
+++ fs!:timestermterm not compiled (C version available)

*** local variable xx in procedure fs:expt: not used 
+++ fs!:expt!: compiled, 32 + 28 bytes
+++ make!-term compiled, 123 + 48 bytes
+++ fs!:quotient!: compiled, 18 + 36 bytes

*** local variable x in procedure fs:divide: not used 

*** local variable y in procedure fs:divide: not used 
+++ fs!:divide!: compiled, 6 + 24 bytes

*** local variable x in procedure fs:gcd: not used 

*** local variable y in procedure fs:gcd: not used 
+++ fs!:gcd!: compiled, 6 + 24 bytes
+++ fs!:difference!: compiled, 6 + 16 bytes
+++ fs!:negate!: compiled, 9 + 20 bytes
+++ fs!:negate compiled, 46 + 28 bytes
+++ fs!:zerop!: compiled, 35 + 20 bytes
+++ fs!:onep!: compiled, 3 + 12 bytes
+++ fs!:onep compiled, 25 + 28 bytes
+++ fs!:prepfn!: compiled, 1 + 8 bytes
+++ simpfs compiled, 1 + 8 bytes
+++ fs!:prin!: compiled, 7 + 24 bytes
+++ fs!:prin compiled, 21 + 28 bytes
+++ fs!:prin1 compiled, 103 + 76 bytes
+++ fs!:intequiv!: compiled, 36 + 28 bytes
Completed FASL files for "fourdom"



*** Compiling fourplus ... 


FASLOUT "fourplus": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fs!:plus!: compiled, 25 + 28 bytes
+++ copy!-tree compiled, 45 + 24 bytes
+++ fs!:plus not compiled (C version available)
+++ angles!-equal not compiled (C version available)
+++ fs!:angle!-order not compiled (C version available)
Completed FASL files for "fourplus"



*** Compiling makefour ... 


FASLOUT "makefour": IN files;  or type in expressions
When all done, execute FASLEND;
+++ harmonicp compiled, 4 + 12 bytes
+++ harmonic compiled, 49 + 44 bytes
+++ simpfourier compiled, 15 + 36 bytes
+++ simpfourier1 compiled, 52 + 56 bytes
+++ simpfouriersin compiled, 172 + 76 bytes
+++ simpfouriercos compiled, 172 + 76 bytes
+++ angle!-expression!-p compiled, 61 + 32 bytes
+++ compile!-angle!-expression compiled, 299 + 40 bytes
+++ simpfouriertimes compiled, 23 + 20 bytes
+++ simpfourierexpt compiled, 9 + 20 bytes
+++ simpfourierplus compiled, 23 + 20 bytes
+++ simpfourierdifference compiled, 13 + 20 bytes
+++ simpfourierminus compiled, 7 + 20 bytes
+++ simpfourierquot compiled, 20 + 28 bytes
+++ simphsin compiled, 17 + 40 bytes
+++ simphcos compiled, 17 + 40 bytes
Completed FASL files for "makefour"



*** Compiling hsub ... 


FASLOUT "hsub": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable fs:zero-generated in procedure hsub1 not used 
+++ hsub1 compiled, 143 + 84 bytes
+++ fs!:subang compiled, 87 + 36 bytes
+++ fs!:sub compiled, 64 + 56 bytes
+++ simphsub compiled, 228 + 116 bytes
Completed FASL files for "hsub"



*** Compiling hdiff ... 


FASLOUT "hdiff": IN files;  or type in expressions
When all done, execute FASLEND;
+++ hdiff compiled, 14 + 20 bytes
+++ hdiffterm compiled, 46 + 40 bytes
+++ hdiff1 compiled, 58 + 28 bytes
+++ simphdiff compiled, 72 + 64 bytes
+++ hint compiled, 14 + 20 bytes
+++ hintterm compiled, 60 + 40 bytes
+++ hint1 compiled, 51 + 32 bytes
+++ simphint compiled, 72 + 64 bytes
Completed FASL files for "hdiff"

The system is about to do a restart...
REDUCE



*** Compiling changevr ... 


FASLOUT "changevr": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpchangevar compiled, 438 + 104 bytes
+++ changearg compiled, 32 + 8 bytes
+++ subcare compiled, 39 + 16 bytes
+++ diffp compiled, 420 + 128 bytes
Completed FASL files for "changevr"

The system is about to do a restart...
REDUCE



*** Compiling compact ... 


FASLOUT "compact": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "compact"



*** Compiling mv ... 


FASLOUT "mv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mv!-!+ compiled, 66 + 16 bytes
+++ mv!-term!-!* compiled, 21 + 16 bytes
+++ mv!-term!-!/ compiled, 22 + 16 bytes
+++ mv!-domainlist compiled, 15 + 12 bytes
+++ mv!-pow!-mv!-!+ compiled, 16 + 16 bytes
+++ mv!-pow!-mv!-term!-!+ not compiled (C version available)
+++ mv!-pow!-!+ not compiled (C version available)
+++ mv!-pow!-!- compiled, 18 + 12 bytes
+++ mv!-pow!-!* compiled, 16 + 12 bytes
+++ mv!-pow!-minusp not compiled (C version available)
+++ mv!-pow!-!> compiled, 17 + 8 bytes
+++ mv!-reduced!-coeffs compiled, 28 + 16 bytes
+++ mv!-!/ compiled, 20 + 12 bytes
+++ sf2mv compiled, 6 + 12 bytes
+++ sf2mv1 compiled, 55 + 16 bytes
+++ nzeros compiled, 16 + 16 bytes
+++ mv2sf compiled, 30 + 16 bytes
+++ mv2sf1 compiled, 26 + 16 bytes
Completed FASL files for "mv"



*** Compiling mvmatch ... 


FASLOUT "mvmatch": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mv!-compact compiled, 68 + 36 bytes
+++ mv!-pow!-assoc compiled as link to assoc
+++ mv!-reverse compiled as link to reversip
+++ mv!-pow!-chk compiled, 13 + 16 bytes
+++ mv!-compact2 compiled, 26 + 32 bytes
+++ mv!-coeff!-replace compiled, 27 + 16 bytes
+++ equiv!-coeffs compiled, 47 + 24 bytes
Completed FASL files for "mvmatch"



*** Compiling reddom ... 


FASLOUT "reddom": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mv!-domainlist!-!+ compiled, 18 + 12 bytes
+++ mv!-domainlist!-!- compiled, 18 + 12 bytes
+++ mv!-domainlist!-!* compiled, 16 + 12 bytes
+++ reduce compiled, 30 + 32 bytes

*** local variable n in procedure set-weights not used 
+++ set!-weights compiled, 42 + 16 bytes
+++ reduce!-ratios compiled, 28 + 24 bytes
+++ zeros compiled, 15 + 12 bytes
+++ red!-ratios1 compiled, 19 + 12 bytes
+++ red!-ratios2 compiled, 40 + 16 bytes
+++ red!-lowest!-terms compiled, 31 + 20 bytes
+++ reduce!-columns compiled, 60 + 32 bytes
+++ more!-apartp compiled, 26 + 16 bytes
+++ reduce!-weights compiled, 49 + 28 bytes
+++ red!-weight not compiled (C version available)
+++ red!-weight1 not compiled (C version available)
+++ nonzero!-length not compiled (C version available)
+++ red!-weight!-less!-p compiled, 12 + 8 bytes
Completed FASL files for "reddom"



*** Compiling compactf ... 


FASLOUT "compactf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpcompact compiled, 53 + 60 bytes
+++ simpcompact1 compiled, 376 + 76 bytes
+++ compactbool compiled, 40 + 24 bytes
+++ compactsq compiled, 35 + 36 bytes
+++ compactf compiled, 53 + 56 bytes
+++ compactf0 compiled, 78 + 28 bytes
+++ compactfmatch compiled, 344 + 28 bytes
+++ compactfmatch1 compiled, 35 + 28 bytes
+++ compactfmatch2 compiled, 18 + 12 bytes
+++ compactf1 compiled, 19 + 16 bytes
+++ compactf11 compiled, 131 + 84 bytes
+++ remchkf compiled, 23 + 20 bytes
+++ remchkf1 compiled, 27 + 32 bytes
+++ xremf compiled, 188 + 48 bytes
+++ compactf2 compiled, 42 + 12 bytes
+++ compactf3 compiled, 17 + 28 bytes
Completed FASL files for "compactf"



*** Compiling comfac ... 


FASLOUT "comfac": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mv!-pow!-zerop compiled, 14 + 8 bytes
+++ mv!-pow!-gcd compiled, 18 + 16 bytes
+++ mv!-content compiled, 36 + 16 bytes
Completed FASL files for "comfac"

The system is about to do a restart...
REDUCE



*** Compiling dfpart ... 


FASLOUT "dfpart": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpdfp compiled, 195 + 88 bytes
+++ dfp!-normalize compiled, 80 + 28 bytes
+++ generic_function compiled, 270 + 112 bytes
+++ dfp_commute compiled, 39 + 28 bytes
+++ generic_arguments compiled, 6 + 16 bytes
+++ actual_arguments compiled, 9 + 16 bytes
+++ dfp!-rule!-found compiled, 13 + 16 bytes
+++ soft!-append compiled, 26 + 12 bytes
+++ generic!-sub compiled, 11 + 20 bytes
+++ dfp!-sub compiled, 100 + 36 bytes
+++ dfp!-sub1 compiled, 98 + 20 bytes

*** nonlocal use of undeclared variable ycoord* in procedure dfppri 

*** nonlocal use of undeclared variable ycoord* in procedure dfppri 

*** nonlocal use of undeclared variable ycoord* in procedure dfppri 

*** nonlocal use of undeclared variable ymin* in procedure dfppri 

*** nonlocal use of undeclared variable ycoord* in procedure dfppri 

*** nonlocal use of undeclared variable ymin* in procedure dfppri 

*** nonlocal use of undeclared variable ycoord* in procedure dfppri 

*** nonlocal use of undeclared variable ycoord* in procedure dfppri 
+++ ycoord!* declared fluid
+++ ymin!* declared fluid
+++ dfppri compiled, 73 + 56 bytes
+++ fancy!-dfppri compiled, 4 + 12 bytes
Completed FASL files for "dfpart"

The system is about to do a restart...
REDUCE



*** Compiling lie ... 


FASLOUT "lie": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "lie"



*** Compiling liendmc1 ... 


FASLOUT "liendmc1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ liendimcom1 compiled, 430 + 228 bytes
+++ lieninstruc compiled, 124 + 44 bytes
+++ lienjactest compiled, 268 + 60 bytes
+++ liendimcom compiled, 787 + 100 bytes
+++ liencentincom compiled, 334 + 100 bytes
+++ lienfindpair compiled, 256 + 76 bytes
+++ liennewstruc compiled, 490 + 84 bytes
+++ liencentoutcom compiled, 778 + 92 bytes
+++ lienoutform compiled, 373 + 168 bytes
Completed FASL files for "liendmc1"



*** Compiling lie1234 ... 


FASLOUT "lie1234": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lieclass compiled, 361 + 160 bytes
+++ lie2 compiled, 168 + 92 bytes
+++ lie3 compiled, 388 + 168 bytes
+++ independ compiled, 144 + 52 bytes
+++ com1 compiled, 1170 + 152 bytes
+++ com2 compiled, 2244 + 180 bytes
+++ com3 compiled, 800 + 124 bytes
+++ so3 compiled, 462 + 124 bytes
+++ so21 compiled, 4776 + 188 bytes
+++ lie4 compiled, 1778 + 196 bytes
+++ com41 compiled, 1239 + 128 bytes
+++ com42 compiled, 2186 + 124 bytes
+++ findcentre compiled, 1131 + 88 bytes
+++ centincom compiled, 548 + 108 bytes
+++ centoutcom compiled, 744 + 160 bytes
+++ trivcent compiled, 3905 + 168 bytes
+++ com43 compiled, 1279 + 116 bytes
+++ comcom0 compiled, 4022 + 204 bytes
+++ c0111 compiled, 124 + 96 bytes
+++ comcom1 compiled, 2528 + 260 bytes
+++ comcom3 compiled, 1509 + 200 bytes
+++ lie4so3 compiled, 390 + 72 bytes
+++ lie4so21 compiled, 4693 + 148 bytes
Completed FASL files for "lie1234"
Recompilation complete

The system is about to do a restart...
REDUCE


The system is about to do a restart...

nil

!*native_code

nil

t
Fast-loading "./reduce.img(user)"

nil
Fast-loading "./reduce.img(cslcompat)"
+++ Fastget size was 32, now 32
+++ Use fastget slot 0 for noncom
+++ Use fastget slot 1 for lose
+++ Fastget size was 32, now 32
+++ Use fastget slot 0 for noncom
+++ Use fastget slot 1 for lose

nil

nil
Fast-loading "./reduce.img(module)"

nil
Fast-loading "./reduce.img(cslprolo)"

nil

(cslcompat user cslprolo)

nil
Fast-loading "./reduce.img(rlisp)"
Fast-loading "./reduce.img(module)"
Fast-loading "./reduce.img(newtok)"
Fast-loading "./reduce.img(rsupport)"
Fast-loading "./reduce.img(slfns)"
Fast-loading "./reduce.img(superv)"
Fast-loading "./reduce.img(tok)"
Fast-loading "./reduce.img(xread)"
Fast-loading "./reduce.img(lpri)"
Fast-loading "./reduce.img(parser)"
Fast-loading "./reduce.img(block)"
Fast-loading "./reduce.img(form)"
Fast-loading "./reduce.img(proc)"
Fast-loading "./reduce.img(forstat)"
Fast-loading "./reduce.img(loops)"
Fast-loading "./reduce.img(statmisc)"
Fast-loading "./reduce.img(smacro)"
Fast-loading "./reduce.img(io)"
Fast-loading "./reduce.img(infix)"
Fast-loading "./reduce.img(switch)"
Fast-loading "./reduce.img(where)"
Fast-loading "./reduce.img(list)"
Fast-loading "./reduce.img(array)"
Fast-loading "./reduce.img(inter)"

nil
Fast-loading "./reduce.img(cslrend)"
Fast-loading "./reduce.img(autopatch)"
Fast-loading "./reduce.img(csl)"

nil
Fast-loading "./reduce.img(poly)"
Fast-loading "./reduce.img(polrep)"
Fast-loading "./reduce.img(quotf)"
Fast-loading "./reduce.img(gcd)"
Fast-loading "./reduce.img(exptf)"
Fast-loading "./reduce.img(kernel)"
Fast-loading "./reduce.img(mksp)"
Fast-loading "./reduce.img(reord)"
Fast-loading "./reduce.img(dmode)"
Fast-loading "./reduce.img(dmodeop)"
Fast-loading "./reduce.img(rational)"
Fast-loading "./reduce.img(rnelem)"
Fast-loading "./reduce.img(gint)"
Fast-loading "./reduce.img(cpxrn)"
Fast-loading "./reduce.img(compopr)"
Fast-loading "./reduce.img(modular)"
Fast-loading "./reduce.img(facform)"
Fast-loading "./reduce.img(homog)"
Fast-loading "./reduce.img(tdconv)"
Fast-loading "./reduce.img(primfac)"
Fast-loading "./reduce.img(specfac)"
Fast-loading "./reduce.img(kronf)"
Fast-loading "./reduce.img(conj)"
Fast-loading "./reduce.img(diff)"
Fast-loading "./reduce.img(polyop)"
Fast-loading "./reduce.img(decompos)"
Fast-loading "./reduce.img(interpol)"
Fast-loading "./reduce.img(subs2q)"
Fast-loading "./reduce.img(subs3q)"
Fast-loading "./reduce.img(subs4q)"
Fast-loading "./reduce.img(horner)"

nil
Fast-loading "./reduce.img(arith)"
Fast-loading "./reduce.img(smlbflot)"
Fast-loading "./reduce.img(bfauxil)"
Fast-loading "./reduce.img(paraset)"
Fast-loading "./reduce.img(math)"
Fast-loading "./reduce.img(rounded)"
Fast-loading "./reduce.img(comprd)"
Fast-loading "./reduce.img(rdelem)"
Fast-loading "./reduce.img(crelem)"
Fast-loading "./reduce.img(bfelem)"

nil
Fast-loading "./reduce.img(alg)"
Fast-loading "./reduce.img(alg-form)"
Fast-loading "./reduce.img(intro)"
Fast-loading "./reduce.img(general)"
Fast-loading "./reduce.img(farith)"
Fast-loading "./reduce.img(numsup)"
Fast-loading "./reduce.img(genmod)"
Fast-loading "./reduce.img(random)"
Fast-loading "./reduce.img(smallmod)"
Fast-loading "./reduce.img(zfactor)"
Fast-loading "./reduce.img(sort)"
Fast-loading "./reduce.img(reval)"
Fast-loading "./reduce.img(algbool)"
Fast-loading "./reduce.img(simp)"
Fast-loading "./reduce.img(exptchk)"
Fast-loading "./reduce.img(simplog)"
Fast-loading "./reduce.img(logsort)"
Fast-loading "./reduce.img(sub)"
Fast-loading "./reduce.img(order)"
Fast-loading "./reduce.img(forall)"
Fast-loading "./reduce.img(eqn)"
Fast-loading "./reduce.img(rmsubs)"
Fast-loading "./reduce.img(algdcl)"
Fast-loading "./reduce.img(opmtch)"
Fast-loading "./reduce.img(prep)"
Fast-loading "./reduce.img(extout)"
Fast-loading "./reduce.img(depend)"
Fast-loading "./reduce.img(str)"
Fast-loading "./reduce.img(coeff)"
Fast-loading "./reduce.img(weight)"
Fast-loading "./reduce.img(linop)"
Fast-loading "./reduce.img(elem)"

*** exp already defined as operator 

*** arbint declared operator 
Fast-loading "./reduce.img(showrule)"
Fast-loading "./reduce.img(nestrad)"
Fast-loading "./reduce.img(maxmin)"
Fast-loading "./reduce.img(nssimp)"
Fast-loading "./reduce.img(part)"
Fast-loading "./reduce.img(map)"

nil
Fast-loading "./reduce.img(mathpr)"
Fast-loading "./reduce.img(mprint)"
Fast-loading "./reduce.img(sqprint)"
Fast-loading "./reduce.img(ratprin)"
Fast-loading "./reduce.img(dfprin)"
Fast-loading "./reduce.img(fortpri)"

nil

nil
Fast-loading "./reduce.img(entry)"

nil

"Reduce (Free CSL version)"

"23-Apr-13"

nil

nil

nil

!~indefinite!-value!~

nil

nil

The system will be preserved on file "./reduce.img(InitialImage)"
+++ Garbage collection 2 (preserve) after 6.61+0.10 seconds
At gc end about 12.0 Mbytes of 116.0 (10.3%) of heap is in use

nil

t


nil


nil


nil




*** Compiling odesolve ... 


FASLOUT "odesolve": IN files;  or type in expressions
When all done, execute FASLEND;
+++ deg compiled, 20 + 32 bytes
+++ traceode!-print compiled, 61 + 32 bytes
+++ traceode compiled, 6 + 16 bytes
+++ traceode!* compiled, 9 + 16 bytes
+++ traceode1 compiled, 7 + 20 bytes
+++ newarbconst compiled, 13 + 32 bytes
+++ ode!-int compiled, 8 + 16 bytes
+++ odesolve!-multi!-int compiled, 31 + 32 bytes
Completed FASL files for "odesolve"



*** Compiling odeintfc ... 


FASLOUT "odeintfc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ odesolve!-eval compiled, 34 + 52 bytes
+++ odesolve compiled, 6 + 12 bytes
+++ odesolve!-eval1 compiled, 1226 + 348 bytes
+++ odesolve!-make!-explicit compiled, 262 + 64 bytes
+++ trig_simplify compiled, 9 + 24 bytes
+++ get_k_list compiled, 51 + 40 bytes
+++ get_k_list1 compiled, 12 + 24 bytes
+++ get_op_knl compiled, 26 + 12 bytes
+++ ensuredependency compiled, 47 + 36 bytes
+++ odesolve!-sort!-conds compiled, 334 + 64 bytes
+++ condeq compiled, 45 + 16 bytes
+++ lessp!-deriv!-ord compiled, 51 + 16 bytes
+++ odesolve!-depend compiled, 288 + 84 bytes
+++ odesolve!-system compiled, 13 + 12 bytes
+++ odesolve!-delay!-check compiled, 78 + 44 bytes
+++ odesolve!-with!-conds compiled, 190 + 92 bytes
+++ odesolve!-with!-conds1 compiled, 503 + 112 bytes
+++ ode!-soln!-check compiled, 293 + 144 bytes
+++ ode!-comp!-soln!-fails compiled, 488 + 148 bytes
+++ odesolve!-arbconsts compiled, 8 + 20 bytes
+++ odesolve!-arbconsts1 compiled, 25 + 16 bytes
Completed FASL files for "odeintfc"



*** Compiling odetop ... 


FASLOUT "odetop": IN files;  or type in expressions
When all done, execute FASLEND;
+++ odesolve!-run!-hook compiled, 46 + 16 bytes
+++ odesolve!-standardize compiled, 17 + 24 bytes
+++ odesimp!-interrupt compiled, 24 + 36 bytes
+++ odesolve!*0 compiled, 60 + 56 bytes
+++ odesolve!*1 compiled, 239 + 148 bytes
+++ odesolve!-firstorder compiled, 16 + 32 bytes
+++ odesolve!*2!* compiled, 47 + 52 bytes
+++ odesolve!*2 compiled, 26 + 44 bytes
+++ odesolve!-nonlinear compiled, 87 + 68 bytes
+++ odesolve!-interchange compiled, 300 + 128 bytes
+++ odesolve!-exact!* compiled, 16 + 16 bytes
+++ odesolve!-exact compiled, 116 + 84 bytes
+++ odesolve!-exact!-1 compiled, 119 + 76 bytes
+++ exact1_pde compiled, 38 + 36 bytes
+++ odesolve!-exact!-2 compiled, 419 + 140 bytes
+++ odesolve!-exact!-2!-test compiled, 161 + 44 bytes
+++ odesolve!-diff compiled, 391 + 160 bytes
+++ odesolve!-alg!-solve compiled, 465 + 196 bytes
+++ ode!-linearp compiled, 9 + 20 bytes
+++ ode!-lin!-form!-p compiled, 20 + 12 bytes
+++ ode!-lin!-term!-p compiled, 36 + 28 bytes
+++ ode!-order compiled, 32 + 24 bytes
+++ get_deriv_orders compiled, 38 + 28 bytes
+++ get_deriv_ords_knl compiled, 44 + 24 bytes
+++ newroot_of_unity compiled, 61 + 64 bytes
+++ newplus_or_minus compiled, 5 + 16 bytes
+++ newroot_of_unity_tag compiled as link to mkrootsoftag
+++ expand_roots_of_unity compiled, 69 + 44 bytes
+++ expand_roots_of_unity1 compiled, 164 + 84 bytes
+++ find_root_of_unity compiled, 24 + 20 bytes
Completed FASL files for "odetop"



*** Compiling odelin ... 


FASLOUT "odelin": IN files;  or type in expressions
When all done, execute FASLEND;
+++ odesolve!-linear compiled, 277 + 164 bytes
+++ odesolve!-linear!-basis compiled, 61 + 32 bytes
+++ odesolve!-linear!-basis!-recursive compiled, 24 + 24 bytes
+++ odesolve!-linear1 compiled, 171 + 100 bytes
+++ odesolve!-linearn compiled, 260 + 96 bytes
+++ odesolve!-basis2lincomb compiled, 61 + 56 bytes
+++ odesolve!-lincomb2basis compiled, 12 + 16 bytes
+++ odesolve!-lincomb2basis1 compiled, 94 + 72 bytes
+++ odesolve!-lcc compiled, 212 + 116 bytes
+++ odesolve!-lcc!-compsoln compiled, 642 + 140 bytes
+++ repart!* compiled, 14 + 28 bytes
+++ impart!* compiled, 14 + 28 bytes
+++ conj!* compiled, 14 + 28 bytes
+++ odesolve!-lcc!-pi compiled, 142 + 100 bytes
+++ odesolve!-pi compiled, 321 + 132 bytes
+++ list2mat compiled, 37 + 12 bytes
+++ odesolve!-euler compiled, 432 + 152 bytes
+++ odelin!-exact compiled, 371 + 144 bytes
+++ odelin!-reduce!-order compiled, 338 + 140 bytes
Completed FASL files for "odelin"



*** Compiling odespcfn ... 


FASLOUT "odespcfn": IN files;  or type in expressions
When all done, execute FASLEND;
+++ odesolve!-specfn compiled, 804 + 172 bytes
+++ odesolve!-solns compiled, 32 + 24 bytes
Completed FASL files for "odespcfn"



*** Compiling odenon1 ... 


FASLOUT "odenon1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ odesolve!-nonlinear1 compiled, 203 + 140 bytes
+++ odenon!-linear1 compiled, 143 + 112 bytes
+++ odenon!-linear1pq compiled, 44 + 56 bytes
+++ odesolve!-separable compiled, 216 + 160 bytes
+++ odesolve!-separable1 compiled, 66 + 52 bytes
+++ odesolve!-subsublis compiled, 150 + 52 bytes
+++ odesolve!-quasiseparable compiled, 157 + 100 bytes
+++ odesolve!-homogeneous compiled, 166 + 124 bytes
+++ odesolve!-quasihomog compiled, 403 + 144 bytes
+++ odesolve!-quasihomog1 compiled, 74 + 24 bytes
+++ odesolve!-bernoulli compiled, 310 + 92 bytes
+++ bernoulli!-depend!-check compiled, 28 + 40 bytes
+++ get!!y!^n!*c compiled, 43 + 20 bytes
+++ get!!y!^n!*c1 compiled, 27 + 16 bytes
+++ odesolve!-bernoulli1 compiled, 108 + 72 bytes
+++ odesolve!-riccati compiled, 291 + 148 bytes
+++ odesolve!-clairaut compiled, 207 + 96 bytes
+++ odesolve!-solvable!-y compiled, 1002 + 228 bytes
+++ odesolve!-solvable!-x compiled, 720 + 196 bytes
+++ newarbparam compiled, 13 + 32 bytes
+++ odesolve!-elim!-param compiled, 559 + 132 bytes
+++ odesolve!-tidy!-implicit compiled, 265 + 56 bytes
+++ odesolve!-simp!-arbparam compiled, 557 + 116 bytes
+++ polynomialp compiled, 9 + 20 bytes
+++ polynomial!-form!-p compiled, 20 + 12 bytes
+++ polynomial!-term!-p compiled, 18 + 20 bytes
Completed FASL files for "odenon1"



*** Compiling odenonn ... 


FASLOUT "odenonn": IN files;  or type in expressions
When all done, execute FASLEND;
+++ odesolve!-nonlinearn compiled as link to odenon-reduce-order
+++ odesolve!-nonlinearn!*1 compiled, 23 + 24 bytes
+++ odenon!-reduce!-order compiled, 803 + 184 bytes
+++ odesolve!-multi!-int!* compiled, 68 + 48 bytes
+++ odesolve!-shift compiled, 736 + 192 bytes
+++ odesolve!-autonomous compiled, 380 + 164 bytes
+++ odesolve!-scaleinv compiled, 503 + 200 bytes
+++ odesolve!-scaleinv!-equidim!-x compiled, 217 + 128 bytes
+++ odesolve!-equidim!-y compiled, 325 + 160 bytes
+++ odesolve!-simp!-arbconsts compiled, 116 + 48 bytes
+++ odesolve!-simp!-arbconsts1 compiled, 152 + 116 bytes
+++ odesolve!-structr compiled, 325 + 48 bytes
Completed FASL files for "odenonn"



*** Compiling odepatch ... 


FASLOUT "odepatch": IN files;  or type in expressions
When all done, execute FASLEND;
+++ nointint_simpint compiled, 135 + 104 bytes
+++ odesolve!-int compiled, 13 + 28 bytes
+++ noint2int compiled, 7 + 16 bytes
+++ diffp compiled, 633 + 188 bytes
+++ dfform_int compiled, 121 + 76 bytes
Completed FASL files for "odepatch"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling pf ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "pf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pf compiled, 452 + 116 bytes
+++ xeucl compiled, 136 + 44 bytes
+++ qremsq compiled, 16 + 24 bytes
+++ remsq compiled, 68 + 48 bytes
+++ pfpower compiled, 45 + 24 bytes
Completed FASL files for "pf"
+++ FASLEND: hits = 48, misses = 39
Fast-loading "./reduce.img(pf)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling cvit ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "cvit": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(hephys)"
Completed FASL files for "cvit"
+++ FASLEND: hits = 731, misses = 193
Fast-loading "./reduce.img(cvit)"



*** Compiling red2cvit ... 


FASLOUT "red2cvit": IN files;  or type in expressions
When all done, execute FASLEND;
+++ isimp1 compiled, 101 + 48 bytes
+++ index_simp compiled, 27 + 24 bytes
+++ mksprod compiled, 36 + 28 bytes
+++ update_index compiled, 8 + 8 bytes
+++ calc_spurx compiled, 199 + 84 bytes
+++ third_eq_indexp compiled, 33 + 16 bytes
+++ replace_vector compiled, 105 + 36 bytes
+++ replace_by_index compiled, 27 + 28 bytes
+++ remove_gx!*gx compiled, 220 + 76 bytes
+++ cviterr compiled, 21 + 28 bytes
+++ cvitdeclp compiled, 25 + 36 bytes
+++ clear_windices compiled, 29 + 20 bytes
+++ next_windex compiled, 38 + 24 bytes
+++ next_gamma5 compiled, 37 + 28 bytes
Completed FASL files for "red2cvit"
+++ FASLEND: hits = 107, misses = 61



*** Compiling map2strn ... 


FASLOUT "map2strn": IN files;  or type in expressions
When all done, execute FASLEND;
+++ constimes not compiled (C version available)
+++ cstimes compiled, 33 + 16 bytes
+++ consrecip compiled, 13 + 20 bytes
+++ listquotient compiled, 14 + 16 bytes
+++ consplus compiled, 4 + 12 bytes
+++ csplus compiled, 33 + 16 bytes
+++ map_!-to!-strand compiled, 16 + 16 bytes
+++ mk!-strand!-vertex compiled, 35 + 24 bytes
+++ incident compiled, 24 + 12 bytes
+++ incident1 compiled, 58 + 8 bytes
+++ mk!-strand!-vertex2 compiled, 5 + 8 bytes
+++ color!-strand compiled, 20 + 16 bytes
+++ color!-roads compiled, 62 + 12 bytes
+++ zero!-roads compiled, 16 + 12 bytes
+++ z!-roads compiled, 37 + 12 bytes
+++ deletez1 compiled, 25 + 16 bytes
+++ contract!-strand compiled, 6 + 16 bytes
+++ contr!-strand compiled, 11 + 12 bytes
+++ contr1!-strand not compiled (C version available)
+++ contr2!-strand compiled, 51 + 20 bytes
+++ contrsp compiled, 19 + 12 bytes
+++ contrsp2 not compiled (C version available)
+++ contr2 compiled, 28 + 16 bytes
+++ contr compiled, 16 + 16 bytes
+++ split!-road compiled, 20 + 12 bytes
+++ sroad not compiled (C version available)
Completed FASL files for "map2strn"
+++ FASLEND: hits = 125, misses = 40



*** Compiling evalmaps ... 


FASLOUT "evalmaps": IN files;  or type in expressions
When all done, execute FASLEND;
+++ permpl compiled, 25 + 20 bytes
+++ repeatsp not compiled (C version available)
+++ l!-subst1 compiled, 25 + 12 bytes
+++ propagator compiled, 24 + 32 bytes
+++ propag compiled, 34 + 28 bytes
+++ prpg compiled, 20 + 16 bytes
+++ line compiled, 4 + 12 bytes
+++ strand!-alg!-top compiled, 21 + 28 bytes
+++ mktails compiled, 37 + 12 bytes
+++ mktails1 compiled, 57 + 24 bytes
+++ mkinds compiled, 16 + 12 bytes
+++ getroad not compiled (C version available)
+++ qassoc not compiled (C version available)
+++ from!-rodionov compiled, 64 + 24 bytes
+++ top1 compiled, 5 + 20 bytes
+++ f!^ compiled, 19 + 20 bytes
+++ mk!-coeff1 compiled, 49 + 24 bytes
+++ prop!-simp compiled, 9 + 20 bytes
+++ prop!-simp1 compiled, 52 + 16 bytes
+++ prop!-simp2 compiled, 29 + 12 bytes

*** local variable denr in procedure mk-contract-coeff not used 
+++ mk!-contract!-coeff compiled, 28 + 28 bytes
+++ mk!-numr compiled, 26 + 20 bytes
+++ mod!-index compiled, 63 + 32 bytes
+++ dpropagator compiled, 48 + 24 bytes
+++ dvertex!-to!-projector compiled, 53 + 32 bytes
+++ dstr!-to!-alg compiled, 102 + 36 bytes
+++ cvitimes2 compiled, 21 + 20 bytes
+++ free compiled, 10 + 12 bytes
+++ freeind compiled as link to atom
+++ mod!-dump compiled, 18 + 16 bytes
+++ mod!-dump1 compiled, 22 + 16 bytes
+++ l!-subst compiled, 26 + 12 bytes
Completed FASL files for "evalmaps"
+++ FASLEND: hits = 174, misses = 67



*** Compiling intfierz ... 


FASLOUT "intfierz": IN files;  or type in expressions
When all done, execute FASLEND;
+++ sort!-map_ compiled, 128 + 28 bytes
+++ tadepolep compiled, 32 + 8 bytes
+++ del!-tades compiled, 15 + 8 bytes
+++ del!-deltas compiled, 16 + 12 bytes
+++ pre!-calc!-map_ compiled, 40 + 32 bytes

*** local variable edges in procedure calc_map_tar not used 
+++ calc_map_tar compiled, 51 + 32 bytes
+++ ev!-poles compiled, 15 + 12 bytes
+++ ev!-deltas compiled, 19 + 16 bytes
+++ ev!-tades compiled, 24 + 20 bytes
+++ ev!-edgeloop compiled, 9 + 16 bytes
+++ ev!-denom2 compiled, 4 + 12 bytes
+++ ev!-denom3 compiled, 99 + 44 bytes
+++ binc compiled, 18 + 32 bytes
+++ calc_den_tar compiled, 15 + 20 bytes
+++ denlist compiled, 30 + 24 bytes
Completed FASL files for "intfierz"
+++ FASLEND: hits = 88, misses = 39



*** Compiling cvitmap ... 


FASLOUT "cvitmap": IN files;  or type in expressions
When all done, execute FASLEND;
+++ is_indexp compiled, 11 + 12 bytes
+++ mk_edge_name compiled, 23 + 12 bytes
+++ new_edge compiled, 19 + 16 bytes
+++ delete_vertex compiled, 24 + 16 bytes
+++ p_eq_vertex compiled, 22 + 8 bytes
+++ mk_old_edge compiled, 36 + 28 bytes
+++ change_name compiled, 8 + 8 bytes
+++ is_tadpole compiled, 5 + 16 bytes
+++ is_tadpolen compiled, 5 + 12 bytes
+++ diff_legs compiled, 30 + 8 bytes
+++ is_buble compiled, 19 + 16 bytes
+++ transform_map_ compiled, 118 + 36 bytes
+++ to_taranov compiled, 174 + 64 bytes
+++ set_error_m4iy51shyye4 compiled, 15 + 20 bytes
+++ set_error_real compiled, 35 + 40 bytes
+++ mark_edges compiled, 56 + 16 bytes
+++ mk_proves compiled, 23 + 16 bytes
+++ defined_vertex compiled, 14 + 16 bytes
+++ set_mark compiled, 75 + 24 bytes
+++ new_prove compiled, 16 + 12 bytes
+++ new_provev compiled, 19 + 8 bytes
+++ is_son compiled, 7 + 8 bytes
+++ not_parents compiled, 24 + 16 bytes
+++ set_prove compiled, 29 + 20 bytes
+++ find_proved compiled, 32 + 12 bytes
+++ is_proved compiled, 14 + 12 bytes
+++ mk_binding compiled, 10 + 16 bytes
+++ edge_bind compiled, 112 + 28 bytes
+++ can_be_proved compiled, 14 + 16 bytes
+++ can_be_p compiled, 84 + 28 bytes
+++ find_bubles compiled, 4 + 16 bytes
+++ find_bubles_coeff compiled, 6 + 12 bytes
+++ find_bubles1_coeff compiled, 30 + 12 bytes
+++ mk_atlaslist compiled, 6 + 8 bytes
+++ find_bubles1 compiled, 12 + 12 bytes
+++ select_bubles compiled, 289 + 72 bytes
+++ p_old_vertex compiled, 15 + 16 bytes
+++ renames_edges compiled, 7 + 12 bytes
+++ rename_edges_par compiled, 66 + 28 bytes
+++ buble_vertex compiled, 8 + 16 bytes
+++ delta_edges compiled, 14 + 12 bytes
+++ delta_names compiled, 20 + 12 bytes
+++ old_rename_edges compiled, 16 + 16 bytes
+++ ren_vertmap_ compiled, 20 + 20 bytes
+++ ren_vertices compiled, 20 + 20 bytes
+++ ren_edge compiled, 9 + 12 bytes
+++ ren_edge1 compiled, 29 + 16 bytes
+++ find_buble compiled, 13 + 12 bytes
+++ diff_vertex compiled, 30 + 16 bytes
+++ buble_proves compiled, 63 + 32 bytes
+++ try_sub_atlas compiled, 32 + 16 bytes
+++ sub_map__p compiled, 13 + 12 bytes
+++ sub_vertex_map_ compiled, 13 + 12 bytes
+++ p_common_den_ compiled, 19 + 20 bytes
+++ mk_sub_atlas compiled, 10 + 8 bytes
+++ all_defined compiled, 8 + 20 bytes
+++ all_defined_map_ compiled, 6 + 12 bytes
+++ al1_defined_map_ compiled, 39 + 16 bytes
+++ all_defined_vertex compiled, 7 + 12 bytes
+++ al1_defined_vertex compiled, 45 + 20 bytes
+++ re_parents compiled, 13 + 20 bytes
+++ make_new_parents compiled, 11 + 16 bytes
+++ p_def_edge compiled as link to caddr
+++ defined_edge compiled, 15 + 24 bytes
+++ all_edge compiled, 23 + 12 bytes
+++ def_edge compiled, 15 + 8 bytes
+++ defined_all_edge compiled, 38 + 24 bytes
+++ rep_edge_prop_ compiled, 12 + 12 bytes
+++ find_triangles compiled, 4 + 16 bytes
+++ find_triangles1 compiled, 12 + 12 bytes
+++ find_triangl_coeff compiled, 6 + 12 bytes
+++ find_triangle_coeff compiled, 30 + 12 bytes
+++ select_triangles compiled, 107 + 44 bytes
+++ vertex_neighbour compiled, 27 + 20 bytes
+++ delete_map_s compiled, 14 + 12 bytes
+++ delete_edge compiled, 24 + 12 bytes
+++ is_neighbourp compiled, 15 + 8 bytes
+++ is_neighbour compiled, 19 + 8 bytes
+++ find_triangle compiled, 13 + 20 bytes
+++ is_closed compiled, 15 + 12 bytes
+++ two_neighbour compiled, 16 + 12 bytes
+++ mk_vertextr compiled, 15 + 20 bytes
+++ add_edge1 compiled, 6 + 8 bytes
+++ mk_vertextr3 compiled, 36 + 20 bytes
+++ take_edge compiled, 20 + 16 bytes
+++ contain_edge compiled, 14 + 8 bytes
+++ find_bubltr compiled, 20 + 28 bytes
+++ find_bubltr0 compiled, 6 + 20 bytes
+++ find_bubltr1 compiled, 50 + 16 bytes
+++ reduce_triangle compiled, 20 + 20 bytes
+++ sk_vertextr compiled, 17 + 20 bytes
+++ ext_edges compiled, 32 + 20 bytes
+++ ext_edges_map_ compiled, 25 + 16 bytes
+++ ext_map__ver compiled, 30 + 8 bytes
+++ add_tadpoles compiled, 26 + 20 bytes
+++ sort_atlas compiled, 16 + 16 bytes
+++ sort_atlas1 compiled, 14 + 24 bytes
+++ print_atlas_sort compiled, 27 + 20 bytes
+++ atlas_sort compiled, 33 + 40 bytes
+++ store_edges compiled, 34 + 8 bytes
+++ restor_edges compiled, 61 + 16 bytes
+++ defined_atlas compiled, 6 + 16 bytes
+++ defined_append compiled, 24 + 12 bytes
+++ defined_edges compiled, 27 + 20 bytes
+++ definedl_edges compiled, 33 + 16 bytes
+++ atlas_sort1 compiled, 38 + 32 bytes
+++ coeff_sortl compiled, 7 + 16 bytes
+++ coeff_sort compiled, 46 + 24 bytes
+++ coeff_sort_f compiled, 48 + 20 bytes
+++ coeff_ordn compiled, 34 + 16 bytes
+++ mk_spec_atlaslist compiled, 34 + 12 bytes
+++ mk_spec_atlas compiled, 12 + 20 bytes
+++ edges_parents compiled, 12 + 12 bytes
+++ edge_new_parents compiled, 14 + 16 bytes
+++ edge_new_parent compiled, 18 + 12 bytes
+++ diff_edges compiled, 24 + 12 bytes
+++ coeff_ordn1 compiled, 22 + 12 bytes
+++ p_subsatlaslist compiled, 30 + 16 bytes
+++ or_subsatlas compiled, 8 + 12 bytes
+++ p_subsatlas compiled, 11 + 16 bytes
+++ p_inbothlists compiled, 15 + 8 bytes
+++ p_subedgelist compiled, 15 + 12 bytes
+++ embed_satlases compiled, 21 + 20 bytes
+++ embed_satlas compiled, 6 + 12 bytes
+++ embed_atlas compiled, 10 + 8 bytes
+++ coeff_sortl1 compiled, 35 + 16 bytes
+++ renamel_edges compiled, 13 + 12 bytes
+++ map__vertex_first compiled, 3 + 8 bytes
+++ both_empty_map_s compiled, 10 + 8 bytes
+++ has_parents compiled, 15 + 12 bytes
+++ less_edge compiled, 6 + 12 bytes
+++ less_edge_name compiled, 28 + 16 bytes
+++ rename_edges compiled, 60 + 32 bytes
+++ replace_new_edge compiled, 6 + 16 bytes
+++ replace_old_edge compiled, 36 + 24 bytes
+++ replace_o_edge compiled, 18 + 16 bytes
+++ copy_edge compiled, 10 + 8 bytes
+++ replace_edge2 compiled, 9 + 8 bytes
+++ replace_edge compiled, 6 + 16 bytes
+++ replace1_edge compiled, 21 + 16 bytes
+++ replace1_parents compiled, 7 + 12 bytes
+++ replace2_parents compiled, 16 + 8 bytes
+++ mk_simple_map_ compiled, 7 + 12 bytes
+++ both_old compiled, 15 + 12 bytes
+++ both_vectors compiled, 11 + 16 bytes
+++ old_renamel_edv compiled, 9 + 12 bytes
+++ mk1_simple_map_ compiled, 8 + 12 bytes
+++ mk_simple_map_1 compiled, 250 + 60 bytes
+++ mk_firz_op compiled, 8 + 20 bytes
+++ firz_op compiled, 9 + 20 bytes
+++ find_cycle compiled, 23 + 8 bytes
+++ optimal_edge compiled, 5 + 16 bytes
+++ internal_edges compiled, 30 + 8 bytes
+++ optimal1_edge compiled, 21 + 16 bytes
+++ edge_distance compiled, 12 + 20 bytes
+++ edge_dist compiled, 12 + 12 bytes
+++ opt_edge compiled, 63 + 16 bytes
+++ mk_firz compiled, 4 + 12 bytes
+++ mk_firz1 compiled, 31 + 16 bytes
+++ mk_firz2 compiled, 25 + 16 bytes
+++ mk_coeff2 compiled, 10 + 8 bytes
+++ mk_nedge compiled, 12 + 16 bytes
+++ mp_member_edge compiled, 6 + 12 bytes
+++ mp_member1_edge compiled, 25 + 8 bytes
+++ print_atlas compiled, 10 + 24 bytes
+++ prin2_atlas compiled, 12 + 20 bytes
+++ print_map_ compiled, 11 + 32 bytes
+++ prin2_map_ compiled, 9 + 12 bytes
+++ print_vertex compiled, 7 + 24 bytes
+++ prin2_vertex compiled, 9 + 12 bytes
+++ print_edge compiled, 5 + 20 bytes
+++ prin2_edge compiled, 3 + 12 bytes
+++ pttab compiled, 8 + 16 bytes
+++ print_coeff compiled, 9 + 16 bytes
+++ prin2_coeff compiled, 9 + 12 bytes
+++ print_den_om compiled, 15 + 28 bytes
+++ print_old_edges compiled, 3 + 16 bytes
+++ print_new_edges compiled, 3 + 16 bytes
+++ print_edge_list compiled, 10 + 8 bytes
+++ mk_simpl_map_ compiled, 4 + 12 bytes
+++ mk_simpl_map_1 compiled, 32 + 20 bytes
+++ mk_simple_vertex compiled, 37 + 16 bytes
+++ mk_parents_map_ compiled, 9 + 20 bytes
+++ standard_map_ compiled, 27 + 20 bytes
+++ add_0_edge compiled, 4 + 12 bytes
+++ mk_parents1_map_ compiled, 47 + 20 bytes
+++ s_noparents compiled, 22 + 16 bytes
+++ mk_parents_vertex compiled, 4 + 12 bytes
+++ mk_parents_prim compiled, 15 + 20 bytes
+++ mk_edge_parents compiled, 5 + 16 bytes
+++ mk_edge1_parents compiled, 10 + 12 bytes
+++ add_parents compiled, 6 + 12 bytes
+++ add_parents0 compiled, 10 + 16 bytes
+++ addl_parents compiled, 24 + 16 bytes
+++ rep_parents compiled, 4 + 8 bytes
+++ atlas_edges compiled, 15 + 24 bytes
+++ den__edges compiled as link to map__edges
+++ coeff_edges compiled, 25 + 16 bytes
+++ map__edges compiled, 24 + 12 bytes
+++ union_edges not compiled (C version available)
+++ union_edge not compiled (C version available)
+++ memq_edgelist not compiled (C version available)
+++ exclude_edges compiled, 23 + 16 bytes
+++ constr_worlds compiled, 28 + 36 bytes
+++ constr_coeff compiled, 16 + 16 bytes
+++ actual_edges_map_ compiled, 14 + 16 bytes
+++ list_of_parents compiled, 27 + 12 bytes
+++ list_of_parent compiled, 38 + 16 bytes
+++ actedge_map_ compiled, 32 + 12 bytes
+++ actual_edges_world compiled, 14 + 20 bytes
+++ mk_world1 compiled, 6 + 12 bytes
+++ map_2_from_map_1 compiled, 16 + 16 bytes
+++ map_1_to_strand1 compiled, 9 + 20 bytes
+++ names_edgepair compiled, 30 + 8 bytes
+++ s_actual_world1 compiled, 3 + 8 bytes
+++ actual_world compiled, 7 + 16 bytes
+++ s_actual_coeff compiled, 25 + 12 bytes
+++ world_from_atlas compiled, 4 + 16 bytes
+++ s_world_names compiled, 30 + 8 bytes
+++ calc_world compiled, 32 + 24 bytes
+++ actual_alst compiled, 23 + 12 bytes
+++ calc_atlas compiled, 10 + 12 bytes
+++ calc_coeff compiled, 21 + 20 bytes
+++ calc_map_2d compiled, 21 + 20 bytes
+++ mk_names_map_2 compiled, 33 + 8 bytes
+++ calc_coeffmap_ compiled, 17 + 24 bytes
+++ calc_map_ compiled, 65 + 36 bytes
+++ coeff_calc compiled, 9 + 20 bytes
+++ coeff1_calc compiled, 22 + 16 bytes
+++ calc_spur0 compiled, 62 + 32 bytes
+++ calc_spur compiled, 4 + 16 bytes
Completed FASL files for "cvitmap"
+++ FASLEND: hits = 1360, misses = 316

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling noncom2 ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "noncom2": IN files;  or type in expressions
When all done, execute FASLEND;
+++ trwrite compiled, 31 + 20 bytes
+++ funtrace compiled, 18 + 12 bytes
+++ pnth!* compiled, 14 + 12 bytes
+++ nth!* compiled, 11 + 12 bytes
+++ revassoc compiled, 25 + 20 bytes
+++ kernelp compiled, 29 + 28 bytes
+++ spp compiled, 9 + 12 bytes
+++ stp compiled, 9 + 12 bytes
+++ sfp2 compiled, 9 + 12 bytes
+++ tstp compiled, 13 + 20 bytes
+++ !*!*a2f compiled, 11 + 16 bytes
+++ !*!*a2q compiled, 18 + 20 bytes
+++ !*a2q compiled, 20 + 20 bytes
+++ atsoc2 compiled, 26 + 8 bytes

*** local variable y in procedure sublist not used 
+++ sublist compiled, 177 + 52 bytes
+++ deleteall compiled, 20 + 8 bytes
+++ deletemult compiled, 63 + 20 bytes
+++ deletemult!* compiled, 35 + 8 bytes
+++ listofvarnames compiled, 105 + 32 bytes
+++ replsublist compiled, 91 + 24 bytes
+++ locate_n compiled, 32 + 20 bytes
+++ term2listpows compiled, 30 + 20 bytes
+++ listprod2term compiled, 112 + 48 bytes
+++ locate_member compiled, 16 + 12 bytes
+++ domain!*p not compiled (C version available)
+++ noncomp2 not compiled (C version available)
+++ noncom compiled, 186 + 52 bytes
+++ noncommuting not compiled (C version available)
+++ noncommutingterm compiled, 42 + 24 bytes
+++ noncommutingf not compiled (C version available)
+++ noncommutingsp compiled, 17 + 12 bytes
+++ noncommuting_splist compiled, 15 + 12 bytes

*** local variable ncmp in procedure multf not used 
+++ multf compiled, 181 + 68 bytes

*** ordp not defined (LOSE flag) 
+++ reordop compiled, 28 + 24 bytes
+++ subs3f1 compiled, 98 + 52 bytes
+++ !*subs3tnc compiled, 92 + 64 bytes
+++ zerleg compiled, 82 + 12 bytes

*** local variable w1 in procedure subs3tnc not used 
+++ subs3tnc compiled, 1036 + 144 bytes
+++ mtchp1!* compiled, 77 + 12 bytes
+++ mtchp2 compiled, 96 + 32 bytes
Completed FASL files for "noncom2"
+++ FASLEND: hits = 258, misses = 116
Fast-loading "./reduce.img(noncom2)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling physop ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "physop": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(noncom2)"

*** | redefined 

*** dot redefined 
+++ rederr2 compiled, 14 + 24 bytes

*** local variable ncmp in procedure multf not used 
+++ multf compiled, 189 + 76 bytes
+++ multfnc compiled, 96 + 32 bytes
+++ opmtch!* not compiled (C version available)
+++ reval3 compiled, 6 + 16 bytes
+++ oporder compiled, 61 + 52 bytes
+++ physopdelete compiled, 21 + 16 bytes
+++ opnum!* compiled, 41 + 24 bytes
+++ reset_opnums compiled, 48 + 32 bytes
+++ !*xadd compiled, 24 + 8 bytes

*** local variable z in procedure ordop not used 
+++ ordop compiled, 112 + 36 bytes
+++ ordop2 compiled, 23 + 20 bytes

*** local variable z in procedure physopordchk not used 

*** local variable oplist in procedure physopordchk not used 

*** local variable lst in procedure physopordchk not used 
+++ physopordchk compiled, 32 + 28 bytes
+++ ncmpchk compiled, 9 + 20 bytes
+++ physopordchk!* compiled, 79 + 24 bytes
+++ physopp not compiled (C version available)
+++ !*physopp not compiled (C version available)
+++ physopp!* not compiled (C version available)
+++ !*physopp!* not compiled (C version available)
+++ hasonephysop not compiled (C version available)
+++ areallphysops compiled, 18 + 12 bytes
+++ scalop compiled, 143 + 104 bytes
+++ scalopp compiled, 106 + 52 bytes
+++ vecop compiled, 143 + 104 bytes
+++ vecopp not compiled (C version available)
+++ tensop compiled, 178 + 116 bytes
+++ tensopp not compiled (C version available)
+++ state compiled, 137 + 92 bytes
+++ statep compiled, 28 + 24 bytes
+++ statep!* compiled, 5 + 16 bytes
+++ physindex compiled, 77 + 52 bytes
+++ physindexp compiled, 21 + 28 bytes
+++ isanindex not compiled (C version available)
+++ isavarindex compiled, 5 + 12 bytes
+++ areallindices not compiled (C version available)
+++ putanewindex compiled, 30 + 28 bytes
+++ putanewindex!* compiled, 71 + 40 bytes
+++ makeanewindex compiled, 17 + 28 bytes
+++ makeanewvarindex compiled, 39 + 32 bytes
+++ getvarindex compiled, 23 + 28 bytes
+++ transformvarindex compiled, 40 + 36 bytes
+++ insertindices compiled, 58 + 40 bytes
+++ insertfreeindices compiled, 105 + 48 bytes
+++ collectindices not compiled (C version available)
+++ removeindices compiled, 92 + 48 bytes
+++ deadindices compiled, 40 + 12 bytes
+++ collectphysops compiled, 36 + 20 bytes
+++ !*collectphysops not compiled (C version available)
+++ collectphysops!* compiled, 52 + 16 bytes
+++ collectphystype compiled, 49 + 20 bytes
+++ getrtype compiled, 68 + 32 bytes
+++ getrtypecadr compiled, 11 + 16 bytes
+++ getnewtype compiled, 11 + 16 bytes
+++ getphystype not compiled (C version available)
+++ getphystypecar compiled, 10 + 16 bytes
+++ getphystypeor compiled, 14 + 16 bytes
+++ getphystypeall compiled, 21 + 28 bytes
+++ physop!*sq compiled, 10 + 20 bytes
+++ getphystype!*sq not compiled (C version available)
+++ getphystypesf compiled, 17 + 16 bytes
+++ physopsimp!*sq compiled, 18 + 28 bytes

*** local variable v in procedure *physopsm* not used 
+++ !*physopsm!* compiled, 82 + 76 bytes
+++ physopsim!* not compiled (C version available)
+++ physop2sq compiled, 97 + 56 bytes

*** local variable physopflg in procedure physopsm* not used 
+++ physopsm!* compiled, 180 + 112 bytes

*** local variable ulist in procedure physopsubs not used 

*** local variable kord in procedure physopsubs not used 
+++ physopsubs compiled, 88 + 64 bytes
+++ physopaeval compiled, 50 + 36 bytes
+++ physopcontract compiled, 523 + 188 bytes
+++ physopsimp compiled, 330 + 104 bytes
+++ checkphysopmap compiled, 33 + 28 bytes
+++ physopfn compiled, 7 + 16 bytes
+++ physopdiff compiled, 52 + 40 bytes

*** local variable rhtype in procedure physopminus not used 
+++ physopminus compiled, 9 + 24 bytes
+++ physopplus compiled, 51 + 36 bytes

*** local variable x in procedure physoptimes not used 
+++ physoptimes compiled, 195 + 60 bytes
+++ getphystypetimes compiled, 22 + 24 bytes
+++ multopop!* compiled, 242 + 52 bytes
+++ multopop compiled, 158 + 72 bytes
+++ physopexpt compiled, 376 + 116 bytes
+++ getphystypeexpt compiled, 20 + 16 bytes

*** local variable y in procedure exptexpand not used 

*** local variable v in procedure exptexpand not used 

*** local variable flg in procedure exptexpand not used 
+++ exptexpand compiled, 263 + 88 bytes

*** local variable y in procedure physopquotient not used 
+++ physopquotient compiled, 162 + 76 bytes
+++ physoprecip compiled, 5 + 16 bytes
+++ invphysop compiled, 126 + 80 bytes
+++ invp compiled, 27 + 28 bytes

*** local variable res in procedure physopsub not used 
+++ physopsub compiled, 32 + 16 bytes
+++ physopprog compiled, 60 + 48 bytes

*** local variable n in procedure physopdot not used 
+++ physopdot compiled, 469 + 120 bytes
+++ physoptens compiled, 524 + 128 bytes
+++ comm2 compiled, 202 + 100 bytes

*** local variable flg in procedure physopcommute not used 
+++ physopcommute compiled, 336 + 120 bytes

*** local variable n in procedure physopanticommute not used 

*** local variable flg in procedure physopanticommute not used 
+++ physopanticommute compiled, 249 + 116 bytes
+++ commsimp compiled, 64 + 48 bytes
+++ physopapply compiled, 447 + 132 bytes
+++ getphystypestate compiled, 12 + 16 bytes
+++ statemult compiled, 210 + 84 bytes
+++ expectval compiled, 364 + 104 bytes
+++ compconj compiled, 42 + 28 bytes

*** local variable n in procedure physopadj not used 
+++ physopadj compiled, 244 + 108 bytes
+++ adj2 compiled, 137 + 84 bytes
+++ invadj compiled, 155 + 88 bytes
+++ adjp compiled, 46 + 24 bytes

*** local variable n in procedure physoptypelet not used 
+++ physoptypelet compiled, 669 + 200 bytes
+++ physopset compiled, 94 + 64 bytes
+++ clearphysop compiled, 182 + 76 bytes
+++ physoppri compiled, 245 + 124 bytes
+++ maprint compiled, 202 + 96 bytes
Completed FASL files for "physop"
+++ FASLEND: hits = 1403, misses = 377
Fast-loading "./reduce.img(physop)"

*** | redefined 

*** dot redefined 

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling crack ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "crack": IN files;  or type in expressions
When all done, execute FASLEND;
+++ setprop compiled, 38 + 12 bytes
Completed FASL files for "crack"
+++ FASLEND: hits = 25, misses = 192
Fast-loading "./reduce.img(crack)"



*** Compiling crdec ... 


FASLOUT "crdec": IN files;  or type in expressions
When all done, execute FASLEND;
+++ which_deriv compiled, 89 + 16 bytes
+++ dec_ld_info compiled, 501 + 36 bytes
+++ diffeq compiled, 157 + 68 bytes
+++ read_sub_diff compiled, 303 + 100 bytes
+++ dec_info compiled, 799 + 152 bytes
+++ dec_info_leq compiled, 13 + 8 bytes
+++ dec_and_fct_select compiled, 865 + 128 bytes
+++ err_catch_elimin compiled, 100 + 60 bytes
+++ elimin compiled, 239 + 60 bytes
+++ dec_new_equation compiled, 721 + 140 bytes
+++ dec_reduction compiled, 704 + 228 bytes
+++ dec_fct_check compiled, 50 + 28 bytes
+++ check_cases_for_symbol compiled, 137 + 84 bytes
+++ dec_one_step compiled, 149 + 60 bytes
+++ dec_try_to_red_len compiled, 138 + 60 bytes
+++ err_catch_red_len compiled, 74 + 60 bytes
+++ dec_and_red_len_one_step compiled, 103 + 52 bytes
Completed FASL files for "crdec"
+++ FASLEND: hits = 177, misses = 125



*** Compiling crinit ... 


FASLOUT "crinit": IN files;  or type in expressions
When all done, execute FASLEND;
+++ setcrackflags compiled, 1831 + 1100 bytes
+++ ini_let_rules compiled, 1207 + 172 bytes

*** nonlocal use of undeclared variable datebuffer in procedure random_init 

*** nonlocal use of undeclared variable datebuffer in procedure random_init 
+++ datebuffer declared fluid
+++ random_init compiled, 11 + 36 bytes
Completed FASL files for "crinit"
+++ FASLEND: hits = 149, misses = 404



*** Compiling crmain ... 


FASLOUT "crmain": IN files;  or type in expressions
When all done, execute FASLEND;
+++ crackshell compiled, 51 + 56 bytes
+++ crack compiled, 616 + 264 bytes
+++ crackmain compiled, 4273 + 1608 bytes
+++ crack_out compiled, 2 + 8 bytes
+++ priproli compiled, 86 + 40 bytes
+++ priprolinr compiled, 64 + 32 bytes
+++ changeproclist compiled, 111 + 84 bytes
+++ printproclist compiled, 7 + 24 bytes
+++ printfullproclist compiled, 7 + 24 bytes
+++ printmainmenu compiled, 33 + 44 bytes
+++ print_hd compiled, 62 + 64 bytes
+++ print_hp compiled, 83 + 84 bytes
+++ print_hf compiled, 292 + 292 bytes
+++ print_hc compiled, 23 + 32 bytes
+++ print_hi compiled, 54 + 60 bytes
+++ print_hb compiled, 139 + 124 bytes
+++ to_do compiled, 77 + 40 bytes
+++ subst_derivative compiled, 289 + 124 bytes
+++ undo_subst_derivative compiled, 36 + 20 bytes
+++ subst_level_0 compiled, 53 + 40 bytes
+++ subst_level_03 compiled, 53 + 40 bytes
+++ subst_level_04 compiled, 53 + 40 bytes
+++ subst_level_05 compiled, 53 + 40 bytes
+++ subst_level_1 compiled, 50 + 40 bytes
+++ subst_level_2 compiled, 53 + 40 bytes
+++ subst_level_3 compiled, 48 + 36 bytes
+++ subst_level_33 compiled, 53 + 40 bytes
+++ subst_level_35 compiled, 50 + 40 bytes
+++ subst_level_4 compiled, 48 + 36 bytes
+++ subst_level_45 compiled, 51 + 36 bytes
+++ subst_level_5 compiled, 51 + 40 bytes
+++ factorize_any compiled, 22 + 28 bytes
+++ factorize_to_substitute compiled, 23 + 32 bytes
+++ separation compiled, 71 + 40 bytes
+++ alg_solve_system compiled, 495 + 116 bytes
+++ alg_solve_single compiled, 50 + 40 bytes
+++ alg_for_deriv compiled, 56 + 24 bytes
+++ algsolvederiv compiled, 226 + 128 bytes
+++ quick_integration compiled, 81 + 44 bytes
+++ full_integration compiled, 86 + 52 bytes
+++ integration compiled, 85 + 48 bytes
+++ multintfac compiled, 171 + 84 bytes
+++ diff_length_reduction compiled, 20 + 20 bytes
+++ high_prio_decoupling compiled, 22 + 24 bytes
+++ decoupling compiled, 22 + 20 bytes
+++ clean_dec compiled, 43 + 16 bytes
+++ clean_prop_list compiled, 65 + 40 bytes
+++ clean_up compiled, 27 + 16 bytes
+++ add_differentiated_pdes compiled, 174 + 112 bytes
+++ add_diff_ise compiled, 179 + 108 bytes

*** nonlocal use of undeclared variable gb_reduce in procedure alg_groebner 
+++ gb_reduce declared fluid
+++ alg_groebner compiled, 333 + 156 bytes
+++ split_and_crack compiled, 352 + 204 bytes
+++ split_into_cases compiled, 355 + 208 bytes
+++ stop_batch compiled, 18 + 32 bytes
+++ user_defined compiled, 3 + 8 bytes
+++ sub_problem compiled, 484 + 188 bytes
Completed FASL files for "crmain"
+++ FASLEND: hits = 538, misses = 491



*** Compiling crsep ... 


FASLOUT "crsep": IN files;  or type in expressions
When all done, execute FASLEND;
+++ get_separ_pde compiled, 38 + 20 bytes
+++ separate compiled, 121 + 72 bytes
+++ termsep compiled, 284 + 44 bytes
+++ sumsep compiled, 219 + 44 bytes
+++ linearindeptest compiled, 97 + 44 bytes
+++ termsort compiled, 34 + 8 bytes
+++ eqsep compiled, 152 + 28 bytes
+++ varapp compiled, 24 + 12 bytes
+++ sep compiled, 176 + 32 bytes
+++ separ2 compiled, 46 + 32 bytes
+++ separ compiled, 139 + 52 bytes
Completed FASL files for "crsep"
+++ FASLEND: hits = 71, misses = 49



*** Compiling crgensep ... 


FASLOUT "crgensep": IN files;  or type in expressions
When all done, execute FASLEND;
+++ quick_gen_separation compiled, 105 + 64 bytes
+++ gen_separation compiled, 104 + 60 bytes
+++ maxnoargs compiled, 42 + 20 bytes
+++ get_gen_separ_pde compiled, 212 + 52 bytes
+++ gensep compiled, 224 + 144 bytes
+++ partitn compiled, 694 + 136 bytes
+++ felim compiled, 401 + 112 bytes
+++ backint compiled, 904 + 144 bytes
+++ my_smemberl compiled, 29 + 12 bytes
+++ stripcond compiled, 28 + 16 bytes
+++ checkli compiled, 42 + 16 bytes
+++ longst compiled, 25 + 8 bytes
+++ starequ compiled, 953 + 88 bytes
+++ pickfac compiled, 10 + 12 bytes
+++ find_cond compiled, 19 + 8 bytes
+++ starsep compiled, 856 + 176 bytes
+++ separizable compiled, 213 + 72 bytes
+++ newgensep compiled, 224 + 92 bytes
+++ gen_separation2 compiled, 361 + 160 bytes
Completed FASL files for "crgensep"
+++ FASLEND: hits = 189, misses = 105



*** Compiling crint ... 


FASLOUT "crint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ldlist compiled, 109 + 44 bytes
+++ diffincl compiled, 40 + 12 bytes
+++ ddroplow compiled, 36 + 16 bytes
+++ compdiffer compiled, 42 + 24 bytes
+++ ldintersec compiled, 19 + 12 bytes
+++ isec compiled, 25 + 8 bytes
+++ disjun compiled, 23 + 16 bytes
+++ ddrophigh compiled, 29 + 16 bytes
+++ elibar compiled, 36 + 24 bytes
+++ intminderiv compiled, 46 + 24 bytes
+++ potintegrable compiled, 168 + 44 bytes
+++ vlofintlist compiled, 21 + 8 bytes
+++ vlofintfaclist compiled, 26 + 12 bytes
+++ multipleint compiled, 810 + 256 bytes
+++ uplistoflds compiled, 66 + 12 bytes
+++ addintco compiled, 129 + 48 bytes
+++ integratepde compiled, 1210 + 212 bytes
+++ intpde compiled, 122 + 32 bytes
+++ drop_x_dif compiled, 45 + 12 bytes
+++ strip_x compiled, 149 + 40 bytes
+++ sort_partition compiled, 99 + 36 bytes
+++ int_partition compiled, 160 + 32 bytes
+++ intpde_ compiled, 564 + 196 bytes
+++ explicitpart compiled, 109 + 36 bytes
+++ intconst compiled, 159 + 52 bytes
+++ intcoefftest compiled, 46 + 28 bytes
+++ fctlinear compiled, 13 + 16 bytes
+++ intlintest compiled, 51 + 40 bytes
+++ decderiv compiled, 25 + 16 bytes
+++ decderiv1 compiled, 60 + 16 bytes
+++ integratede compiled, 221 + 56 bytes
+++ intflagtest compiled, 220 + 60 bytes
+++ integrate compiled, 244 + 140 bytes
+++ quick_integrate_one_pde compiled, 148 + 40 bytes
+++ integrate_one_pde compiled, 106 + 36 bytes
+++ gintorder compiled, 495 + 56 bytes
+++ deponallvars compiled, 60 + 20 bytes
+++ gintorder1 compiled, 166 + 36 bytes
+++ partint compiled, 646 + 108 bytes
+++ tailsum compiled, 87 + 32 bytes
+++ prod compiled, 24 + 12 bytes
+++ fctrs compiled, 85 + 32 bytes
+++ extractfac compiled, 61 + 24 bytes
+++ get_kernels compiled, 99 + 56 bytes
+++ specialsol compiled, 767 + 284 bytes
+++ add_factors compiled, 60 + 20 bytes
+++ findintfac compiled, 670 + 168 bytes
+++ integrateode compiled, 139 + 56 bytes
+++ odecheck compiled, 165 + 40 bytes
+++ integrableode compiled, 27 + 36 bytes
+++ integrableode1 compiled, 227 + 44 bytes
+++ odetest compiled, 66 + 28 bytes
+++ odeconvert compiled, 523 + 212 bytes
+++ intcurrent1 compiled, 970 + 168 bytes
+++ intcurrent2 compiled, 151 + 40 bytes
+++ intcurrent3 compiled, 145 + 28 bytes
+++ select_indep_var compiled, 247 + 84 bytes
+++ charsyscrack compiled, 965 + 224 bytes
+++ charsyspsfi compiled, 90 + 36 bytes
+++ storedepend compiled, 96 + 36 bytes
+++ restoredepend compiled, 47 + 28 bytes
+++ simplifiziere compiled, 63 + 36 bytes
+++ quasilinpde compiled, 1095 + 244 bytes
Completed FASL files for "crint"
+++ FASLEND: hits = 676, misses = 286



*** Compiling crsimp ... 


FASLOUT "crsimp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ signchange compiled, 29 + 20 bytes
+++ simplifyterm compiled, 58 + 36 bytes
+++ simp_ineq compiled, 18 + 16 bytes
+++ may_vanish compiled, 99 + 48 bytes
+++ drop_triv_ineq compiled, 16 + 8 bytes
+++ contradictioncheck compiled, 103 + 56 bytes
+++ raise_contradiction compiled, 20 + 32 bytes
+++ doedel3 compiled, 129 + 76 bytes
+++ simplifypde compiled, 413 + 128 bytes
+++ fcteval compiled, 312 + 104 bytes
+++ freeofzero compiled, 199 + 56 bytes
+++ get_subst compiled, 841 + 156 bytes
+++ pick_fcteval compiled, 258 + 80 bytes
+++ ineqsubst compiled, 89 + 60 bytes
+++ do_one_subst compiled, 349 + 144 bytes
+++ do_subst compiled, 853 + 224 bytes
+++ make_subst compiled, 1637 + 388 bytes
+++ best_fac_pde compiled, 90 + 40 bytes
+++ start_let_rules compiled, 600 + 148 bytes
+++ stop_let_rules compiled, 238 + 104 bytes
+++ fbts compiled, 26 + 8 bytes
+++ list_subs compiled, 122 + 28 bytes
+++ cwrno compiled, 82 + 56 bytes
+++ besu compiled, 48 + 24 bytes
+++ search_subs compiled, 747 + 136 bytes
+++ check_subst_df compiled, 236 + 48 bytes
+++ df_min_list compiled, 53 + 12 bytes
+++ df_min compiled, 30 + 12 bytes
+++ df_min1 compiled, 47 + 20 bytes
+++ dfsubst_forg compiled, 109 + 24 bytes
+++ expand_int compiled, 45 + 16 bytes
+++ substitution_weight compiled, 18 + 24 bytes
+++ rational_less compiled, 97 + 28 bytes
+++ get_fact_pde compiled, 554 + 132 bytes
Completed FASL files for "crsimp"
+++ FASLEND: hits = 400, misses = 219



*** Compiling crutil ... 


FASLOUT "crutil": IN files;  or type in expressions
When all done, execute FASLEND;
+++ drop_dec_with compiled, 56 + 24 bytes
+++ add_dec_with compiled, 57 + 20 bytes
+++ add_both_dec_with compiled, 19 + 12 bytes
+++ drop_rl_with compiled, 12 + 16 bytes
+++ add_rl_with compiled, 22 + 16 bytes
+++ prevent_simp compiled, 88 + 24 bytes
+++ termread compiled, 53 + 40 bytes
+++ termxread compiled, 55 + 44 bytes
+++ termlistread compiled, 44 + 24 bytes
+++ mkeqlist compiled, 39 + 16 bytes
+++ mkeq compiled, 73 + 36 bytes
+++ no_of_derivs compiled, 25 + 16 bytes
+++ update compiled, 530 + 252 bytes
+++ new_ineq_from_pde compiled, 61 + 48 bytes
+++ fct_degrees compiled, 102 + 32 bytes
+++ pde_degree compiled, 42 + 36 bytes
+++ dfsubst_update compiled, 159 + 60 bytes
+++ eqinsert compiled, 81 + 20 bytes
+++ not_included compiled, 28 + 12 bytes
+++ proddel compiled, 187 + 52 bytes
+++ myprin2l compiled, 24 + 12 bytes
+++ print_stars compiled, 58 + 48 bytes
+++ typeeq compiled, 79 + 88 bytes
+++ print_derivs compiled, 125 + 40 bytes
+++ typeeqlist compiled, 464 + 388 bytes
+++ rationalp compiled, 44 + 24 bytes
+++ ratexp compiled, 14 + 16 bytes
+++ polyp compiled, 133 + 48 bytes
+++ starp compiled, 21 + 20 bytes
+++ stardep compiled, 75 + 24 bytes
+++ parti_fn compiled, 110 + 20 bytes
+++ plot_dependencies compiled, 27 + 40 bytes
+++ plot_dep_matrix compiled, 276 + 100 bytes
+++ solvable_case compiled, 17 + 8 bytes
+++ lin_check compiled, 63 + 40 bytes
+++ plot_non0_coeff_ld compiled, 126 + 68 bytes
+++ listrel compiled, 8 + 8 bytes
+++ abs_dfrel compiled, 30 + 20 bytes
+++ mult_derivs compiled, 56 + 12 bytes
+++ all_deriv_search compiled, 139 + 40 bytes
+++ abs_ld_deriv compiled, 14 + 20 bytes
+++ abs_ld_deriv_pow compiled, 12 + 16 bytes
+++ which_first compiled, 17 + 8 bytes
+++ total_less_dfrel compiled, 118 + 32 bytes
+++ sort_derivs compiled, 56 + 12 bytes
+++ dfmax compiled, 9 + 12 bytes
+++ dfrel compiled, 41 + 28 bytes
+++ diffrelp compiled, 14 + 20 bytes
+++ dfrel1 compiled, 43 + 20 bytes
+++ dfrel2 compiled, 30 + 20 bytes
+++ absdeg compiled, 59 + 20 bytes
+++ maxderivs compiled, 64 + 16 bytes
+++ dfdeg compiled, 20 + 16 bytes
+++ lower_deg compiled, 58 + 8 bytes
+++ df_int compiled, 52 + 20 bytes
+++ linear_fct compiled, 14 + 16 bytes
+++ ld_deriv compiled, 30 + 24 bytes
+++ ldiffp compiled, 8 + 16 bytes
+++ ld_deriv_search compiled, 164 + 44 bytes
+++ lderiv compiled, 28 + 16 bytes
+++ splitinhom compiled, 143 + 36 bytes
+++ search_den compiled, 79 + 20 bytes
+++ zero_den compiled, 26 + 16 bytes
+++ forg_int compiled, 64 + 16 bytes
+++ forg_int_f compiled, 108 + 52 bytes
+++ total_alg_mode_deriv compiled, 8 + 16 bytes
+++ no_of_v compiled, 31 + 16 bytes
+++ memberl compiled, 25 + 12 bytes
+++ smemberl compiled, 25 + 16 bytes
+++ my_freeof compiled, 11 + 24 bytes
+++ freeoflist compiled, 14 + 16 bytes
+++ freeofdepl not compiled (C version available)
+++ fctins compiled, 21 + 16 bytes
+++ fctinsert compiled, 12 + 20 bytes
+++ newfct compiled, 65 + 48 bytes
+++ drop_fct compiled, 16 + 24 bytes
+++ varslist compiled, 39 + 20 bytes
+++ var_list compiled, 53 + 20 bytes
+++ fctlist compiled, 124 + 32 bytes
+++ fargs compiled, 5 + 16 bytes
+++ fctargs compiled, 9 + 12 bytes
+++ fctlength compiled, 4 + 12 bytes
+++ fctsort compiled, 68 + 12 bytes
+++ listprint compiled, 25 + 16 bytes
+++ fctprint1 compiled, 60 + 36 bytes
+++ fctprint compiled, 168 + 84 bytes
+++ deprint compiled, 24 + 24 bytes
+++ eqprint compiled, 27 + 36 bytes
+++ print_level compiled, 36 + 32 bytes
+++ print_statistic compiled, 581 + 204 bytes
+++ get_statistic compiled, 235 + 52 bytes
+++ sort_deriv_pdes compiled, 73 + 20 bytes
+++ print_pdes compiled, 113 + 72 bytes
+++ print_ineq compiled, 56 + 24 bytes
+++ print_fcts2 compiled, 326 + 104 bytes
+++ print_fcts compiled, 46 + 40 bytes
+++ print_pde_fct_ineq compiled, 15 + 28 bytes
+++ no_of_terms compiled, 125 + 44 bytes
+++ delength compiled, 50 + 36 bytes
+++ pdeweight compiled, 88 + 44 bytes
+++ desort compiled, 70 + 16 bytes
+++ idx_sort compiled, 60 + 8 bytes
+++ rat_idx_sort compiled, 60 + 12 bytes
+++ argset compiled, 13 + 16 bytes
+++ no_fnc_of_v compiled, 53 + 28 bytes
+++ push_vars compiled, 48 + 8 bytes
+++ backup_pdes compiled, 333 + 44 bytes
+++ pop_vars compiled, 19 + 8 bytes
+++ restore_pdes compiled, 174 + 36 bytes
+++ deletepde compiled, 46 + 32 bytes
+++ new_pde compiled, 28 + 28 bytes
+++ drop_pde_from_properties compiled, 35 + 20 bytes
+++ drop_pde_from_idties compiled, 172 + 80 bytes
+++ drop_pde compiled, 34 + 36 bytes
+++ change_pde_flag compiled, 132 + 76 bytes
+++ restore_backup_from_file compiled, 159 + 112 bytes
+++ level_string compiled, 32 + 24 bytes
+++ backup_to_file compiled, 108 + 116 bytes
+++ delete_backup compiled, 6 + 20 bytes
+++ restore_and_merge compiled, 119 + 44 bytes
+++ write_in_file compiled, 603 + 256 bytes
+++ give_low_priority compiled, 192 + 76 bytes
+++ addineq compiled, 158 + 72 bytes
+++ update_fcteval compiled, 205 + 104 bytes
+++ addfunction compiled, 150 + 100 bytes
+++ newinequ compiled, 51 + 44 bytes
+++ replacepde compiled, 280 + 176 bytes
+++ select_from_list compiled, 82 + 64 bytes
+++ selectpdes compiled, 125 + 72 bytes
+++ nodepnd compiled, 22 + 16 bytes
+++ err_catch_readin compiled, 49 + 68 bytes
+++ err_catch_solve compiled, 34 + 36 bytes
+++ err_catch_sub compiled, 43 + 44 bytes
+++ err_catch_int compiled, 45 + 52 bytes
+++ beforegcsystemhook compiled, 4 + 12 bytes
+++ aftergcsystemhook compiled, 27 + 48 bytes
+++ err_catch_fac compiled, 71 + 68 bytes
+++ err_catch_gcd compiled, 74 + 68 bytes
+++ factored_form compiled, 24 + 24 bytes
+++ newreclaim compiled, 9 + 24 bytes
+++ low_mem compiled, 12 + 28 bytes
+++ polyansatz compiled, 231 + 40 bytes
+++ polyans compiled, 85 + 36 bytes
+++ sepans compiled, 442 + 68 bytes
+++ change_derivs_ordering compiled, 61 + 44 bytes
+++ sort_according_to compiled, 29 + 8 bytes
+++ change_fcts_ordering compiled, 44 + 40 bytes
+++ check_history compiled, 68 + 44 bytes
+++ check_globals compiled, 115 + 40 bytes
+++ search_li compiled, 40 + 12 bytes
+++ search_li2 compiled, 39 + 12 bytes
+++ backup_reduce_flags compiled, 148 + 140 bytes
+++ recover_reduce_flags compiled, 269 + 140 bytes
+++ maklist compiled, 32 + 24 bytes
+++ add_to_last_steps compiled, 21 + 16 bytes
+++ same_steps compiled, 19 + 24 bytes
+++ in_cycle compiled, 160 + 92 bytes
+++ save_solution compiled, 175 + 104 bytes
+++ print_indexed_list compiled, 32 + 28 bytes
+++ merge_two compiled, 2082 + 492 bytes
+++ merge_sol compiled, 265 + 112 bytes
+++ save_sol_list compiled, 37 + 56 bytes
+++ ask_for_session compiled, 13 + 24 bytes
+++ pri_sol compiled, 476 + 248 bytes
+++ print_all_sol compiled, 192 + 140 bytes
+++ sol_in_list compiled, 87 + 48 bytes
+++ same_sol_sets compiled, 85 + 72 bytes
Completed FASL files for "crutil"
+++ FASLEND: hits = 1470, misses = 522



*** Compiling crsimpso ... 


FASLOUT "crsimpso": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dropredundant compiled, 53 + 28 bytes
+++ del_redundant_fc compiled, 350 + 112 bytes
+++ dropredund compiled, 2175 + 232 bytes
+++ ncontent compiled, 20 + 28 bytes
+++ absorbconst compiled, 439 + 128 bytes
+++ drop_const compiled, 442 + 112 bytes
+++ sol_define compiled, 3 + 12 bytes
+++ solution_check compiled, 166 + 120 bytes
Completed FASL files for "crsimpso"
+++ FASLEND: hits = 97, misses = 110



*** Compiling crequsol ... 


FASLOUT "crequsol": IN files;  or type in expressions
When all done, execute FASLEND;
+++ extrfun compiled, 94 + 40 bytes
+++ equivsol compiled, 598 + 152 bytes
+++ completesol compiled, 100 + 64 bytes
Completed FASL files for "crequsol"
+++ FASLEND: hits = 37, misses = 44



*** Compiling crshort ... 


FASLOUT "crshort": IN files;  or type in expressions
When all done, execute FASLEND;
+++ alg_length_reduction compiled, 184 + 68 bytes
+++ err_catch_short compiled, 354 + 136 bytes
+++ is_algebraic compiled, 20 + 16 bytes
+++ shorten_pdes compiled, 264 + 60 bytes
+++ partition_1 compiled, 50 + 24 bytes
+++ partition_2 compiled, 33 + 16 bytes
+++ strip compiled, 56 + 20 bytes
+++ shorten compiled, 2104 + 328 bytes
+++ clean_num compiled, 44 + 16 bytes
+++ clean_den compiled, 26 + 12 bytes
+++ short compiled, 469 + 56 bytes
+++ drop_lin_dep compiled, 471 + 124 bytes
+++ find_1_term_eqn compiled, 873 + 192 bytes
Completed FASL files for "crshort"
+++ FASLEND: hits = 123, misses = 95



*** Compiling crorder ... 


FASLOUT "crorder": IN files;  or type in expressions
When all done, execute FASLEND;
+++ make_orderings compiled, 147 + 60 bytes
+++ permu compiled, 124 + 16 bytes
+++ default_ordering_function compiled, 69 + 56 bytes
+++ orderings_prop_list_all compiled, 41 + 36 bytes
+++ orderings_add_function compiled, 75 + 40 bytes
+++ orderings_delete_function compiled, 74 + 40 bytes
Completed FASL files for "crorder"
+++ FASLEND: hits = 39, misses = 19



*** Compiling crstruc ... 


FASLOUT "crstruc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ini_struc compiled, 32 + 56 bytes
+++ change_proc_list compiled, 48 + 72 bytes
Completed FASL files for "crstruc"
+++ FASLEND: hits = 11, misses = 43



*** Compiling crunder ... 


FASLOUT "crunder": IN files;  or type in expressions
When all done, execute FASLEND;
+++ undetlinode compiled, 119 + 60 bytes
+++ undetlinpde compiled, 86 + 40 bytes
+++ get_ulode compiled, 49 + 16 bytes
+++ get_ulpde compiled, 49 + 16 bytes
+++ ulodep compiled, 281 + 80 bytes
+++ ulpdep_ compiled, 258 + 80 bytes
+++ ulpdep compiled, 248 + 60 bytes
+++ min_ord_f compiled, 83 + 36 bytes
+++ underode compiled, 675 + 188 bytes
+++ underpde compiled, 222 + 80 bytes
Completed FASL files for "crunder"
+++ FASLEND: hits = 84, misses = 60



*** Compiling crlinalg ... 


FASLOUT "crlinalg": IN files;  or type in expressions
When all done, execute FASLEND;
+++ trian_lin_alg compiled, 49 + 164 bytes
Completed FASL files for "crlinalg"
+++ FASLEND: hits = 5, misses = 37



*** Compiling crsubsys ... 


FASLOUT "crsubsys": IN files;  or type in expressions
When all done, execute FASLEND;
+++ add_equ_to_fl compiled, 51 + 16 bytes
+++ del_equ_from_fl compiled, 31 + 12 bytes
+++ all_equ_with_any_fl compiled, 34 + 20 bytes
+++ err_catch_subsys compiled, 63 + 60 bytes
+++ find_and_use_sub_systems12 compiled, 7 + 16 bytes
+++ find_and_use_sub_systems13 compiled, 7 + 16 bytes
+++ find_and_use_sub_systems14 compiled, 7 + 16 bytes
+++ find_and_use_sub_systems15 compiled, 7 + 16 bytes
+++ find_and_use_sub_systems22 compiled, 7 + 16 bytes
+++ find_and_use_sub_systems23 compiled, 7 + 16 bytes
+++ find_and_use_sub_systems24 compiled, 7 + 16 bytes
+++ find_and_use_sub_systems25 compiled, 7 + 16 bytes
+++ determinante compiled, 5 + 16 bytes
+++ setzewert compiled, 8 + 12 bytes
+++ machematrix compiled, 110 + 24 bytes
+++ fauss1 compiled, 59 + 44 bytes
+++ fauss2 compiled, 503 + 160 bytes
+++ show_sub_systems compiled, 78 + 76 bytes
+++ out_off compiled, 69 + 12 bytes
+++ spot_over_det compiled, 177 + 40 bytes
+++ addsoe compiled, 38 + 24 bytes
+++ addnsoe compiled, 35 + 20 bytes
+++ addsof compiled, 32 + 16 bytes
+++ try compiled, 464 + 76 bytes
Completed FASL files for "crsubsys"
+++ FASLEND: hits = 150, misses = 80



*** Compiling crtrafo ... 


FASLOUT "crtrafo": IN files;  or type in expressions
When all done, execute FASLEND;
+++ input_trafo compiled, 447 + 188 bytes
+++ adddep compiled, 47 + 20 bytes
+++ dropdep compiled, 44 + 16 bytes
+++ transfodf compiled, 238 + 56 bytes
+++ do_trafo compiled, 1211 + 188 bytes
+++ find_trafo compiled, 1297 + 312 bytes
+++ general_trafo compiled, 13 + 24 bytes
Completed FASL files for "crtrafo"
+++ FASLEND: hits = 57, misses = 87



*** Compiling crident ... 


FASLOUT "crident": IN files;  or type in expressions
When all done, execute FASLEND;
+++ drop_idty compiled, 13 + 20 bytes
+++ new_id_name compiled, 23 + 28 bytes
+++ replace_idty compiled, 132 + 96 bytes
+++ trivial_idty compiled, 17 + 24 bytes
+++ new_idty compiled, 57 + 44 bytes
+++ show_id compiled, 125 + 88 bytes
+++ del_red_id compiled, 226 + 136 bytes
+++ del_redundant_de compiled, 11 + 12 bytes
+++ write_id_to_file compiled, 233 + 148 bytes
+++ remove_idl compiled, 19 + 16 bytes
+++ start_history compiled, 79 + 64 bytes
+++ stop_history compiled, 21 + 20 bytes
+++ idty_integration compiled, 49 + 28 bytes
+++ integrate_idty compiled, 987 + 224 bytes
+++ sortpermuli compiled, 51 + 16 bytes
+++ curlconst compiled, 188 + 60 bytes
+++ updt_curl compiled, 231 + 80 bytes
+++ int_curl compiled, 342 + 64 bytes
Completed FASL files for "crident"
+++ FASLEND: hits = 168, misses = 104



*** Compiling crhomalg ... 


FASLOUT "crhomalg": IN files;  or type in expressions
When all done, execute FASLEND;
+++ bi_lin_expt compiled, 57 + 56 bytes
+++ find_hom_deg compiled, 410 + 144 bytes
+++ make_hom_ansatz compiled, 130 + 36 bytes
+++ bi_lin_sep compiled, 163 + 60 bytes
+++ bi_lin_eqn_lin_comb compiled, 53 + 40 bytes
+++ drop_dep_bi_lin compiled, 199 + 104 bytes
+++ find_factor_bi_lin compiled, 381 + 184 bytes
Completed FASL files for "crhomalg"
+++ FASLEND: hits = 89, misses = 69



*** Compiling crpvm ... 


FASLOUT "crpvm": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pvm_activate compiled, 15 + 32 bytes
+++ pvm_active compiled, 15 + 28 bytes
+++ pvm_try compiled, 10 + 24 bytes
+++ read_proczaehler compiled, 11 + 24 bytes
+++ add_process compiled, 172 + 144 bytes
+++ drop_process compiled, 50 + 60 bytes
+++ remote_crackmain compiled, 204 + 144 bytes
Completed FASL files for "crpvm"
+++ FASLEND: hits = 52, misses = 46



*** Compiling crstart ... 


FASLOUT "crstart": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "crstart"
+++ FASLEND: hits = 0, misses = 1

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling liepde ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "liepde": IN files;  or type in expressions
When all done, execute FASLEND;
+++ diffdeg compiled, 27 + 16 bytes
+++ ldiff1 compiled, 16 + 16 bytes
+++ equ_to_expr compiled, 57 + 48 bytes
+++ totdeg compiled, 20 + 28 bytes
+++ diffreltot compiled, 9 + 12 bytes
+++ diffreltotp compiled, 34 + 24 bytes
+++ ldifftot compiled, 8 + 16 bytes
+++ ldifftot1 compiled, 152 + 48 bytes
+++ nextdy compiled, 193 + 100 bytes
+++ subdif1 compiled, 172 + 64 bytes
+++ combidif compiled, 56 + 16 bytes
+++ comparedif1 compiled, 43 + 12 bytes
+++ comparedif2 compiled, 13 + 16 bytes
+++ comparedif3 compiled, 13 + 16 bytes
+++ listdifdif1 compiled, 38 + 16 bytes
+++ dif compiled, 104 + 24 bytes
+++ mergedepli compiled, 39 + 12 bytes
+++ adddepli compiled, 55 + 12 bytes
+++ add_xi_eta_depli compiled, 60 + 32 bytes
+++ subtest compiled, 114 + 32 bytes
+++ totdf3 compiled, 188 + 60 bytes
+++ joinsublists compiled, 25 + 8 bytes
+++ depnd compiled, 31 + 12 bytes
+++ transeq compiled, 62 + 24 bytes
+++ drop compiled, 48 + 16 bytes
+++ etamn compiled, 303 + 56 bytes
+++ prolong compiled, 29 + 20 bytes
+++ callcrack compiled, 188 + 84 bytes
+++ liepde compiled, 4959 + 592 bytes
Completed FASL files for "liepde"
+++ FASLEND: hits = 275, misses = 127
Fast-loading "./reduce.img(liepde)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling applysym ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "applysym": IN files;  or type in expressions
When all done, execute FASLEND;
+++ applysym compiled, 1081 + 336 bytes
+++ newparam compiled, 475 + 160 bytes
+++ einfachst compiled, 56 + 32 bytes
+++ transdf compiled, 97 + 64 bytes
+++ transderiv compiled, 26 + 32 bytes
+++ detrafo compiled, 542 + 140 bytes
+++ grouping compiled, 191 + 48 bytes
+++ rename_u_ compiled, 387 + 68 bytes
+++ solve_for_old_var compiled, 263 + 136 bytes
+++ switch_r_s compiled, 236 + 148 bytes
+++ makepde compiled, 110 + 72 bytes
+++ totdeglist compiled, 62 + 28 bytes
+++ similarity compiled, 2559 + 484 bytes
+++ quasilinpde1 compiled, 151 + 108 bytes
Completed FASL files for "applysym"
+++ FASLEND: hits = 297, misses = 121
Fast-loading "./reduce.img(applysym)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling conlaw ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "conlaw": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "conlaw"
+++ FASLEND: hits = 2, misses = 12
Fast-loading "./reduce.img(conlaw)"



*** Compiling conlaw0 ... 


FASLOUT "conlaw0": IN files;  or type in expressions
When all done, execute FASLEND;
+++ print_claw compiled, 198 + 80 bytes
+++ lhsli compiled, 94 + 36 bytes
+++ chksub compiled, 202 + 48 bytes
+++ comparedif1 compiled, 43 + 12 bytes
+++ comparedif2 compiled, 13 + 16 bytes
+++ listdifdif1 compiled, 38 + 16 bytes
+++ listdifdif2 compiled, 29 + 20 bytes
+++ totdeg compiled, 20 + 28 bytes
+++ diffdeg compiled, 27 + 16 bytes
+++ ldiff1 compiled, 16 + 16 bytes
+++ ldifftot compiled, 8 + 16 bytes
+++ ldifftot1 compiled, 165 + 56 bytes
+++ diffreltot compiled, 9 + 12 bytes
+++ diffreltotp compiled, 34 + 24 bytes
+++ subdif1 compiled, 172 + 64 bytes
+++ nextdy compiled, 193 + 100 bytes
+++ combidif compiled, 56 + 16 bytes
+++ dif compiled, 104 + 24 bytes
+++ depnd compiled, 36 + 20 bytes
+++ totdif compiled, 45 + 32 bytes
+++ simppl compiled, 329 + 108 bytes
+++ fdepterms compiled, 101 + 32 bytes
+++ subtract_diff compiled, 27 + 8 bytes
+++ transfer_fctrs compiled, 91 + 28 bytes
+++ partintdf compiled, 2213 + 216 bytes
Completed FASL files for "conlaw0"
+++ FASLEND: hits = 233, misses = 101



*** Compiling conlaw1 ... 


FASLOUT "conlaw1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ conlaw1 compiled, 6765 + 752 bytes
Completed FASL files for "conlaw1"
+++ FASLEND: hits = 7, misses = 98



*** Compiling conlaw2 ... 


FASLOUT "conlaw2": IN files;  or type in expressions
When all done, execute FASLEND;
+++ newil compiled, 40 + 12 bytes
+++ sortli compiled, 58 + 8 bytes
+++ combi compiled, 40 + 16 bytes
+++ derili compiled, 30 + 28 bytes
+++ conlaw2 compiled, 7242 + 732 bytes
Completed FASL files for "conlaw2"
+++ FASLEND: hits = 27, misses = 100



*** Compiling conlaw3 ... 


FASLOUT "conlaw3": IN files;  or type in expressions
When all done, execute FASLEND;
+++ conlaw3 compiled, 5061 + 596 bytes
Completed FASL files for "conlaw3"
+++ FASLEND: hits = 8, misses = 86



*** Compiling conlaw4 ... 


FASLOUT "conlaw4": IN files;  or type in expressions
When all done, execute FASLEND;
+++ newil compiled, 40 + 12 bytes
+++ sortli compiled, 58 + 8 bytes
+++ combi compiled, 40 + 16 bytes
+++ derili compiled, 30 + 28 bytes
+++ conlaw4 compiled, 6817 + 680 bytes
Completed FASL files for "conlaw4"
+++ FASLEND: hits = 27, misses = 95

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling excalc ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "excalc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fancy!-level_sdniqcjau4jc compiled, 24 + 40 bytes
Completed FASL files for "excalc"
+++ FASLEND: hits = 132, misses = 87
Fast-loading "./reduce.img(excalc)"



*** Compiling exintro ... 


FASLOUT "exintro": IN files;  or type in expressions
When all done, execute FASLEND;
+++ spacedim compiled, 5 + 20 bytes
+++ fdomain compiled, 114 + 68 bytes
+++ remfdomain compiled, 41 + 32 bytes
+++ putform compiled, 167 + 128 bytes
+++ pform compiled, 56 + 32 bytes
+++ tvector compiled, 16 + 16 bytes
+++ getlower compiled, 6 + 12 bytes
+++ getupper compiled, 6 + 12 bytes
+++ xpnd compiled, 6 + 16 bytes
+++ noxpnd compiled, 7 + 12 bytes
+++ closedform compiled, 6 + 16 bytes
+++ memqcar compiled, 13 + 8 bytes
Completed FASL files for "exintro"
+++ FASLEND: hits = 85, misses = 90



*** Compiling exaux ... 


FASLOUT "exaux": IN files;  or type in expressions
When all done, execute FASLEND;
+++ boundindp not compiled (C version available)
+++ memblp compiled, 19 + 8 bytes
+++ displayframe compiled, 47 + 48 bytes
Completed FASL files for "exaux"
+++ FASLEND: hits = 15, misses = 22



*** Compiling degform ... 


FASLOUT "degform": IN files;  or type in expressions
When all done, execute FASLEND;
+++ deg!*farg not compiled (C version available)
+++ deg!*form not compiled (C version available)
+++ simpexdegree compiled, 7 + 24 bytes
+++ exformp compiled, 74 + 48 bytes
+++ lexformp compiled, 11 + 12 bytes
Completed FASL files for "degform"
+++ FASLEND: hits = 24, misses = 31



*** Compiling exdf ... 


FASLOUT "exdf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ partitexdf compiled, 4 + 16 bytes
+++ simpexdf compiled, 4 + 16 bytes
+++ mkexdf compiled, 14 + 24 bytes
+++ exdfpf compiled, 55 + 36 bytes
+++ exdfk compiled, 230 + 124 bytes
+++ lid compiled, 5 + 8 bytes
+++ atomf not compiled (C version available)
+++ dim!<!=deg compiled, 23 + 28 bytes
+++ dim!<deg not compiled (C version available)
+++ dimpfun compiled, 36 + 32 bytes
+++ exdf0 compiled, 18 + 28 bytes
+++ exdff0 compiled, 52 + 28 bytes
+++ exdfp0 compiled, 48 + 40 bytes
+++ dwedge compiled, 5 + 16 bytes
+++ dwedge1 compiled, 52 + 44 bytes
+++ exdfprn compiled, 6 + 20 bytes
+++ xexdfprn compiled, 11 + 28 bytes
Completed FASL files for "exdf"
+++ FASLEND: hits = 121, misses = 77



*** Compiling forder ... 


FASLOUT "forder": IN files;  or type in expressions
When all done, execute FASLEND;
+++ add2l compiled, 16 + 12 bytes
+++ forder compiled as link to forder1
+++ forder1 compiled, 39 + 20 bytes
+++ remforder compiled, 18 + 12 bytes

*** local variable u in procedure isolate not used 
+++ isolate compiled, 6 + 24 bytes
+++ remisolate compiled, 18 + 12 bytes
+++ worderp not compiled (C version available)
+++ indexvarordp compiled, 48 + 36 bytes
+++ indordlp compiled, 39 + 16 bytes
+++ peel not compiled (C version available)
+++ indordp compiled, 31 + 16 bytes
+++ indordn compiled, 22 + 16 bytes
+++ indord2 compiled, 10 + 12 bytes
+++ indordad compiled, 28 + 12 bytes
+++ keep compiled, 118 + 72 bytes
+++ putdep compiled, 26 + 16 bytes
Completed FASL files for "forder"
+++ FASLEND: hits = 83, misses = 45



*** Compiling frames ... 


FASLOUT "frames": IN files;  or type in expressions
When all done, execute FASLEND;
+++ coframestat compiled, 46 + 60 bytes
+++ cofram compiled, 636 + 200 bytes
+++ coframe1 compiled, 332 + 100 bytes
+++ pickupcoords compiled, 78 + 44 bytes
+++ !*pf2matwrtcoords compiled, 16 + 16 bytes
+++ !*pf2colwrtcoords compiled, 33 + 16 bytes
+++ coordp compiled, 5 + 12 bytes
+++ mkmetric compiled, 376 + 132 bytes
+++ mkasmetric compiled, 94 + 20 bytes
+++ frame compiled, 188 + 72 bytes
+++ pickupwedges compiled, 4 + 12 bytes
+++ pickupwedges1 compiled, 82 + 8 bytes
+++ mkbasevector compiled, 9 + 20 bytes
+++ mkcommutatorfv compiled, 32 + 20 bytes
+++ mkcommutatorfv1 compiled, 25 + 20 bytes
+++ mknat2framv compiled, 30 + 16 bytes
+++ mknat2framv1 compiled, 25 + 12 bytes

*** local variable u in procedure dualframe not used 
+++ dualframe compiled, 6 + 24 bytes
+++ riemannconx compiled, 3 + 12 bytes
+++ riemconnection compiled, 93 + 72 bytes
+++ riemconpart1 compiled, 280 + 76 bytes
+++ riemconpart2 compiled, 86 + 56 bytes
+++ mkmetricconx2 compiled, 25 + 20 bytes
+++ mkmetricconx21 compiled, 44 + 36 bytes
+++ riemconpart3 compiled, 154 + 68 bytes
+++ mkmetricconx3 compiled, 20 + 12 bytes
+++ mkmetricconx31 compiled, 22 + 20 bytes
+++ basep compiled, 32 + 16 bytes
+++ wedgefp compiled, 31 + 16 bytes
Completed FASL files for "frames"
+++ FASLEND: hits = 296, misses = 127



*** Compiling hodge ... 


FASLOUT "hodge": IN files;  or type in expressions
When all done, execute FASLEND;
+++ formhodge compiled, 24 + 32 bytes
+++ partithodge compiled, 4 + 16 bytes
+++ simphodge compiled, 4 + 16 bytes
+++ mkhodge compiled, 27 + 40 bytes
+++ basisformp compiled, 13 + 12 bytes
+++ hodgepf compiled, 28 + 20 bytes
+++ hodgek compiled, 68 + 76 bytes

*** local variable u in procedure dual0 not used 
+++ dual0 compiled, 26 + 48 bytes
+++ dual compiled, 24 + 44 bytes
+++ !*met2pf compiled, 5 + 16 bytes
+++ xpnddual compiled, 28 + 20 bytes
+++ metpf1 compiled, 35 + 28 bytes
+++ mkdual compiled, 52 + 24 bytes
+++ dualk compiled, 17 + 20 bytes
+++ dualk2 compiled, 6 + 12 bytes
+++ dualk0 compiled, 62 + 28 bytes
+++ hodgeprn compiled, 6 + 20 bytes
Completed FASL files for "hodge"
+++ FASLEND: hits = 134, misses = 73



*** Compiling idexf ... 


FASLOUT "idexf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ exterior!-ideal compiled, 71 + 48 bytes
+++ remexf compiled, 64 + 52 bytes
+++ divexf compiled, 49 + 20 bytes
+++ delform compiled, 6 + 12 bytes
+++ delform1 compiled, 33 + 12 bytes
+++ exf!-mod!-ideal compiled, 18 + 16 bytes
Completed FASL files for "idexf"
+++ FASLEND: hits = 33, misses = 31



*** Compiling indices ... 


FASLOUT "indices": IN files;  or type in expressions
When all done, execute FASLEND;
+++ indexeval compiled, 60 + 56 bytes
+++ exc!-mk!*sq2 compiled, 11 + 20 bytes
+++ xpndind compiled, 57 + 36 bytes
+++ subcindices compiled, 58 + 48 bytes
+++ subindk compiled, 99 + 20 bytes
+++ freeindexchk compiled, 11 + 20 bytes
+++ indvarp compiled, 27 + 28 bytes
+++ indvarpf compiled, 30 + 16 bytes
+++ freeindp compiled, 77 + 44 bytes
+++ lfreeindp compiled, 11 + 12 bytes
+++ indxchk compiled, 49 + 28 bytes
+++ indexrange compiled, 104 + 48 bytes
+++ nosum compiled, 6 + 20 bytes
+++ renosum compiled, 6 + 20 bytes
+++ mkindxl compiled, 46 + 12 bytes
+++ allind compiled, 4 + 12 bytes
+++ allind1 compiled, 24 + 12 bytes
+++ allindk compiled, 165 + 32 bytes
+++ contind compiled, 34 + 28 bytes
+++ mkaindxc compiled, 35 + 16 bytes
+++ mappl compiled, 37 + 12 bytes
+++ chksymmetries!&subst compiled, 36 + 12 bytes
+++ chksymmetries!&sub1 compiled, 15 + 12 bytes
+++ getindexr compiled, 15 + 16 bytes
+++ flatindxl compiled, 42 + 8 bytes

*** local variable ltype in procedure indexlet not used 

*** local variable rtype in procedure indexlet not used 
+++ indexlet compiled, 280 + 128 bytes
+++ setindexvar compiled, 597 + 156 bytes
+++ mkletindxc compiled, 149 + 36 bytes
+++ subindexn compiled, 22 + 12 bytes
+++ mapletind compiled, 92 + 20 bytes
+++ clearfdegree compiled, 47 + 32 bytes
+++ subfindices compiled, 108 + 56 bytes
+++ indxpri1 compiled, 150 + 104 bytes

*** local variable u in procedure indxpri not used 
+++ indxpri compiled, 72 + 72 bytes
+++ coposp compiled, 15 + 16 bytes
+++ contposp compiled, 14 + 8 bytes
+++ covposp compiled, 16 + 8 bytes
+++ simpindexvar compiled, 4 + 16 bytes
+++ partitindexvar compiled, 593 + 88 bytes
+++ flatindl compiled, 25 + 8 bytes
+++ !*num2id compiled, 23 + 20 bytes
+++ revalind compiled, 26 + 36 bytes
+++ revalindl compiled, 32 + 12 bytes
Completed FASL files for "indices"
+++ FASLEND: hits = 364, misses = 178



*** Compiling indsymm ... 


FASLOUT "indsymm": IN files;  or type in expressions
When all done, execute FASLEND;
+++ index!-symmetriestat compiled, 338 + 88 bytes
+++ indexsymmetries compiled, 441 + 72 bytes
+++ indxsymp compiled, 15 + 8 bytes
+++ tot!-sym!-indp compiled, 44 + 20 bytes
+++ tot!-asym!-indp compiled, 46 + 20 bytes
+++ indexsymmetrize compiled, 35 + 20 bytes
+++ symmetrize!-inds compiled, 228 + 36 bytes
+++ asymmetrize!-inds compiled, 246 + 48 bytes
+++ indordln compiled, 22 + 16 bytes
+++ indordl2 compiled, 10 + 12 bytes
+++ indordlad compiled, 28 + 12 bytes
Completed FASL files for "indsymm"
+++ FASLEND: hits = 73, misses = 49



*** Compiling indxprin ... 


FASLOUT "indxprin": IN files;  or type in expressions
When all done, execute FASLEND;
+++ indvarprt compiled, 121 + 88 bytes
+++ rembras compiled, 21 + 36 bytes
+++ xindvarprt compiled, 157 + 80 bytes
+++ xindxlfix compiled, 31 + 20 bytes
+++ xindxfix compiled, 25 + 12 bytes
Completed FASL files for "indxprin"
+++ FASLEND: hits = 42, misses = 58



*** Compiling innerprd ... 


FASLOUT "innerprd": IN files;  or type in expressions
When all done, execute FASLEND;

*** _| redefined 
+++ partitinnerprod compiled, 9 + 16 bytes
+++ mkinnerprod compiled, 34 + 36 bytes
+++ simpinnerprod compiled, 4 + 16 bytes
+++ innerprodpf compiled, 47 + 28 bytes
+++ basisvectorp compiled, 13 + 12 bytes
+++ tvectorp compiled, 12 + 12 bytes
+++ innerprodf compiled, 99 + 88 bytes
+++ innerprodwedge compiled, 8 + 16 bytes
+++ innerprodwedge1 compiled, 116 + 52 bytes
+++ innerprodnvec compiled, 62 + 48 bytes
+++ innerprodbasis compiled, 26 + 20 bytes
Completed FASL files for "innerprd"
+++ FASLEND: hits = 87, misses = 58



*** Compiling liedf ... 


FASLOUT "liedf": IN files;  or type in expressions
When all done, execute FASLEND;

*** |_ redefined 
+++ simpliedf compiled, 4 + 16 bytes
+++ partitliedf compiled, 9 + 16 bytes
+++ mkliedf compiled, 16 + 24 bytes
+++ liedfpf compiled, 54 + 44 bytes
+++ liedftt compiled, 70 + 44 bytes
+++ liedfk compiled, 119 + 60 bytes
+++ get!-structure!-const compiled, 17 + 16 bytes
Completed FASL files for "liedf"
+++ FASLEND: hits = 57, misses = 46



*** Compiling lievalfm ... 


FASLOUT "lievalfm": IN files;  or type in expressions
When all done, execute FASLEND;
+++ liebrackstat compiled, 9 + 20 bytes
+++ lieprn compiled, 11 + 32 bytes
Completed FASL files for "lievalfm"
+++ FASLEND: hits = 12, misses = 20



*** Compiling partdf ... 


FASLOUT "partdf": IN files;  or type in expressions
When all done, execute FASLEND;

*** @ redefined 
+++ simppartdf0 compiled, 85 + 64 bytes
+++ partitpartdf compiled, 13 + 24 bytes
+++ simppartdf compiled, 4 + 16 bytes
+++ mknatvec compiled, 23 + 32 bytes
+++ partdfsq compiled, 21 + 28 bytes
+++ partdff compiled, 65 + 32 bytes
+++ partdft compiled, 70 + 40 bytes
+++ partdft1 compiled, 113 + 40 bytes
+++ partdfpow compiled, 311 + 120 bytes
+++ partdfsplit compiled, 41 + 16 bytes
+++ sublistp not compiled (C version available)
+++ listdiff compiled, 15 + 8 bytes
+++ ndepends compiled, 90 + 40 bytes
+++ lndepends compiled, 13 + 12 bytes
+++ ndependsl compiled, 12 + 12 bytes
+++ partdfprn compiled, 146 + 92 bytes
+++ indexvp compiled, 13 + 12 bytes
+++ xpartdfprn compiled, 51 + 44 bytes
+++ deradpdf compiled, 31 + 12 bytes
Completed FASL files for "partdf"
+++ FASLEND: hits = 142, misses = 102



*** Compiling partitsf ... 


FASLOUT "partitsf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ partitop compiled, 217 + 96 bytes
+++ mkupf compiled, 50 + 24 bytes
+++ partitsq compiled, 116 + 40 bytes
+++ exptpsf compiled, 17 + 16 bytes
+++ exptpf compiled, 17 + 16 bytes
+++ addpsf compiled, 93 + 20 bytes
+++ addpf not compiled (C version available)
+++ addmpf compiled, 31 + 16 bytes
+++ addmpsf compiled, 45 + 20 bytes
+++ multpsf compiled, 37 + 16 bytes
+++ multpfs compiled, 39 + 28 bytes
+++ multttpf compiled, 26 + 32 bytes
+++ multpfsq not compiled (C version available)
+++ multsqpf compiled, 22 + 16 bytes
+++ multtpsf compiled, 37 + 32 bytes
+++ multsqpsf compiled, 22 + 16 bytes
+++ repartit compiled, 28 + 20 bytes
+++ partitsq!* compiled, 92 + 44 bytes
+++ sfexform1p compiled, 31 + 16 bytes
+++ !*pf2sq compiled, 41 + 24 bytes
+++ mk!*sqpf compiled, 18 + 16 bytes
+++ !*pfsq2pf compiled, 21 + 12 bytes
Completed FASL files for "partitsf"
+++ FASLEND: hits = 133, misses = 58



*** Compiling vardf ... 


FASLOUT "vardf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpvardf compiled, 378 + 156 bytes
+++ partitvardf compiled, 4 + 16 bytes
+++ varysq compiled, 33 + 28 bytes
+++ varyf compiled, 67 + 24 bytes
+++ varyp compiled, 288 + 92 bytes
+++ !*pf2psf compiled, 38 + 24 bytes
+++ varywedge compiled, 81 + 48 bytes
+++ varyexdf compiled, 32 + 32 bytes
+++ varyhodge compiled, 32 + 32 bytes
+++ varypartdf compiled, 34 + 28 bytes
+++ simpnoether compiled, 96 + 72 bytes
+++ noetherind compiled as link to caddr
Completed FASL files for "vardf"
+++ FASLEND: hits = 139, misses = 76



*** Compiling vecanlys ... 


FASLOUT "vecanlys": IN files;  or type in expressions
When all done, execute FASLEND;
+++ basis compiled, 37 + 12 bytes
+++ simpgrad compiled, 5 + 16 bytes
+++ simpcurl compiled, 8 + 20 bytes
+++ simpdiv compiled, 11 + 20 bytes

*** .*. redefined 
+++ simpcrossprod compiled, 8 + 20 bytes
+++ simpdotprod compiled, 14 + 20 bytes
+++ hodge3dpri compiled, 50 + 48 bytes
Completed FASL files for "vecanlys"
+++ FASLEND: hits = 62, misses = 31



*** Compiling exlists ... 


FASLOUT "exlists": IN files;  or type in expressions
When all done, execute FASLEND;
+++ exdflist compiled, 7 + 20 bytes
+++ exdfl1 compiled, 21 + 20 bytes

*** local variable v in procedure innerprodlist not used 
+++ innerprodlist compiled, 57 + 36 bytes
+++ innerprodl1 compiled, 24 + 20 bytes
+++ innerprod1l compiled, 24 + 20 bytes

*** local variable v in procedure liedflist not used 
+++ liedflist compiled, 57 + 36 bytes
+++ liedfl1 compiled, 24 + 20 bytes
+++ liedf1l compiled, 24 + 20 bytes

*** local variable v in procedure modulolist not used 
+++ modulolist compiled, 10 + 20 bytes
+++ modulol1 compiled, 24 + 20 bytes

*** local variable v in procedure wedgelist not used 
+++ wedgelist compiled, 57 + 36 bytes
+++ wedgel1 compiled, 24 + 20 bytes
+++ wedge1l compiled, 24 + 20 bytes
+++ exc!-maplist compiled, 31 + 24 bytes
+++ exc!-map1l compiled, 31 + 20 bytes
Completed FASL files for "exlists"
+++ FASLEND: hits = 116, misses = 38



*** Compiling wedge ... 


FASLOUT "wedge": IN files;  or type in expressions
When all done, execute FASLEND;

*** ^ redefined 

*** ^ redefined 
+++ partitwedge compiled, 10 + 20 bytes
+++ oddp compiled, 16 + 24 bytes
+++ mksgnsq compiled, 24 + 28 bytes
+++ evenfree compiled, 25 + 24 bytes
+++ mkwedge not compiled (C version available)
+++ wedgemtch compiled, 37 + 20 bytes
+++ simpwedge compiled, 4 + 16 bytes
+++ xpndwedge compiled, 28 + 20 bytes
+++ mkunarywedge compiled, 18 + 12 bytes
+++ mkuniquewedge compiled, 28 + 20 bytes
+++ mkuniquewedge1 compiled, 21 + 28 bytes
+++ wedgepf2 not compiled (C version available)
+++ wedget2 compiled, 36 + 24 bytes
+++ wedgek2 compiled, 120 + 52 bytes
+++ wedgewedge compiled, 45 + 16 bytes
+++ wedgef compiled, 131 + 104 bytes
Completed FASL files for "wedge"
+++ FASLEND: hits = 130, misses = 73

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling gentran ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "gentran": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "gentran"
+++ FASLEND: hits = 4, misses = 26
Fast-loading "./reduce.img(gentran)"



*** Compiling utils ... 


FASLOUT "utils": IN files;  or type in expressions
When all done, execute FASLEND;
+++ genstmtnum compiled, 8 + 20 bytes
+++ symtabput compiled, 94 + 32 bytes
+++ symtabget not compiled (C version available)
+++ declared!-as!-float compiled, 13 + 16 bytes
+++ symtabrem compiled, 49 + 28 bytes
+++ getvartype compiled, 27 + 16 bytes
+++ arrayeltp compiled, 13 + 20 bytes
+++ mkassign compiled, 5 + 12 bytes
+++ mkcond compiled, 4 + 12 bytes
+++ mkdef compiled, 8 + 12 bytes
+++ mkreturn compiled, 4 + 12 bytes
+++ mkstmtgp compiled, 13 + 16 bytes
+++ lispassignp compiled, 4 + 12 bytes
+++ lispbreakp compiled, 4 + 12 bytes
+++ lispcallp compiled as link to pairp
+++ lispcondp compiled, 4 + 12 bytes
+++ lispdefp compiled, 11 + 12 bytes
+++ lispexpp compiled, 40 + 32 bytes
+++ lispendp compiled, 4 + 12 bytes
+++ lispforp compiled, 4 + 12 bytes
+++ lispgop compiled, 4 + 12 bytes
+++ lisplabelp compiled as link to atom
+++ lispprintp compiled, 4 + 12 bytes
+++ lispreadp compiled, 4 + 12 bytes
+++ lisprepeatp compiled, 4 + 12 bytes
+++ lispreturnp compiled, 4 + 12 bytes
+++ lispstmtp compiled, 42 + 32 bytes
+++ lispstmtgpp compiled, 11 + 12 bytes
+++ lispstopp compiled, 4 + 12 bytes
+++ lispwhilep compiled, 4 + 12 bytes
+++ formtypelists compiled, 53 + 8 bytes
+++ functionformp compiled, 65 + 28 bytes
+++ implicitp compiled, 26 + 16 bytes
+++ insertcommas compiled, 22 + 12 bytes
+++ insertparens compiled, 8 + 16 bytes
+++ optype not compiled (C version available)
+++ seqtogp compiled, 66 + 20 bytes
+++ stringtoatom compiled, 58 + 20 bytes
+++ stripquotes compiled, 61 + 20 bytes
+++ flushspaces compiled, 19 + 20 bytes
+++ flushspacescommas compiled, 22 + 24 bytes
Completed FASL files for "utils"
+++ FASLEND: hits = 306, misses = 125



*** Compiling intrfc ... 


FASLOUT "intrfc": IN files;  or type in expressions
When all done, execute FASLEND;

*** ::= redefined 

*** :=: redefined 

*** ::=: redefined 
+++ genstat compiled, 47 + 56 bytes
+++ geninstat compiled, 33 + 36 bytes
+++ genoutstat compiled, 5 + 16 bytes
+++ genshutstat compiled, 5 + 16 bytes
+++ genpushstat compiled, 5 + 16 bytes
+++ genpopstat compiled, 5 + 16 bytes

*** :: redefined 
+++ declarestat compiled, 122 + 92 bytes
+++ declarestat1 compiled, 75 + 48 bytes
+++ literalstat compiled, 29 + 28 bytes
+++ sym!-gentran compiled, 12 + 28 bytes
+++ sym!-gentranin compiled, 21 + 28 bytes
+++ sym!-gentranout compiled, 17 + 28 bytes
+++ sym!-gentranshut compiled, 17 + 28 bytes
+++ sym!-gentranpush compiled, 17 + 28 bytes
+++ sym!-gentranpop compiled, 17 + 28 bytes
+++ formgentran compiled, 47 + 12 bytes
+++ formgentran1 compiled, 229 + 88 bytes
+++ gentran compiled, 102 + 96 bytes
+++ gentranin compiled, 161 + 96 bytes
+++ gentranoutpush compiled, 28 + 36 bytes
+++ gentranshut compiled, 108 + 44 bytes
+++ gentranpop compiled, 40 + 44 bytes
+++ gendecs compiled, 46 + 44 bytes
+++ gentranpairs compiled, 48 + 32 bytes
+++ makeinputfilepair compiled, 7 + 20 bytes
+++ retrieveinputfilepair compiled, 4 + 16 bytes
+++ pushinputstack compiled, 9 + 16 bytes
+++ popinputstack compiled, 21 + 20 bytes
+++ makeoutputfilepair compiled, 77 + 32 bytes
+++ retrieveoutputfilepair compiled, 10 + 20 bytes
+++ pushoutputstack compiled, 68 + 24 bytes
+++ popoutputstack compiled, 276 + 36 bytes
+++ deletefromoutputstack compiled, 251 + 44 bytes
+++ retrievefilepair compiled, 20 + 12 bytes
+++ retrievepfilepair compiled, 22 + 12 bytes
+++ filelistequivp compiled, 107 + 12 bytes
+++ !*filep!* compiled, 20 + 36 bytes
+++ endofstmtp compiled, 8 + 20 bytes
+++ fargstonames compiled, 389 + 80 bytes
+++ readfargs compiled, 20 + 20 bytes
Completed FASL files for "intrfc"
+++ FASLEND: hits = 479, misses = 163



*** Compiling templt ... 


FASLOUT "templt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ procactive compiled, 156 + 116 bytes
Completed FASL files for "templt"
+++ FASLEND: hits = 24, misses = 49



*** Compiling pre ... 


FASLOUT "pre": IN files;  or type in expressions
When all done, execute FASLEND;
+++ preproc compiled, 9 + 12 bytes
+++ preproc1 compiled, 537 + 128 bytes
+++ preprocdec compiled, 160 + 48 bytes
+++ migrate!-setqs compiled, 7 + 12 bytes
+++ migrate!-setqs1 compiled, 89 + 24 bytes
Completed FASL files for "pre"
+++ FASLEND: hits = 44, misses = 60



*** Compiling gparser ... 


FASLOUT "gparser": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gentranparse compiled, 43 + 40 bytes
+++ gpexpp compiled, 132 + 64 bytes
+++ gpexp1p compiled, 13 + 12 bytes
+++ gplogexpp compiled, 79 + 48 bytes
+++ gplogexp1p compiled, 13 + 12 bytes
+++ gpargp compiled, 13 + 16 bytes
+++ gparg1p compiled, 13 + 12 bytes
+++ gpvarp compiled, 27 + 28 bytes
+++ gplistp compiled, 20 + 20 bytes
+++ gplist1p compiled, 13 + 12 bytes
+++ gpid1p compiled, 13 + 12 bytes
+++ gpstmtp compiled, 227 + 112 bytes
+++ gpsetq1p compiled, 49 + 36 bytes
+++ gpsetq2p compiled, 26 + 24 bytes
+++ gpsetq3p compiled, 92 + 40 bytes
+++ gpforopp compiled, 5 + 12 bytes
+++ gpcond1p compiled, 29 + 20 bytes
+++ gpstmt1p compiled, 13 + 12 bytes
+++ gpdefnp compiled, 51 + 32 bytes
+++ unresidp compiled, 6 + 16 bytes
Completed FASL files for "gparser"
+++ FASLEND: hits = 177, misses = 70



*** Compiling redlsp ... 


FASLOUT "redlsp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lispcode compiled, 178 + 40 bytes
+++ check!-for!-irena!-constants compiled, 64 + 32 bytes
+++ lispcodeexp compiled, 270 + 96 bytes
+++ lispcodestmt compiled, 155 + 100 bytes
+++ lispcodeassign compiled, 153 + 52 bytes
+++ lispcoderead compiled, 8 + 16 bytes
+++ lispcodeprint compiled, 41 + 20 bytes
+++ lispcodewhile compiled, 47 + 24 bytes
+++ lispcoderepeat compiled, 58 + 24 bytes
+++ lispcodefor compiled, 179 + 60 bytes
+++ lispcodecond compiled, 59 + 24 bytes
+++ lispcodereturn compiled, 15 + 28 bytes
+++ lispcodestmtgp compiled, 87 + 24 bytes
+++ lispcodedef compiled, 97 + 20 bytes
+++ redassignp compiled, 10 + 16 bytes
+++ redassign1p compiled, 20 + 20 bytes
+++ redcondp compiled, 4 + 12 bytes
+++ reddefp compiled, 4 + 12 bytes
+++ redexpp compiled, 24 + 24 bytes
+++ redforp compiled, 18 + 24 bytes
+++ redfor1p compiled, 17 + 20 bytes
+++ redprintp compiled, 4 + 12 bytes
+++ redreadp compiled, 10 + 16 bytes
+++ redread1p compiled, 17 + 20 bytes
+++ redrepeatp compiled, 4 + 12 bytes
+++ redreturnp compiled, 4 + 12 bytes
+++ redstmtp compiled, 23 + 20 bytes
+++ redstmtgpp compiled, 11 + 12 bytes
+++ redwhilep compiled, 4 + 12 bytes
Completed FASL files for "redlsp"
+++ FASLEND: hits = 277, misses = 111



*** Compiling segmnt ... 


FASLOUT "segmnt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ seg compiled, 152 + 56 bytes
+++ segexp compiled, 5 + 12 bytes
+++ segexp1 compiled, 19 + 16 bytes
+++ segexp2 compiled, 161 + 36 bytes
+++ segstmt compiled, 80 + 80 bytes
+++ segassign compiled, 25 + 24 bytes
+++ segcond compiled, 118 + 52 bytes
+++ segwhile compiled, 103 + 44 bytes
+++ segrepeat compiled, 88 + 40 bytes
+++ segfor compiled, 171 + 48 bytes
+++ segreturn compiled, 17 + 24 bytes
+++ seggroup compiled, 32 + 24 bytes
+++ segdef compiled, 52 + 20 bytes
+++ toolongexpp compiled, 5 + 16 bytes
+++ toolongstmtp compiled, 97 + 76 bytes
+++ toolongassignp compiled, 4 + 12 bytes
+++ toolongcondp compiled, 18 + 20 bytes
+++ toolongwhilep compiled, 47 + 24 bytes
+++ toolongrepeatp compiled, 49 + 24 bytes
+++ toolongforp compiled, 85 + 24 bytes
+++ toolongreturnp compiled, 8 + 12 bytes
+++ toolongstmtgpp compiled, 40 + 20 bytes
+++ toolongdefp compiled, 52 + 28 bytes
+++ numprintlen compiled, 124 + 36 bytes
+++ tempvar compiled, 119 + 64 bytes
+++ isnumber compiled, 15 + 12 bytes
+++ markvar compiled, 29 + 16 bytes
+++ markedvarp compiled, 4 + 12 bytes
+++ unmarkvar compiled, 28 + 16 bytes
Completed FASL files for "segmnt"
+++ FASLEND: hits = 267, misses = 90



*** Compiling lspfor ... 


FASLOUT "lspfor": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fortcode compiled, 169 + 64 bytes
+++ fortsubprog compiled, 223 + 112 bytes
+++ fortdecs compiled, 40 + 20 bytes
+++ fortexp compiled, 4 + 16 bytes

*** local variable dotpos in procedure fortexp1 not used 
+++ fortexp1 compiled, 500 + 168 bytes
+++ isfloat compiled, 32 + 24 bytes
+++ fortranop compiled, 7 + 12 bytes
+++ fortranname compiled, 43 + 52 bytes
+++ fortranprecedence compiled, 8 + 16 bytes
+++ fortstmt compiled, 139 + 144 bytes
+++ fortassign compiled, 6 + 12 bytes

*** local variable stmt in procedure fortbreak not used 
+++ fortbreak compiled, 31 + 32 bytes
+++ fortcall compiled, 4 + 12 bytes
+++ fortfor compiled, 112 + 44 bytes

*** local variable stmt in procedure fortend not used 
+++ fortend compiled as link to mkffortend
+++ fortgoto compiled, 19 + 24 bytes
+++ fortif compiled, 120 + 64 bytes
+++ mkffortif compiled, 30 + 40 bytes
+++ mkffortelseif compiled, 33 + 44 bytes
+++ mkffortelse compiled, 7 + 20 bytes
+++ mkffortendif compiled, 7 + 20 bytes
+++ fortliteral compiled, 3 + 12 bytes
+++ fortread compiled, 4 + 12 bytes
+++ fortrepeat compiled, 101 + 52 bytes
+++ fortreturn compiled, 27 + 32 bytes
+++ fortstmtgp compiled, 47 + 20 bytes
+++ fortstmtnum compiled, 17 + 24 bytes

*** local variable stmt in procedure fortstop not used 
+++ fortstop compiled as link to mkffortstop
+++ fortwhile compiled, 114 + 56 bytes
+++ fortwrite compiled, 3 + 12 bytes
+++ mkffortassign compiled, 32 + 28 bytes
+++ mkffortcall compiled, 91 + 48 bytes
+++ mkffortcontinue compiled, 12 + 24 bytes
+++ mkffortdec compiled, 184 + 112 bytes
+++ mkffortdo compiled, 61 + 36 bytes
+++ mkffortend compiled, 7 + 20 bytes
+++ mkffortgo compiled, 12 + 24 bytes
+++ mkffortifgo compiled, 35 + 40 bytes
+++ mkffortliteral compiled, 99 + 40 bytes
+++ mkffortread compiled, 21 + 32 bytes
+++ mkffortreturn compiled, 7 + 20 bytes
+++ mkffortstop compiled, 7 + 20 bytes
+++ mkffortsubprogdec compiled, 94 + 40 bytes
+++ mkffortwrite compiled, 64 + 40 bytes
+++ mkforttab compiled, 7 + 20 bytes
+++ indentfortlevel compiled, 10 + 20 bytes
+++ mkfortterpri compiled, 3 + 12 bytes
+++ formatfort compiled, 152 + 68 bytes
+++ fortcontline compiled, 9 + 32 bytes
+++ fortterpri compiled as link to pterpri
+++ forttab compiled, 24 + 48 bytes
+++ procforttem compiled, 59 + 52 bytes
+++ procfortcomm compiled, 26 + 24 bytes
+++ procsubprogheading compiled, 241 + 104 bytes
Completed FASL files for "lspfor"
+++ FASLEND: hits = 728, misses = 377



*** Compiling lsprat ... 


FASLOUT "lsprat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ratcode compiled, 169 + 64 bytes
+++ ratsubprog compiled, 218 + 108 bytes
+++ ratdecs compiled, 40 + 20 bytes
+++ ratexp compiled, 4 + 16 bytes

*** local variable dotpos in procedure ratexp1 not used 
+++ ratexp1 compiled, 364 + 120 bytes
+++ ratforop compiled, 7 + 12 bytes
+++ ratforprecedence compiled, 8 + 16 bytes
+++ ratstmt compiled, 137 + 144 bytes
+++ ratassign compiled, 6 + 12 bytes

*** local variable stmt in procedure ratbreak not used 
+++ ratbreak compiled as link to mkfratbreak
+++ ratcall compiled, 4 + 12 bytes
+++ ratforfor compiled, 81 + 32 bytes

*** local variable stmt in procedure ratend not used 
+++ ratend compiled as link to mkfratend
+++ ratgoto compiled, 18 + 24 bytes
+++ ratif compiled, 115 + 60 bytes
+++ ratliteral compiled, 3 + 12 bytes
+++ ratread compiled, 4 + 12 bytes
+++ ratrepeat compiled, 69 + 36 bytes
+++ ratreturn compiled, 10 + 12 bytes
+++ ratstmtgp compiled, 71 + 40 bytes
+++ ratstmtnum compiled, 16 + 24 bytes

*** local variable stmt in procedure ratstop not used 
+++ ratstop compiled as link to mkfratstop
+++ ratwhile compiled, 60 + 32 bytes
+++ ratwrite compiled, 3 + 12 bytes
+++ mkfratassign compiled, 32 + 28 bytes
+++ mkfratbegingp compiled, 7 + 20 bytes
+++ mkfratbreak compiled, 7 + 20 bytes
+++ mkfratcall compiled, 91 + 48 bytes
+++ mkfratcontinue compiled, 12 + 24 bytes
+++ mkfratdec compiled, 182 + 112 bytes
+++ mkfratdo compiled, 56 + 36 bytes
+++ mkfratelse compiled, 7 + 20 bytes
+++ mkfratelseif compiled, 29 + 40 bytes
+++ mkfratend compiled, 7 + 20 bytes
+++ mkfratendgp compiled, 7 + 20 bytes
+++ mkfratgo compiled, 12 + 24 bytes
+++ mkfratif compiled, 23 + 36 bytes
+++ mkfratliteral compiled, 89 + 36 bytes
+++ mkfratread compiled, 21 + 32 bytes
+++ mkfratrepeat compiled, 7 + 20 bytes
+++ mkfratreturn compiled, 29 + 32 bytes
+++ mkfratstop compiled, 7 + 20 bytes
+++ mkfratsubprogdec compiled, 94 + 40 bytes
+++ mkfratuntil compiled, 23 + 36 bytes
+++ mkfratwhile compiled, 23 + 36 bytes
+++ mkfratwrite compiled, 64 + 40 bytes
+++ mkrattab compiled, 4 + 16 bytes
+++ indentratlevel compiled, 10 + 20 bytes
+++ mkratterpri compiled, 3 + 12 bytes
+++ formatrat compiled, 115 + 52 bytes
+++ ratcontline compiled, 7 + 28 bytes
+++ ratterpri compiled as link to pterpri
+++ rattab compiled, 21 + 40 bytes
+++ procrattem compiled, 67 + 52 bytes
+++ procratcomm compiled, 17 + 24 bytes
Completed FASL files for "lsprat"
+++ FASLEND: hits = 568, misses = 253



*** Compiling lspc ... 


FASLOUT "lspc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ccode compiled, 169 + 64 bytes
+++ cproc compiled, 220 + 96 bytes
+++ cdecs compiled, 40 + 20 bytes
+++ cexp compiled, 4 + 16 bytes

*** local variable dotpos in procedure cexp1 not used 
+++ cexp1 compiled, 543 + 188 bytes
+++ string2id compiled, 14 + 8 bytes
+++ is!-c!-float compiled, 48 + 36 bytes
+++ cfunctcallp compiled, 4 + 16 bytes
+++ cop compiled, 7 + 12 bytes
+++ cname compiled, 22 + 24 bytes
+++ cprecedence compiled, 8 + 16 bytes
+++ cstmt compiled, 109 + 116 bytes
+++ cassign compiled, 6 + 12 bytes

*** local variable stmt in procedure cbreak not used 
+++ cbreak compiled as link to mkfcbreak

*** local variable stmt in procedure cexit not used 
+++ cexit compiled as link to mkfcexit
+++ cexpstmt compiled, 15 + 24 bytes
+++ cfor compiled, 110 + 48 bytes
+++ cgoto compiled, 4 + 12 bytes
+++ cif compiled, 115 + 60 bytes
+++ clabel compiled as link to mkfclabel
+++ cliteral compiled, 3 + 12 bytes
+++ crepeat compiled, 72 + 40 bytes
+++ creturn compiled, 10 + 12 bytes
+++ cstmtgp compiled, 71 + 40 bytes
+++ cwhile compiled, 60 + 32 bytes
+++ mkfcassign compiled, 434 + 84 bytes
+++ mkfcbegingp compiled, 7 + 20 bytes
+++ mkfcbreak compiled, 10 + 24 bytes
+++ mkfcdec compiled, 397 + 100 bytes
+++ mkfcdo compiled, 7 + 20 bytes
+++ mkfcdowhile compiled, 26 + 40 bytes
+++ mkfcelse compiled, 7 + 20 bytes
+++ mkfcelseif compiled, 30 + 40 bytes
+++ mkfcendgp compiled, 7 + 20 bytes
+++ mkfcexit compiled, 17 + 36 bytes
+++ mkfcfor compiled, 69 + 48 bytes
+++ mkfcgo compiled, 15 + 28 bytes
+++ mkfcif compiled, 23 + 36 bytes
+++ mkfclabel compiled, 7 + 16 bytes
+++ mkfcliteral compiled, 91 + 36 bytes
+++ mkfcprocdec compiled, 91 + 40 bytes
+++ mkfcreturn compiled, 34 + 36 bytes
+++ mkfcwhile compiled, 23 + 36 bytes
+++ mkctab compiled, 4 + 16 bytes
+++ indentclevel compiled, 10 + 20 bytes
+++ mkcterpri compiled, 3 + 12 bytes
+++ insertbrackets compiled, 8 + 16 bytes
+++ formatc compiled, 45 + 36 bytes
+++ ccontline compiled, 6 + 28 bytes
+++ cterpri compiled as link to pterpri
+++ ctab compiled, 20 + 40 bytes
+++ procctem compiled, 55 + 48 bytes
+++ procc!#line compiled, 21 + 24 bytes
+++ procccomm compiled, 45 + 28 bytes
+++ proccheader compiled, 228 + 88 bytes
+++ proccfunction compiled, 118 + 52 bytes
Completed FASL files for "lspc"
+++ FASLEND: hits = 596, misses = 277



*** Compiling lsppasc ... 


FASLOUT "lsppasc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pasc!-symtabput compiled, 61 + 28 bytes
+++ pasccode compiled, 169 + 64 bytes
+++ pascproc compiled, 245 + 96 bytes
+++ pascdecs compiled, 124 + 48 bytes
+++ pascexp compiled, 4 + 16 bytes

*** local variable dotpos in procedure pascexp1 not used 
+++ pascexp1 compiled, 315 + 116 bytes
+++ pascop compiled, 7 + 12 bytes
+++ pascname compiled, 14 + 16 bytes
+++ stringtopascatom compiled, 58 + 20 bytes
+++ pascprecedence compiled, 8 + 16 bytes
+++ pascstmt compiled, 96 + 108 bytes
+++ pascassign compiled, 6 + 12 bytes

*** local variable stmt in procedure pascstop not used 
+++ pascstop compiled as link to mkfpascstop
+++ pascexpstmt compiled, 15 + 24 bytes
+++ pascfor compiled, 81 + 32 bytes
+++ pascgoto compiled, 19 + 24 bytes
+++ pascif compiled, 72 + 52 bytes
+++ pasclabel compiled as link to mkfpasclabel
+++ pascliteral compiled, 3 + 12 bytes
+++ pascrepeat compiled, 73 + 40 bytes
+++ pascreturn compiled, 37 + 44 bytes
+++ pascstmtgp compiled, 75 + 44 bytes
+++ pascwhile compiled, 60 + 32 bytes
+++ removefinalsemicolon compiled, 40 + 12 bytes
+++ mkfpascassign compiled, 35 + 32 bytes
+++ mkfpascbegingp compiled, 7 + 20 bytes
+++ mkfpascdec compiled, 294 + 64 bytes
+++ mkfpascdo compiled, 7 + 20 bytes
+++ mkfpascuntil compiled, 20 + 32 bytes
+++ mkfpascelse compiled, 7 + 20 bytes
+++ mkfpascendgp compiled, 10 + 24 bytes
+++ mkfpascstop compiled, 17 + 36 bytes
+++ mkfpascfor compiled, 74 + 60 bytes
+++ mkfpascgo compiled, 15 + 28 bytes
+++ mkfpascif compiled, 22 + 32 bytes
+++ mkfpasclabel compiled, 7 + 16 bytes
+++ mkfpascliteral compiled, 89 + 36 bytes
+++ mkfpascprocdec compiled, 121 + 68 bytes
+++ pascdum compiled, 123 + 48 bytes
+++ pascgettype compiled, 16 + 12 bytes
+++ mkfpascrepeat compiled, 7 + 20 bytes
+++ mkfpascreturn compiled, 17 + 36 bytes
+++ mkfpascwhile compiled, 23 + 36 bytes
+++ mkpasctab compiled, 4 + 16 bytes
+++ indentpasclevel compiled, 10 + 20 bytes
+++ mkpascterpri compiled, 3 + 12 bytes
+++ pascinsertbrackets compiled, 8 + 16 bytes
+++ formatpasc compiled, 45 + 36 bytes
+++ pasccontline compiled, 6 + 28 bytes
+++ pascterpri compiled as link to pterpri
+++ pasctab compiled, 21 + 40 bytes
+++ procpasctem compiled, 19 + 24 bytes
+++ procpasctem1 compiled, 217 + 108 bytes
+++ procpasctype compiled, 95 + 64 bytes
+++ procpascvar compiled, 158 + 64 bytes
+++ procpasccomm compiled, 29 + 28 bytes
+++ procfuncoperheading compiled, 320 + 104 bytes
+++ readpascaltype compiled, 52 + 40 bytes
+++ readpascalarraydeclaration compiled, 188 + 64 bytes
+++ procpascheader compiled, 208 + 88 bytes
+++ procpascfunction compiled, 107 + 52 bytes
Completed FASL files for "lsppasc"
+++ FASLEND: hits = 692, misses = 257



*** Compiling goutput ... 


FASLOUT "goutput": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pprin2 not compiled (C version available)
+++ pterpri compiled, 60 + 40 bytes
+++ gentranerr compiled, 60 + 52 bytes
+++ min0 compiled, 5 + 20 bytes
+++ nspaces compiled, 26 + 20 bytes
Completed FASL files for "goutput"
+++ FASLEND: hits = 31, misses = 39

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling fide1 ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "fide1": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "fide1"
+++ FASLEND: hits = 1, misses = 9
Fast-loading "./reduce.img(fide1)"



*** Compiling expres ... 


FASLOUT "expres": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable x in procedure ptensor not used 
+++ ptensor compiled, 2 + 12 bytes
+++ poptensor compiled, 5 + 12 bytes
+++ getrtypecons compiled, 8 + 20 bytes

*** local variable v in procedure evrcons not used 
+++ evrcons compiled, 3 + 12 bytes
+++ tensor compiled, 35 + 36 bytes

*** local variable typu in procedure tenslet not used 

*** local variable typv in procedure tenslet not used 
+++ tenslet compiled, 59 + 56 bytes
+++ mktensor compiled, 18 + 24 bytes
+++ settenspri compiled, 16 + 32 bytes
+++ tenspri compiled, 85 + 68 bytes
+++ tenspri1 compiled, 35 + 48 bytes
+++ pmaprin compiled, 5 + 20 bytes
+++ updatedimen compiled, 72 + 72 bytes

*** local variable v in procedure expres not used 
+++ expres compiled as link to express
+++ resimptens compiled, 182 + 40 bytes

*** local variable matrx in procedure express not used 
+++ express compiled, 461 + 120 bytes
+++ testdim1 compiled, 9 + 20 bytes
+++ testdim2 compiled, 22 + 20 bytes
+++ vectors compiled, 81 + 48 bytes
+++ dyads compiled, 165 + 48 bytes
+++ plusexpress compiled, 14 + 12 bytes
+++ plus2ex compiled, 108 + 32 bytes
+++ timesexpress compiled, 14 + 12 bytes
+++ times2ex compiled, 38 + 24 bytes
+++ times0ex compiled, 154 + 32 bytes
+++ minusexpress compiled, 10 + 24 bytes
+++ differenceexpress compiled, 9 + 16 bytes
+++ quotientexpress compiled, 22 + 36 bytes
+++ exptexpress compiled, 29 + 32 bytes
+++ recipexpress compiled, 18 + 32 bytes
+++ inprodexpress compiled, 37 + 32 bytes
+++ inprod1ex compiled, 95 + 44 bytes
+++ inprod2ex compiled, 55 + 36 bytes
+++ outexpress compiled, 88 + 28 bytes
+++ copy2 compiled, 30 + 16 bytes
+++ listar compiled, 23 + 28 bytes
+++ listarsq compiled, 4 + 16 bytes
+++ dinprod compiled, 87 + 52 bytes
+++ antisymsum compiled, 63 + 32 bytes
+++ difmul compiled, 12 + 20 bytes
+++ vectprod compiled, 196 + 48 bytes
+++ gradexpress compiled, 172 + 72 bytes
+++ divexpress compiled, 216 + 84 bytes
+++ laplexpress compiled, 107 + 84 bytes
+++ curlexpress compiled, 141 + 92 bytes
+++ exscalval compiled, 68 + 32 bytes
+++ scalefactors compiled, 146 + 76 bytes

*** array jacobian redefined 

*** array coordinats redefined 

*** array sf redefined 

*** array christoffel redefined 
+++ rscale compiled, 378 + 136 bytes
+++ gcov compiled, 52 + 44 bytes

*** local variable u in procedure simpwrchri not used 
+++ simpwrchri compiled, 10 + 16 bytes
+++ rmat compiled, 5 + 16 bytes
+++ formdyad compiled, 14 + 24 bytes
+++ dirdfexpress compiled, 222 + 88 bytes
+++ dfexpress compiled, 336 + 48 bytes
+++ diffexpress compiled, 329 + 48 bytes
Completed FASL files for "expres"
+++ FASLEND: hits = 739, misses = 200



*** Compiling iimet ... 


FASLOUT "iimet": IN files;  or type in expressions
When all done, execute FASLEND;
+++ array compiled, 57 + 28 bytes
+++ sub1lis compiled, 15 + 12 bytes
+++ coordfn compiled, 47 + 56 bytes
+++ putcor compiled, 87 + 68 bytes
+++ tcar compiled, 7 + 8 bytes
+++ grid compiled, 11 + 12 bytes
+++ gridunif compiled, 5 + 12 bytes
+++ dependence compiled, 430 + 144 bytes
+++ given compiled, 51 + 48 bytes
+++ cleargiven compiled, 7 + 16 bytes

*** .. redefined 
+++ trlis compiled, 14 + 28 bytes

*** local variable vars in procedure formtr not used 

*** local variable mode in procedure formtr not used 
+++ formtr compiled, 6 + 16 bytes

*** local variable gd in procedure isgrid not used 
+++ isgrid compiled, 380 + 76 bytes
+++ fide_indexp compiled, 19 + 20 bytes
+++ gridp compiled, 55 + 28 bytes
+++ grideq compiled, 66 + 48 bytes

*** local variable u in procedure zero not used 
+++ zero compiled, 4 + 12 bytes
+++ ngetvar compiled, 13 + 8 bytes
+++ ngrid compiled, 11 + 24 bytes
+++ gnot compiled, 11 + 16 bytes
+++ same compiled, 50 + 20 bytes
+++ clearsame compiled, 3 + 12 bytes
+++ mksame compiled, 163 + 88 bytes
+++ filgrid compiled, 45 + 36 bytes
+++ expndsame compiled, 58 + 24 bytes
+++ copy1 compiled, 20 + 12 bytes
+++ nrsame compiled, 45 + 24 bytes
+++ iim compiled, 524 + 212 bytes
+++ extdif compiled, 241 + 36 bytes
+++ sublength compiled, 12 + 16 bytes
+++ sublengthca compiled, 25 + 16 bytes
+++ iim1 compiled, 656 + 284 bytes
+++ iim2 compiled, 364 + 152 bytes
+++ filfree compiled, 335 + 92 bytes
+++ f2eval compiled, 11 + 16 bytes
+++ f2plus compiled, 158 + 28 bytes
+++ f2var compiled, 53 + 16 bytes
+++ f2val_z2okpngvtll9 compiled, 225 + 28 bytes
+++ aplf2val compiled, 14 + 16 bytes
+++ fplus_mh0a6v2oo7l4 compiled, 39 + 16 bytes
+++ cfplus2 compiled, 80 + 28 bytes
+++ f2vunchange compiled, 5 + 12 bytes

*** local variable us in procedure f2vzero not used 

*** local variable ns in procedure f2vzero not used 
+++ f2vzero compiled, 2 + 12 bytes

*** local variable us in procedure f2vplus not used 
+++ f2vplus compiled, 6 + 12 bytes

*** local variable us in procedure f2vmax not used 
+++ f2vmax compiled, 6 + 12 bytes

*** local variable us in procedure f2vmin not used 
+++ f2vmin compiled, 6 + 12 bytes
+++ iim21 compiled, 440 + 164 bytes

*** local variable nv in procedure iim22 not used 
+++ iim22 compiled, 237 + 88 bytes
+++ intpfplus compiled, 17 + 32 bytes
+++ intpgplus compiled, 10 + 20 bytes

*** local variable bb in procedure iim3 not used 
+++ iim3 compiled, 103 + 88 bytes
+++ nbxgrid compiled, 50 + 16 bytes
+++ varyback compiled, 224 + 96 bytes
+++ varb compiled, 32 + 24 bytes
+++ iim4 compiled, 131 + 112 bytes
+++ iim5 compiled, 187 + 136 bytes

*** array difm* redefined 
+++ iscomposedof compiled, 38 + 20 bytes
+++ iscompos compiled, 59 + 16 bytes
+++ difconst compiled, 6 + 12 bytes
+++ diffunc compiled, 24 + 24 bytes
+++ matchdfunc compiled, 27 + 20 bytes
+++ difmatch compiled, 199 + 84 bytes
+++ defdfmatch compiled, 109 + 36 bytes
+++ cleardifmatch compiled, 22 + 28 bytes
+++ acmemb compiled, 14 + 12 bytes
+++ aceq compiled, 27 + 8 bytes
+++ matcheq compiled, 96 + 32 bytes
+++ matchlinear compiled, 85 + 80 bytes
+++ matchp compiled, 47 + 32 bytes
+++ mainvareq compiled, 39 + 16 bytes
+++ tlist compiled, 6 + 8 bytes
+++ matchlindf compiled, 107 + 20 bytes
+++ fsamedf compiled, 104 + 32 bytes
+++ matchlintimes compiled, 204 + 32 bytes
+++ intersect compiled, 25 + 12 bytes
+++ matchu compiled, 140 + 56 bytes
+++ matchf compiled, 40 + 24 bytes

*** local variable u in procedure matchx not used 
+++ matchx compiled, 8 + 16 bytes
+++ matchtimes compiled, 95 + 24 bytes
+++ matchexpt compiled, 36 + 16 bytes
+++ matchquot compiled, 17 + 16 bytes
+++ matchrecip compiled, 4 + 12 bytes
+++ matchdf compiled, 79 + 28 bytes
+++ finddifm compiled, 185 + 108 bytes
+++ tdifpair compiled, 38 + 24 bytes
+++ simpintt compiled, 837 + 120 bytes
+++ add2sint compiled, 145 + 32 bytes
+++ add3sint compiled, 167 + 28 bytes
+++ simpinterpol compiled, 227 + 120 bytes

*** local variable x in procedure twogridp not used 
+++ twogridp compiled, 68 + 48 bytes
+++ twogridpti compiled, 13 + 12 bytes
+++ getgrid compiled, 86 + 48 bytes
+++ getgti compiled, 13 + 12 bytes
+++ sublap compiled, 38 + 16 bytes
+++ sublap1 compiled, 78 + 40 bytes
+++ subappend compiled, 71 + 20 bytes
+++ irev compiled, 81 + 32 bytes
+++ gentempst compiled, 6 + 20 bytes
Completed FASL files for "iimet"
+++ FASLEND: hits = 1155, misses = 368

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling fide ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "fide": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(fide1)"
Fast-loading "./reduce.img(expres)"
Fast-loading "./reduce.img(iimet)"
Completed FASL files for "fide"
+++ FASLEND: hits = 3, misses = 14
Fast-loading "./reduce.img(fide)"



*** Compiling discret ... 


FASLOUT "discret": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "discret"
+++ FASLEND: hits = 2673, misses = 31



*** Compiling approx ... 


FASLOUT "approx": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fact compiled, 25 + 32 bytes
+++ taylor compiled, 93 + 60 bytes
+++ maxorder compiled, 64 + 48 bytes
+++ center compiled, 89 + 56 bytes
+++ functions compiled, 21 + 24 bytes
+++ simptaylor compiled, 92 + 60 bytes
+++ approx compiled, 397 + 184 bytes
+++ substeps compiled, 109 + 72 bytes
+++ minorder compiled, 86 + 64 bytes
Completed FASL files for "approx"
+++ FASLEND: hits = 131, misses = 98



*** Compiling charpol ... 


FASLOUT "charpol": IN files;  or type in expressions
When all done, execute FASLEND;
+++ coefc1 compiled, 46 + 28 bytes
+++ unit compiled, 5 + 16 bytes
+++ charmat compiled, 14 + 28 bytes
+++ charpol compiled, 29 + 44 bytes
+++ re compiled, 10 + 24 bytes
+++ im compiled, 13 + 24 bytes
+++ con compiled, 13 + 24 bytes
+++ complexpol compiled, 28 + 36 bytes
+++ troot1 compiled, 141 + 92 bytes
+++ hurw compiled, 51 + 52 bytes
+++ unfunc compiled, 22 + 24 bytes
+++ denotid compiled, 3 + 12 bytes
+++ cleardenot compiled, 3 + 12 bytes

*** array cofpol* redefined 
+++ denotepol compiled, 126 + 76 bytes
+++ denotear compiled, 35 + 36 bytes
+++ denotemat compiled, 156 + 24 bytes
+++ denote compiled, 109 + 64 bytes
+++ insdenot compiled, 7 + 12 bytes
+++ prdenot compiled, 26 + 28 bytes
+++ ampmat compiled, 599 + 156 bytes
+++ coefck compiled, 66 + 64 bytes
+++ simpfour compiled, 235 + 132 bytes
+++ fouriersubs compiled, 183 + 100 bytes
+++ gonsubs compiled, 149 + 112 bytes
+++ remfourier compiled, 54 + 60 bytes
Completed FASL files for "charpol"
+++ FASLEND: hits = 474, misses = 164



*** Compiling hurwp ... 


FASLOUT "hurwp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ tcon compiled, 44 + 32 bytes
+++ positivep compiled, 160 + 116 bytes

*** array cof redefined 

*** array fcof redefined 
+++ ppfactor compiled, 89 + 48 bytes
+++ hurwitzp compiled, 19 + 32 bytes
+++ coef1 compiled, 34 + 24 bytes
+++ rehurwp compiled, 139 + 96 bytes
+++ rethurp compiled, 67 + 44 bytes
+++ cohurwp compiled, 79 + 88 bytes
+++ rehurwp1 compiled, 399 + 128 bytes
+++ printcond compiled, 45 + 52 bytes
+++ printuser compiled, 51 + 48 bytes
+++ printdef compiled, 38 + 36 bytes
+++ filzero compiled, 42 + 20 bytes
+++ cutmat compiled, 34 + 12 bytes
+++ cutrow compiled, 28 + 12 bytes
+++ cohurwp1 compiled, 136 + 92 bytes
Completed FASL files for "hurwp"
+++ FASLEND: hits = 201, misses = 101



*** Compiling linband ... 


FASLOUT "linband": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ison compiled, 8 + 16 bytes
+++ gentemp compiled, 9 + 20 bytes
Fast-loading "./reduce.img(gentran)"
Fast-loading "./reduce.img(utils)"
Fast-loading "./reduce.img(intrfc)"
Fast-loading "./reduce.img(templt)"
Fast-loading "./reduce.img(pre)"
Fast-loading "./reduce.img(gparser)"
Fast-loading "./reduce.img(redlsp)"
Fast-loading "./reduce.img(segmnt)"
Fast-loading "./reduce.img(lspfor)"
Fast-loading "./reduce.img(lsprat)"
Fast-loading "./reduce.img(lspc)"
Fast-loading "./reduce.img(lsppasc)"
Fast-loading "./reduce.img(goutput)"
+++ outtemp compiled, 48 + 32 bytes
+++ genlinbandsol compiled, 642 + 216 bytes
+++ gencall!-imsl compiled, 88 + 72 bytes
+++ gencall!-linpack compiled, 142 + 100 bytes
+++ gencall!-linpack!-trid compiled, 48 + 48 bytes
+++ gencall!-essl compiled, 156 + 112 bytes
+++ gencall!-essl!-trid compiled, 68 + 60 bytes
+++ gencall!-nag compiled, 182 + 120 bytes
+++ gencall!-nag!-trid compiled, 79 + 68 bytes
+++ gennp1 compiled, 38 + 48 bytes
+++ simpsube compiled, 37 + 32 bytes
+++ ffst compiled, 7 + 12 bytes
+++ frst compiled, 7 + 16 bytes
+++ rfst compiled, 7 + 16 bytes
+++ rrst compiled, 7 + 12 bytes
+++ fffst compiled, 7 + 16 bytes
+++ ffrst compiled, 7 + 16 bytes
+++ frfst compiled, 7 + 16 bytes
+++ frrst compiled, 7 + 16 bytes
+++ rffst compiled, 7 + 16 bytes
+++ rfrst compiled, 7 + 16 bytes
+++ rrfst compiled, 7 + 16 bytes
+++ rrrst compiled, 7 + 16 bytes
+++ ffffst compiled, 7 + 12 bytes
+++ fffrst compiled, 7 + 16 bytes
+++ ffrfst compiled, 7 + 16 bytes
+++ ffrrst compiled, 7 + 16 bytes
+++ frffst compiled, 7 + 16 bytes
+++ frfrst compiled, 7 + 12 bytes
+++ frrfst compiled, 7 + 16 bytes
+++ frrrst compiled, 7 + 16 bytes
+++ rfffst compiled, 7 + 16 bytes
+++ rffrst compiled, 7 + 16 bytes
+++ rfrfst compiled, 7 + 12 bytes
+++ rfrrst compiled, 7 + 16 bytes
+++ rrffst compiled, 7 + 16 bytes
+++ rrfrst compiled, 7 + 16 bytes
+++ rrrfst compiled, 7 + 16 bytes
+++ rrrrst compiled, 7 + 12 bytes
+++ findsvars compiled, 35 + 40 bytes
+++ findsvars1 compiled, 70 + 56 bytes
+++ fsvars1do compiled, 116 + 72 bytes
+++ findsvarsdo compiled, 161 + 76 bytes
+++ expanddo compiled, 72 + 52 bytes
+++ expddo compiled, 325 + 104 bytes
+++ quotient1 compiled as link to quotient
+++ genvareq compiled, 70 + 44 bytes
+++ genvareq!-imsl compiled, 464 + 140 bytes
+++ genvareq!-linpack compiled, 507 + 144 bytes
+++ genvareq!-linpack!-trid compiled, 267 + 108 bytes
+++ genvareq!-nag compiled, 412 + 132 bytes
+++ genvareq!-nag!-trid compiled, 273 + 112 bytes
+++ lincof compiled, 19 + 28 bytes
+++ nextvareqsys compiled, 76 + 52 bytes
+++ nextvesdofst compiled, 201 + 112 bytes
+++ nextvesdo compiled, 179 + 104 bytes
+++ findpvars compiled, 81 + 60 bytes
+++ lastvars compiled, 81 + 60 bytes
+++ equalaeval compiled, 5 + 16 bytes
+++ aevlis compiled, 32 + 12 bytes
+++ listnoeval compiled, 10 + 12 bytes
Completed FASL files for "linband"
+++ FASLEND: hits = 923, misses = 160

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling numeric ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "numeric": IN files;  or type in expressions
When all done, execute FASLEND;

*** .. redefined 
+++ adomainp compiled, 28 + 20 bytes
+++ revalnuminterval compiled, 34 + 32 bytes
+++ adomainpx compiled, 20 + 20 bytes
+++ evalgreaterpx compiled, 22 + 20 bytes
+++ mkinterval compiled, 5 + 12 bytes
+++ dm!:_w4dyww44zw6e compiled, 8 + 12 bytes
+++ !:plusn_k5wbktgqyoq5 compiled, 20 + 16 bytes
+++ !:timesn_k0vtqxvpu1b3 compiled, 20 + 16 bytes
Completed FASL files for "numeric"
+++ FASLEND: hits = 102, misses = 139
Fast-loading "./reduce.img(numeric)"

*** .. redefined 



*** Compiling numeval ... 


FASLOUT "numeval": IN files;  or type in expressions
When all done, execute FASLEND;
+++ accuracycontrol compiled, 48 + 28 bytes
+++ update!-precision compiled, 61 + 56 bytes
+++ update!-precision1 compiled, 34 + 24 bytes
+++ switch!-mode!-rd!-alg compiled, 39 + 56 bytes
+++ switch!-mode!-rd compiled, 57 + 52 bytes
+++ evaluate compiled, 51 + 56 bytes
+++ evaluate!* compiled, 52 + 48 bytes
+++ evaluate0 compiled, 5 + 16 bytes
+++ evaluate1 compiled, 77 + 76 bytes
+++ evaluate2 compiled, 130 + 56 bytes
+++ list!-evaluate compiled, 40 + 12 bytes
+++ matrix!-evaluate compiled, 40 + 12 bytes
+++ !:dmexpt compiled, 25 + 32 bytes
+++ dm!:min compiled, 12 + 16 bytes
+++ dm!:max compiled, 12 + 16 bytes
+++ !:dm2fix compiled, 46 + 28 bytes
+++ !:dmtimeslst compiled, 15 + 16 bytes
+++ !:dmpluslst compiled, 15 + 16 bytes
+++ !:!:quotient compiled, 13 + 16 bytes
+++ list!+list compiled, 19 + 16 bytes
+++ list!-list compiled, 18 + 16 bytes
+++ scal!*list compiled, 17 + 16 bytes
+++ innerprod compiled, 30 + 20 bytes
+++ conjlist compiled, 70 + 44 bytes
+++ normlist compiled, 7 + 20 bytes
+++ mat!*list compiled, 41 + 16 bytes
+++ num!-sqrtf compiled, 35 + 36 bytes
+++ force!-to!-dm compiled, 54 + 40 bytes
+++ printsflist compiled, 39 + 36 bytes
+++ evaluate!-horner compiled, 28 + 24 bytes
Completed FASL files for "numeval"
+++ FASLEND: hits = 236, misses = 126



*** Compiling numsolve ... 


FASLOUT "numsolve": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rdsolveeval compiled, 336 + 96 bytes
+++ rd!-solve!-interv compiled, 282 + 144 bytes
+++ make!-rdsolve!-result1 compiled, 49 + 20 bytes
+++ rd!-solve!-trynewton compiled, 134 + 52 bytes
+++ regula!-falsi compiled, 25 + 24 bytes
+++ regula!-falsi1 compiled, 115 + 48 bytes
+++ mkminus compiled, 4 + 12 bytes
+++ evaluateuni compiled, 10 + 12 bytes
+++ dmboundsuni compiled, 33 + 28 bytes
+++ lambda_915thczklgb3 compiled, 4 + 16 bytes
+++ rd!-solve!-hardcase compiled, 576 + 88 bytes
+++ rd!-solve!-hardcase!-print compiled, 101 + 52 bytes
+++ find!-root!-addinterval compiled, 16 + 16 bytes
+++ find!-root!-range compiled, 64 + 36 bytes
Completed FASL files for "numsolve"
+++ FASLEND: hits = 177, misses = 89



*** Compiling gauss ... 


FASLOUT "gauss": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rdsolvelin compiled, 385 + 56 bytes
Completed FASL files for "gauss"
+++ FASLEND: hits = 22, misses = 34



*** Compiling newton ... 


FASLOUT "newton": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rdnewton0 compiled, 380 + 144 bytes
+++ rdnewton1 compiled, 69 + 44 bytes
+++ rdnewton2 compiled, 365 + 160 bytes
+++ rdnewtonprintpoint compiled, 34 + 52 bytes
+++ max_abs_number compiled, 71 + 48 bytes
+++ positive!-rounded!-float compiled, 15 + 12 bytes
+++ rounded!-float compiled, 100 + 44 bytes
Completed FASL files for "newton"
+++ FASLEND: hits = 62, misses = 63



*** Compiling steepstd ... 


FASLOUT "steepstd": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rdmineval compiled, 227 + 64 bytes
+++ rdsolvestdeval compiled, 310 + 88 bytes
+++ steepdecedmode compiled, 42 + 52 bytes
+++ steepdeceval1 compiled, 181 + 76 bytes
+++ steepdec2 compiled, 605 + 100 bytes
+++ steepdecprintpoint compiled, 81 + 64 bytes
Completed FASL files for "steepstd"
+++ FASLEND: hits = 52, misses = 60



*** Compiling bounds ... 


FASLOUT "bounds": IN files;  or type in expressions
When all done, execute FASLEND;
+++ boundsevalrd compiled, 10 + 28 bytes
+++ boundseval compiled, 186 + 72 bytes
+++ boundserr compiled, 14 + 32 bytes
+++ boundseval0 compiled, 45 + 24 bytes
+++ boundseval1 compiled, 29 + 40 bytes
+++ boundseval2 compiled, 245 + 84 bytes
+++ boundsoperator compiled, 37 + 36 bytes
+++ boundsplus compiled, 25 + 12 bytes
+++ boundsplus2 compiled, 10 + 12 bytes
+++ boundsdifference compiled, 14 + 16 bytes
+++ boundsminus compiled, 8 + 12 bytes
+++ boundstimes compiled, 25 + 12 bytes
+++ boundstimes2 compiled, 68 + 24 bytes
+++ minsq compiled, 31 + 20 bytes
+++ maxsq compiled, 31 + 20 bytes
+++ sqgreaterp compiled, 8 + 20 bytes
+++ boundsexp compiled, 9 + 20 bytes
+++ boundsexpt!-int compiled, 44 + 28 bytes
+++ boundsexpt!-const compiled, 83 + 80 bytes
+++ boundsexpt compiled, 57 + 36 bytes
+++ boundsprepsq compiled, 8 + 12 bytes
+++ boundsquotient compiled, 36 + 32 bytes
+++ boundszero compiled, 22 + 20 bytes
+++ boundszero1 compiled, 22 + 12 bytes
+++ boundsabs compiled, 32 + 32 bytes
+++ boundsincreasingfn compiled, 10 + 12 bytes
+++ boundsdecreasingfn compiled, 7 + 12 bytes
+++ boundssincos compiled, 185 + 96 bytes
+++ fixsq compiled, 4 + 16 bytes
+++ bounds!-evalfcn1 compiled, 28 + 24 bytes
+++ bounds!-evalfcn2 compiled, 44 + 24 bytes
+++ agreaterp compiled, 27 + 32 bytes
+++ boundssin compiled, 4 + 16 bytes
+++ boundscos compiled, 4 + 16 bytes
+++ boundstancot compiled, 48 + 44 bytes
+++ boundstan compiled, 4 + 16 bytes
+++ boundscot compiled, 4 + 16 bytes
+++ boundsmaxmin compiled, 25 + 12 bytes
+++ boundsmaxmin2 compiled, 22 + 12 bytes
+++ boundspolynomial compiled, 222 + 72 bytes
+++ boundspolynomialtest compiled, 12 + 12 bytes
+++ boundspolynomialtest1 compiled, 80 + 36 bytes
+++ boundspolynomialtestvariable compiled, 19 + 12 bytes
+++ boundscompile compiled, 71 + 40 bytes
+++ boundscompile1 compiled, 246 + 104 bytes
Completed FASL files for "bounds"
+++ FASLEND: hits = 430, misses = 133



*** Compiling numint ... 


FASLOUT "numint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ intrdeval compiled, 257 + 100 bytes
+++ intrd0 compiled, 32 + 20 bytes
+++ intrd1 compiled, 234 + 88 bytes
+++ inttrans compiled, 7 + 16 bytes
+++ inttrans1 compiled, 54 + 48 bytes
+++ intrd1a compiled, 290 + 176 bytes
+++ int!-chebconverges compiled, 80 + 28 bytes
+++ int!-chebmax compiled, 24 + 20 bytes
+++ intrd2 compiled, 43 + 44 bytes
+++ intevaluate1 compiled, 21 + 20 bytes
+++ intevaluate compiled, 16 + 20 bytes
+++ intrduni compiled, 178 + 80 bytes
+++ intrdabortmsg compiled, 73 + 56 bytes
+++ intcollectint compiled, 26 + 16 bytes
+++ intcollecteps compiled, 22 + 12 bytes
+++ intrdsortin compiled, 33 + 16 bytes
+++ intrdintersect compiled, 56 + 24 bytes
+++ intrdmkinterval compiled, 127 + 52 bytes
+++ intrdunisingular compiled, 84 + 32 bytes
+++ intrdmulti compiled, 130 + 76 bytes
+++ intrdmkinitcube compiled, 87 + 36 bytes
+++ intrdrefinecube compiled, 197 + 60 bytes
+++ intrdmkcube compiled, 97 + 56 bytes
+++ intrdmess compiled, 31 + 48 bytes
+++ prinxt compiled, 52 + 32 bytes
Completed FASL files for "numint"
+++ FASLEND: hits = 224, misses = 106



*** Compiling numfit ... 


FASLOUT "numfit": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fiteval compiled, 593 + 160 bytes
Completed FASL files for "numfit"
+++ FASLEND: hits = 10, misses = 39



*** Compiling chebysh ... 


FASLOUT "chebysh": IN files;  or type in expressions
When all done, execute FASLEND;
+++ chebysheveval compiled, 263 + 116 bytes
+++ chebcoeffs compiled, 302 + 52 bytes
+++ chebpol compiled, 409 + 68 bytes
+++ chebeval compiled, 121 + 44 bytes
+++ chebint compiled, 213 + 52 bytes
+++ chebdf compiled, 204 + 56 bytes
Completed FASL files for "chebysh"
+++ FASLEND: hits = 80, misses = 48



*** Compiling rungeku ... 


FASLOUT "rungeku": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rungekuttaeval compiled, 307 + 88 bytes
+++ rukufindrhs compiled, 37 + 28 bytes
+++ ruksyserr compiled, 13 + 32 bytes
+++ rungekutta1 compiled, 155 + 104 bytes
+++ rungekutta2 compiled, 239 + 76 bytes
+++ rungekuttares compiled, 75 + 16 bytes
+++ rungekuttastep compiled, 99 + 36 bytes
Completed FASL files for "rungeku"
+++ FASLEND: hits = 55, misses = 54

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling randpoly ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "randpoly": IN files;  or type in expressions
When all done, execute FASLEND;
+++ apply_e compiled, 11 + 16 bytes
+++ lambda_684w1mh6hm2a compiled, 5 + 20 bytes
+++ randpoly compiled, 546 + 148 bytes
+++ functionp compiled, 9 + 16 bytes
+++ natnump compiled, 11 + 12 bytes
+++ !*kp2f compiled, 11 + 20 bytes
+++ !*kp2q compiled, 32 + 32 bytes
+++ rand!-mons!-dense compiled, 226 + 32 bytes
+++ rand!-mons!-sparse compiled, 196 + 40 bytes
+++ binomial compiled, 120 + 32 bytes
+++ rand!-comb compiled, 106 + 16 bytes
+++ inttovec compiled, 6 + 16 bytes
+++ inttovec1 compiled, 22 + 16 bytes
+++ inttovec!-solve compiled, 39 + 16 bytes

*** .. redefined 
+++ rand compiled, 139 + 80 bytes
+++ evalrandom compiled, 66 + 44 bytes
+++ proc compiled, 28 + 44 bytes
+++ evalproc compiled, 8 + 20 bytes
+++ showproc compiled, 20 + 32 bytes
+++ getproc compiled, 74 + 40 bytes
+++ getfnbody compiled, 8 + 12 bytes
Completed FASL files for "randpoly"
+++ FASLEND: hits = 181, misses = 102
Fast-loading "./reduce.img(randpoly)"

*** .. redefined 

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling reacteqn ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "reacteqn": IN files;  or type in expressions
When all done, execute FASLEND;

*** -> redefined 

*** <> redefined 
+++ r2oeval compiled, 449 + 104 bytes

*** local variable m in procedure r2omat not used 
+++ r2omat compiled, 98 + 40 bytes
+++ r2findindex compiled, 6 + 16 bytes
+++ r2findindex1 compiled, 17 + 16 bytes
+++ r2speclist compiled, 41 + 16 bytes
+++ r2speclist1 compiled, 17 + 20 bytes
+++ r2speclist2 compiled, 30 + 20 bytes
+++ r2oaddspecies compiled, 17 + 24 bytes
+++ r2oreaction compiled, 94 + 32 bytes
Completed FASL files for "reacteqn"
+++ FASLEND: hits = 87, misses = 57
Fast-loading "./reduce.img(reacteqn)"

*** -> redefined 

*** <> redefined 

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling roots ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "roots": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable u in procedure roots not used 
+++ roots compiled, 1 + 8 bytes
+++ minprec compiled, 6 + 20 bytes
Completed FASL files for "roots"
+++ FASLEND: hits = 450, misses = 116
Fast-loading "./reduce.img(roots)"



*** Compiling bfdoer ... 


FASLOUT "bfdoer": IN files;  or type in expressions
When all done, execute FASLEND;
+++ bfleqp compiled, 10 + 16 bytes
+++ bfeqp compiled, 32 + 8 bytes
+++ bfsgn compiled, 9 + 12 bytes
+++ bfmin compiled, 8 + 16 bytes
+++ gfconj compiled, 5 + 12 bytes
+++ gfrlmult compiled, 36 + 36 bytes
+++ gfeqp compiled, 22 + 20 bytes
+++ ncoeffs compiled, 42 + 12 bytes
+++ rlval compiled, 117 + 44 bytes
+++ deflate2 compiled, 83 + 36 bytes
+++ primp compiled, 66 + 16 bytes
+++ primpn compiled, 92 + 16 bytes
+++ r2flbf compiled, 8 + 20 bytes
+++ intdiff compiled, 49 + 12 bytes
+++ ratminus compiled, 6 + 8 bytes
+++ ratdif compiled, 7 + 16 bytes
+++ ratplus compiled, 6 + 12 bytes
+++ ratmean compiled, 6 + 16 bytes
+++ ratplusm compiled, 81 + 16 bytes
+++ ratmin compiled, 6 + 12 bytes
+++ ratmax compiled, 6 + 12 bytes
+++ ratlessp compiled, 6 + 12 bytes
+++ ratleqp compiled, 7 + 16 bytes
+++ listecho compiled, 41 + 16 bytes
+++ bfloatem compiled, 284 + 32 bytes
+++ cflotem compiled, 96 + 20 bytes
+++ gfdiff compiled, 275 + 52 bytes
+++ gfval compiled, 51 + 36 bytes
+++ gfrval compiled, 281 + 72 bytes
+++ gfcval compiled, 170 + 68 bytes
+++ bfplusn compiled, 8 + 12 bytes
+++ gfplusn compiled, 16 + 16 bytes
+++ gftimesn compiled, 37 + 24 bytes
+++ minbound compiled, 31 + 44 bytes
+++ maxbound compiled, 9 + 24 bytes
+++ maxbnd1 compiled, 119 + 72 bytes
+++ minbnd1 compiled, 228 + 68 bytes
+++ maxbdbf compiled, 94 + 44 bytes
+++ bfloatrd compiled, 483 + 40 bytes
+++ logrtn compiled, 30 + 24 bytes
+++ fl2bfexp compiled, 8 + 20 bytes
+++ expfl2bf compiled, 56 + 44 bytes
+++ ungfform compiled, 68 + 20 bytes
+++ gtag compiled, 8 + 16 bytes
+++ gzero compiled, 14 + 20 bytes
+++ simpgi compiled, 6 + 16 bytes
+++ rlrtno compiled, 14 + 28 bytes
+++ roots compiled, 14 + 28 bytes
+++ firstroot compiled, 16 + 32 bytes
+++ root_val compiled, 26 + 40 bytes
+++ outril compiled, 53 + 16 bytes
+++ gfrootset compiled, 24 + 32 bytes
+++ gfsetmsg compiled, 23 + 32 bytes
+++ sch compiled, 50 + 28 bytes
+++ gfnewtset compiled, 71 + 56 bytes
+++ gfns1 compiled, 23 + 36 bytes
+++ gfnewt compiled, 35 + 36 bytes
+++ gfroot compiled, 36 + 36 bytes
+++ univar compiled, 56 + 44 bytes
+++ ckacc compiled, 178 + 92 bytes
+++ gfadjust compiled, 57 + 60 bytes
+++ xnshift compiled, 30 + 28 bytes
+++ unshift compiled, 30 + 28 bytes
+++ gfexit compiled, 409 + 84 bytes
+++ zptst compiled, 10 + 16 bytes
+++ eqprts compiled, 22 + 24 bytes
+++ powerchk compiled, 81 + 24 bytes
+++ rtreorder compiled, 60 + 48 bytes
+++ bfnafterp compiled, 86 + 28 bytes
+++ dnafterp compiled, 62 + 24 bytes
+++ dnequal compiled, 26 + 12 bytes
+++ dnafterp1 compiled, 77 + 20 bytes
Completed FASL files for "bfdoer"
+++ FASLEND: hits = 703, misses = 362



*** Compiling bfdoer2 ... 


FASLOUT "bfdoer2": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gf2flt compiled, 21 + 32 bytes
+++ gfbfxn compiled, 43 + 32 bytes
+++ print_the_number compiled, 45 + 32 bytes
+++ bfprin0a compiled, 9 + 20 bytes
+++ trmsg1a compiled, 13 + 28 bytes
+++ trmsg2a compiled, 13 + 32 bytes
+++ trmsg3a compiled, 13 + 28 bytes
+++ trmsg4a compiled, 16 + 32 bytes

*** local variable nx in procedure trmsg5 not used 
+++ trmsg5 compiled, 11 + 24 bytes
+++ trmsg6a compiled, 15 + 36 bytes
+++ trmsg7a compiled, 11 + 28 bytes
+++ trmsg8a compiled, 23 + 44 bytes
+++ trmsg9 compiled, 5 + 16 bytes
+++ trmsg10a compiled, 7 + 16 bytes
+++ trmsg11a compiled, 15 + 32 bytes
+++ trmsg12a compiled, 15 + 36 bytes
+++ trmsg13a compiled, 15 + 36 bytes
+++ trmsg17 compiled, 10 + 24 bytes
+++ nwterr compiled, 23 + 40 bytes
+++ nwterrfx compiled, 33 + 44 bytes
+++ seteps compiled, 16 + 32 bytes
+++ pconstr compiled, 138 + 92 bytes
+++ prxflot compiled, 23 + 40 bytes
+++ smpart compiled, 60 + 48 bytes
+++ stuffr compiled, 27 + 24 bytes
+++ n2gf compiled, 34 + 12 bytes
+++ pbfprint compiled, 87 + 28 bytes
+++ pflupd compiled, 14 + 20 bytes
+++ rootacc compiled, 28 + 32 bytes
+++ rootprec compiled, 37 + 40 bytes
+++ csize compiled, 24 + 24 bytes
+++ ckpzro compiled, 98 + 32 bytes
+++ ckprec compiled, 149 + 188 bytes
+++ restorefl compiled, 75 + 92 bytes
+++ mkequal compiled, 57 + 28 bytes
+++ outmode compiled, 116 + 44 bytes
+++ allout compiled, 266 + 104 bytes
+++ rrsiz compiled, 130 + 60 bytes
+++ outecho compiled, 57 + 28 bytes
+++ find!!flim compiled, 26 + 24 bytes
+++ xnsiz compiled, 7 + 20 bytes
+++ xnsiz1 compiled, 175 + 44 bytes
+++ outtrim compiled, 29 + 40 bytes
+++ bfmax compiled, 53 + 52 bytes
+++ nbfout compiled, 30 + 32 bytes
+++ bfixup compiled, 8 + 20 bytes
+++ ftout compiled, 12 + 16 bytes
+++ cexpand compiled, 78 + 36 bytes
+++ cdnconj compiled, 14 + 8 bytes
+++ mkdn compiled, 21 + 16 bytes
+++ normdec compiled, 54 + 20 bytes
+++ rootrnd compiled, 4 + 16 bytes
+++ rtrnda compiled, 27 + 24 bytes
+++ gfrtrnd compiled, 31 + 28 bytes
+++ gfsqfrf compiled, 136 + 100 bytes
+++ automod compiled, 338 + 108 bytes
+++ gffinit compiled, 46 + 44 bytes
+++ clrdenom compiled, 18 + 44 bytes
+++ gfform compiled, 49 + 24 bytes
+++ gfsimp compiled, 90 + 44 bytes
+++ reformup compiled, 269 + 56 bytes
Completed FASL files for "bfdoer2"
+++ FASLEND: hits = 557, misses = 355



*** Compiling complxp ... 


FASLOUT "complxp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rxgfrl compiled, 150 + 72 bytes
+++ rxgfc compiled, 42 + 32 bytes
+++ gfabs compiled, 24 + 12 bytes
+++ gfabstim compiled, 29 + 16 bytes
+++ rxrl compiled, 62 + 24 bytes
+++ csep compiled, 106 + 44 bytes
+++ fillz compiled, 44 + 16 bytes
+++ primcoef compiled, 113 + 20 bytes
+++ gfgcd compiled, 17 + 16 bytes
+++ gfgcdr compiled, 14 + 20 bytes
+++ pqrem compiled, 119 + 16 bytes
+++ negprem compiled, 159 + 16 bytes
+++ gfcpquo compiled, 143 + 16 bytes
+++ deflate1 compiled, 53 + 24 bytes
+++ deflate1c compiled, 70 + 28 bytes
+++ accupr compiled, 510 + 136 bytes
+++ orgshift compiled, 218 + 84 bytes
+++ bfrndem compiled, 256 + 28 bytes
+++ r2flbf2r compiled, 4 + 16 bytes
+++ bfprim compiled, 106 + 24 bytes
+++ primpc compiled, 84 + 12 bytes
+++ ungffc compiled, 92 + 24 bytes
+++ iscale compiled, 9 + 12 bytes
+++ mkinteg compiled, 163 + 40 bytes
+++ mkgirat compiled, 251 + 68 bytes
+++ mkpoly compiled, 21 + 36 bytes
+++ mkpoly1 compiled, 16 + 16 bytes
+++ getroot compiled, 37 + 32 bytes
+++ mkdiffer compiled, 4 + 12 bytes
+++ a2gf compiled, 111 + 76 bytes
+++ a2gf1 compiled, 130 + 84 bytes
+++ gi2gf compiled, 74 + 28 bytes
+++ gfquotbf compiled, 14 + 16 bytes
+++ quotbf compiled, 77 + 44 bytes
+++ sturm1 compiled, 44 + 44 bytes
+++ gfshift compiled, 238 + 96 bytes
+++ p1rmult compiled, 6 + 20 bytes
+++ p1rmult1 compiled, 23 + 24 bytes

*** local variable nx in procedure xoshift not used 
+++ xoshift compiled, 278 + 124 bytes
+++ gffinitr compiled, 10 + 20 bytes
+++ invpoly compiled, 53 + 16 bytes
+++ bdstest compiled, 15 + 20 bytes
+++ rlrtno2 compiled, 91 + 56 bytes
+++ schxa compiled, 15 + 20 bytes
+++ schxb compiled, 15 + 20 bytes
+++ adjst compiled, 10 + 24 bytes
+++ limadj compiled, 47 + 36 bytes
+++ gfstorval compiled, 7 + 12 bytes
+++ gfgetmin compiled, 34 + 16 bytes
+++ calcprec compiled, 159 + 112 bytes
+++ rrpwr compiled, 18 + 20 bytes
+++ cvt2 compiled, 39 + 52 bytes
+++ dsply compiled, 24 + 36 bytes
+++ leadatom compiled, 7 + 8 bytes
+++ cvt5 compiled, 10 + 20 bytes
Completed FASL files for "complxp"
+++ FASLEND: hits = 499, misses = 245



*** Compiling allroot ... 


FASLOUT "allroot": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gfrootfind compiled, 2060 + 416 bytes
+++ pshift compiled, 35 + 20 bytes
+++ gfnewton compiled, 12 + 24 bytes
+++ gfnewt2 compiled, 536 + 228 bytes
+++ accuroot compiled, 640 + 184 bytes
+++ prreq compiled, 168 + 116 bytes
+++ sizatom compiled, 30 + 48 bytes
+++ dsplyrtno compiled, 12 + 16 bytes
+++ allroots compiled, 1573 + 388 bytes
+++ princreq compiled, 27 + 32 bytes
Completed FASL files for "allroot"
+++ FASLEND: hits = 275, misses = 271



*** Compiling rootaux ... 


FASLOUT "rootaux": IN files;  or type in expressions
When all done, execute FASLEND;
+++ accupr1 compiled, 80 + 72 bytes
+++ uniroots compiled, 89 + 88 bytes
+++ uniroot0 compiled, 631 + 132 bytes
+++ rtpass1 compiled, 26 + 36 bytes
+++ rtpass2 compiled, 175 + 80 bytes
+++ doroots compiled, 11 + 20 bytes
+++ rooterr compiled, 13 + 28 bytes
+++ schinf compiled, 59 + 32 bytes
+++ schplus compiled, 9 + 24 bytes
+++ schinf1 compiled, 18 + 20 bytes
+++ bfnewton compiled, 458 + 176 bytes
Completed FASL files for "rootaux"
+++ FASLEND: hits = 133, misses = 110

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling rlfi ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "rlfi": IN files;  or type in expressions
When all done, execute FASLEND;

*** get* not defined (LOSE flag) 
+++ latexon compiled, 25 + 60 bytes
+++ latexoff compiled, 22 + 52 bytes
+++ verbatimon compiled, 12 + 36 bytes
+++ verbatimoff compiled, 12 + 28 bytes
+++ texaeval compiled, 12 + 20 bytes

*** local variable tu in procedure texlet not used 

*** local variable tv in procedure texlet not used 
+++ texlet compiled, 24 + 28 bytes
+++ latexprint compiled, 5 + 20 bytes
+++ setlaprin compiled, 9 + 28 bytes
+++ mathstyle compiled, 19 + 28 bytes
+++ prinlabegin compiled, 40 + 52 bytes
+++ prinlaend compiled, 60 + 76 bytes
+++ latexprin compiled, 13 + 20 bytes
+++ texprla compiled, 4 + 12 bytes
+++ maprintla compiled, 195 + 104 bytes

*** local variable op in procedure prinpopargs not used 
+++ prinpopargs compiled, 49 + 56 bytes
+++ prinlatom compiled, 38 + 32 bytes
+++ defid compiled, 104 + 68 bytes
+++ incompe3 compiled, 22 + 8 bytes
+++ testchar1 compiled, 29 + 16 bytes
+++ chundexp not compiled (C version available)
+++ inprinla compiled, 38 + 28 bytes
+++ oprinla compiled, 33 + 32 bytes

*** \ redefined 
+++ prin2la not compiled (C version available)

*** local variable p in procedure prinfrac not used 
+++ prinfrac compiled, 14 + 32 bytes
+++ defindex compiled, 15 + 12 bytes
+++ defindex1 compiled, 52 + 36 bytes
+++ prinidop compiled, 160 + 88 bytes
+++ prinindexs compiled, 46 + 28 bytes
+++ exptprla compiled, 147 + 92 bytes

*** local variable p in procedure sqrtprla not used 
+++ sqrtprla compiled, 9 + 28 bytes

*** local variable p in procedure intprla not used 
+++ intprla compiled, 29 + 36 bytes

*** local variable p in procedure dintprla not used 
+++ dintprla compiled, 61 + 52 bytes

*** local variable p in procedure sumprla not used 
+++ sumprla compiled, 68 + 56 bytes
+++ sqprla compiled, 5 + 16 bytes

*** local variable p in procedure dfprla not used 
+++ dfprla compiled, 159 + 72 bytes

*** local variable p in procedure listprla not used 
+++ listprla compiled, 39 + 44 bytes
Completed FASL files for "rlfi"
+++ FASLEND: hits = 489, misses = 353
Fast-loading "./reduce.img(rlfi)"

*** \ redefined 

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling roots2 ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "roots2": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable u in procedure realroots not used 
+++ realroots compiled, 1 + 8 bytes
Fast-loading "./reduce.img(roots)"
Fast-loading "./reduce.img(bfdoer)"
Fast-loading "./reduce.img(bfdoer2)"
Fast-loading "./reduce.img(complxp)"
Fast-loading "./reduce.img(allroot)"
Fast-loading "./reduce.img(rootaux)"
Completed FASL files for "roots2"
+++ FASLEND: hits = 5, misses = 14
Fast-loading "./reduce.img(roots2)"



*** Compiling realroot ... 


FASLOUT "realroot": IN files;  or type in expressions
When all done, execute FASLEND;
+++ isolatep compiled, 679 + 140 bytes
+++ stuffrt compiled, 97 + 24 bytes
+++ offsetr compiled, 13 + 28 bytes
+++ sturm compiled, 57 + 36 bytes
+++ sturm0 compiled, 56 + 24 bytes
+++ sgn1 compiled, 37 + 20 bytes
+++ r2flimbf compiled, 11 + 24 bytes
+++ rootfind compiled, 880 + 260 bytes
+++ bndtst compiled, 5 + 20 bytes
+++ movebds compiled, 14 + 16 bytes
+++ tighten compiled, 152 + 84 bytes
+++ rtsreal compiled, 396 + 196 bytes
+++ lval compiled, 7 + 12 bytes
+++ lpwr compiled, 35 + 12 bytes
+++ schnok compiled, 32 + 16 bytes
+++ limchk compiled, 117 + 56 bytes
+++ limchk1 compiled, 20 + 40 bytes
+++ limchk2 compiled, 120 + 52 bytes
+++ limerr compiled, 6 + 24 bytes
+++ ratv compiled, 7 + 12 bytes
+++ a2rat compiled, 69 + 48 bytes
+++ rlrootno compiled, 25 + 40 bytes
+++ realroots compiled, 14 + 28 bytes
+++ isolater compiled, 27 + 44 bytes
+++ mkratl compiled, 98 + 16 bytes
+++ exclude compiled, 4 + 12 bytes
Completed FASL files for "realroot"
+++ FASLEND: hits = 327, misses = 218



*** Compiling nrstroot ... 


FASLOUT "nrstroot": IN files;  or type in expressions
When all done, execute FASLEND;
+++ nearestroot compiled, 11 + 12 bytes
+++ nrstroot compiled, 676 + 220 bytes
+++ rr2acc compiled, 57 + 64 bytes
+++ rr2nl compiled, 4 + 12 bytes
+++ rr2nl1 compiled, 34 + 16 bytes
+++ nrstrt0 compiled, 246 + 140 bytes
+++ nrpass1 compiled, 22 + 32 bytes
+++ nrpass2 compiled, 57 + 56 bytes
Completed FASL files for "nrstroot"
+++ FASLEND: hits = 108, misses = 98



*** Compiling multroot ... 


FASLOUT "multroot": IN files;  or type in expressions
When all done, execute FASLEND;
+++ multroot1 compiled, 12 + 24 bytes
+++ multroot0 compiled, 212 + 132 bytes
+++ multroot01 compiled, 355 + 192 bytes
+++ cleardenr compiled, 31 + 16 bytes
+++ algunion compiled, 6 + 16 bytes
+++ findlinks compiled, 430 + 104 bytes
+++ multroot2 compiled, 279 + 180 bytes
+++ combinesolns compiled, 176 + 88 bytes
+++ screensolns1 compiled, 106 + 36 bytes
+++ solvepath compiled, 1443 + 276 bytes
+++ testsub compiled, 187 + 104 bytes
+++ sortvals1 compiled, 59 + 28 bytes
+++ getvars compiled, 112 + 68 bytes
+++ spurival compiled, 114 + 84 bytes
+++ testval1 compiled, 66 + 48 bytes
+++ spurifix compiled, 328 + 112 bytes
+++ testval2 compiled, 72 + 44 bytes
+++ isvar compiled, 14 + 12 bytes
+++ outcombine1 compiled, 173 + 72 bytes
+++ findvals compiled, 47 + 24 bytes
+++ outcombine2 compiled, 54 + 24 bytes
+++ lambda_8glew9a35ph compiled, 6 + 12 bytes
+++ lambda_8glew9a35ph compiled, 6 + 12 bytes
+++ sortvars compiled, 50 + 36 bytes
+++ sortvals compiled, 12 + 36 bytes
+++ cabs compiled, 36 + 48 bytes
+++ membno compiled, 41 + 36 bytes
+++ getpaths compiled, 101 + 64 bytes
+++ links2paths compiled, 222 + 60 bytes
+++ last compiled, 7 + 16 bytes
+++ subset1 compiled, 15 + 16 bytes
+++ root compiled, 59 + 56 bytes
+++ pfx compiled, 56 + 56 bytes
+++ roundroot compiled, 27 + 20 bytes
+++ elim compiled, 33 + 20 bytes
+++ combinerts compiled, 56 + 28 bytes
Completed FASL files for "multroot"
+++ FASLEND: hits = 558, misses = 153

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling sets ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "sets": IN files;  or type in expressions
When all done, execute FASLEND;

*** \ redefined 
+++ set!-ordp compiled, 14 + 12 bytes
+++ simpunion compiled, 35 + 32 bytes
+++ simpintersection compiled, 40 + 32 bytes
+++ simpsetdiff compiled, 43 + 28 bytes
+++ applysetop compiled, 168 + 52 bytes
+++ mkset compiled, 5 + 20 bytes
+++ make!-set not compiled (C version available)
+++ delete!-dups compiled, 23 + 12 bytes
+++ evalmember compiled, 6 + 12 bytes
+++ evalsubset_eq compiled, 18 + 28 bytes
+++ evalsubset compiled, 12 + 20 bytes
+++ subsetneqp compiled, 9 + 16 bytes
+++ evalsymsubset compiled, 50 + 20 bytes
+++ evalset_eq compiled, 13 + 24 bytes
+++ setequal compiled, 8 + 12 bytes
+++ evalsetbool compiled, 131 + 56 bytes
+++ evalb compiled, 13 + 24 bytes
Completed FASL files for "sets"
+++ FASLEND: hits = 240, misses = 96
Fast-loading "./reduce.img(sets)"

*** \ redefined 

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling xideal ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "xideal": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(excalc)"
Fast-loading "./reduce.img(exintro)"
Fast-loading "./reduce.img(exaux)"
Fast-loading "./reduce.img(degform)"
Fast-loading "./reduce.img(exdf)"
Fast-loading "./reduce.img(forder)"
Fast-loading "./reduce.img(frames)"
Fast-loading "./reduce.img(hodge)"
Fast-loading "./reduce.img(idexf)"
Fast-loading "./reduce.img(indices)"
Fast-loading "./reduce.img(indsymm)"
Fast-loading "./reduce.img(indxprin)"
Fast-loading "./reduce.img(innerprd)"
Fast-loading "./reduce.img(liedf)"
Fast-loading "./reduce.img(lievalfm)"
Fast-loading "./reduce.img(partdf)"
Fast-loading "./reduce.img(partitsf)"
Fast-loading "./reduce.img(vardf)"
Fast-loading "./reduce.img(vecanlys)"
Fast-loading "./reduce.img(exlists)"
Fast-loading "./reduce.img(wedge)"

*** ^ redefined 
Completed FASL files for "xideal"
+++ FASLEND: hits = 133, misses = 70
Fast-loading "./reduce.img(xideal)"



*** Compiling xgroeb ... 


FASLOUT "xgroeb": IN files;  or type in expressions
When all done, execute FASLEND;
+++ xideallist compiled, 179 + 80 bytes
+++ xidealpf compiled, 16 + 28 bytes
+++ storexvars compiled, 189 + 84 bytes
+++ allxvars compiled, 29 + 16 bytes
+++ xideal0 compiled, 181 + 128 bytes
+++ xriterion_1 compiled, 87 + 52 bytes
+++ xriterion_2 compiled, 66 + 52 bytes
+++ xequiv compiled, 13 + 12 bytes
+++ xregister compiled, 35 + 52 bytes
+++ xregister_spoly_pair compiled, 1 + 8 bytes
+++ xregister_wedge_pair compiled, 1 + 8 bytes
+++ xregister_xcomm_pair compiled, 1 + 8 bytes
+++ xprint_basis compiled, 34 + 40 bytes
+++ xpolyindex compiled, 8 + 12 bytes
+++ xprint_pair compiled, 64 + 40 bytes
Completed FASL files for "xgroeb"
+++ FASLEND: hits = 120, misses = 87



*** Compiling xreduct ... 


FASLOUT "xreduct": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpxmod compiled, 84 + 56 bytes
+++ xmodlist compiled, 188 + 64 bytes
+++ simpxmodideal compiled, 124 + 80 bytes
+++ xmodideallist compiled, 267 + 92 bytes

*** local variable x in procedure xautolist not used 
+++ xautolist compiled, 110 + 64 bytes
+++ xreduce compiled, 33 + 44 bytes
+++ xreduce1 compiled, 20 + 16 bytes
+++ weak_xreduce compiled, 33 + 44 bytes
+++ weak_xreduce1 compiled, 99 + 84 bytes
+++ xautoreduce compiled, 4 + 16 bytes
+++ xautoreduce1 compiled, 33 + 20 bytes
+++ weak_xautoreduce compiled, 5 + 12 bytes
+++ weak_xautoreduce1 compiled, 58 + 24 bytes
Completed FASL files for "xreduct"
+++ FASLEND: hits = 158, misses = 67



*** Compiling xcrit ... 


FASLOUT "xcrit": IN files;  or type in expressions
When all done, execute FASLEND;
+++ critical_pairs compiled, 121 + 36 bytes
+++ remove_critical_pairs compiled, 5 + 12 bytes
+++ make_spoly_pair compiled, 61 + 44 bytes
+++ triviallcm compiled, 5 + 12 bytes
+++ xdegreecheck compiled, 9 + 16 bytes
+++ make_wedge_pair compiled, 54 + 48 bytes
+++ overall_factor compiled, 17 + 12 bytes
+++ make_xcomm_pair compiled, 23 + 32 bytes
+++ critical_element compiled, 5 + 8 bytes
+++ spoly_pair compiled, 58 + 40 bytes
+++ wedge_pair compiled, 31 + 24 bytes
+++ xcomm_pair compiled, 38 + 36 bytes
Completed FASL files for "xcrit"
+++ FASLEND: hits = 82, misses = 36



*** Compiling xpowers ... 


FASLOUT "xpowers": IN files;  or type in expressions
When all done, execute FASLEND;
+++ xorder compiled, 50 + 52 bytes
+++ xval not compiled (C version available)
+++ pfordp compiled, 24 + 16 bytes
+++ termordp not compiled (C version available)
+++ monordp not compiled (C version available)
+++ factorordp not compiled (C version available)
+++ xord_lex compiled, 27 + 20 bytes
+++ xord_gradlex compiled, 28 + 20 bytes
+++ xord_deglex compiled, 24 + 24 bytes
+++ xdegreemon not compiled (C version available)
+++ xord_deggradlex compiled, 26 + 28 bytes
+++ xlcm compiled, 55 + 16 bytes
+++ xdiv not compiled (C version available)
+++ listunion compiled, 37 + 8 bytes
+++ sublistp not compiled (C version available)
+++ listdiff compiled, 15 + 8 bytes
Completed FASL files for "xpowers"
+++ FASLEND: hits = 74, misses = 37



*** Compiling xstorage ... 


FASLOUT "xstorage": IN files;  or type in expressions
When all done, execute FASLEND;
+++ find_item not compiled (C version available)
+++ add_item compiled, 32 + 24 bytes
+++ remove_item compiled, 8 + 16 bytes
+++ remove_least_item compiled, 19 + 20 bytes
+++ remove_root_item compiled, 34 + 16 bytes
+++ remove_items compiled, 20 + 16 bytes
Completed FASL files for "xstorage"
+++ FASLEND: hits = 47, misses = 29



*** Compiling xaux ... 


FASLOUT "xaux": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*wedgepf2pf compiled, 18 + 16 bytes
+++ !*pf2wedgepf compiled, 18 + 16 bytes
+++ mkuwedge compiled, 11 + 16 bytes
+++ mknwedge not compiled (C version available)
+++ wedgefax not compiled (C version available)
+++ wedgepf compiled, 7 + 20 bytes
+++ xvars compiled, 12 + 20 bytes
+++ xvarlist compiled, 59 + 24 bytes
+++ xpartitsq compiled, 89 + 44 bytes
+++ xpartitk compiled, 29 + 28 bytes
+++ xpartitop compiled, 4 + 16 bytes
+++ xexptpf compiled, 26 + 16 bytes
+++ xvarp compiled, 42 + 40 bytes
+++ excoeffs compiled, 22 + 24 bytes
+++ exvars compiled, 20 + 20 bytes
+++ xdegree not compiled (C version available)
+++ xhomogeneous compiled, 20 + 16 bytes
+++ xmaxdegree compiled, 25 + 20 bytes
+++ xnormalise compiled, 18 + 20 bytes
+++ subs2pf compiled, 20 + 16 bytes
+++ subs2pf!* compiled, 22 + 16 bytes
+++ !*pf2a compiled, 5 + 20 bytes
+++ !*pf2a1 compiled, 6 + 20 bytes
+++ preppf compiled, 16 + 24 bytes
+++ preppf0 compiled, 19 + 20 bytes
+++ preppf1 compiled, 58 + 24 bytes
+++ printpf compiled, 4 + 16 bytes
Completed FASL files for "xaux"
+++ FASLEND: hits = 146, misses = 75



*** Compiling xexcalc ... 


FASLOUT "xexcalc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ addpf compiled, 83 + 24 bytes
+++ termordp!! compiled, 14 + 16 bytes
+++ guesspftype compiled, 27 + 24 bytes
+++ xvarlistp compiled, 13 + 12 bytes
+++ addmpf compiled, 40 + 16 bytes
+++ deg!*form compiled, 123 + 92 bytes
+++ oddp compiled, 16 + 24 bytes
+++ wedgek2 compiled, 120 + 52 bytes
Completed FASL files for "xexcalc"
+++ FASLEND: hits = 46, misses = 49

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling eds ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "eds": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(solve)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(solve1)"
Fast-loading "./reduce.img(ppsoln)"
Fast-loading "./reduce.img(solvelnr)"
Fast-loading "./reduce.img(glsolve)"
Fast-loading "./reduce.img(solvealg)"
Fast-loading "./reduce.img(solvetab)"
Fast-loading "./reduce.img(quartic)"
Fast-loading "./reduce.img(excalc)"
Fast-loading "./reduce.img(exintro)"
Fast-loading "./reduce.img(exaux)"
Fast-loading "./reduce.img(degform)"
Fast-loading "./reduce.img(exdf)"
Fast-loading "./reduce.img(forder)"
Fast-loading "./reduce.img(frames)"
Fast-loading "./reduce.img(hodge)"
Fast-loading "./reduce.img(idexf)"
Fast-loading "./reduce.img(indices)"
Fast-loading "./reduce.img(indsymm)"
Fast-loading "./reduce.img(indxprin)"
Fast-loading "./reduce.img(innerprd)"
Fast-loading "./reduce.img(liedf)"
Fast-loading "./reduce.img(lievalfm)"
Fast-loading "./reduce.img(partdf)"
Fast-loading "./reduce.img(partitsf)"
Fast-loading "./reduce.img(vardf)"
Fast-loading "./reduce.img(vecanlys)"
Fast-loading "./reduce.img(exlists)"
Fast-loading "./reduce.img(wedge)"

*** ^ redefined 
Fast-loading "./reduce.img(xideal)"
Fast-loading "./reduce.img(xgroeb)"
Fast-loading "./reduce.img(xreduct)"
Fast-loading "./reduce.img(xcrit)"
Fast-loading "./reduce.img(xpowers)"
Fast-loading "./reduce.img(xstorage)"
Fast-loading "./reduce.img(xaux)"
Fast-loading "./reduce.img(xexcalc)"
+++ edscall_8vppoc53zgxc compiled, 49 + 20 bytes
Completed FASL files for "eds"
+++ FASLEND: hits = 134, misses = 90
Fast-loading "./reduce.img(eds)"



*** Compiling edseval ... 


FASLOUT "edseval": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable u in procedure quoteeds not used 
+++ quoteeds compiled, 2 + 12 bytes
+++ edsorlist compiled, 10 + 20 bytes
+++ edseval compiled, 155 + 76 bytes
+++ resimpeds!* compiled, 15 + 20 bytes
+++ edsexpand compiled, 158 + 20 bytes
+++ edsexpand compiled, 44 + 16 bytes
+++ edsprotect compiled, 124 + 60 bytes
+++ eds_cfrm!* compiled, 17 + 24 bytes
+++ edscob compiled, 5 + 8 bytes
+++ edscrd compiled, 6 + 8 bytes
+++ edsindcrd compiled, 176 + 36 bytes
+++ listeds compiled as link to makelist
+++ mkeds compiled, 4 + 12 bytes
+++ mkxeds compiled, 11 + 20 bytes
+++ mkxeds0 compiled, 52 + 28 bytes
+++ emptyeds compiled, 19 + 20 bytes
+++ emptyedsp compiled, 11 + 12 bytes
+++ edsp compiled, 4 + 12 bytes
+++ xedsp compiled, 17 + 16 bytes
+++ purgexeds compiled, 71 + 32 bytes
+++ !*a2eds compiled, 307 + 120 bytes
+++ edspropsp compiled, 13 + 12 bytes
+++ edsprint compiled, 4 + 16 bytes
+++ !*eds2a compiled, 5 + 16 bytes
+++ !*eds2a1 compiled, 204 + 44 bytes
+++ texprieds compiled, 88 + 40 bytes
+++ simptexpriedsop compiled, 9 + 16 bytes
+++ formsystem compiled, 34 + 32 bytes
+++ syseval compiled, 61 + 36 bytes
+++ indeval compiled, 169 + 36 bytes

*** local variable v in procedure propertieseval not used 
+++ propertieseval compiled, 55 + 36 bytes
+++ edsproperties compiled, 86 + 24 bytes
+++ edslength compiled, 9 + 16 bytes
+++ edspart compiled, 39 + 44 bytes

*** local variable s in procedure edssetpart not used 

*** local variable l in procedure edssetpart not used 

*** local variable r in procedure edssetpart not used 
+++ edssetpart compiled, 6 + 24 bytes
+++ mapeds compiled, 104 + 32 bytes
+++ checkeds compiled, 99 + 84 bytes
+++ resimpeds compiled, 141 + 72 bytes
+++ cleaneds compiled, 34 + 40 bytes
+++ purgeeds compiled, 66 + 24 bytes
+++ purgeeds!* compiled, 87 + 36 bytes
+++ puteds compiled, 66 + 40 bytes
+++ rempropeds compiled, 36 + 20 bytes
+++ geteds compiled, 22 + 16 bytes
+++ flagtrueeds compiled, 7 + 16 bytes
+++ knowntrueeds compiled, 5 + 16 bytes
+++ remtrueeds compiled, 7 + 16 bytes
+++ flagfalseeds compiled, 7 + 16 bytes
+++ knownfalseeds compiled, 5 + 16 bytes
+++ remfalseeds compiled, 7 + 16 bytes
+++ knowneds compiled as link to geteds
Completed FASL files for "edseval"
+++ FASLEND: hits = 443, misses = 162



*** Compiling edscfrm ... 


FASLOUT "edscfrm": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable u in procedure quotecfrm not used 
+++ quotecfrm compiled, 2 + 12 bytes
+++ cfrmeval compiled, 54 + 52 bytes
+++ cfrmprotect compiled, 119 + 56 bytes
+++ mkcfrm compiled, 4 + 12 bytes
+++ copycfrm compiled, 30 + 8 bytes
+++ cfrmp compiled, 4 + 12 bytes
+++ emptycfrm compiled, 13 + 12 bytes
+++ setcfrmeval compiled, 41 + 40 bytes
+++ setcfrm compiled, 86 + 56 bytes
+++ cfrmswapkord compiled, 11 + 20 bytes
+++ cfrmswaprules compiled, 23 + 24 bytes
+++ getcfrm compiled, 47 + 32 bytes
+++ !*a2cfrm compiled, 77 + 48 bytes
+++ !*a2cfrm1 compiled, 362 + 108 bytes
+++ !*sys2cfrm compiled, 261 + 112 bytes
+++ cfrmprint compiled, 4 + 16 bytes
+++ !*cfrm2a compiled, 103 + 40 bytes
+++ !*rule2prefix compiled, 55 + 16 bytes
+++ texpricfrm compiled, 8 + 20 bytes
+++ texpricfrm compiled, 17 + 28 bytes
+++ cobeval compiled, 9 + 16 bytes
+++ cobeval1 compiled, 67 + 40 bytes
+++ crdeval compiled, 9 + 16 bytes
+++ crdeval1 compiled, 139 + 60 bytes
+++ drveval compiled, 5 + 16 bytes
+++ drveval1 compiled, 97 + 52 bytes
+++ rsxeval compiled, 265 + 56 bytes
+++ edsparterr compiled, 11 + 20 bytes
+++ cfrmpart compiled, 85 + 52 bytes

*** local variable m in procedure cfrmsetpart not used 

*** local variable l in procedure cfrmsetpart not used 

*** local variable r in procedure cfrmsetpart not used 
+++ cfrmsetpart compiled, 6 + 24 bytes
+++ checkcfrm compiled, 5 + 16 bytes
+++ checkcfrm1 compiled, 134 + 84 bytes
+++ resimpcfrm compiled, 181 + 40 bytes
+++ reordereval compiled, 69 + 48 bytes
+++ reordercfrm compiled, 46 + 44 bytes
+++ cleancfrm compiled, 11 + 16 bytes
+++ purgecfrm compiled, 35 + 48 bytes
+++ purgedrv compiled, 167 + 76 bytes
+++ purgersx compiled, 23 + 20 bytes
+++ addrsx compiled, 49 + 28 bytes
+++ extendeds compiled, 59 + 68 bytes
+++ purgejet0 compiled, 142 + 24 bytes
+++ jetprl compiled, 9 + 16 bytes
+++ cfrmprod compiled, 26 + 36 bytes
+++ cfrmprod2 compiled, 56 + 28 bytes
+++ cfrmbprod compiled, 104 + 68 bytes
+++ simpdim compiled, 26 + 36 bytes
+++ cfrmnowherezero compiled, 63 + 36 bytes
+++ cfrmnowherezero1 compiled, 11 + 20 bytes
+++ cfrmconstant compiled, 4 + 16 bytes
+++ freeoffl compiled, 15 + 12 bytes
+++ freeoff compiled, 48 + 20 bytes
+++ cfrmviolatesrsx compiled, 22 + 20 bytes
Completed FASL files for "edscfrm"
+++ FASLEND: hits = 522, misses = 199



*** Compiling systems ... 


FASLOUT "systems": IN files;  or type in expressions
When all done, execute FASLEND;
+++ copyeds compiled, 5 + 8 bytes
+++ augmenteds compiled, 38 + 48 bytes

*** local variable c in procedure augmentsys not used 
+++ augmentsys compiled, 17 + 28 bytes
+++ quasilineareval compiled, 33 + 52 bytes
+++ quasilinearp compiled, 60 + 76 bytes
+++ quasilinearsys compiled, 10 + 12 bytes
+++ lineargenerators compiled, 44 + 36 bytes
+++ lineargens compiled, 148 + 48 bytes
+++ quasilinearpf compiled, 18 + 24 bytes
+++ semilineareval compiled, 20 + 40 bytes
+++ semilinearp compiled, 24 + 40 bytes
+++ semilinearsys compiled, 22 + 20 bytes
+++ semilinearpf compiled, 94 + 28 bytes
+++ pfaffianeval compiled, 32 + 48 bytes
+++ pfaffian compiled, 46 + 56 bytes
+++ pfaffsys compiled, 121 + 56 bytes
+++ closure compiled, 169 + 92 bytes
+++ closedeval compiled, 90 + 60 bytes
+++ closed compiled, 33 + 36 bytes
+++ closedsys compiled, 66 + 44 bytes
+++ frobenius compiled, 74 + 56 bytes
+++ frobeniussys compiled, 66 + 32 bytes
+++ evalcauchysys compiled, 80 + 44 bytes
+++ evalcartansys compiled, 84 + 56 bytes
+++ cartansys compiled, 98 + 44 bytes
+++ cartansyspf compiled, 60 + 32 bytes
+++ cartansyseds compiled, 4 + 12 bytes
+++ lineariseeds compiled, 44 + 52 bytes
+++ linearise compiled, 312 + 92 bytes
+++ nonlinfax compiled, 22 + 16 bytes
+++ oneformseval compiled, 129 + 48 bytes
+++ zeroformseval compiled, 129 + 48 bytes
Completed FASL files for "systems"
+++ FASLEND: hits = 390, misses = 127



*** Compiling tableaux ... 


FASLOUT "tableaux": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*a2tab compiled, 114 + 28 bytes
+++ !*tab2a compiled, 107 + 16 bytes
+++ mktab compiled, 4 + 12 bytes
+++ tableaup compiled, 4 + 12 bytes
+++ tableaueval compiled, 16 + 36 bytes
+++ tableau compiled, 253 + 88 bytes
Completed FASL files for "tableaux"
+++ FASLEND: hits = 33, misses = 37



*** Compiling contact ... 


FASLOUT "contact": IN files;  or type in expressions
When all done, execute FASLEND;
+++ contact compiled, 346 + 140 bytes
+++ gbsys compiled, 497 + 208 bytes
+++ gbcoords compiled, 728 + 80 bytes
+++ splitoffindices compiled, 53 + 8 bytes
+++ indtordp compiled, 24 + 16 bytes
+++ uniqids compiled, 103 + 40 bytes
+++ indexid compiled, 13 + 20 bytes
+++ indexlist compiled, 157 + 32 bytes
+++ pformid compiled, 55 + 20 bytes
+++ uniqvars compiled, 44 + 24 bytes
+++ pformvar compiled, 27 + 28 bytes
Completed FASL files for "contact"
+++ FASLEND: hits = 92, misses = 90



*** Compiling invol ... 


FASLOUT "invol": IN files;  or type in expressions
When all done, execute FASLEND;
+++ chareval compiled, 49 + 60 bytes
+++ characterstab compiled, 103 + 16 bytes
+++ characters compiled, 6 + 16 bytes
+++ characters1 compiled, 612 + 128 bytes
+++ changeposition compiled, 508 + 100 bytes
+++ ranlistsq compiled, 138 + 28 bytes
+++ countchars compiled, 43 + 12 bytes
+++ involutionchk compiled, 17 + 20 bytes
+++ cartantest compiled, 39 + 20 bytes
+++ involutiveeval compiled, 32 + 48 bytes
+++ involutive compiled, 79 + 64 bytes
+++ involutioneds compiled, 64 + 36 bytes
+++ involution compiled, 97 + 64 bytes
Completed FASL files for "invol"
+++ FASLEND: hits = 105, misses = 88



*** Compiling prolong ... 


FASLOUT "prolong": IN files;  or type in expressions
When all done, execute FASLEND;
+++ grassmannvariety compiled, 103 + 56 bytes
+++ prolongeds compiled, 73 + 44 bytes
+++ prolong compiled, 539 + 144 bytes
+++ decomposegrassmannvariety compiled, 581 + 112 bytes
+++ partsolvegrassmannvariety compiled, 72 + 40 bytes
+++ dimgrassmannvarietyeval compiled, 51 + 60 bytes
+++ dimgrassmannvariety compiled, 70 + 52 bytes
+++ torsioneval compiled, 60 + 48 bytes
+++ grassmannvarietytorsion compiled, 131 + 48 bytes
Completed FASL files for "prolong"
+++ FASLEND: hits = 106, misses = 99



*** Compiling pullback ... 


FASLOUT "pullback": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*a2map compiled, 76 + 48 bytes
+++ !*map2a compiled, 44 + 16 bytes
+++ pullbackcfrm compiled, 24 + 24 bytes
+++ pullbackeds compiled, 6 + 16 bytes
+++ pullbacklist compiled, 82 + 40 bytes
+++ simppullback compiled, 29 + 52 bytes
+++ pullbackcfrm1 compiled, 242 + 104 bytes
+++ unrollmap compiled, 110 + 52 bytes
+++ !*map2srccfrm compiled, 44 + 20 bytes
+++ !*map2cotangent compiled, 116 + 48 bytes
+++ exdfmap compiled, 155 + 100 bytes
+++ pullbackdrv compiled, 52 + 20 bytes
+++ pullbackmap compiled, 42 + 20 bytes
+++ pullback0 compiled, 24 + 24 bytes
+++ pullback compiled, 390 + 124 bytes
+++ pullbackpf compiled, 4 + 16 bytes
+++ pullbackpf1 compiled, 20 + 24 bytes
+++ pullbackk compiled, 12 + 28 bytes
+++ pullbacksq compiled, 4 + 16 bytes
Completed FASL files for "pullback"
+++ FASLEND: hits = 155, misses = 115



*** Compiling restrict ... 


FASLOUT "restrict": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*a2rmap compiled, 78 + 68 bytes
+++ !*rmap2a compiled, 91 + 24 bytes
+++ !*map2rmap compiled, 27 + 20 bytes
+++ restrictcfrm compiled, 6 + 16 bytes
+++ restricteds compiled, 6 + 16 bytes
+++ restrictlist compiled, 82 + 40 bytes
+++ simprestrict compiled, 15 + 32 bytes
+++ restrictcfrm1 compiled, 160 + 96 bytes
+++ !*map2cob compiled, 95 + 36 bytes
+++ !*rsx2cob compiled, 88 + 36 bytes
+++ restrictdrv compiled, 52 + 20 bytes
+++ restrictsq compiled, 6 + 20 bytes
+++ restrict compiled, 199 + 76 bytes
+++ restrictpf compiled, 27 + 12 bytes
+++ pullbackrsx compiled, 40 + 20 bytes
Completed FASL files for "restrict"
+++ FASLEND: hits = 119, misses = 92



*** Compiling transfrm ... 


FASLOUT "transfrm": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*a2xform compiled, 90 + 60 bytes
+++ !*xform2map compiled, 38 + 16 bytes
+++ !*map2xform compiled, 49 + 20 bytes
+++ !*xform2drv compiled, 54 + 24 bytes
+++ !*xform2sys compiled, 58 + 24 bytes
+++ transformcfrm compiled, 7 + 20 bytes
+++ transformeds compiled, 6 + 16 bytes
+++ xformcfrm compiled, 15 + 16 bytes
+++ xformcfrm1 compiled, 262 + 56 bytes
+++ xformcfrm0 compiled, 182 + 44 bytes
+++ xformdrv compiled, 13 + 24 bytes
+++ updatersx compiled, 49 + 36 bytes
+++ xformeds compiled, 16 + 20 bytes
+++ xformeds1 compiled, 196 + 76 bytes
+++ xformeds0 compiled, 191 + 76 bytes
+++ getxform compiled, 129 + 76 bytes
+++ xformdrveval compiled, 59 + 32 bytes
+++ xformdrveval compiled, 25 + 28 bytes
+++ structeqns compiled, 128 + 48 bytes
+++ structeqns compiled, 132 + 56 bytes
+++ inverteval compiled, 55 + 32 bytes
+++ invxform compiled, 154 + 88 bytes
+++ tmpind compiled, 107 + 40 bytes
Completed FASL files for "transfrm"
+++ FASLEND: hits = 216, misses = 106



*** Compiling edspde ... 


FASLOUT "edspde": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pde2eds compiled, 481 + 96 bytes
+++ lambda_tvzjjrvmyxu4 compiled, 4 + 8 bytes
+++ partialcontact compiled, 228 + 96 bytes
+++ pde2jeteval compiled, 7 + 20 bytes
+++ pde2jet compiled, 550 + 180 bytes
+++ edspdescan compiled, 122 + 60 bytes
+++ edsdfkernels compiled, 103 + 44 bytes
+++ !*df2jet compiled, 66 + 36 bytes
+++ !*df2partdf compiled, 12 + 20 bytes
+++ edsdfexpand compiled, 37 + 16 bytes
+++ mkdepend compiled, 44 + 32 bytes
Completed FASL files for "edspde"
+++ FASLEND: hits = 106, misses = 102



*** Compiling edsequiv ... 


FASLOUT "edsequiv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ equiv compiled, 32 + 44 bytes
+++ equalcfrm compiled, 34 + 28 bytes
+++ equall compiled, 13 + 12 bytes
+++ equaldrv compiled, 166 + 20 bytes
+++ equalrsx compiled, 89 + 20 bytes
+++ equaleds compiled, 23 + 16 bytes
+++ equivsys compiled, 367 + 72 bytes
Completed FASL files for "edsequiv"
+++ FASLEND: hits = 46, misses = 38



*** Compiling edsuser ... 


FASLOUT "edsuser": IN files;  or type in expressions
When all done, execute FASLEND;
+++ indexexpandeval0 compiled, 42 + 24 bytes
+++ indexexpandeval compiled, 71 + 52 bytes
+++ indexexpand compiled, 179 + 84 bytes
+++ indexexpandeqn compiled, 193 + 64 bytes
+++ subfreeindeqn compiled, 64 + 60 bytes
+++ boolexpr compiled, 12 + 16 bytes
+++ indexexpandbool compiled, 157 + 48 bytes
+++ subfreeindices compiled, 70 + 44 bytes
+++ subfreeindk compiled, 17 + 16 bytes
+++ lineardivisors compiled, 43 + 28 bytes
+++ lineardivisorspf compiled, 123 + 84 bytes
+++ xdecomposepf compiled, 17 + 16 bytes
+++ exfactors compiled, 43 + 28 bytes
+++ xfactorspf compiled, 74 + 28 bytes
+++ exact compiled, 4 + 12 bytes
+++ derivelist compiled, 15 + 32 bytes
+++ deriveeds compiled, 22 + 44 bytes
+++ derive compiled, 249 + 96 bytes
+++ allcoords compiled, 121 + 64 bytes
Completed FASL files for "edsuser"
+++ FASLEND: hits = 188, misses = 112



*** Compiling edsnorml ... 


FASLOUT "edsnorml": IN files;  or type in expressions
When all done, execute FASLEND;
+++ normaleds compiled, 10 + 24 bytes
+++ normaledsp compiled, 8 + 16 bytes
+++ positiveeds compiled, 310 + 104 bytes
+++ reducededs compiled, 117 + 60 bytes
+++ reducededsp compiled, 4 + 16 bytes
+++ solvededs compiled, 544 + 164 bytes
+++ xreordersys compiled, 32 + 12 bytes
+++ solvededsp compiled, 4 + 16 bytes
+++ reordereds compiled, 43 + 44 bytes
+++ sorteds compiled, 22 + 24 bytes
+++ sortsys compiled, 15 + 24 bytes
Completed FASL files for "edsnorml"
+++ FASLEND: hits = 85, misses = 86



*** Compiling edssolve ... 


FASLOUT "edssolve": IN files;  or type in expressions
When all done, execute FASLEND;
+++ edssolvegraded compiled, 306 + 60 bytes
+++ semilinearsql compiled, 18 + 12 bytes
+++ semilinearsq compiled, 16 + 24 bytes
+++ semilinearpf0 compiled, 51 + 20 bytes
+++ edssolvesemi compiled, 320 + 72 bytes
+++ edssolve compiled, 436 + 112 bytes
+++ expanddependence compiled, 30 + 16 bytes
+++ edssolvesys compiled as link to solvesys
+++ explicitsolutionp compiled, 12 + 24 bytes
+++ edspartsolve compiled, 252 + 68 bytes
+++ splitlinearequations compiled, 212 + 36 bytes
+++ lambda_tvzjjrvmyxu4 compiled, 4 + 8 bytes
+++ edsgradecoords compiled, 89 + 20 bytes
+++ solvepfsys compiled, 5 + 12 bytes
+++ solvepfsys1 compiled, 183 + 84 bytes
+++ solvepfsyseasy compiled, 201 + 52 bytes
+++ xsolveables compiled, 25 + 12 bytes
+++ solvepfsyshard compiled, 294 + 100 bytes
Completed FASL files for "edssolve"
+++ FASLEND: hits = 129, misses = 100



*** Compiling disjoin ... 


FASLOUT "disjoin": IN files;  or type in expressions
When all done, execute FASLEND;
+++ disjoin compiled, 83 + 40 bytes
+++ edsdisjoin compiled, 10 + 16 bytes
+++ edsdisjoin1 compiled, 14 + 12 bytes
+++ edsdisjoin2 compiled, 35 + 20 bytes

*** local variable lhx in procedure rmapintersection not used 

*** local variable xl in procedure rmapintersection not used 

*** local variable z in procedure rmapintersection not used 

*** local variable mx in procedure rmapintersection not used 

*** local variable my in procedure rmapintersection not used 
+++ rmapintersection compiled, 36 + 20 bytes
+++ rmapdifference compiled, 157 + 48 bytes
+++ rmapeval compiled, 238 + 56 bytes
Completed FASL files for "disjoin"
+++ FASLEND: hits = 45, misses = 44



*** Compiling element ... 


FASLOUT "element": IN files;  or type in expressions
When all done, execute FASLEND;
+++ intelteval compiled, 29 + 56 bytes
+++ intelt compiled, 686 + 76 bytes
+++ edsransolve compiled, 138 + 72 bytes
+++ sparserandom compiled, 15 + 24 bytes
Completed FASL files for "element"
+++ FASLEND: hits = 25, misses = 41



*** Compiling edsaux ... 


FASLOUT "edsaux": IN files;  or type in expressions
When all done, execute FASLEND;
+++ indkrns compiled, 66 + 20 bytes
+++ depkrns compiled, 66 + 20 bytes
+++ prlkrns compiled, 14 + 24 bytes
+++ remkrns compiled, 20 + 24 bytes
+++ degreepart compiled, 53 + 16 bytes
+++ scalarpart compiled, 4 + 16 bytes
+++ pfaffpart compiled, 4 + 16 bytes
+++ nonpfaffpart compiled, 51 + 20 bytes
+++ solvedpart compiled, 61 + 16 bytes
+++ lpows compiled, 30 + 8 bytes
+++ singleterms compiled, 15 + 8 bytes
+++ !*a2sys compiled, 43 + 24 bytes
+++ !*sys2a compiled, 38 + 16 bytes
+++ !*sys2a1 compiled, 40 + 16 bytes
+++ xpows compiled, 14 + 12 bytes
+++ xcoeffs compiled, 15 + 12 bytes
+++ degreepf compiled, 22 + 32 bytes
+++ xreorder compiled, 17 + 24 bytes
+++ xreorder!* compiled, 14 + 12 bytes
+++ xrepartit compiled, 20 + 32 bytes
+++ xrepartit!* compiled, 19 + 28 bytes
+++ trterm compiled, 9 + 8 bytes
+++ linearpart compiled, 25 + 24 bytes
+++ inhomogeneouspart compiled, 25 + 24 bytes
+++ xcoeff compiled, 68 + 32 bytes
+++ xvarspf compiled, 97 + 28 bytes
+++ kernelspf compiled, 41 + 20 bytes
+++ mkform!* compiled, 3 + 12 bytes
+++ purge compiled, 23 + 12 bytes
+++ rightunion compiled, 65 + 12 bytes
+++ sublisq compiled, 31 + 8 bytes
+++ ordcomb compiled, 50 + 24 bytes
+++ updkordl compiled, 19 + 20 bytes
+++ allequal compiled, 18 + 16 bytes
+++ allexact compiled, 13 + 16 bytes
+++ coords compiled, 53 + 16 bytes
+++ zippf compiled, 28 + 16 bytes
+++ errdhh compiled, 15 + 24 bytes
+++ edsverbose compiled, 215 + 96 bytes
+++ edsdebug compiled, 8 + 16 bytes
+++ edsmathprint compiled, 8 + 28 bytes
Completed FASL files for "edsaux"
+++ FASLEND: hits = 216, misses = 103



*** Compiling edsexptl ... 


FASLOUT "edsexptl": IN files;  or type in expressions
When all done, execute FASLEND;
+++ indexnames compiled, 52 + 36 bytes
+++ symbol_relations compiled, 774 + 128 bytes
+++ symbol_matrix compiled, 557 + 148 bytes
+++ characteristic_variety compiled, 343 + 128 bytes
+++ make_rule compiled, 5 + 12 bytes
+++ edsorderp compiled, 13 + 24 bytes
+++ invariants compiled, 35 + 36 bytes
+++ invariants0 compiled, 373 + 180 bytes
+++ foliation compiled, 1161 + 232 bytes
+++ poincare compiled, 133 + 76 bytes
+++ evalintegrability compiled, 46 + 52 bytes
Completed FASL files for "edsexptl"
+++ FASLEND: hits = 207, misses = 131



*** Compiling edspatch ... 


FASLOUT "edspatch": IN files;  or type in expressions
When all done, execute FASLEND;
+++ map!-eval1 compiled, 9 + 16 bytes
+++ map!-function compiled, 110 + 68 bytes
+++ map!-apply compiled, 57 + 12 bytes
+++ mapmat compiled, 111 + 12 bytes
+++ putform compiled, 16 + 28 bytes
+++ ndepends compiled, 98 + 40 bytes
+++ lndepends compiled, 18 + 12 bytes
+++ ndependsl compiled, 13 + 12 bytes
+++ lambda_5ecvmqn0s7d8 compiled as link to depends
+++ solvenonlnrsys2 compiled, 436 + 208 bytes
+++ solvesparsecheck compiled, 548 + 88 bytes
+++ solvevarordp compiled, 21 + 8 bytes
+++ solvevarordp1 compiled, 13 + 20 bytes
+++ solvevaradjust compiled, 83 + 24 bytes

*** local variable u in procedure exptexpflistp not used 
+++ exptexpflistp compiled, 1 + 8 bytes
Completed FASL files for "edspatch"
+++ FASLEND: hits = 130, misses = 118

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling dipoly ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "dipoly": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "dipoly"
+++ FASLEND: hits = 67, misses = 76
Fast-loading "./reduce.img(dipoly)"



*** Compiling a2dip ... 


FASLOUT "a2dip": IN files;  or type in expressions
When all done, execute FASLEND;
+++ a2dip compiled, 127 + 52 bytes
+++ a2dipatom compiled, 31 + 36 bytes
+++ dipfnsum compiled, 20 + 12 bytes
+++ dipfnprod compiled, 20 + 12 bytes
+++ dipfndif compiled, 7 + 16 bytes
+++ dipfnpow compiled, 86 + 60 bytes
+++ dipfnneg compiled, 14 + 12 bytes
+++ dipfnquot compiled, 35 + 36 bytes
+++ dipfnquot1 compiled, 24 + 12 bytes
Completed FASL files for "a2dip"
+++ FASLEND: hits = 76, misses = 58



*** Compiling bcoeff ... 


FASLOUT "bcoeff": IN files;  or type in expressions
When all done, execute FASLEND;
+++ bcint2op not compiled (C version available)
+++ bcminus!? compiled, 9 + 16 bytes
+++ bczero!? not compiled (C version available)
+++ bcfd compiled, 24 + 36 bytes
+++ bcfi compiled, 43 + 16 bytes
+++ bcdomain!? compiled, 19 + 16 bytes
+++ bclcmd compiled, 29 + 32 bytes
+++ bclcmdprod compiled, 8 + 24 bytes
+++ bcone!? compiled, 17 + 16 bytes
+++ bcinv compiled, 32 + 36 bytes
+++ bcneg compiled, 16 + 24 bytes
+++ bcprod not compiled (C version available)
+++ mkbc compiled, 60 + 44 bytes
+++ bcquot compiled, 30 + 40 bytes
+++ bcsum not compiled (C version available)
+++ bccheckz compiled, 31 + 24 bytes
+++ bcdif compiled, 21 + 32 bytes
+++ bcpow compiled, 9 + 16 bytes
+++ a2bc compiled, 18 + 28 bytes
+++ bc2a compiled, 6 + 16 bytes
+++ bcprin compiled, 57 + 52 bytes
+++ bcprin2big compiled, 14 + 24 bytes
+++ bcprin2big1 compiled, 24 + 24 bytes
Completed FASL files for "bcoeff"
+++ FASLEND: hits = 144, misses = 71



*** Compiling dip2a ... 


FASLOUT "dip2a": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dip2a compiled, 8 + 20 bytes
+++ dip2a1 compiled, 41 + 36 bytes
+++ dipreplus compiled, 12 + 12 bytes
+++ dipretimes compiled, 21 + 16 bytes
Completed FASL files for "dip2a"
+++ FASLEND: hits = 18, misses = 17



*** Compiling dipoly1 ... 


FASLOUT "dipoly1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dipconst!? compiled, 16 + 16 bytes
+++ terprit compiled, 15 + 12 bytes
+++ dfcprint compiled, 15 + 12 bytes
+++ dfcprintin compiled, 31 + 56 bytes
+++ dfcprin compiled, 11 + 28 bytes
+++ diplcm compiled, 28 + 20 bytes
+++ diprectoint compiled, 14 + 24 bytes
+++ diprectoint1 compiled, 24 + 16 bytes
+++ dipbcprod compiled, 14 + 24 bytes
+++ dipbcprodin compiled, 24 + 16 bytes
+++ dipdif compiled, 75 + 36 bytes
+++ diplength not compiled (C version available)
+++ diplistsum compiled, 19 + 12 bytes
+++ diplmerge compiled, 35 + 16 bytes
+++ diplsort compiled, 4 + 16 bytes
+++ dipevlcomp compiled, 5 + 16 bytes
+++ dipmonic compiled, 10 + 16 bytes
+++ dipneg compiled, 22 + 12 bytes
+++ dipone!? compiled, 21 + 20 bytes
+++ dippairsort compiled, 35 + 12 bytes
+++ dipprod compiled, 15 + 16 bytes
+++ dipprodin compiled, 33 + 20 bytes
+++ dipprodin1 compiled, 26 + 20 bytes
+++ dipprodls compiled, 24 + 24 bytes
+++ dipprodlsin compiled, 35 + 16 bytes
+++ dipsum compiled, 113 + 36 bytes
Completed FASL files for "dipoly1"
+++ FASLEND: hits = 142, misses = 58



*** Compiling dipvars ... 


FASLOUT "dipvars": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dipvars compiled, 4 + 12 bytes
+++ dipvars1 compiled, 35 + 20 bytes
+++ dipvarslist compiled, 15 + 16 bytes
Completed FASL files for "dipvars"
+++ FASLEND: hits = 14, misses = 11



*** Compiling expvec ... 


FASLOUT "expvec": IN files;  or type in expressions
When all done, execute FASLEND;
+++ evperm compiled, 16 + 16 bytes
+++ evcons compiled as link to cons
+++ evnth compiled, 18 + 24 bytes
+++ evred compiled, 5 + 8 bytes
+++ evfirst compiled, 6 + 12 bytes
+++ evsum0 compiled, 26 + 16 bytes
+++ evzero1 compiled, 19 + 16 bytes
+++ indexcpl compiled, 28 + 12 bytes
+++ evzer1!? compiled as link to null
+++ evzero!? not compiled (C version available)
+++ evzero compiled, 20 + 20 bytes
+++ mkexpvec compiled, 53 + 28 bytes
+++ evlcm compiled, 27 + 8 bytes
+++ evmtest!? compiled, 19 + 12 bytes
+++ evsum not compiled (C version available)
+++ evdif compiled, 27 + 12 bytes
+++ intevprod compiled, 36 + 8 bytes
+++ expvec2a compiled, 4 + 16 bytes
+++ expvec2a1 compiled, 42 + 24 bytes
+++ dipevlpri compiled, 6 + 16 bytes
+++ dipevlpri1 compiled, 50 + 36 bytes
Completed FASL files for "expvec"
+++ FASLEND: hits = 91, misses = 36



*** Compiling torder ... 


FASLOUT "torder": IN files;  or type in expressions
When all done, execute FASLEND;
+++ torder compiled, 124 + 48 bytes
+++ dipsortingmode compiled, 64 + 80 bytes
+++ evcompless!? not compiled (C version available)
+++ evcomp not compiled (C version available)
+++ evlexcomp not compiled (C version available)
+++ evinvlexcomp compiled, 46 + 28 bytes
+++ evgradlexcomp compiled, 48 + 28 bytes
+++ evrevgradlexcomp compiled, 42 + 32 bytes
+++ evtdeg not compiled (C version available)
+++ evgradgradcomp compiled, 10 + 16 bytes
+++ evgradgradcomp1 compiled, 70 + 32 bytes
+++ evpartdeg compiled, 6 + 16 bytes
+++ evpartdeg1 compiled, 24 + 12 bytes
+++ evgradrevgradcomp compiled, 7 + 16 bytes
+++ evgradrevgradcomp1 compiled, 61 + 32 bytes
+++ evlexgradlexcomp compiled, 7 + 16 bytes
+++ evlexgradlexcomp1 compiled, 48 + 32 bytes
+++ evlexrevgradlexcomp compiled, 7 + 16 bytes
+++ evlexrevgradlexcomp1 compiled, 48 + 32 bytes
+++ evweightedcomp compiled, 29 + 32 bytes
+++ evweightedcomp1 compiled, 5 + 16 bytes
+++ evweightedcomp2 compiled, 46 + 20 bytes
+++ evgradedinit compiled, 53 + 40 bytes
+++ evgradedcomp compiled, 35 + 32 bytes
+++ ev!-gamma compiled, 19 + 32 bytes
+++ evmatrixcomp not compiled (C version available)
+++ evmatrixcomp1 not compiled (C version available)
+++ evmatrixcomp2 not compiled (C version available)
+++ evmatrixcomp3 compiled, 14 + 12 bytes
+++ evmatrixinit1 compiled, 146 + 64 bytes
+++ evmatrixinit compiled, 29 + 44 bytes
+++ evmatrixcheck compiled, 60 + 28 bytes
+++ evmatrixcompile compiled, 19 + 24 bytes
+++ evmatrixcompile1 compiled, 266 + 104 bytes
+++ evform compiled, 6 + 16 bytes
+++ torder_compile_form compiled, 117 + 80 bytes
Completed FASL files for "torder"
+++ FASLEND: hits = 321, misses = 114



*** Compiling vdp2dip ... 


FASLOUT "vdp2dip": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dip2vdp compiled, 34 + 28 bytes
+++ vdpredzero!? compiled, 7 + 8 bytes
+++ vdplastmon compiled, 23 + 8 bytes
+++ vbczero!? compiled as link to bczero?
+++ vbcnumber compiled, 14 + 12 bytes
+++ vbcfi compiled as link to bcfd
+++ a2vbc compiled as link to a2bc
+++ vbcquot compiled as link to bcquot
+++ vbcneg compiled as link to bcneg
+++ vbcabs compiled, 8 + 16 bytes
+++ vbcone!? compiled as link to bcone?
+++ vbcprod compiled as link to bcprod
+++ vdpinit2 compiled, 20 + 48 bytes
+++ vdpcleanup compiled, 4 + 12 bytes
+++ vdpred compiled, 43 + 28 bytes
+++ vbcgcd compiled, 48 + 28 bytes
+++ vbcsize not compiled (C version available)
+++ vbc!-cofac compiled, 23 + 24 bytes
+++ vev!-cofac compiled, 12 + 16 bytes
+++ vbcplus!? compiled, 11 + 12 bytes
+++ bcplus!? compiled, 11 + 12 bytes
+++ vbcminus!? compiled, 11 + 8 bytes
+++ vbcinv compiled as link to bcinv
+++ a2vdp compiled, 33 + 24 bytes
+++ vdp2a compiled, 5 + 12 bytes
+++ vbc2a compiled as link to bc2a
+++ f2vdp compiled, 33 + 24 bytes
+++ vdp2f compiled, 5 + 12 bytes
+++ vdpfmon compiled, 22 + 24 bytes
+++ vdpmoncomp compiled, 32 + 20 bytes
+++ vdpappendmon compiled, 34 + 24 bytes
+++ vdpmonadd compiled, 54 + 40 bytes
+++ vdpzero compiled, 3 + 16 bytes
+++ vdpvevlcomp compiled, 8 + 12 bytes
+++ vevilcompless!? compiled, 5 + 16 bytes
+++ vevilcomp compiled as link to evilcomp
+++ vevcompless!? not compiled (C version available)
+++ vevcomp compiled as link to evcomp
+++ vdpcontent compiled, 19 + 20 bytes
+++ vdpcontent1 compiled, 6 + 12 bytes
+++ dipnumcontent compiled, 20 + 16 bytes
+++ dipcontenti compiled, 31 + 20 bytes
+++ dipcontenti1 compiled, 33 + 20 bytes
+++ vdpcontenti compiled, 13 + 20 bytes
+++ vdpmonfac compiled, 5 + 12 bytes
+++ dipmonfac compiled, 17 + 20 bytes
+++ dipmonfac1 compiled, 16 + 16 bytes
+++ vdpcoeffcientsfromdomain!? compiled, 5 + 12 bytes
+++ dipcoeffcientsfromdomain!? compiled, 16 + 16 bytes
+++ vdplength compiled, 5 + 12 bytes
+++ vdpequal compiled, 28 + 20 bytes
+++ dipequal compiled, 30 + 12 bytes
+++ evequal compiled, 31 + 20 bytes
+++ vdplcm compiled, 5 + 12 bytes
+++ vdprectoint compiled, 7 + 16 bytes
+++ vdpsimpcont compiled, 38 + 36 bytes
+++ dipsimpcont compiled, 10 + 24 bytes
+++ dipsimpconti compiled, 116 + 68 bytes
+++ vdpreduceconti compiled as link to vdpdivmon
+++ dipreduceconti compiled, 29 + 20 bytes
+++ dipsimpcontr compiled, 54 + 32 bytes
+++ dipcontentr compiled, 19 + 16 bytes
+++ dipcontentr1 compiled, 17 + 12 bytes
+++ dipreducecontr compiled, 29 + 20 bytes
+++ dipcontevmin compiled, 36 + 12 bytes
+++ dipcontlowerev compiled, 43 + 28 bytes
+++ dipappendmon compiled, 6 + 8 bytes
+++ vdpsum compiled, 24 + 32 bytes
+++ vdpdif compiled, 24 + 32 bytes
+++ vdpprod compiled, 23 + 28 bytes
+++ vdpilcomb1 compiled, 45 + 36 bytes
+++ dipilcomb1 compiled, 315 + 68 bytes
+++ vdpvbcprod compiled, 16 + 28 bytes
+++ vdpdivmon compiled, 18 + 28 bytes
+++ dipdivmon compiled, 24 + 20 bytes
+++ vdpcancelmvev compiled, 16 + 28 bytes
+++ dipcancelmev compiled, 6 + 12 bytes
+++ dipcancelmev1 compiled, 29 + 12 bytes
+++ vevsum0 compiled, 32 + 20 bytes
+++ vevzero1 compiled, 19 + 16 bytes
+++ vdpresimp compiled, 6 + 16 bytes
+++ dipresimp compiled, 55 + 24 bytes
+++ vdpprin2t compiled, 9 + 16 bytes
+++ vdpprin3t compiled, 9 + 24 bytes
+++ vdpprint compiled, 5 + 12 bytes
+++ vdpprin2 compiled, 33 + 44 bytes
+++ vdpprint1 compiled, 7 + 12 bytes
+++ vdpprint1x compiled, 89 + 68 bytes
+++ dipprin2 compiled, 11 + 24 bytes
+++ vdpsave compiled, 1 + 8 bytes
+++ torder2 compiled as link to dipsortingmode
+++ dip2f compiled, 17 + 32 bytes
+++ dip2sq compiled, 30 + 20 bytes
+++ diplmon2sq compiled, 9 + 24 bytes
+++ dipev2f compiled, 26 + 24 bytes
+++ dipsubs2 compiled, 15 + 28 bytes
+++ dipsubs21 compiled, 31 + 24 bytes
+++ f2dip compiled, 9 + 24 bytes
+++ f2dip1 compiled, 46 + 28 bytes
+++ f2dip11 compiled, 27 + 32 bytes
+++ f2dip2 compiled, 44 + 32 bytes
+++ evinsert compiled, 30 + 12 bytes
+++ vdpcondense compiled, 5 + 12 bytes
Completed FASL files for "vdp2dip"
+++ FASLEND: hits = 719, misses = 242



*** Compiling vdpcom ... 


FASLOUT "vdpcom": IN files;  or type in expressions
When all done, execute FASLEND;
+++ vevnth compiled, 17 + 16 bytes
+++ vevzero!?1 compiled, 26 + 12 bytes
+++ veveq compiled, 40 + 20 bytes
+++ vevmaptozero compiled, 4 + 12 bytes
+++ vevmaptozero1 not compiled (C version available)
+++ vevmtest!? not compiled (C version available)
+++ vevlcm compiled, 44 + 8 bytes
+++ vevmin compiled, 36 + 12 bytes
+++ vevsum compiled, 39 + 8 bytes
+++ vevtdeg not compiled (C version available)
+++ vdptdeg compiled, 32 + 24 bytes
+++ vevdif compiled, 67 + 40 bytes
+++ vdpenumerate compiled, 27 + 28 bytes
+++ gsugar compiled, 35 + 40 bytes
+++ gsetsugar not compiled (C version available)
+++ vdpmember compiled, 13 + 12 bytes
+++ vdpunion compiled, 24 + 12 bytes
+++ vdpintersection compiled, 18 + 16 bytes
+++ vdpsetequal!? compiled, 17 + 12 bytes
+++ vdpsetequal!?1 compiled, 25 + 20 bytes
+++ vdpsortedsetequal!? compiled, 23 + 16 bytes
+++ vdpdisjoint!? compiled, 14 + 16 bytes
+++ vdpsubset!? compiled, 14 + 16 bytes
+++ vdpsubset!?1 compiled, 14 + 16 bytes
+++ vdpdeletemember compiled, 23 + 16 bytes
+++ vdplsort compiled, 4 + 16 bytes
+++ vdplsortin compiled, 12 + 12 bytes
+++ vdplsortin1 compiled, 33 + 20 bytes
+++ vdplsortinreplacing compiled, 85 + 32 bytes
+++ lastpair1 compiled, 16 + 12 bytes
+++ countlastvar compiled, 42 + 24 bytes
+++ countlastvar1 compiled, 21 + 20 bytes
+++ vdpputprop compiled, 64 + 24 bytes
+++ vdpgetprop not compiled (C version available)
+++ vdpremallprops compiled, 30 + 8 bytes
+++ groebsubs2 compiled, 11 + 24 bytes
+++ vdpprintshort compiled, 16 + 24 bytes
Completed FASL files for "vdpcom"
+++ FASLEND: hits = 218, misses = 94



*** Compiling condense ... 


FASLOUT "condense": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dipcondense compiled, 46 + 24 bytes
Completed FASL files for "condense"
+++ FASLEND: hits = 4, misses = 12



*** Compiling dipprint ... 


FASLOUT "dipprint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ diplprint compiled, 15 + 12 bytes
+++ dipprint compiled, 10 + 12 bytes
+++ dipprint1 compiled, 63 + 52 bytes
+++ dipprin2 compiled, 13 + 16 bytes
Completed FASL files for "dipprint"
+++ FASLEND: hits = 18, misses = 16

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling groebner ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "groebner": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Completed FASL files for "groebner"
+++ FASLEND: hits = 32, misses = 265
Fast-loading "./reduce.img(groebner)"



*** Compiling grinterf ... 


FASLOUT "grinterf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebnereval compiled, 57 + 60 bytes
+++ groebnerfeval compiled, 113 + 76 bytes
+++ idquotienteval compiled, 50 + 48 bytes
+++ saturationeval compiled, 137 + 76 bytes
+++ groebner1 compiled, 745 + 196 bytes
+++ groebnervars compiled, 136 + 56 bytes
+++ groebnerzerobc compiled, 203 + 52 bytes
+++ gvarlis compiled, 6 + 20 bytes
+++ gvarlis1 compiled, 26 + 16 bytes
+++ gvar1 compiled, 53 + 32 bytes
+++ groebidq compiled, 280 + 112 bytes
+++ vdperr compiled, 13 + 40 bytes
+++ groeparams compiled, 94 + 40 bytes
+++ vdpinit compiled, 87 + 36 bytes
+++ groedomainmode compiled, 17 + 32 bytes
+++ groedeletip compiled, 35 + 12 bytes
+++ groerevlist compiled, 40 + 20 bytes
Completed FASL files for "grinterf"
+++ FASLEND: hits = 186, misses = 119



*** Compiling grinter2 ... 


FASLOUT "grinter2": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebnr2entry compiled, 7 + 16 bytes
+++ groebnr2load compiled, 3 + 16 bytes
+++ groebtestrestriction compiled, 4 + 12 bytes
Completed FASL files for "grinter2"
+++ FASLEND: hits = 131, misses = 37



*** Compiling buchbg ... 


FASLOUT "buchbg": IN files;  or type in expressions
When all done, execute FASLEND;
+++ buchvevdivides!? not compiled (C version available)
+++ gevcompatible1 compiled, 44 + 20 bytes
+++ gcompatible compiled, 14 + 16 bytes
+++ groebmakepair compiled, 52 + 32 bytes
+++ vdponepol compiled, 12 + 32 bytes
+++ groebner2 compiled, 207 + 200 bytes
+++ groebenumerate compiled, 49 + 52 bytes
+++ groebbasein compiled, 1015 + 348 bytes
+++ groebfasttest compiled, 7 + 8 bytes
+++ groebbasein2 compiled, 335 + 116 bytes
+++ groebbasein3 compiled, 115 + 32 bytes
+++ groebchain compiled, 7 + 68 bytes
+++ groebencapsulate compiled, 133 + 60 bytes
+++ groebencapsulatehardcase compiled, 900 + 228 bytes
+++ groebrecfactl compiled, 116 + 20 bytes
+++ groebtestabort compiled, 57 + 32 bytes
+++ groebnormalform compiled, 8 + 12 bytes
+++ groebnormalform0 compiled, 356 + 156 bytes
+++ groecontentcontrol compiled, 23 + 28 bytes
+++ groebvbcbig!? compiled, 19 + 24 bytes
+++ groebnormalformselect compiled, 9 + 20 bytes
+++ groebsimpcontnormalform compiled, 42 + 40 bytes
+++ groebsimpcont2 compiled, 67 + 52 bytes
+++ groebprereduce compiled, 267 + 100 bytes
+++ groebreducefromfactors compiled, 140 + 84 bytes
+++ groebnormalform1 compiled, 16 + 24 bytes
+++ groebprofitsfromvev compiled, 21 + 20 bytes
+++ groebreduceonestepint compiled, 115 + 72 bytes
+++ groebreduceonesteprat compiled, 67 + 52 bytes
+++ groebreductionprotocol compiled, 97 + 68 bytes
+++ groebreductionprotocol2 compiled, 29 + 36 bytes
+++ groebreductionprotocolborder compiled, 6 + 16 bytes
+++ groebprotsetq compiled, 13 + 20 bytes
+++ groebprotval compiled, 15 + 24 bytes
+++ subset!? compiled, 14 + 12 bytes
+++ vevsplit compiled, 41 + 24 bytes
+++ groebspolynom compiled as link to groebspolynom2
+++ groebspolynom2 compiled, 127 + 40 bytes
+++ groebspolynom3 compiled, 6 + 16 bytes
+++ groebspolynom4 compiled, 216 + 112 bytes
+++ groebsavelterm compiled, 14 + 16 bytes
+++ groebsaveltermbc compiled, 44 + 32 bytes
+++ sfcont compiled, 29 + 12 bytes
+++ vdplmon compiled, 6 + 12 bytes
+++ vdpmember3 compiled, 15 + 12 bytes
+++ groebabortid compiled, 28 + 16 bytes
Completed FASL files for "buchbg"
+++ FASLEND: hits = 497, misses = 246



*** Compiling groebcri ... 


FASLOUT "groebcri": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebbuchcrit4 compiled, 6 + 12 bytes
+++ groebbuchcrit4t compiled, 19 + 16 bytes
+++ groebinvokecritbuch4 compiled, 90 + 36 bytes
+++ groebbuchcrit4compatible compiled, 52 + 16 bytes
+++ groebbuchcrit4compatiblevev compiled, 59 + 8 bytes
+++ groebinvokecritf compiled, 48 + 20 bytes
+++ groebinvokecritm compiled, 29 + 20 bytes
+++ groebinvokecritb compiled, 49 + 20 bytes
Completed FASL files for "groebcri"
+++ FASLEND: hits = 42, misses = 33



*** Compiling groesolv ... 


FASLOUT "groesolv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groesolveeval compiled, 338 + 172 bytes
+++ groesolve!-redun2 compiled, 66 + 12 bytes
+++ groesolve!-redun2a compiled, 64 + 56 bytes
+++ groesolvidsubset!? compiled, 25 + 20 bytes
+++ groesolvearb compiled, 102 + 28 bytes
+++ groesolve0 compiled, 159 + 80 bytes
+++ groepostnumsolve compiled, 55 + 64 bytes
+++ groepostnumsolve1 compiled, 37 + 20 bytes
+++ groepostfastsolve compiled, 230 + 92 bytes
+++ groepostfastsolve1 compiled, 238 + 56 bytes
+++ groepostcollectden compiled, 29 + 20 bytes
+++ groepostsolveeval compiled, 157 + 92 bytes
+++ groesolve1 compiled, 367 + 88 bytes
+++ groesolvidqtest compiled, 11 + 16 bytes
+++ groesolvidq compiled, 85 + 32 bytes
+++ groesolve2 compiled, 7 + 12 bytes
+++ groesolvetree compiled, 189 + 56 bytes
+++ groesolverestruct compiled, 44 + 36 bytes
+++ ltermvariables compiled, 24 + 12 bytes
+++ zerosetintersection compiled, 150 + 68 bytes
+++ groesolmvar compiled, 22 + 28 bytes
+++ groesolvepoly compiled, 6 + 16 bytes
+++ groesolvepolyv compiled, 210 + 128 bytes
+++ univariatepolynomial!? compiled, 16 + 12 bytes
+++ univariatepolynomial!?1 compiled, 34 + 8 bytes
+++ predecessor compiled, 29 + 24 bytes
+++ zerosetunion compiled, 4 + 12 bytes
+++ zerosetunion1 compiled, 24 + 12 bytes
+++ zerosetmember compiled, 13 + 12 bytes
+++ zeroequal compiled, 8 + 12 bytes
+++ zerosubset compiled, 14 + 12 bytes
+++ groesetdmode compiled, 93 + 64 bytes
+++ preduceeval compiled, 286 + 144 bytes
+++ groeroots compiled, 63 + 24 bytes
Completed FASL files for "groesolv"
+++ FASLEND: hits = 314, misses = 173



*** Compiling groebopt ... 


FASLOUT "groebopt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ vdpvordopt compiled, 159 + 56 bytes
+++ vdpvordopt1 compiled, 81 + 16 bytes
+++ vdpvordopt2 compiled, 21 + 8 bytes
+++ vdpvordopt31 compiled, 83 + 24 bytes
Completed FASL files for "groebopt"
+++ FASLEND: hits = 17, misses = 21



*** Compiling groebsea ... 


FASLOUT "groebsea": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebsearchinlist not compiled (C version available)
+++ groeblistadd compiled, 11 + 24 bytes
+++ groebstreeadd compiled as link to groeblistadd
+++ groebvevdivides!? compiled, 30 + 20 bytes
+++ groebsecondaryreduction compiled, 344 + 104 bytes
+++ groebsecondaryremovemultiples compiled, 31 + 12 bytes
+++ groebsecondaryreplace compiled, 9 + 8 bytes
Completed FASL files for "groebsea"
+++ FASLEND: hits = 28, misses = 37



*** Compiling groebsor ... 


FASLOUT "groebsor": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebcplistsortin compiled, 8 + 12 bytes
+++ groebcplistsortin1 compiled, 28 + 12 bytes
+++ groebcplistsort compiled, 18 + 12 bytes
+++ groebcplistmerge compiled, 30 + 12 bytes
+++ groebcpcompless!? compiled, 45 + 32 bytes
Completed FASL files for "groebsor"
+++ FASLEND: hits = 22, misses = 16



*** Compiling groebspa ... 


FASLOUT "groebspa": IN files;  or type in expressions
When all done, execute FASLEND;
+++ vevunion compiled, 32 + 24 bytes
+++ vevunion1 compiled, 28 + 20 bytes
+++ vevunion2 compiled, 7 + 24 bytes
+++ vevunion3 compiled, 14 + 16 bytes
+++ vdpsubspacep compiled, 26 + 16 bytes
+++ vdporthspacep compiled, 19 + 16 bytes
+++ vdpspacenullp compiled, 12 + 16 bytes
+++ vdpspace compiled, 48 + 28 bytes
+++ vdpunivariate!? compiled, 77 + 36 bytes
Completed FASL files for "groebspa"
+++ FASLEND: hits = 43, misses = 23



*** Compiling groebfac ... 


FASLOUT "groebfac": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebfactorize compiled, 269 + 116 bytes
+++ groebfactorize1 compiled, 212 + 72 bytes
+++ groebfactorize2 compiled, 219 + 52 bytes
+++ groefctrf compiled, 15 + 28 bytes
+++ groebfactorize3 compiled, 3 + 8 bytes
Completed FASL files for "groebfac"
+++ FASLEND: hits = 35, misses = 51



*** Compiling groebidq ... 


FASLOUT "groebidq": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebidq2 compiled, 147 + 152 bytes
+++ groebidq3 compiled, 492 + 164 bytes
+++ idqtoresult compiled, 19 + 24 bytes
+++ idqnormalform compiled, 98 + 56 bytes
+++ idqreduceonestepint compiled, 87 + 52 bytes
+++ idqreduceonesteprat compiled, 74 + 56 bytes
+++ idqspolynom compiled, 131 + 52 bytes
+++ idqdirectelement compiled, 32 + 24 bytes
+++ idqsimpcont compiled, 8 + 20 bytes
+++ idqsimpconti compiled, 84 + 44 bytes
+++ idqsimpcontr compiled, 50 + 28 bytes
+++ idqmess0 compiled, 10 + 24 bytes
+++ idqmess1 compiled, 25 + 44 bytes
+++ idqmess2 compiled, 27 + 32 bytes
+++ idqmess3 compiled, 26 + 56 bytes
+++ idqmess4 compiled, 60 + 72 bytes
Completed FASL files for "groebidq"
+++ FASLEND: hits = 153, misses = 99



*** Compiling kredelw ... 


FASLOUT "kredelw": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gdimension_eval compiled, 32 + 16 bytes
+++ gindependent_seteval compiled, 380 + 84 bytes
+++ groebkwprec compiled, 103 + 24 bytes
+++ groebkwprec1 compiled, 14 + 16 bytes
+++ groebkwprec2 compiled, 31 + 24 bytes
+++ vevcan0 compiled, 42 + 20 bytes
Completed FASL files for "kredelw"
+++ FASLEND: hits = 37, misses = 34



*** Compiling traverso ... 


FASLOUT "traverso": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gtraverso compiled, 221 + 92 bytes
+++ gtraversopairlist compiled, 165 + 60 bytes
+++ gtraversopairsdiscard1 compiled, 54 + 16 bytes
+++ vevstrictlydivides!? compiled, 9 + 16 bytes
+++ gtraversofinal compiled, 38 + 32 bytes
Completed FASL files for "traverso"
+++ FASLEND: hits = 32, misses = 40



*** Compiling hille ... 


FASLOUT "hille": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groeposthillebrand compiled, 133 + 64 bytes
+++ hillebrandstdsat compiled, 139 + 52 bytes
+++ hillebrandquot compiled, 13 + 24 bytes
+++ hillebrandvar compiled, 25 + 12 bytes
+++ hillebrand compiled, 23 + 40 bytes
+++ hillebrandcompare compiled, 6 + 16 bytes
+++ hillebrandcompare1 compiled, 143 + 12 bytes
+++ hillebrand1 compiled, 273 + 76 bytes
+++ hillebrandappend compiled, 8 + 8 bytes
+++ hillebrandappend1 compiled, 11 + 8 bytes
+++ hillebrandtriangular compiled, 70 + 16 bytes
+++ hillebrandtriangular1 compiled, 34 + 12 bytes
+++ hillebrandfactorizelast compiled, 146 + 20 bytes
+++ hillebranddecompose compiled, 45 + 28 bytes
+++ hillebranddecompose1 compiled, 46 + 16 bytes
+++ hillebrandjoin compiled, 7 + 8 bytes
+++ hillebrandlast compiled, 9 + 8 bytes
+++ hillebrandgroebner compiled, 97 + 52 bytes
+++ hillebrandnormalform compiled, 48 + 24 bytes
+++ hillebrandf2vdp compiled, 7 + 16 bytes
+++ hillebrandmsg1 compiled, 47 + 60 bytes
+++ hillebrandmsg2 compiled, 52 + 56 bytes
Completed FASL files for "hille"
+++ FASLEND: hits = 147, misses = 55

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling groebnr2 ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "groebnr2": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Completed FASL files for "groebnr2"
+++ FASLEND: hits = 4, misses = 125
Fast-loading "./reduce.img(groebnr2)"



*** Compiling groebman ... 


FASLOUT "groebman": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gsorteval compiled, 238 + 88 bytes
+++ gspliteval compiled, 163 + 92 bytes
+++ gspolyeval compiled, 201 + 108 bytes
+++ gvarseval compiled, 89 + 56 bytes
+++ greduceeval compiled, 471 + 184 bytes
Completed FASL files for "groebman"
+++ FASLEND: hits = 109, misses = 69



*** Compiling glexconv ... 


FASLOUT "glexconv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ glexconverteval compiled, 139 + 72 bytes
+++ glexbase1 compiled, 431 + 176 bytes
+++ glexbase2 compiled, 168 + 76 bytes
+++ glexinsernexts compiled, 43 + 32 bytes
+++ glexmultipletest compiled, 16 + 16 bytes
+++ glexinsernexts1 compiled, 30 + 12 bytes
+++ glexcomp compiled, 10 + 20 bytes
+++ glexcomp0 compiled, 29 + 20 bytes
+++ glexcompmap compiled, 16 + 16 bytes
+++ glexcompmap1 compiled, 32 + 12 bytes
+++ glexaddtomonbase compiled, 44 + 52 bytes
+++ glexlinrelold compiled, 140 + 80 bytes
+++ glexlinrel compiled, 92 + 64 bytes
+++ glexnormalform compiled, 65 + 64 bytes
+++ glexnormalform1 compiled, 118 + 60 bytes
+++ groelinsolve compiled, 176 + 88 bytes
+++ groelinsolve1 compiled, 658 + 76 bytes
+++ grloelinord compiled, 6 + 12 bytes
+++ groelinsub compiled, 4 + 12 bytes
+++ groelinsub1 compiled, 39 + 20 bytes
Completed FASL files for "glexconv"
+++ FASLEND: hits = 174, misses = 120



*** Compiling groebmes ... 


FASLOUT "groebmes": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebpairprint compiled, 22 + 32 bytes
+++ groetimeprint compiled, 10 + 28 bytes
+++ groebmessff compiled, 20 + 36 bytes
+++ groebmess1 compiled, 20 + 36 bytes
+++ groebmess2 compiled, 13 + 28 bytes
+++ groebmess2a compiled, 23 + 36 bytes
+++ groebmess3 compiled, 17 + 40 bytes
+++ groebmess4 compiled, 56 + 68 bytes
+++ groebmess41 compiled, 27 + 44 bytes
+++ groebmess5 compiled, 59 + 64 bytes
+++ groebmess50 compiled, 28 + 40 bytes
+++ groebmess51 compiled, 23 + 32 bytes
+++ groebmess52 compiled, 23 + 32 bytes
+++ groebmess7 compiled, 8 + 24 bytes
+++ groebmess8 compiled, 52 + 52 bytes
+++ groebmess13 compiled, 154 + 92 bytes
+++ groebmess14 compiled, 39 + 44 bytes
+++ groebmess15 compiled, 12 + 36 bytes
+++ groebmess19 compiled, 43 + 48 bytes
+++ groebmess19a compiled, 37 + 44 bytes
+++ groebmess20 compiled, 10 + 24 bytes
+++ groebmess21 compiled, 15 + 36 bytes
+++ groebmess22 compiled, 153 + 60 bytes
+++ groebmess23 compiled, 74 + 48 bytes
+++ groebmess24 compiled, 33 + 36 bytes
+++ groebmess25 compiled, 21 + 28 bytes
+++ groebmess26 compiled, 21 + 32 bytes
+++ groebmess27 compiled, 10 + 24 bytes
+++ groebmess27a compiled, 12 + 24 bytes
+++ groebmess28 compiled, 12 + 36 bytes
+++ groebmess29 compiled, 31 + 28 bytes
+++ groebmess30 compiled, 28 + 24 bytes
+++ groebmess31 compiled, 26 + 24 bytes
+++ groebmess32 compiled, 29 + 28 bytes
+++ groebmess33 compiled, 29 + 28 bytes
+++ groebmess34 compiled, 13 + 20 bytes
+++ groebmess35 compiled, 13 + 20 bytes
+++ groebmess36 compiled, 11 + 20 bytes
+++ groebmess37 compiled, 14 + 24 bytes
+++ printbl compiled, 8 + 16 bytes
+++ printb compiled, 18 + 20 bytes
+++ vdpprintset compiled, 27 + 32 bytes
+++ vdpprin2l compiled, 24 + 32 bytes
Completed FASL files for "groebmes"
+++ FASLEND: hits = 320, misses = 80



*** Compiling groebrst ... 


FASLOUT "groebrst": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebtestrestriction compiled, 24 + 52 bytes
+++ groebnonneg compiled, 390 + 72 bytes
+++ groebpos compiled, 80 + 40 bytes
+++ groebposvevaluate compiled, 4 + 12 bytes
+++ groebzero compiled, 24 + 24 bytes
+++ groebposcancel compiled, 8 + 16 bytes
Completed FASL files for "groebrst"
+++ FASLEND: hits = 34, misses = 33



*** Compiling groebtra ... 


FASLOUT "groebtra": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebnertraeval compiled, 43 + 48 bytes
+++ groebnertra1 compiled, 981 + 216 bytes
+++ groebnertrares compiled, 76 + 36 bytes
+++ groebnermodres compiled, 370 + 64 bytes
+++ preduceteval compiled, 414 + 148 bytes
+++ groebnermodeval compiled, 47 + 48 bytes
+++ groebtra2 compiled, 135 + 148 bytes
+++ groebtra3 compiled, 324 + 112 bytes
+++ groebtra3post compiled, 36 + 28 bytes
+++ tranormalform compiled, 84 + 56 bytes
+++ tranormalform1 compiled, 100 + 52 bytes
+++ trareduceonestepint compiled, 97 + 56 bytes
+++ trareduceonesteprat compiled, 72 + 56 bytes
+++ traspolynom compiled, 132 + 56 bytes
+++ trasimpcont compiled, 8 + 20 bytes
+++ trasimpconti compiled, 61 + 44 bytes
+++ trasimpcontr compiled, 41 + 28 bytes
+++ vdpilcomb1tra compiled, 22 + 28 bytes
+++ vdpreducecontitra compiled, 9 + 20 bytes
+++ groebmoducrit compiled, 18 + 16 bytes
+++ tramess0 compiled, 10 + 24 bytes
+++ tramess1 compiled, 25 + 44 bytes
+++ tramess5 compiled, 66 + 88 bytes
+++ tramess3 compiled, 32 + 72 bytes
Completed FASL files for "groebtra"
+++ FASLEND: hits = 255, misses = 161



*** Compiling groeweak ... 


FASLOUT "groeweak": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groebweakzerotest compiled, 174 + 108 bytes
+++ groebweaktestbranch!=1 compiled, 6 + 12 bytes
+++ groebweakbasistest compiled, 7 + 152 bytes
+++ groebfasttest compiled, 26 + 24 bytes
+++ groebvdp2mod compiled, 101 + 68 bytes
+++ groebmodeval compiled, 45 + 52 bytes
Completed FASL files for "groeweak"
+++ FASLEND: hits = 49, misses = 67



*** Compiling hilberts ... 


FASLOUT "hilberts": IN files;  or type in expressions
When all done, execute FASLEND;
+++ makevector compiled, 26 + 12 bytes
+++ insertvar compiled, 14 + 12 bytes
+++ addtoideal compiled, 24 + 8 bytes
+++ hilbsereval compiled, 133 + 84 bytes
+++ checkmonl compiled, 83 + 40 bytes
+++ checktimes compiled, 65 + 28 bytes
+++ coefflist2prefix compiled, 36 + 24 bytes
+++ indets compiled, 46 + 20 bytes
+++ buildassoc compiled, 45 + 12 bytes
+++ mons compiled, 81 + 24 bytes
+++ monsaux compiled, 14 + 16 bytes
+++ lmon2arrmon compiled, 53 + 24 bytes
+++ gltbfix compiled, 13 + 16 bytes
+++ gege compiled, 14 + 16 bytes
+++ getendptr compiled, 10 + 8 bytes
+++ gltb2arrideal compiled, 64 + 44 bytes
+++ npol compiled, 20 + 24 bytes
+++ dividesbyvar compiled, 53 + 24 bytes
+++ divides compiled, 59 + 24 bytes
+++ shiftadd compiled, 39 + 8 bytes
+++ remmult compiled, 147 + 24 bytes
+++ nextvar compiled, 34 + 12 bytes
+++ getvarifnotsingle compiled, 48 + 20 bytes
+++ makeonevarmon compiled, 38 + 24 bytes
+++ splitideal compiled, 64 + 24 bytes
+++ basecasepol compiled, 94 + 24 bytes
+++ vector2list compiled, 22 + 8 bytes
Completed FASL files for "hilberts"
+++ FASLEND: hits = 450, misses = 101



*** Compiling hilbertp ... 


FASLOUT "hilbertp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ newhilbi compiled, 350 + 104 bytes
+++ psnewhilbi compiled, 25 + 32 bytes
+++ hgspliteval compiled, 154 + 92 bytes
+++ functionindex2_r1rehpxks137 compiled, 32 + 24 bytes
+++ getrarray_dlxlojnlly26 compiled, 36 + 28 bytes
+++ makerarray compiled, 28 + 12 bytes
+++ putrarray_zyrsoy002sv4 compiled, 54 + 32 bytes
+++ hilbertzerodimp compiled, 65 + 16 bytes
+++ groezerodim!? compiled, 102 + 28 bytes
+++ gzerodimeval compiled, 13 + 16 bytes
+++ gzerodim1 compiled, 136 + 72 bytes
+++ gbtest compiled, 173 + 72 bytes
Completed FASL files for "hilbertp"
+++ FASLEND: hits = 92, misses = 81



*** Compiling hggroeb ... 


FASLOUT "hggroeb": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dd_groebner!* compiled, 409 + 164 bytes
+++ dd!-bbg compiled, 30 + 48 bytes
+++ dd_homog!-check compiled, 58 + 36 bytes
+++ dd!-groebspolynom compiled, 28 + 40 bytes
Completed FASL files for "hggroeb"
+++ FASLEND: hits = 37, misses = 59



*** Compiling kuechl ... 


FASLOUT "kuechl": IN files;  or type in expressions
When all done, execute FASLEND;
+++ groeb!-walk compiled, 63 + 96 bytes
+++ groeb!-list compiled, 18 + 32 bytes
+++ groeb!-collect compiled, 48 + 8 bytes
+++ groeb!-w2 compiled, 386 + 172 bytes
+++ groeb!-w3 compiled, 151 + 32 bytes
+++ groeb!-w4 compiled, 94 + 20 bytes
+++ groeb!-w4!-1 compiled, 38 + 36 bytes
+++ groeb!-w5 compiled, 8 + 12 bytes
+++ groeb!-w5!-1 compiled, 33 + 16 bytes
+++ groeb!-w6!-4 compiled, 6 + 20 bytes
+++ groeb!-w6!-5 compiled, 49 + 20 bytes
+++ groeb!-w6!-6 compiled, 50 + 32 bytes
+++ groeb!-w6!-7 compiled, 149 + 48 bytes
+++ groeb!-w6!-8 compiled, 63 + 24 bytes
+++ groeb!-w6!-9 compiled, 90 + 40 bytes
+++ groeb!-w7 compiled, 149 + 40 bytes
+++ groeb!-w7!-1 compiled, 35 + 16 bytes
+++ groeb!-w8 compiled, 52 + 24 bytes
+++ groeb!-w8!-1 compiled, 164 + 68 bytes
+++ groeb!-w9 compiled, 8 + 16 bytes
+++ groeb!-w10 compiled, 4 + 16 bytes
+++ groeb!-w10!-1 compiled, 36 + 28 bytes
+++ rninv!: compiled, 25 + 16 bytes
+++ sq2vdp compiled, 21 + 24 bytes
+++ vdp2sq compiled, 43 + 32 bytes
Completed FASL files for "kuechl"
+++ FASLEND: hits = 181, misses = 99



*** Compiling greduo ... 


FASLOUT "greduo": IN files;  or type in expressions
When all done, execute FASLEND;
+++ greduce!-orders!-eval compiled, 240 + 80 bytes
+++ greduce!-orders!-size compiled, 66 + 32 bytes
Completed FASL files for "greduo"
+++ FASLEND: hits = 26, misses = 33

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling ideals ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "ideals": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
+++ i!-setting compiled, 50 + 28 bytes
+++ ideal2list compiled, 6 + 16 bytes
+++ gb compiled, 23 + 32 bytes
+++ gb!-new compiled, 38 + 40 bytes
+++ test!-ideal compiled, 25 + 32 bytes
+++ idealp compiled, 10 + 16 bytes

*** .= redefined 
+++ gb!-equal compiled, 12 + 20 bytes
+++ gb!-member compiled, 14 + 32 bytes
+++ gb!-subset compiled, 47 + 44 bytes
+++ gb!-plus compiled, 17 + 24 bytes
+++ gb!-times compiled, 135 + 32 bytes
+++ gb!-intersect compiled, 240 + 84 bytes

*** .: redefined 
+++ gb!-quotient compiled, 12 + 20 bytes
+++ gb!-quotient1 compiled, 23 + 28 bytes
Completed FASL files for "ideals"
+++ FASLEND: hits = 342, misses = 79
Fast-loading "./reduce.img(ideals)"

*** .= redefined 

*** .: redefined 

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling linalg ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "linalg": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
+++ swap_elt compiled, 19 + 20 bytes
+++ row_dim compiled, 12 + 32 bytes
+++ column_dim compiled, 12 + 32 bytes
+++ matrixp compiled, 7 + 16 bytes
+++ size_of_matrix compiled, 16 + 16 bytes
+++ companion compiled, 120 + 60 bytes
+++ find_companion compiled, 102 + 56 bytes
+++ jordan_block compiled, 68 + 28 bytes
+++ sub_matrix compiled, 18 + 32 bytes
+++ copy_into compiled, 286 + 116 bytes
+++ copy_mat not compiled (C version available)
+++ diagonal1 compiled, 112 + 68 bytes
+++ diag compiled, 222 + 40 bytes
+++ band_matrix compiled, 136 + 64 bytes
+++ make_identity compiled, 141 + 32 bytes
+++ squarep compiled, 24 + 40 bytes
+++ swap_rows compiled, 65 + 56 bytes
+++ swap_columns compiled, 78 + 56 bytes
+++ swap_entries compiled, 199 + 96 bytes
+++ get_rows compiled, 97 + 68 bytes
+++ get_columns compiled, 134 + 68 bytes
+++ stack_rows compiled, 62 + 36 bytes
+++ augment_columns compiled, 132 + 36 bytes
+++ add_rows compiled, 134 + 80 bytes
+++ add_columns compiled, 133 + 80 bytes
+++ add_to_rows compiled, 119 + 80 bytes
+++ add_to_columns compiled, 119 + 80 bytes
+++ mult_rows compiled, 124 + 80 bytes
+++ mult_columns compiled, 124 + 80 bytes
+++ matrix_augment1 compiled, 133 + 56 bytes
+++ matrix_stack1 compiled, 101 + 40 bytes
+++ no_rows compiled, 20 + 16 bytes
+++ no_cols compiled, 20 + 16 bytes
+++ const_rows_test compiled, 42 + 36 bytes
+++ const_columns_test compiled, 42 + 36 bytes
+++ block_matrix compiled, 174 + 100 bytes
+++ create_row_list compiled, 56 + 20 bytes
+++ check_cols compiled, 44 + 40 bytes
+++ check_rows compiled, 75 + 40 bytes
+++ vandermonde1 compiled, 134 + 48 bytes
+++ toeplitz1 compiled, 141 + 36 bytes
+++ kronecker_product compiled, 147 + 64 bytes
+++ minor compiled, 63 + 56 bytes
+++ remove_rows compiled, 171 + 84 bytes
+++ remove_columns compiled, 194 + 84 bytes
+++ random_minus compiled, 14 + 20 bytes
+++ random_make_minus compiled, 10 + 20 bytes
+++ random_matrix compiled, 279 + 152 bytes
+++ im_random_matrix compiled, 257 + 84 bytes
+++ extend compiled, 109 + 56 bytes
+++ char_matrix compiled, 39 + 52 bytes
+++ char_poly compiled, 17 + 32 bytes
+++ pivot compiled, 180 + 88 bytes
+++ rows_pivot compiled, 239 + 116 bytes
+++ jacobian compiled, 110 + 52 bytes
+++ hessian compiled, 96 + 56 bytes
+++ hermitian_tp compiled, 90 + 76 bytes
+++ hilbert compiled, 88 + 52 bytes
+++ coeff_matrix1 compiled, 47 + 44 bytes
+++ remove_equals compiled, 76 + 24 bytes
+++ get_variable_list compiled, 22 + 16 bytes
+++ check_linearity compiled, 37 + 24 bytes
+++ get_a compiled, 78 + 36 bytes
+++ get_b compiled, 131 + 44 bytes
+++ get_x compiled, 38 + 28 bytes
+++ get_coeffs compiled, 21 + 36 bytes
Completed FASL files for "linalg"
+++ FASLEND: hits = 862, misses = 178
Fast-loading "./reduce.img(linalg)"



*** Compiling lamatrix ... 


FASLOUT "lamatrix": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mkmatrix compiled, 106 + 20 bytes
+++ setmat compiled, 50 + 40 bytes
+++ getmat compiled, 44 + 40 bytes
+++ unchecked_getmatelem compiled, 26 + 36 bytes
+++ my_letmtr compiled, 93 + 60 bytes
Completed FASL files for "lamatrix"
+++ FASLEND: hits = 35, misses = 27



*** Compiling gramschm ... 


FASLOUT "gramschm": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gram_schmidt1 compiled, 37 + 24 bytes
+++ convert_to_sq compiled, 107 + 12 bytes
+++ convert_from_sq compiled, 113 + 16 bytes
+++ vector!+p compiled, 9 + 16 bytes
+++ get!+vec!+dim not compiled (C version available)
+++ get!+vec!+entry not compiled (C version available)
+++ mk!+vec!+add!+vec compiled, 86 + 44 bytes
+++ mk!+squared!+norm compiled, 4 + 12 bytes
+++ my!+nullsq!+p compiled, 6 + 12 bytes
+++ mk!+null!+vec compiled, 42 + 12 bytes
+++ null!+vec!+p compiled, 8 + 20 bytes
+++ mk!+normalize!+vector compiled, 39 + 56 bytes
+++ mk!+gram!+schmid compiled, 53 + 44 bytes
+++ gram!+schmid compiled, 43 + 36 bytes
+++ add!+vector!+to!+list compiled, 6 + 8 bytes
+++ mk!+inner!+product compiled, 69 + 60 bytes
+++ mk!+scal!+mult!+vec compiled, 69 + 32 bytes
Completed FASL files for "gramschm"
+++ FASLEND: hits = 107, misses = 41



*** Compiling ludecom ... 


FASLOUT "ludecom": IN files;  or type in expressions
When all done, execute FASLEND;
+++ get_num_part compiled, 100 + 40 bytes
+++ rdwrap!-expt compiled, 26 + 20 bytes
+++ rdwrap2 compiled, 14 + 12 bytes
+++ rdwrap!* compiled, 7 + 16 bytes
+++ expt!-int compiled, 7 + 8 bytes
+++ lu_decom compiled, 56 + 72 bytes
+++ cx_test compiled, 49 + 32 bytes
+++ unsymdet compiled, 433 + 100 bytes
+++ innerprod compiled, 42 + 16 bytes
+++ row_vec compiled, 34 + 20 bytes
+++ col_vec compiled, 34 + 20 bytes
+++ get_l_and_u compiled, 111 + 28 bytes
+++ compdet compiled, 614 + 124 bytes
+++ cxinnerprod compiled, 70 + 16 bytes
+++ cx_row_vec compiled, 37 + 24 bytes
+++ re_row_vec compiled, 38 + 24 bytes
+++ im_uncompress compiled, 88 + 44 bytes
+++ im_compress compiled, 76 + 44 bytes
+++ convert compiled, 50 + 36 bytes
Completed FASL files for "ludecom"
+++ FASLEND: hits = 145, misses = 60



*** Compiling cholesky ... 


FASLOUT "cholesky": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cholesky compiled, 204 + 128 bytes
+++ get_l compiled, 71 + 32 bytes
+++ symmetricp compiled, 10 + 20 bytes
Completed FASL files for "cholesky"
+++ FASLEND: hits = 25, misses = 33



*** Compiling svd ... 


FASLOUT "svd": IN files;  or type in expressions
When all done, execute FASLEND;
+++ svd compiled, 2472 + 152 bytes
+++ q_to_diag_matrix compiled, 37 + 24 bytes
+++ pseudo_inverse compiled, 34 + 44 bytes
+++ rd_copy_mat compiled, 71 + 44 bytes
+++ specrd!:times compiled, 51 + 32 bytes
+++ specrd!:quotient compiled, 51 + 32 bytes
+++ specrd!:expt compiled, 49 + 32 bytes
+++ specrd!:sqrt compiled, 4 + 16 bytes
+++ specrd!:plus compiled, 71 + 44 bytes
+++ specrd!:difference compiled, 75 + 44 bytes
+++ add_minus compiled, 70 + 20 bytes
Completed FASL files for "svd"
+++ FASLEND: hits = 101, misses = 59



*** Compiling simplex ... 


FASLOUT "simplex": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simplex1 compiled, 551 + 176 bytes
+++ normalize!-equationl compiled, 44 + 16 bytes
+++ normalize!-equation compiled, 29 + 36 bytes
+++ abssummand compiled, 14 + 8 bytes
+++ unique_equation_list compiled, 36 + 20 bytes
+++ make_equations_positive compiled, 178 + 12 bytes
+++ add_not_defined_variables compiled, 51 + 40 bytes
+++ initialise compiled, 46 + 32 bytes
+++ more_initialise compiled, 46 + 28 bytes
+++ check_minus_b compiled, 44 + 36 bytes
+++ create_phase1_a1_and_obj_and_ib compiled, 109 + 32 bytes
+++ simplex_calculation compiled, 107 + 36 bytes
+++ get_preliminary_variable_list compiled, 21 + 16 bytes
+++ add_slacks_to_equations compiled, 143 + 80 bytes
+++ simp_get_a compiled, 141 + 52 bytes
+++ get_x_and_obj_mat compiled, 69 + 36 bytes
+++ get_cb compiled as link to fast_augment_columns
+++ compute_objective compiled, 11 + 24 bytes
+++ rstep1 compiled, 303 + 100 bytes
+++ rstep2 compiled, 214 + 64 bytes
+++ rstep3 compiled, 40 + 40 bytes
+++ phiprm compiled, 92 + 60 bytes
+++ make_answer_list compiled, 167 + 40 bytes
+++ fast_add_rows compiled, 263 + 56 bytes
+++ fast_augment_columns compiled, 169 + 24 bytes
+++ fast_matrix_augment compiled, 57 + 20 bytes
+++ fast_setmat compiled, 118 + 20 bytes
+++ fast_unchecked_getmatelem not compiled (C version available)
+++ fast_mult_rows compiled, 108 + 28 bytes
+++ fast_make_identity compiled, 132 + 20 bytes
+++ two_column_scalar_product compiled, 165 + 44 bytes
+++ scalar_product compiled, 166 + 44 bytes
Completed FASL files for "simplex"
+++ FASLEND: hits = 488, misses = 135



*** Compiling tadjoint ... 


FASLOUT "tadjoint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ triang_adjoint compiled, 38 + 48 bytes
+++ adtriang!* compiled, 115 + 60 bytes
+++ adjoint!*lu compiled, 1407 + 100 bytes
+++ compose!*mat compiled, 140 + 44 bytes
+++ adjoint_lst_row!* compiled, 65 + 40 bytes
Completed FASL files for "tadjoint"
+++ FASLEND: hits = 357, misses = 72

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling ncpoly ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "ncpoly": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Completed FASL files for "ncpoly"
+++ FASLEND: hits = 13, misses = 76
Fast-loading "./reduce.img(ncpoly)"



*** Compiling ncenv ... 


FASLOUT "ncenv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pri!-nc!* compiled, 14 + 16 bytes
+++ dippri!-nc!* compiled, 14 + 16 bytes
+++ ncpi!-setup compiled, 658 + 152 bytes
+++ nc_cleanup compiled, 16 + 32 bytes
Completed FASL files for "ncenv"
+++ FASLEND: hits = 43, misses = 51



*** Compiling ncdip ... 


FASLOUT "ncdip": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ncdsetup!* compiled, 288 + 104 bytes
+++ ncdipndx compiled, 17 + 12 bytes
+++ vdp!-nc!-m!*p compiled, 38 + 28 bytes
+++ vdp!-nc!-prod compiled, 24 + 28 bytes
+++ dip!-nc!-prod compiled, 15 + 16 bytes
+++ dip!-nc!-prod!-distleft compiled, 31 + 16 bytes
+++ dip!-nc!-m!*p!-distleft compiled, 31 + 16 bytes
+++ dip!-nc!-prod!-distright compiled, 31 + 16 bytes
+++ dip!-nc!-m!*p!-distright compiled, 31 + 16 bytes
+++ dip!-nc!-ev!-prod compiled, 13 + 20 bytes
+++ dip!-nc!-ev!-prod1 compiled, 17 + 12 bytes
+++ dip!-nc!-ev!-prod2 compiled, 176 + 52 bytes
+++ dip!-nc!-get!-commutator compiled, 69 + 28 bytes
+++ dipfvarindex compiled, 5 + 20 bytes
+++ dipevadd1var compiled, 37 + 12 bytes
+++ a2ncdip compiled, 163 + 56 bytes
+++ a2ncvdp compiled, 4 + 16 bytes
Completed FASL files for "ncdip"
+++ FASLEND: hits = 101, misses = 58



*** Compiling ncgroeb ... 


FASLOUT "ncgroeb": IN files;  or type in expressions
When all done, execute FASLEND;
+++ nc!-groebeval compiled, 87 + 36 bytes
+++ nc!-preduce compiled, 64 + 36 bytes
+++ nc!-div compiled, 29 + 36 bytes
+++ nc!-gsetup compiled, 59 + 112 bytes
+++ nc!-traverso compiled, 167 + 76 bytes
+++ nc!-traverso!-pairlist compiled, 102 + 44 bytes
+++ nc!-traverso!-pairs!-discard1 compiled, 54 + 16 bytes
+++ vevstrictlydivides!? compiled, 9 + 16 bytes
+++ nc!-traverso!-final compiled, 40 + 36 bytes
+++ nc!-fullprint compiled, 43 + 52 bytes
+++ nc!-spoly compiled, 77 + 48 bytes
+++ nc!-qremf compiled, 71 + 40 bytes
+++ nc!-reduce1 compiled, 76 + 48 bytes
+++ nc!-normalform compiled, 9 + 12 bytes
+++ nc!-normalform2 compiled, 92 + 52 bytes
Completed FASL files for "ncgroeb"
+++ FASLEND: hits = 122, misses = 92



*** Compiling ncfactor ... 


FASLOUT "ncfactor": IN files;  or type in expressions
When all done, execute FASLEND;
+++ nc_factorize compiled, 103 + 56 bytes
+++ nc_commfactors compiled, 42 + 32 bytes
+++ nc_commfactors!* compiled, 328 + 116 bytes
+++ nc_dir compiled, 6 + 20 bytes
+++ oneside!-factor compiled, 186 + 68 bytes
+++ nc_factorize_all compiled, 255 + 92 bytes
+++ nc_factorize0 compiled, 29 + 20 bytes
+++ lambda_b8duetfjz834 compiled, 5 + 12 bytes
+++ nc_factorize1 compiled, 379 + 92 bytes
+++ nc_factorize1!-evl compiled, 118 + 20 bytes
+++ nc_factorize2 compiled, 509 + 248 bytes
+++ nc_factsolve compiled, 626 + 128 bytes
+++ dipsubf compiled, 33 + 20 bytes
+++ dippolish compiled, 6 + 16 bytes
+++ nc_factorize_unwrap compiled, 51 + 16 bytes
+++ nc_factorize2evl compiled, 76 + 32 bytes
+++ nc_factorize2!-evl1 compiled, 172 + 20 bytes
+++ nc_factorize_timecheck compiled, 21 + 28 bytes
Completed FASL files for "ncfactor"
+++ FASLEND: hits = 217, misses = 123



*** Compiling ncout ... 


FASLOUT "ncout": IN files;  or type in expressions
When all done, execute FASLEND;
+++ nc_compact compiled, 102 + 52 bytes
+++ nc_compactr compiled, 212 + 80 bytes
+++ nc_compactd compiled, 62 + 8 bytes
+++ nc_compactx compiled, 51 + 20 bytes
Completed FASL files for "ncout"
+++ FASLEND: hits = 25, misses = 29

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling normform ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "normform": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "normform"
+++ FASLEND: hits = 2, misses = 14
Fast-loading "./reduce.img(normform)"



*** Compiling jordan ... 


FASLOUT "jordan": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(arnum)"
Fast-loading "./reduce.img(arinv)"
+++ jordan compiled, 192 + 128 bytes
+++ jordanform compiled, 376 + 120 bytes
+++ test_for_root_of compiled, 75 + 16 bytes
Completed FASL files for "jordan"
+++ FASLEND: hits = 21, misses = 54



*** Compiling jordsymb ... 


FASLOUT "jordsymb": IN files;  or type in expressions
When all done, execute FASLEND;
+++ jordansymbolic compiled, 277 + 156 bytes
+++ jordansymbolicform compiled, 58 + 40 bytes
+++ find_companion compiled, 94 + 40 bytes
+++ find_ratjblock compiled, 80 + 48 bytes
+++ identitymatrix compiled, 55 + 28 bytes
+++ invariant_to_jordan compiled, 70 + 36 bytes
+++ jordanblock compiled, 61 + 20 bytes
+++ ratjordan_to_jordan compiled, 912 + 148 bytes
+++ ratjordan_to_priminv compiled, 142 + 52 bytes
+++ submatrix compiled, 206 + 72 bytes
+++ looking_good compiled, 25 + 40 bytes
+++ make_rule compiled, 65 + 36 bytes
Completed FASL files for "jordsymb"
+++ FASLEND: hits = 123, misses = 82



*** Compiling ratjord ... 


FASLOUT "ratjord": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ratjordan compiled, 188 + 120 bytes
+++ ratjordanform compiled, 62 + 40 bytes
+++ companion_to_ratjordan compiled, 1577 + 104 bytes
+++ convert_to_mult compiled, 154 + 40 bytes
+++ copyinto compiled, 232 + 60 bytes
+++ de_nest_list compiled, 117 + 48 bytes
+++ deg_sort compiled, 210 + 32 bytes
+++ frobenius_to_invfact compiled, 118 + 44 bytes
+++ frobenius_to_ratjordan compiled, 1198 + 136 bytes
+++ get_den compiled, 13 + 12 bytes
+++ make_ratj_block compiled, 86 + 40 bytes
+++ priminv_to_ratjordan compiled, 67 + 36 bytes
+++ quo_test compiled, 25 + 24 bytes
+++ re_nest_list compiled, 35 + 28 bytes
Completed FASL files for "ratjord"
+++ FASLEND: hits = 130, misses = 82



*** Compiling froben ... 


FASLOUT "froben": IN files;  or type in expressions
When all done, execute FASLEND;
+++ frobenius compiled, 185 + 120 bytes
+++ frobeniusform compiled, 64 + 40 bytes
+++ basis compiled, 14 + 20 bytes
+++ calc_exgcd compiled, 195 + 48 bytes
+++ norm compiled, 26 + 28 bytes
+++ unit compiled, 21 + 24 bytes
+++ companion compiled, 107 + 60 bytes
+++ compute_g compiled, 191 + 52 bytes
+++ copy_mat compiled, 62 + 36 bytes
+++ cyclic_to_frobenius compiled, 777 + 76 bytes
+++ cyclic_vectors compiled, 790 + 72 bytes
+++ de_nest compiled, 18 + 12 bytes
+++ de_nest_mat compiled, 56 + 28 bytes
+++ diag compiled, 216 + 36 bytes
+++ get_coeffs compiled, 21 + 36 bytes
+++ get_quo compiled, 34 + 32 bytes
+++ get_rem compiled, 16 + 20 bytes
+++ inv compiled, 167 + 48 bytes
+++ invfact_to_frobenius compiled, 54 + 32 bytes
+++ make_identity compiled, 45 + 20 bytes
+++ matrix_input_test compiled, 12 + 24 bytes
+++ mysmith compiled, 1252 + 72 bytes
+++ nest_input compiled, 120 + 60 bytes
+++ off_mod_lcof compiled, 17 + 28 bytes
+++ off_mod_reval compiled, 17 + 28 bytes
+++ plist_to_polycompanion compiled, 157 + 44 bytes
+++ size_of_matrix compiled, 18 + 20 bytes
+++ uppersmith compiled, 296 + 64 bytes
Completed FASL files for "froben"
+++ FASLEND: hits = 258, misses = 86



*** Compiling matarg ... 


FASLOUT "matarg": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mkmatrix compiled, 106 + 20 bytes
+++ setmat compiled, 43 + 48 bytes
+++ letmtr compiled, 44 + 60 bytes
+++ getmat compiled, 12 + 16 bytes
+++ unchecked_getmatelem compiled, 26 + 36 bytes
Completed FASL files for "matarg"
+++ FASLEND: hits = 31, misses = 33



*** Compiling smithex ... 


FASLOUT "smithex": IN files;  or type in expressions
When all done, execute FASLEND;
+++ smithex compiled, 2027 + 180 bytes
+++ get_coeffs_smith compiled, 56 + 40 bytes
+++ nest_input_smith compiled, 120 + 60 bytes
+++ all_integer_entries_test compiled, 56 + 44 bytes
Completed FASL files for "smithex"
+++ FASLEND: hits = 31, misses = 60



*** Compiling smithex1 ... 


FASLOUT "smithex1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ smithex_int compiled, 1797 + 96 bytes
+++ calc_exgcd_int compiled, 126 + 24 bytes
+++ get_quo_int compiled, 54 + 24 bytes
+++ get_rem_int compiled, 20 + 20 bytes
+++ integer_entries_test compiled, 43 + 28 bytes
Completed FASL files for "smithex1"
+++ FASLEND: hits = 31, misses = 29

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling orthovec ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "orthovec": IN files;  or type in expressions
When all done, execute FASLEND;
+++ vstart0 compiled, 505 + 180 bytes
+++ svec compiled, 36 + 32 bytes
+++ vout compiled, 67 + 56 bytes
+++ depend compiled, 62 + 24 bytes
+++ nodepend compiled, 63 + 24 bytes

*** + redefined 

*** + redefined 

*** - redefined 

*** - redefined 

*** >< redefined 

*** * redefined 

*** * redefined 

*** / redefined 

*** / redefined 

*** _ redefined 

*** ^ redefined 

*** ^ redefined 
+++ vectorcomponent compiled, 60 + 56 bytes
+++ vectoradd compiled, 92 + 60 bytes
+++ vectorplus compiled, 1 + 8 bytes
+++ vectorminus compiled, 54 + 44 bytes
+++ vectordifference compiled, 9 + 16 bytes
+++ vectortimes compiled, 164 + 48 bytes
+++ vectorcross compiled, 175 + 64 bytes
+++ vectorquotient compiled, 68 + 28 bytes
+++ vectorrecip compiled, 25 + 24 bytes
+++ vmod compiled, 9 + 16 bytes
+++ vectorexpt compiled, 20 + 24 bytes
+++ div compiled, 109 + 88 bytes
+++ grad compiled, 90 + 84 bytes
+++ curl compiled, 207 + 96 bytes
+++ delsq compiled, 32 + 32 bytes
+++ vdf compiled, 76 + 60 bytes
+++ dotgrad compiled, 123 + 72 bytes
+++ vtaylor compiled, 69 + 44 bytes
+++ vptaylor compiled, 206 + 68 bytes
+++ taylor compiled, 134 + 84 bytes
+++ limit compiled, 115 + 68 bytes
+++ vint compiled, 75 + 60 bytes
+++ dvint compiled, 136 + 72 bytes
+++ volint compiled, 85 + 72 bytes
+++ dvolint compiled, 493 + 96 bytes
+++ lineint compiled, 168 + 96 bytes
+++ dlineint compiled, 63 + 48 bytes
Completed FASL files for "orthovec"
+++ FASLEND: hits = 572, misses = 118
Fast-loading "./reduce.img(orthovec)"

*** + redefined 

*** - redefined 

*** >< redefined 

*** * redefined 

*** / redefined 

*** _ redefined 

*** ^ redefined 

*** vectoradd already defined as operator 

*** vectordifference already defined as operator 

*** vectorcross already defined as operator 

*** vectorexpt already defined as operator 

*** vectorcomponent already defined as operator 

*** vectortimes already defined as operator 

*** vectorquotient already defined as operator 

*** dotgrad already defined as operator 

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling plot ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "plot": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable u in procedure fdeclare not used 
+++ fdeclare_sdgc6hjadtad compiled, 3 + 8 bytes
+++ thefloat_gebp4sql90r9 compiled, 5 + 8 bytes

*** .. redefined 
+++ ploteval3xysingular compiled, 62 + 24 bytes
+++ ploteval3xysingular1 compiled, 114 + 24 bytes
+++ plotdriver_oelutkzlw0h9 compiled, 20 + 28 bytes
Completed FASL files for "plot"
+++ FASLEND: hits = 40, misses = 53
Fast-loading "./reduce.img(plot)"

*** .. redefined 



*** Compiling plotsynt ... 


FASLOUT "plotsynt": IN files;  or type in expressions
When all done, execute FASLEND;

*** .. redefined 

*** .. redefined 

*** nonlocal use of undeclared variable init in procedure ploteval 
+++ ploteval compiled, 74 + 96 bytes
+++ plot!-reval compiled, 17 + 16 bytes
+++ plot!-reval1 compiled, 90 + 44 bytes
+++ ploteval1 compiled, 66 + 28 bytes
+++ ploteval0 compiled, 241 + 120 bytes

*** nonlocal use of undeclared variable show in procedure ploteval2 
+++ ploteval2 compiled, 145 + 84 bytes
+++ plot!-checkcontour compiled, 89 + 44 bytes
+++ plotrange compiled, 51 + 40 bytes
+++ plot!-points compiled, 13 + 12 bytes
+++ plotseteq compiled, 25 + 8 bytes
+++ plotindepvars compiled, 91 + 64 bytes

*** nonlocal use of undeclared variable show in procedure plotshow 
+++ plotshow compiled, 6 + 16 bytes

*** nonlocal use of undeclared variable reset in procedure plotreset 
+++ plotreset compiled, 6 + 16 bytes
Completed FASL files for "plotsynt"
+++ FASLEND: hits = 168, misses = 137



*** Compiling plotexp2 ... 


FASLOUT "plotexp2": IN files;  or type in expressions
When all done, execute FASLEND;

*** nonlocal use of undeclared variable plot-2exp in procedure ploteval2x 
+++ ploteval2x compiled, 102 + 64 bytes
+++ ploteval2x1 compiled, 320 + 100 bytes
+++ ploteval2xvariation compiled, 46 + 24 bytes
+++ smooth compiled, 150 + 44 bytes
+++ smooth1 compiled, 22 + 12 bytes
+++ smooth2 compiled, 606 + 68 bytes
+++ smooth3 compiled, 359 + 60 bytes
+++ findsing compiled, 131 + 28 bytes
Completed FASL files for "plotexp2"
+++ FASLEND: hits = 51, misses = 45



*** Compiling pltpara ... 


FASLOUT "pltpara": IN files;  or type in expressions
When all done, execute FASLEND;

*** nonlocal use of undeclared variable plot-2exp in procedure plotevalpara1 

*** nonlocal use of undeclared variable plot-3exp-reg in procedure plotevalpara1
 
+++ plotevalpara1 compiled, 91 + 64 bytes
+++ plotevalpara11 compiled, 174 + 40 bytes

*** nonlocal use of undeclared variable plot-3exp-reg in procedure plotevalpara2
 
+++ plotevalpara2 compiled, 91 + 72 bytes
+++ plotevalpara21 compiled, 239 + 40 bytes
Completed FASL files for "pltpara"
+++ FASLEND: hits = 34, misses = 29



*** Compiling plotexp3 ... 


FASLOUT "plotexp3": IN files;  or type in expressions
When all done, execute FASLEND;

*** nonlocal use of undeclared variable plot-3exp-reg in procedure ploteval3xy 
+++ ploteval3xy compiled, 111 + 64 bytes
+++ ploteval3xy1 compiled, 136 + 32 bytes
+++ ploteval3xy1pts compiled, 821 + 28 bytes
+++ ploteval3xy2 compiled, 4 + 12 bytes
+++ ploteval3xy3 compiled, 212 + 32 bytes
+++ ploteval3xybkpt compiled, 30 + 8 bytes
Completed FASL files for "plotexp3"
+++ FASLEND: hits = 27, misses = 32



*** Compiling plotimp2 ... 


FASLOUT "plotimp2": IN files;  or type in expressions
When all done, execute FASLEND;

*** nonlocal use of undeclared variable plot-2imp in procedure ploteval2xyimpl 
+++ ploteval2xyimpl compiled, 90 + 48 bytes
+++ imp2!-init compiled, 7 + 20 bytes
+++ imp2!-finit compiled, 25 + 24 bytes
+++ mk!-point compiled, 19 + 16 bytes
+++ deletip1 compiled, 20 + 8 bytes
+++ deletip compiled, 14 + 12 bytes
+++ imp2!-delete!-pt!-reference compiled, 9 + 16 bytes
+++ mk!-tria compiled, 49 + 40 bytes
+++ print!-tria compiled, 53 + 16 bytes
+++ imp2!-tria!-zerop!* compiled, 25 + 12 bytes
+++ imp2!-tria!-zerop compiled, 4 + 8 bytes
+++ imp2!-neighbours compiled, 98 + 28 bytes
+++ imp2!-edge!-length compiled, 21 + 12 bytes
+++ imp2!-tria!-surface compiled, 57 + 12 bytes
+++ imp2!-tria!-length compiled, 26 + 16 bytes
+++ imp2!-tria!-midpoint compiled, 32 + 12 bytes
+++ imp2!-tria!-goodpoint compiled, 116 + 16 bytes
+++ imp2!-tria!-goodpoint1 compiled, 147 + 16 bytes
+++ imp2!-tri!-refine!-one!-tria compiled, 346 + 72 bytes
+++ find!-one!-common compiled, 14 + 8 bytes
+++ imp2!-plot compiled, 122 + 68 bytes
+++ imp2!-plot!-refine compiled, 270 + 84 bytes
+++ imp2!-refine!-phase3 compiled, 105 + 40 bytes
+++ imp2!-plot!-collect compiled, 150 + 20 bytes
+++ imp2!-plot!-draw compiled, 177 + 16 bytes
+++ imp2!-show!-meshes compiled, 96 + 28 bytes
Completed FASL files for "plotimp2"
+++ FASLEND: hits = 166, misses = 61



*** Compiling plotimp3 ... 


FASLOUT "plotimp3": IN files;  or type in expressions
When all done, execute FASLEND;

*** nonlocal use of undeclared variable plot-3exp-reg in procedure ploteval3impl
 
+++ ploteval3impl compiled, 79 + 52 bytes
+++ ploteval3impl1 compiled, 1137 + 64 bytes
+++ ploteval3impl3 compiled, 18 + 8 bytes
Completed FASL files for "plotimp3"
+++ FASLEND: hits = 12, misses = 27



*** Compiling plotnum ... 


FASLOUT "plotnum": IN files;  or type in expressions
When all done, execute FASLEND;
+++ plotrounded compiled, 113 + 60 bytes
+++ adomainp compiled, 28 + 20 bytes
+++ revalnuminterval compiled, 34 + 32 bytes
+++ plot!-form!-prep compiled, 28 + 36 bytes
+++ plot!-form!-call2 compiled, 23 + 24 bytes
+++ rdwrap compiled, 26 + 36 bytes
+++ rdwrap1 compiled, 139 + 84 bytes
+++ rdwrapn compiled, 14 + 8 bytes
+++ rdwrap!-dm compiled, 58 + 68 bytes
+++ rdwrap!-cr compiled, 22 + 16 bytes
+++ rdwrap!-cmplx compiled, 18 + 20 bytes
+++ plotrepart compiled, 15 + 16 bytes
+++ rdwrap!-expt compiled, 50 + 36 bytes
+++ rdwrap2 compiled, 14 + 12 bytes
+++ rdwrap!* compiled, 7 + 16 bytes
+++ rdunwrap compiled, 16 + 28 bytes
+++ expt!-int compiled, 7 + 8 bytes
+++ plotevalform compiled, 238 + 84 bytes
+++ plotoverflow compiled, 17 + 36 bytes
+++ plotevalform0 compiled, 25 + 28 bytes
+++ plotevalform1 compiled, 57 + 32 bytes
+++ ploterrorp compiled, 17 + 24 bytes
Completed FASL files for "plotnum"
+++ FASLEND: hits = 163, misses = 103



*** Compiling parray ... 


FASLOUT "parray": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mk!-p!-array3 compiled, 30 + 20 bytes
+++ mk!-p!-array2 compiled, 32 + 16 bytes
+++ p!-get3 compiled, 8 + 12 bytes
+++ p!-put3 compiled, 10 + 16 bytes
Completed FASL files for "parray"
+++ FASLEND: hits = 18, misses = 12



*** Compiling xvect ... 


FASLOUT "xvect": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mkxvect compiled, 5 + 12 bytes
+++ xputv compiled, 38 + 28 bytes
+++ xgetv compiled, 36 + 20 bytes
Completed FASL files for "xvect"
+++ FASLEND: hits = 11, misses = 12

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling gnuplot ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "gnuplot": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(plot)"
Fast-loading "./reduce.img(plotsynt)"
Fast-loading "./reduce.img(plotexp2)"
Fast-loading "./reduce.img(pltpara)"
Fast-loading "./reduce.img(plotexp3)"
Fast-loading "./reduce.img(plotimp2)"
Fast-loading "./reduce.img(plotimp3)"
Fast-loading "./reduce.img(plotnum)"
Fast-loading "./reduce.img(parray)"
Fast-loading "./reduce.img(xvect)"
Completed FASL files for "gnuplot"
+++ FASLEND: hits = 7, misses = 23
Fast-loading "./reduce.img(gnuplot)"



*** Compiling gnuintfc ... 


FASLOUT "gnuintfc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ channelflush compiled, 9 + 12 bytes
+++ gtmpnam compiled, 26 + 20 bytes
+++ init_gnuplot compiled, 325 + 192 bytes
Completed FASL files for "gnuintfc"
+++ FASLEND: hits = 23, misses = 38



*** Compiling gnupldrv ... 


FASLOUT "gnupldrv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gp!-init compiled, 7 + 24 bytes
+++ plot!-filename compiled, 13 + 20 bytes
+++ gp!-reset compiled, 15 + 28 bytes
+++ plotopendisplay compiled, 61 + 60 bytes
+++ gp!-show compiled, 47 + 48 bytes
+++ plot!-exec compiled as link to system
+++ plotprin2 compiled, 25 + 32 bytes
+++ plotterpri compiled, 15 + 16 bytes
+++ plotprin2lt compiled, 17 + 16 bytes
+++ plotprinexpr compiled, 46 + 56 bytes
+++ plotprinexpr1 compiled, 129 + 100 bytes
+++ plotprinexpr2 compiled, 25 + 24 bytes
+++ gnuploteval compiled, 32 + 40 bytes
+++ plotpoints compiled, 63 + 60 bytes
+++ plotpoints0 compiled, 55 + 44 bytes
+++ plotpoints1 compiled, 48 + 24 bytes
+++ gp!-plotgrids compiled, 62 + 24 bytes
+++ gp!-plotquads compiled, 48 + 24 bytes
+++ gp!-plotprinpoint compiled, 27 + 20 bytes
+++ plotprin2number compiled, 17 + 20 bytes
+++ gp!-plotoptions compiled, 113 + 76 bytes
+++ plotstyle1 compiled, 13 + 32 bytes
+++ plotstyle compiled, 12 + 24 bytes
+++ gp!-2exp compiled, 151 + 80 bytes
+++ badpointp compiled, 11 + 8 bytes
+++ gp!-3exp compiled, 115 + 100 bytes
+++ gp!-reg2quads compiled, 64 + 12 bytes
+++ gp!-3quads compiled, 100 + 96 bytes
+++ gp!-2imp compiled, 96 + 76 bytes
Completed FASL files for "gnupldrv"
+++ FASLEND: hits = 293, misses = 149

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling laplace ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "laplace": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lap!-save!-environment compiled, 125 + 76 bytes
+++ lap!-restore!-environment compiled, 116 + 80 bytes
+++ simplaplace compiled, 31 + 44 bytes
+++ laplace_fixup compiled, 28 + 48 bytes

*** END-COMMENT NO LONGER SUPPORTED 
+++ simplaplace!* compiled, 413 + 200 bytes
+++ laplace1 compiled, 149 + 80 bytes
+++ lptermx compiled, 65 + 56 bytes
+++ lpdom compiled, 9 + 24 bytes
+++ lpform compiled, 27 + 20 bytes
+++ lpterm compiled, 178 + 60 bytes
+++ lpunknown compiled, 156 + 96 bytes
+++ lpsimp1 compiled, 157 + 108 bytes
+++ lpsimpg compiled, 120 + 64 bytes
+++ lpmult1 compiled, 73 + 36 bytes
+++ lpexpt compiled, 283 + 120 bytes
+++ lpfunc compiled, 339 + 152 bytes
+++ simpinvlap compiled, 32 + 44 bytes
+++ invlap_fixup compiled, 28 + 48 bytes

*** END-COMMENT NO LONGER SUPPORTED 
+++ simpinvlap!* compiled, 316 + 160 bytes
+++ invlap1 compiled, 134 + 80 bytes
+++ ilterm compiled, 354 + 88 bytes
+++ ilform compiled, 60 + 28 bytes
+++ ilunknown compiled, 168 + 88 bytes
+++ ilsimp1 compiled, 13 + 20 bytes
+++ ilexpt compiled, 387 + 120 bytes
+++ ilexptfn compiled, 286 + 96 bytes
+++ addrootl compiled, 21 + 8 bytes
+++ recipf!* compiled, 77 + 56 bytes
+++ ilroot compiled, 546 + 116 bytes
+++ il3pol compiled, 234 + 88 bytes
+++ ilresid compiled, 434 + 112 bytes
Completed FASL files for "laplace"
+++ FASLEND: hits = 1021, misses = 183
Fast-loading "./reduce.img(laplace)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling pm ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "pm": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ap compiled, 60 + 40 bytes
+++ npair compiled, 20 + 12 bytes
+++ map0 compiled, 25 + 24 bytes
+++ map1 compiled, 71 + 20 bytes
+++ ar0 compiled, 22 + 24 bytes
+++ ar1 compiled, 61 + 32 bytes
+++ aarg compiled, 72 + 44 bytes
+++ ar4 compiled, 100 + 24 bytes
+++ catx compiled, 31 + 24 bytes
+++ simpeq compiled, 45 + 48 bytes
+++ simpgt compiled, 45 + 48 bytes
+++ simpge compiled, 46 + 48 bytes
+++ simplt compiled, 6 + 12 bytes
+++ simple compiled, 6 + 12 bytes
+++ formgen compiled, 158 + 48 bytes
Completed FASL files for "pm"
+++ FASLEND: hits = 124, misses = 68
Fast-loading "./reduce.img(pm)"



*** Compiling pmpatch ... 


FASLOUT "pmpatch": IN files;  or type in expressions
When all done, execute FASLEND;
+++ listeval compiled, 77 + 44 bytes
+++ equalreval compiled, 23 + 32 bytes
+++ nosimp compiled, 8 + 12 bytes
+++ fnreval compiled, 77 + 20 bytes
+++ opfneval compiled, 54 + 32 bytes

*** local variable n in procedure simpiden not used 
+++ simpiden compiled, 306 + 124 bytes
Completed FASL files for "pmpatch"
+++ FASLEND: hits = 39, misses = 53



*** Compiling pattdefn ... 


FASLOUT "pattdefn": IN files;  or type in expressions
When all done, execute FASLEND;
+++ bind compiled, 11 + 16 bytes
+++ binding not compiled (C version available)
+++ unbind compiled, 10 + 16 bytes
+++ newenv compiled, 4 + 16 bytes
+++ restorenv compiled as link to unbind
+++ pm!:free not compiled (C version available)
+++ bound not compiled (C version available)
+++ meq compiled, 15 + 16 bytes
+++ mval not compiled (C version available)
+++ bsubs compiled, 45 + 16 bytes
+++ ident compiled, 9 + 20 bytes
+++ genp not compiled (C version available)
+++ mgenp not compiled (C version available)
+++ suchp compiled, 11 + 16 bytes
+++ chk compiled, 43 + 24 bytes
+++ findnewvars compiled, 47 + 16 bytes
+++ freexp not compiled (C version available)
+++ genexp compiled, 13 + 12 bytes
Completed FASL files for "pattdefn"
+++ FASLEND: hits = 85, misses = 44



*** Compiling pmintrfc ... 


FASLOUT "pmintrfc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mx compiled, 9 + 16 bytes
+++ m1 compiled, 125 + 68 bytes
+++ fixreplist compiled, 51 + 16 bytes
+++ pm!:gensym compiled, 13 + 20 bytes
+++ make!-unique!-freevars compiled, 64 + 28 bytes
+++ fixrep compiled, 69 + 36 bytes
+++ sx compiled, 39 + 24 bytes
+++ si!-x compiled, 24 + 20 bytes
+++ s0 compiled, 50 + 40 bytes
+++ sbreadth compiled, 38 + 28 bytes
+++ ssbreadth compiled, 176 + 28 bytes
+++ sdx compiled, 39 + 24 bytes
+++ sdi compiled, 24 + 20 bytes
+++ sd0 compiled, 50 + 40 bytes
+++ sdepth compiled, 87 + 24 bytes
+++ sroot compiled, 45 + 28 bytes
+++ sroot1 compiled, 133 + 88 bytes
+++ embed!-null!-fn compiled, 68 + 16 bytes
+++ null!-fn!-pri compiled, 66 + 76 bytes
+++ rset compiled, 40 + 40 bytes
+++ rsetd compiled, 47 + 44 bytes
+++ rinsert compiled, 39 + 20 bytes
+++ superset compiled, 27 + 24 bytes
+++ bound2gen compiled, 15 + 12 bytes
+++ arep compiled, 68 + 28 bytes
+++ drep compiled, 66 + 28 bytes
+++ opmtch compiled, 49 + 32 bytes
+++ oldmtch compiled, 38 + 12 bytes

*** _ redefined 
+++ prop!-alg compiled, 23 + 24 bytes
+++ preceq compiled, 19 + 20 bytes

*** :- redefined 

*** ::- redefined 

*** -> redefined 

*** --> redefined 

*** _= redefined 
Completed FASL files for "pmintrfc"
+++ FASLEND: hits = 381, misses = 117



*** Compiling pattperm ... 


FASLOUT "pattperm": IN files;  or type in expressions
When all done, execute FASLEND;
+++ first0 compiled, 20 + 16 bytes
+++ last0 compiled, 13 + 12 bytes
+++ list!-mgen compiled, 32 + 24 bytes
+++ initarg compiled, 148 + 92 bytes
+++ nextarg not compiled (C version available)
+++ o!-nextarg compiled, 98 + 72 bytes
+++ s!-nextarg compiled, 125 + 76 bytes
+++ getcomb compiled, 20 + 24 bytes

*** local variable u in procedure uprint not used 
+++ uprint compiled, 43 + 60 bytes
+++ initcomb not compiled (C version available)
+++ nextcomb compiled, 89 + 24 bytes
Completed FASL files for "pattperm"
+++ FASLEND: hits = 100, misses = 43



*** Compiling unify ... 


FASLOUT "unify": IN files;  or type in expressions
When all done, execute FASLEND;
+++ amatch compiled, 92 + 44 bytes
+++ suspend compiled, 35 + 28 bytes
+++ resume compiled, 20 + 28 bytes
+++ unify compiled, 183 + 100 bytes
Completed FASL files for "unify"
+++ FASLEND: hits = 42, misses = 41



*** Compiling pmrules ... 


FASLOUT "pmrules": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpbool compiled, 64 + 36 bytes
Completed FASL files for "pmrules"
+++ FASLEND: hits = 683, misses = 63

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling qsum ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "qsum": IN files;  or type in expressions
When all done, execute FASLEND;
+++ new_simpexpt compiled, 63 + 64 bytes
+++ polynomq4 compiled, 14 + 28 bytes
+++ type_ratpoly compiled, 34 + 36 bytes
+++ tttype_ratpoly compiled, 44 + 36 bytes
+++ polynomq compiled, 33 + 32 bytes
+++ polynomqqq compiled, 110 + 52 bytes
+++ ttttype_ratpoly compiled, 44 + 36 bytes

*** nonlocal use of undeclared variable profile_time* in procedure start 
+++ profile_time!* declared fluid
+++ start compiled, 11 + 16 bytes
+++ stop compiled, 21 + 16 bytes
+++ showprofile compiled, 29 + 28 bytes
+++ timing compiled, 114 + 52 bytes
+++ showtiming compiled, 20 + 24 bytes
+++ showcputiming compiled, 12 + 20 bytes
+++ showgctiming compiled, 4 + 12 bytes
+++ product2list compiled, 115 + 56 bytes
+++ sum2list compiled, 79 + 52 bytes
+++ laurentcoeff compiled, 97 + 76 bytes
+++ laurentcoeffn compiled, 90 + 80 bytes
+++ laurentdegree compiled, 39 + 56 bytes
+++ laurentldegree compiled, 60 + 72 bytes
+++ nullspace_size compiled, 12 + 12 bytes
+++ nullspace_equations2sqmatrix compiled, 135 + 52 bytes
+++ nullspacesolve compiled, 202 + 72 bytes
+++ nullspace_showmat compiled, 54 + 40 bytes
+++ nullspace_triangulize compiled, 346 + 52 bytes
+++ nullspace_triangulize_pivot compiled, 185 + 60 bytes
+++ nullspace_triangulize_exchange_columns compiled, 53 + 12 bytes
+++ nullspace_triangulize_exchange_rows compiled, 24 + 8 bytes
+++ nullspace_sort_comp compiled, 57 + 20 bytes
+++ nullspace_bubblesort compiled, 71 + 12 bytes
+++ nullspace_sort compiled, 98 + 28 bytes
+++ nullspace_matrix2solution compiled, 274 + 52 bytes
+++ nullspace_profile compiled, 133 + 88 bytes
+++ trace_qsum compiled, 35 + 48 bytes
+++ qsumrecursion_number compiled, 49 + 32 bytes
+++ qsumrecursion_qprofile compiled, 130 + 108 bytes
+++ qpsihyperterm compiled, 156 + 56 bytes
+++ qphihyperterm compiled, 172 + 60 bytes
+++ qsimpcomb_standard_integer_part_sf compiled, 40 + 8 bytes

*** local variable *dmode in procedure qsimpcomb_standard_integer_part not used 
+++ qsimpcomb_standard_integer_part compiled, 126 + 76 bytes
+++ qsimpcomb_standard_qexp_part_sf compiled, 59 + 24 bytes
+++ qsimpcomb_standard_qexp_part compiled, 76 + 68 bytes
+++ qsimpcomb_qpochhammer_finite compiled, 104 + 64 bytes
+++ qsimpcomb_qpochhammer_infinity compiled, 157 + 88 bytes
+++ qsimpcomb_qpochhammer compiled, 593 + 144 bytes
+++ qsimpcomb_binomial compiled, 73 + 52 bytes
+++ qsimpcomb_qbinomial compiled, 52 + 32 bytes
+++ qsimpcomb_qbrackets compiled, 29 + 28 bytes
+++ qsimpcomb_qfactorial compiled, 32 + 32 bytes
+++ qsimpcomb_qfac compiled, 6 + 20 bytes
+++ qsimplify compiled, 191 + 144 bytes
+++ down_qratio compiled, 26 + 36 bytes
+++ up_qratio compiled, 25 + 36 bytes
+++ qratio compiled, 25 + 36 bytes
+++ lambda_xwwv19lu7y09 compiled, 1 + 8 bytes
+++ select!-eval compiled, 162 + 92 bytes
+++ type_homogeneous compiled, 83 + 72 bytes
+++ qgosper_qprimedispersion compiled, 330 + 108 bytes
+++ qgosper_qdispersionset_simple_factorlist compiled, 179 + 116 bytes
+++ qgosper_qdispersionset compiled, 112 + 56 bytes
+++ qgosper_qupdate compiled, 280 + 128 bytes
+++ qgosper_qdegreebound_q_exponent compiled, 33 + 52 bytes
+++ qgosper_qdegreebound compiled, 316 + 92 bytes
+++ qsumrecursion_inds2arbcmplx compiled, 131 + 48 bytes
+++ qgosper_qfindf compiled, 501 + 172 bytes
+++ qsumrecursion_qfindf_equations compiled, 792 + 180 bytes
+++ qsumrecursion_has compiled, 17 + 16 bytes
+++ qsumrecursion_qfindf compiled, 134 + 76 bytes
+++ qsumrecursion_range compiled, 136 + 52 bytes
+++ qsumrecursion_qhyper compiled, 76 + 32 bytes
+++ qsumrecursion compiled, 299 + 72 bytes
+++ qgosper compiled, 156 + 96 bytes
+++ qgosper_eval compiled, 416 + 232 bytes
+++ qsumrecursion_denom_lcm compiled, 147 + 92 bytes
+++ qsumrecursion_denom compiled, 228 + 84 bytes
+++ qsumrecursion_qratios compiled, 200 + 128 bytes
+++ qsumrecursion_eval compiled, 1120 + 244 bytes
Completed FASL files for "qsum"
+++ FASLEND: hits = 1327, misses = 347
Fast-loading "./reduce.img(qsum)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling scope ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "scope": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "scope"
+++ FASLEND: hits = 493, misses = 91
Fast-loading "./reduce.img(scope)"



*** Compiling codctl ... 


FASLOUT "codctl": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(gentran)"
Fast-loading "./reduce.img(utils)"
Fast-loading "./reduce.img(intrfc)"
Fast-loading "./reduce.img(templt)"
Fast-loading "./reduce.img(pre)"
Fast-loading "./reduce.img(gparser)"
Fast-loading "./reduce.img(redlsp)"
Fast-loading "./reduce.img(segmnt)"
Fast-loading "./reduce.img(lspfor)"
Fast-loading "./reduce.img(lsprat)"
Fast-loading "./reduce.img(lspc)"
Fast-loading "./reduce.img(lsppasc)"
Fast-loading "./reduce.img(goutput)"
+++ optimizestat compiled, 128 + 80 bytes
+++ algopteval compiled, 273 + 64 bytes
+++ allstring compiled, 55 + 8 bytes

*** local variable fn in procedure symoptimize not used 

*** local variable forms1 in procedure symoptimize not used 
+++ symoptimize compiled, 161 + 108 bytes

*** local variable fn in procedure symoptimize not used 

*** local variable forms1 in procedure symoptimize not used 

*** local variable comdecs in procedure symoptimize not used 
+++ symoptimize compiled, 132 + 88 bytes
+++ analyse_forms compiled, 533 + 56 bytes
+++ xreadforms compiled, 20 + 28 bytes
+++ flattenlist compiled, 44 + 16 bytes
+++ files2forms compiled, 45 + 24 bytes
+++ formoptimize compiled, 47 + 12 bytes
+++ chopchop compiled, 70 + 16 bytes
+++ formoptimize1 compiled, 187 + 72 bytes
+++ sq2pre compiled, 18 + 20 bytes
+++ optimizeforms compiled, 207 + 136 bytes
+++ opt compiled, 201 + 44 bytes
+++ init compiled, 220 + 124 bytes
+++ calc compiled, 194 + 132 bytes
+++ pprintf compiled, 29 + 24 bytes
+++ optimizeloop compiled, 26 + 28 bytes
+++ countnop compiled, 101 + 56 bytes
+++ counts compiled, 153 + 44 bytes
+++ complex!-i!-init!-statement compiled, 53 + 52 bytes
+++ priresult compiled, 234 + 112 bytes
+++ printdecs compiled, 55 + 60 bytes

*** local variable b in procedure makeprefixl not used 

*** local variable nex in procedure makeprefixl not used 

*** local variable xx in procedure makeprefixl not used 

*** local variable pp in procedure makeprefixl not used 
+++ makeprefixl compiled, 114 + 88 bytes
+++ prepfinalplst compiled, 46 + 60 bytes

*** local variable gsym in procedure savecseinfo not used 

*** local variable binf in procedure savecseinfo not used 
+++ savecseinfo compiled, 73 + 40 bytes
+++ iname compiled, 82 + 48 bytes
+++ movd compiled, 11 + 16 bytes
+++ newsym1 compiled, 15 + 16 bytes
+++ fnewsym compiled, 37 + 28 bytes
+++ letterpart compiled, 31 + 12 bytes
+++ digitpart compiled, 52 + 20 bytes
Completed FASL files for "codctl"
+++ FASLEND: hits = 417, misses = 268



*** Compiling restore ... 


FASLOUT "restore": IN files;  or type in expressions
When all done, execute FASLEND;
+++ vectorcode compiled, 9 + 16 bytes
+++ vclear compiled, 9 + 16 bytes
+++ vectorvarp compiled, 12 + 20 bytes
+++ optlang compiled, 17 + 32 bytes
+++ algresults compiled, 3 + 16 bytes
+++ algresults1 compiled, 66 + 48 bytes
+++ check_info compiled, 82 + 44 bytes
+++ arestore compiled, 67 + 40 bytes
+++ restoreall compiled, 3 + 16 bytes
+++ ireval compiled, 44 + 16 bytes
+++ ids_to_restore compiled, 6 + 16 bytes
Completed FASL files for "restore"
+++ FASLEND: hits = 124, misses = 58



*** Compiling minlngth ... 


FASLOUT "minlngth": IN files;  or type in expressions
When all done, execute FASLEND;
+++ setlength compiled, 13 + 24 bytes
+++ resetlength compiled, 6 + 12 bytes
+++ countsilent compiled, 30 + 20 bytes
+++ counts2 compiled, 155 + 48 bytes
+++ make_min_length compiled, 73 + 40 bytes
+++ scope_switches2 compiled, 142 + 48 bytes
+++ scope_ons compiled, 5 + 24 bytes
+++ scope_offs compiled, 5 + 20 bytes
+++ scope_switches compiled, 5 + 16 bytes
Completed FASL files for "minlngth"
+++ FASLEND: hits = 87, misses = 67



*** Compiling codmat ... 


FASLOUT "codmat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ setrow compiled, 182 + 68 bytes
+++ inszzz compiled, 53 + 16 bytes
+++ inszzzn compiled, 32 + 8 bytes
+++ inszzzr compiled, 53 + 16 bytes
+++ pnthxzz not compiled (C version available)
+++ inshisto compiled, 78 + 44 bytes
+++ delhisto compiled, 85 + 40 bytes
+++ rowdel compiled, 38 + 32 bytes
+++ rowins compiled, 38 + 36 bytes
+++ downwght not compiled (C version available)
+++ downwght1 compiled, 97 + 32 bytes
+++ upwght compiled, 7 + 20 bytes
+++ upwght1 compiled, 106 + 40 bytes
+++ initwght compiled, 72 + 40 bytes
+++ remzzzz compiled, 27 + 8 bytes
+++ chdel compiled, 23 + 20 bytes
+++ delyzz compiled, 19 + 8 bytes
+++ clearrow compiled, 74 + 44 bytes

*** local variable nnex in procedure ffvar! not used 

*** local variable argtype in procedure ffvar! not used 

*** local variable var in procedure ffvar! not used 

*** local variable s in procedure ffvar! not used 
+++ ffvar!! compiled, 50 + 48 bytes
+++ restorecseinfo compiled, 98 + 36 bytes
+++ remdiff compiled, 67 + 28 bytes
+++ ffvar!!2 compiled, 60 + 40 bytes
+++ fcoftrm compiled, 30 + 20 bytes
+++ rationalexponent compiled, 4 + 12 bytes
+++ rationalp compiled, 17 + 12 bytes

*** local variable nn in procedure ffvar+ not used 
+++ ffvar!+ compiled, 360 + 84 bytes

*** local variable l in procedure pvarlst+ not used 

*** local variable nvar in procedure pvarlst+ not used 
+++ pvarlst!+ compiled, 46 + 36 bytes
+++ ffvar!* compiled, 384 + 112 bytes

*** local variable l in procedure pvarlst* not used 
+++ pvarlst!* compiled, 121 + 60 bytes

*** local variable valf in procedure fvarop not used 
+++ fvarop compiled, 246 + 100 bytes
+++ allconst compiled, 43 + 16 bytes
+++ jbconstp compiled, 72 + 28 bytes
+++ findvardef compiled, 59 + 20 bytes
+++ ssetvars compiled, 90 + 68 bytes
+++ revise2 compiled, 174 + 44 bytes
+++ revise compiled, 46 + 12 bytes
+++ preremdep compiled, 350 + 88 bytes
+++ introduce!-alias compiled, 79 + 40 bytes
+++ ssetvars1 compiled, 132 + 44 bytes
+++ prepmultmat compiled, 344 + 76 bytes
+++ lcm2 compiled, 11 + 12 bytes
+++ setprev compiled, 44 + 24 bytes
Completed FASL files for "codmat"
+++ FASLEND: hits = 392, misses = 122



*** Compiling codopt ... 


FASLOUT "codopt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ extbrsea compiled, 153 + 68 bytes
+++ initbrsea not compiled (C version available)
+++ redcodmat compiled, 16 + 20 bytes
+++ testred not compiled (C version available)
+++ extbrsea1 compiled, 182 + 76 bytes
+++ findhr compiled, 43 + 44 bytes
+++ findhc compiled, 77 + 36 bytes
+++ findoptrow compiled, 104 + 48 bytes

*** local variable y in procedure testpr not used 
+++ testpr compiled, 87 + 40 bytes
+++ brupdate compiled, 77 + 60 bytes
+++ addcse compiled, 469 + 136 bytes
+++ rzstrtcse compiled, 141 + 68 bytes
+++ gcd2 compiled, 11 + 12 bytes
+++ expshrtest compiled, 34 + 36 bytes
+++ czstrtcse compiled, 63 + 48 bytes
+++ testredzz compiled, 22 + 24 bytes
+++ testredh compiled, 29 + 36 bytes

*** local variable m in procedure expandprod not used 
+++ expandprod compiled, 338 + 92 bytes
+++ testrel compiled, 184 + 40 bytes
+++ inspcvv compiled, 52 + 16 bytes

*** local variable zz in procedure shrinkprod not used 
+++ shrinkprod compiled, 259 + 80 bytes
Completed FASL files for "codopt"
+++ FASLEND: hits = 211, misses = 83



*** Compiling codad1 ... 


FASLOUT "codad1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ getcind compiled, 86 + 44 bytes
+++ improvelayout compiled, 67 + 56 bytes

*** local variable el1 in procedure testononeel not used 
+++ testononeel compiled, 854 + 172 bytes
+++ remordr compiled, 23 + 8 bytes
+++ updordr compiled, 56 + 8 bytes
+++ improvekvarlst compiled, 152 + 48 bytes
+++ tshrinkcol compiled, 140 + 68 bytes
+++ updatealiases compiled, 81 + 28 bytes
+++ tchscheme compiled, 56 + 48 bytes
+++ chscheme compiled, 185 + 72 bytes
+++ updfa compiled, 121 + 60 bytes
+++ transferrow compiled, 41 + 40 bytes
+++ transferrow1 compiled, 23 + 24 bytes
+++ transferrow2 compiled, 80 + 52 bytes
+++ codfac compiled, 80 + 52 bytes
+++ samefar compiled, 122 + 40 bytes
+++ commonfac compiled, 808 + 100 bytes
Completed FASL files for "codad1"
+++ FASLEND: hits = 196, misses = 74



*** Compiling codad2 ... 


FASLOUT "codad2": IN files;  or type in expressions
When all done, execute FASLEND;
+++ getcind compiled, 86 + 44 bytes
+++ powerofsums compiled, 340 + 100 bytes
+++ remrepmultvars compiled, 655 + 128 bytes
+++ updatemonomials compiled, 55 + 44 bytes
+++ mkgclstmon compiled, 62 + 48 bytes
+++ remgcmon compiled, 385 + 92 bytes
+++ codgcd compiled, 48 + 40 bytes
+++ mkgclst compiled, 163 + 60 bytes

*** local variable cgcl in procedure insgclst not used 
+++ insgclst compiled, 176 + 24 bytes
+++ insdiff compiled, 56 + 12 bytes
+++ remgc compiled, 694 + 92 bytes

*** local variable mz in procedure updaterowinf not used 

*** local variable dyz in procedure updaterowinf not used 
+++ updaterowinf compiled, 161 + 56 bytes
+++ tchscheme2 compiled, 19 + 24 bytes
+++ to!*scheme compiled, 154 + 64 bytes
+++ removechild compiled, 286 + 76 bytes
+++ searchcsequotients compiled, 12 + 16 bytes
+++ searchcsequotients2 compiled, 346 + 76 bytes
+++ relquottest compiled, 15 + 16 bytes

*** local variable rowindx in procedure relvstr not used 
+++ relvstr compiled, 9 + 16 bytes
+++ addmatnords compiled, 250 + 52 bytes
+++ nofnordocc compiled, 28 + 28 bytes
+++ numberofocc compiled, 44 + 24 bytes
+++ nofmatnords compiled, 36 + 32 bytes
+++ insertin compiled, 78 + 16 bytes
+++ selectmostfreqnord compiled, 39 + 8 bytes
+++ qprofit compiled, 107 + 24 bytes
+++ substqcse compiled, 144 + 56 bytes
+++ unprotected compiled, 11 + 20 bytes
+++ nordexpo compiled, 47 + 44 bytes
+++ remnord compiled, 431 + 80 bytes

*** local variable indx in procedure insnord not used 
+++ insnord compiled, 130 + 64 bytes
+++ insquotordr compiled, 64 + 36 bytes
+++ remquotordr compiled, 64 + 36 bytes
+++ remprev compiled, 45 + 28 bytes
+++ checknord compiled, 57 + 48 bytes
+++ remquotient compiled, 180 + 60 bytes
Completed FASL files for "codad2"
+++ FASLEND: hits = 385, misses = 101



*** Compiling coddec ... 


FASLOUT "coddec": IN files;  or type in expressions
When all done, execute FASLEND;
+++ typeall compiled, 94 + 76 bytes
+++ on!-double compiled, 39 + 36 bytes
+++ on!-double1 compiled, 18 + 20 bytes
+++ fix!-implicit compiled, 45 + 40 bytes
+++ getdec compiled, 11 + 16 bytes
+++ implicitdec compiled, 33 + 28 bytes
+++ firstmatch compiled, 31 + 12 bytes
+++ isimplicit compiled, 26 + 16 bytes
+++ implicittype compiled, 10 + 16 bytes
+++ asstype compiled, 89 + 32 bytes
+++ dettype compiled, 297 + 104 bytes
+++ typecheck compiled, 39 + 36 bytes
+++ typeintersec compiled, 46 + 32 bytes
+++ mintype compiled, 5 + 8 bytes
+++ maxtype compiled, 12 + 8 bytes
+++ returntype compiled, 25 + 28 bytes
+++ putmaxtype compiled, 131 + 68 bytes
+++ getnum compiled, 27 + 28 bytes
+++ greatertype compiled, 107 + 32 bytes
+++ geqtype compiled, 101 + 32 bytes
+++ lesstype compiled, 3 + 12 bytes
+++ firstinclass compiled, 54 + 40 bytes
+++ lastinclass compiled, 49 + 32 bytes
+++ opcheck compiled, 47 + 28 bytes
+++ finish!-typing compiled, 84 + 44 bytes
+++ det!&bind compiled, 159 + 60 bytes
+++ det!&bindmax compiled, 59 + 40 bytes
+++ typerror compiled, 107 + 108 bytes
+++ subscriptedvarp not compiled (C version available)
+++ subscriptedvarp2 compiled, 7 + 16 bytes
+++ dumpsymtab compiled, 162 + 48 bytes
+++ firstmatch compiled, 47 + 20 bytes
Completed FASL files for "coddec"
+++ FASLEND: hits = 455, misses = 151



*** Compiling codpri ... 


FASLOUT "codpri": IN files;  or type in expressions
When all done, execute FASLEND;
+++ primat compiled, 25 + 36 bytes
+++ primat1 compiled, 145 + 64 bytes
+++ prischeme compiled, 265 + 112 bytes
+++ prirow compiled, 106 + 68 bytes
+++ memqp compiled, 12 + 16 bytes
+++ prinumb compiled, 82 + 52 bytes
+++ prilint compiled, 31 + 32 bytes
+++ privar compiled, 26 + 28 bytes
+++ prfexp compiled, 194 + 76 bytes
+++ constrexp compiled, 299 + 80 bytes
+++ shiftminus compiled, 32 + 12 bytes
+++ prfmex compiled, 218 + 64 bytes
+++ compex compiled, 32 + 12 bytes
+++ prfkvar compiled, 116 + 40 bytes
+++ nexcheck compiled, 60 + 48 bytes
+++ evalpartprefixlist compiled, 68 + 44 bytes
+++ evalpart1 compiled, 78 + 56 bytes
+++ removearraysubstitutes compiled, 84 + 24 bytes
+++ preppowls compiled, 228 + 92 bytes
+++ prfpowl compiled, 132 + 40 bytes
+++ insexplst compiled, 30 + 8 bytes
+++ aliasbacksubst compiled, 71 + 28 bytes
+++ recaliasbacksubst compiled, 50 + 12 bytes
+++ reinsertratexps compiled, 90 + 12 bytes
+++ cleanupvars compiled, 197 + 64 bytes
+++ listeq compiled, 20 + 8 bytes
+++ cleanupprefixlist compiled, 942 + 136 bytes
+++ movable compiled, 94 + 16 bytes
+++ insoccs compiled, 45 + 24 bytes
+++ insertocc compiled, 25 + 12 bytes
+++ substel compiled, 11 + 12 bytes
+++ replacein compiled, 314 + 80 bytes
+++ qqstr!? compiled, 202 + 16 bytes
Completed FASL files for "codpri"
+++ FASLEND: hits = 349, misses = 135



*** Compiling codgen ... 


FASLOUT "codgen": IN files;  or type in expressions
When all done, execute FASLEND;
+++ optimization compiled, 6 + 16 bytes
+++ segmentation compiled, 6 + 16 bytes
+++ gentran!-wrappers!* compiled, 20 + 12 bytes
+++ gentran compiled, 103 + 68 bytes
+++ interchange_defs compiled, 26 + 16 bytes
+++ strip_progn compiled, 30 + 20 bytes
+++ add_progn compiled, 11 + 12 bytes
+++ delaydecs compiled, 39 + 72 bytes

*** local variable flist in procedure gentran_delaydecs not used 
+++ gentran_delaydecs compiled, 70 + 56 bytes
+++ makedecs compiled, 78 + 96 bytes
+++ delayopts compiled, 18 + 40 bytes

*** local variable flist in procedure gentran_delayopt not used 
+++ gentran_delayopt compiled, 46 + 40 bytes
+++ makeopts compiled, 64 + 68 bytes
Completed FASL files for "codgen"
+++ FASLEND: hits = 192, misses = 71



*** Compiling codhrn ... 


FASLOUT "codhrn": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ghornerstat compiled, 63 + 60 bytes

*** local variable vars in procedure formghorner not used 

*** local variable mode in procedure formghorner not used 
+++ formghorner compiled, 12 + 16 bytes
+++ ghorner compiled, 223 + 72 bytes

*** local variable n in procedure inithorner not used 

*** local variable d in procedure inithorner not used 
+++ inithorner compiled, 15 + 24 bytes
+++ hornersums compiled, 59 + 20 bytes
+++ horner compiled, 69 + 52 bytes
+++ hornercoef compiled, 31 + 24 bytes
+++ puttree compiled, 131 + 36 bytes
+++ gathertree compiled, 24 + 12 bytes
+++ orderterm compiled, 153 + 36 bytes
+++ schema compiled, 165 + 36 bytes
+++ kpow compiled, 49 + 24 bytes
+++ kcof compiled, 28 + 24 bytes
+++ mainvar2 compiled, 38 + 24 bytes
+++ alghornereval compiled, 146 + 52 bytes
+++ horner0 compiled, 69 + 64 bytes
+++ horner1 compiled, 89 + 72 bytes
+++ horner2 compiled, 8 + 20 bytes
+++ horner20 compiled, 74 + 60 bytes
+++ hvar1 compiled, 149 + 44 bytes
+++ khorner20 compiled, 95 + 72 bytes
+++ khvar1 compiled, 150 + 40 bytes
+++ hvlist compiled, 16 + 12 bytes
+++ clhvlist compiled, 3 + 12 bytes
+++ khornereval compiled, 47 + 52 bytes
+++ gkhornereval compiled, 177 + 48 bytes
+++ alggkhornereval compiled, 96 + 44 bytes
Completed FASL files for "codhrn"
+++ FASLEND: hits = 262, misses = 97



*** Compiling codstr ... 


FASLOUT "codstr": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gstructrstat compiled, 35 + 40 bytes

*** local variable vars in procedure formgstructr not used 

*** local variable mode in procedure formgstructr not used 
+++ formgstructr compiled, 12 + 16 bytes
+++ gstructr compiled, 111 + 64 bytes
+++ prepstructr compiled, 244 + 60 bytes
+++ print!*varlis compiled, 170 + 112 bytes
+++ prepstruct!*sq compiled, 17 + 16 bytes
+++ prepstructf compiled, 81 + 40 bytes
+++ prepstructk compiled, 45 + 20 bytes
+++ prepsubchk1 compiled, 27 + 12 bytes
+++ prepsubchk2 compiled, 34 + 16 bytes
+++ prepstructvar compiled, 24 + 20 bytes
+++ remredundancy compiled, 200 + 36 bytes
+++ letterparts compiled, 19 + 8 bytes
+++ numberofoccs compiled, 38 + 16 bytes
+++ algstructreval compiled, 102 + 60 bytes
Completed FASL files for "codstr"
+++ FASLEND: hits = 109, misses = 81



*** Compiling coddom ... 


FASLOUT "coddom": IN files;  or type in expressions
When all done, execute FASLEND;
+++ zeropp compiled, 13 + 16 bytes
+++ constp not compiled (C version available)
+++ integerp compiled, 10 + 12 bytes
+++ floatprop compiled, 10 + 12 bytes
+++ domprop compiled, 11 + 12 bytes
+++ doublep compiled, 10 + 12 bytes
+++ nil2zero not compiled (C version available)
+++ zero2nil not compiled (C version available)
+++ dm!-plus compiled, 9 + 20 bytes
+++ dm!-difference not compiled (C version available)
+++ dm!-minus compiled, 4 + 16 bytes
+++ dm!-abs not compiled (C version available)
+++ dm!-min compiled, 6 + 12 bytes
+++ dm!-max compiled, 6 + 12 bytes
+++ dm!-times not compiled (C version available)
+++ dm!-mkfloat compiled, 11 + 16 bytes
+++ dm!-quotient compiled, 14 + 24 bytes
+++ dm!-expt compiled, 6 + 20 bytes
+++ dm!-gt compiled, 4 + 16 bytes
+++ dm!-eq compiled, 4 + 16 bytes
+++ dm!-lt compiled, 4 + 16 bytes
+++ dm!-print compiled, 26 + 48 bytes
+++ rd!:zerop!: compiled, 10 + 20 bytes
+++ ft!:zerop compiled, 17 + 24 bytes
+++ ftintequiv compiled, 13 + 12 bytes
+++ dm!-fixp compiled, 83 + 24 bytes
+++ bfintequiv compiled, 10 + 20 bytes
+++ rdintequiv compiled, 9 + 16 bytes
+++ complexp compiled, 17 + 32 bytes
+++ myprepsq compiled, 9 + 20 bytes
+++ myprepf compiled, 11 + 20 bytes
+++ myprepf1 compiled, 36 + 24 bytes
+++ cireval compiled, 23 + 36 bytes
+++ remcomplex compiled, 73 + 40 bytes
Completed FASL files for "coddom"
+++ FASLEND: hits = 176, misses = 93

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling sparse ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "sparse": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(linalg)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(lamatrix)"
Fast-loading "./reduce.img(gramschm)"
Fast-loading "./reduce.img(ludecom)"
Fast-loading "./reduce.img(cholesky)"
Fast-loading "./reduce.img(svd)"
Fast-loading "./reduce.img(simplex)"
Fast-loading "./reduce.img(tadjoint)"
Completed FASL files for "sparse"
+++ FASLEND: hits = 3, misses = 15
Fast-loading "./reduce.img(sparse)"



*** Compiling sparsmat ... 


FASLOUT "sparsmat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ sparse compiled, 135 + 72 bytes
+++ natnumlis compiled, 19 + 12 bytes

*** local variable u in procedure spquotematrix not used 
+++ spquotematrix compiled, 2 + 12 bytes

*** local variable v in procedure spmatsm* not used 
+++ spmatsm!* compiled, 11 + 20 bytes

*** local variable u in procedure spmkscalmat not used 
+++ spmkscalmat compiled, 9 + 20 bytes
+++ sortrowelem compiled, 97 + 12 bytes
+++ sortcolelem not compiled (C version available)
+++ lengthreval compiled, 87 + 76 bytes
+++ spmatlength compiled, 41 + 40 bytes
+++ getspmatelem2 compiled, 98 + 84 bytes
+++ findelem2 compiled, 34 + 16 bytes
+++ findrow not compiled (C version available)
+++ mkempspmat compiled, 10 + 12 bytes
+++ copy_vect compiled, 17 + 16 bytes
+++ fullcopy not compiled (C version available)
+++ letmtr3 not compiled (C version available)
+++ setspmatelem2 compiled, 44 + 32 bytes
+++ empty compiled, 23 + 16 bytes
+++ sparpri compiled, 36 + 32 bytes
+++ myspmatpri2 compiled, 49 + 28 bytes
+++ smtp compiled, 127 + 56 bytes
+++ tp compiled, 13 + 28 bytes
+++ transmat1 compiled, 118 + 48 bytes
+++ sptransmat compiled, 114 + 32 bytes
+++ trans compiled, 66 + 28 bytes
+++ spmatsm compiled, 86 + 48 bytes
+++ matsm1 compiled, 594 + 152 bytes
+++ multsm compiled, 128 + 24 bytes
+++ spmultsm compiled, 79 + 40 bytes
+++ addm compiled, 89 + 36 bytes
+++ addm1 compiled, 36 + 28 bytes
+++ smaddm compiled, 28 + 28 bytes
+++ smaddm2 compiled, 118 + 36 bytes
+++ smaddm1 compiled, 469 + 40 bytes
+++ spmultm compiled, 50 + 36 bytes
+++ spmultm2 compiled, 159 + 48 bytes
+++ spmultm1 compiled, 220 + 48 bytes
+++ checksp compiled, 156 + 28 bytes
+++ sprmcol compiled, 46 + 8 bytes
+++ simpdet compiled, 24 + 48 bytes
+++ spdet compiled, 26 + 20 bytes
+++ mod compiled, 10 + 8 bytes
+++ nsimpdet compiled, 153 + 48 bytes
+++ twodet compiled, 46 + 36 bytes
+++ spaugment compiled, 29 + 16 bytes
+++ swap compiled, 61 + 32 bytes
+++ spgauss compiled, 430 + 76 bytes
+++ sumsol compiled, 78 + 20 bytes

*** local variable slist in procedure sumsol2 not used 
+++ sumsol2 compiled, 138 + 36 bytes
+++ sol compiled, 54 + 28 bytes
+++ spback_sub compiled, 51 + 32 bytes
+++ spmatinverse compiled, 19 + 20 bytes
+++ matinverse compiled, 13 + 24 bytes
+++ simptrace compiled, 64 + 56 bytes
+++ sptrace compiled, 40 + 28 bytes
+++ simpcofactor compiled, 35 + 40 bytes
+++ spremcol compiled, 47 + 20 bytes
+++ spremrow compiled, 10 + 12 bytes
+++ spcofactor compiled, 117 + 80 bytes
+++ rewrite compiled, 210 + 20 bytes
Completed FASL files for "sparsmat"
+++ FASLEND: hits = 495, misses = 147



*** Compiling spmateig ... 


FASLOUT "spmateig": IN files;  or type in expressions
When all done, execute FASLEND;
+++ spmateigen compiled, 790 + 132 bytes
+++ spmateigen1 compiled, 291 + 68 bytes
+++ rank!-eval compiled, 223 + 76 bytes
+++ sprank!-matrix compiled, 110 + 44 bytes
Completed FASL files for "spmateig"
+++ FASLEND: hits = 41, misses = 52



*** Compiling splinalg ... 


FASLOUT "splinalg": IN files;  or type in expressions
When all done, execute FASLEND;
+++ spmake_identity compiled, 51 + 36 bytes
+++ sprow_dim compiled, 14 + 28 bytes
+++ spcol_dim compiled, 15 + 28 bytes
+++ matrixp compiled, 18 + 24 bytes
+++ sparsematp compiled, 7 + 16 bytes
+++ squarep compiled, 32 + 40 bytes
+++ symmetricp compiled, 23 + 28 bytes
+++ spjordan_block compiled, 64 + 32 bytes
+++ spminor compiled, 100 + 72 bytes
+++ spband_matrix compiled, 157 + 68 bytes
+++ spstack_rows compiled, 130 + 84 bytes
+++ spaugment_columns compiled, 219 + 84 bytes

*** local variable he in procedure spget_rows not used 
+++ spget_rows compiled, 134 + 80 bytes

*** local variable nlist in procedure spget_columns not used 
+++ spget_columns compiled, 221 + 84 bytes
+++ spremove_rows compiled, 193 + 92 bytes
+++ spremove_columns compiled, 195 + 92 bytes
+++ spblock_matrix compiled, 179 + 104 bytes
+++ spcreate_row_list compiled, 65 + 28 bytes
+++ spcheck_rows compiled, 75 + 40 bytes
+++ spcheck_cols compiled, 44 + 40 bytes
+++ spno_rows compiled, 20 + 16 bytes
+++ spno_cols compiled, 20 + 16 bytes

*** local variable b in procedure spcopy_into not used 
+++ spcopy_into compiled, 235 + 128 bytes
+++ swaprow compiled, 228 + 16 bytes

*** local variable new_mat in procedure spswap_rows not used 
+++ spswap_rows compiled, 104 + 56 bytes
+++ swapcol compiled, 332 + 24 bytes
+++ spswap_cols compiled, 87 + 56 bytes
+++ spswap_entries compiled, 217 + 96 bytes
+++ rewrite2 compiled, 32 + 8 bytes

*** local variable newrows in procedure expan2 not used 

*** local variable rlist in procedure expan2 not used 
+++ expan2 compiled, 101 + 32 bytes

*** local variable he in procedure spmatrix_augment1 not used 

*** local variable tl in procedure spmatrix_augment1 not used 

*** local variable num in procedure spmatrix_augment1 not used 
+++ spmatrix_augment1 compiled, 156 + 68 bytes

*** local variable tl in procedure spmatrix_stack1 not used 

*** local variable nam in procedure spmatrix_stack1 not used 
+++ spmatrix_stack1 compiled, 203 + 76 bytes
+++ spconst_rows_test compiled, 42 + 36 bytes
+++ spconst_columns_test compiled, 42 + 36 bytes
+++ spextend compiled, 114 + 60 bytes
+++ spdiagonal1 compiled, 141 + 80 bytes

*** local variable b in procedure spdiag not used 
+++ spdiag compiled, 219 + 44 bytes
+++ spadd_rows compiled, 182 + 76 bytes
+++ spadd_columns compiled, 143 + 80 bytes
+++ spadd_to_rows compiled, 174 + 84 bytes
+++ spadd_to_columns compiled, 164 + 84 bytes
+++ spmult_rows compiled, 134 + 76 bytes
+++ spmult_columns compiled, 151 + 80 bytes
+++ spchar_matrix compiled, 39 + 52 bytes
+++ spchar_poly compiled, 17 + 32 bytes
+++ sphermitian_tp compiled, 95 + 72 bytes
+++ spsub_matrix compiled, 18 + 32 bytes
+++ sppivot compiled, 212 + 96 bytes
+++ sprows_pivot compiled, 260 + 120 bytes
+++ spjacobian compiled, 129 + 56 bytes
+++ sphessian compiled, 108 + 60 bytes
+++ spcoeff_matrix1 compiled, 47 + 44 bytes
+++ remove_equals compiled, 76 + 24 bytes
+++ get_variable_list compiled, 22 + 16 bytes
+++ check_linearity compiled, 37 + 24 bytes
+++ spget_a compiled, 94 + 40 bytes
+++ spget_b compiled, 139 + 48 bytes
+++ spget_x compiled, 48 + 32 bytes
+++ get_coeffs compiled, 21 + 36 bytes
+++ spcompanion compiled, 151 + 64 bytes
+++ spfind_companion compiled, 102 + 56 bytes
Completed FASL files for "splinalg"
+++ FASLEND: hits = 768, misses = 130



*** Compiling spludcmp ... 


FASLOUT "spludcmp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ splu_decom compiled, 54 + 68 bytes
+++ spcx_test compiled, 54 + 32 bytes

*** local variable tp_mat2 in procedure spunsymdet not used 

*** local variable col2 in procedure spunsymdet not used 
+++ spunsymdet compiled, 461 + 92 bytes

*** local variable l in procedure spinnerprod not used 

*** local variable s in procedure spinnerprod not used 
+++ spinnerprod compiled, 71 + 20 bytes
+++ spget_l_and_u compiled, 118 + 32 bytes
+++ spcompdet compiled, 782 + 120 bytes
+++ spcxinnerprod compiled, 70 + 16 bytes
+++ spcx_row_vec compiled, 43 + 16 bytes
+++ spre_row_vec compiled, 37 + 16 bytes
+++ spim_uncompress compiled, 102 + 52 bytes
+++ spim_compress compiled, 84 + 52 bytes
+++ spconvert compiled, 52 + 36 bytes
Completed FASL files for "spludcmp"
+++ FASLEND: hits = 103, misses = 53



*** Compiling spchlsky ... 


FASLOUT "spchlsky": IN files;  or type in expressions
When all done, execute FASLEND;
+++ spcholesky compiled, 243 + 128 bytes
+++ spget_l compiled, 98 + 40 bytes
Completed FASL files for "spchlsky"
+++ FASLEND: hits = 13, misses = 33



*** Compiling spsvd ... 


FASLOUT "spsvd": IN files;  or type in expressions
When all done, execute FASLEND;
+++ spsvd compiled, 3012 + 176 bytes
+++ spq_to_diag_matrix compiled, 57 + 32 bytes
+++ spden_to_sp compiled, 68 + 32 bytes
+++ sprd_copy_mat compiled, 74 + 44 bytes
+++ sppseudo_inverse compiled, 36 + 32 bytes
Completed FASL files for "spsvd"
+++ FASLEND: hits = 46, misses = 44



*** Compiling spgrmshm ... 


FASLOUT "spgrmshm": IN files;  or type in expressions
When all done, execute FASLEND;
+++ spgram_schmidt compiled, 38 + 24 bytes
+++ spconvert_to_sq compiled, 68 + 28 bytes
+++ spconvert_from_sq compiled, 86 + 36 bytes
Completed FASL files for "spgrmshm"
+++ FASLEND: hits = 15, misses = 20

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling spde ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "spde": IN files;  or type in expressions
When all done, execute FASLEND;
+++ prload compiled, 1 + 8 bytes
+++ ordp compiled, 144 + 32 bytes
+++ ordpa compiled as link to ordp
+++ makeset compiled, 23 + 12 bytes
+++ lastmem compiled, 9 + 8 bytes
+++ xmember compiled, 9 + 8 bytes
+++ sacar compiled, 24 + 8 bytes
+++ scar compiled, 18 + 8 bytes
+++ inter compiled, 23 + 12 bytes
+++ compl compiled, 23 + 12 bytes
+++ vlist compiled, 22 + 12 bytes
+++ delnil compiled, 21 + 12 bytes
+++ prlist compiled, 22 + 12 bytes
+++ appends compiled, 7 + 8 bytes
+++ propa compiled, 16 + 12 bytes
+++ sortx compiled, 16 + 12 bytes
+++ maxmem compiled, 33 + 8 bytes
+++ maxl compiled, 24 + 16 bytes
+++ suml compiled, 24 + 12 bytes
+++ spde!-subsetp compiled, 14 + 12 bytes
+++ product!-set2 compiled, 34 + 8 bytes
+++ leqgrt compiled, 17 + 8 bytes
+++ fidep compiled, 13 + 12 bytes
+++ mkdep compiled, 19 + 16 bytes
+++ rmdep compiled, 20 + 16 bytes
+++ blanks compiled, 27 + 24 bytes
+++ terpri2 compiled, 5 + 8 bytes
+++ lcf compiled, 15 + 12 bytes
+++ minus!-f compiled, 6 + 20 bytes
+++ lengthn compiled, 20 + 12 bytes
+++ lengthf compiled, 143 + 88 bytes
+++ diford compiled, 4 + 12 bytes
+++ adiff compiled, 69 + 20 bytes
+++ sub!-int!-df compiled, 20 + 20 bytes
+++ subintf compiled, 30 + 32 bytes
+++ monop compiled, 19 + 12 bytes
+++ solvef compiled, 6 + 16 bytes
+++ comfacn compiled, 4 + 16 bytes
+++ remfacn compiled, 7 + 20 bytes
+++ ldf!-mvar compiled, 11 + 12 bytes
+++ ldf!-fvar compiled, 38 + 16 bytes
+++ ldf!-fvar!-part compiled, 29 + 12 bytes
+++ ldf!-dep!-var compiled, 35 + 20 bytes
+++ ldf!-pow!-var compiled, 52 + 28 bytes
+++ ldf!-deg compiled, 40 + 16 bytes
+++ ldf!-spf!-var compiled, 60 + 36 bytes
+++ ldf!-all!-var compiled, 13 + 28 bytes
+++ ldf!-sep!-var compiled, 13 + 24 bytes
+++ ldf!-int!-var compiled, 30 + 28 bytes
+++ ldf!-int compiled, 93 + 72 bytes
+++ ldf!-df!-diff compiled, 319 + 60 bytes
+++ ldf!-sub!-var compiled, 50 + 32 bytes
+++ ldf!-simp compiled, 39 + 36 bytes
+++ ldf!-sep compiled, 78 + 40 bytes
+++ ldf!-subf0 compiled, 39 + 20 bytes
+++ ldt!-tvar compiled, 10 + 12 bytes
+++ ldt!-dfvar compiled, 11 + 16 bytes
+++ ldt!-dep compiled, 11 + 16 bytes
+++ ldt!-subt0 compiled, 8 + 16 bytes
+++ cresys compiled, 745 + 192 bytes
+++ totder compiled, 93 + 64 bytes
+++ zeta!* compiled, 367 + 124 bytes
+++ simpu compiled, 17 + 24 bytes
+++ coeff!-all compiled, 36 + 36 bytes
+++ splitrec compiled, 87 + 24 bytes
+++ find!-m compiled, 41 + 24 bytes
+++ find!-n compiled, 66 + 36 bytes
+++ rule0 compiled, 33 + 20 bytes
+++ rule1 compiled, 54 + 36 bytes
+++ rule1!-diff compiled, 68 + 36 bytes
+++ rulec compiled, 101 + 52 bytes
+++ ruledf compiled, 106 + 48 bytes
+++ ruledf!-diff compiled, 90 + 44 bytes
+++ rule!-int compiled, 56 + 44 bytes
+++ simpsys0 compiled, 183 + 92 bytes
+++ simpsys!-rdep compiled, 185 + 100 bytes
+++ simpsys!-sep compiled, 204 + 112 bytes
+++ simpsys!-sub compiled, 145 + 76 bytes
+++ simpsys compiled, 281 + 172 bytes
+++ crepol compiled, 127 + 56 bytes
+++ cpar compiled, 43 + 36 bytes
+++ makeset!-c!-x compiled, 23 + 16 bytes
+++ member!-c!-x compiled, 13 + 12 bytes
+++ equal!-c!-x compiled, 45 + 28 bytes
+++ numgen compiled, 5 + 16 bytes
+++ gengen compiled, 483 + 132 bytes
+++ comm compiled, 211 + 88 bytes
+++ result compiled, 147 + 116 bytes
+++ prsys!* compiled, 17 + 20 bytes
+++ prsys compiled, 148 + 120 bytes
+++ prrule compiled, 77 + 60 bytes
+++ prtlist compiled, 14 + 36 bytes
+++ write!-df!-sub compiled, 89 + 64 bytes
+++ prgen compiled, 562 + 212 bytes
+++ comm!-tab compiled, 453 + 176 bytes
+++ write!-dep compiled, 61 + 40 bytes
+++ find!-nfun compiled, 48 + 28 bytes
Completed FASL files for "spde"
+++ FASLEND: hits = 961, misses = 242
Fast-loading "./reduce.img(spde)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling specfn ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "specfn": IN files;  or type in expressions
When all done, execute FASLEND;
+++ complex!*on!*switch compiled, 35 + 48 bytes
+++ complex!*off!*switch compiled, 35 + 48 bytes
+++ complex!*restore!*switch compiled, 57 + 44 bytes
Completed FASL files for "specfn"
+++ FASLEND: hits = 386, misses = 106
Fast-loading "./reduce.img(specfn)"



*** Compiling sfconsts ... 


FASLOUT "sfconsts": IN files;  or type in expressions
When all done, execute FASLEND;
+++ compute_euler_gamma compiled, 8 + 28 bytes
+++ compute_catalan compiled, 81 + 52 bytes
+++ compute_khinchin compiled, 17 + 36 bytes
+++ compute_khinchin1 compiled, 259 + 116 bytes
+++ zetaprime compiled, 364 + 120 bytes
+++ intlog compiled, 19 + 16 bytes
+++ intlog1 compiled, 108 + 48 bytes
Completed FASL files for "sfconsts"
+++ FASLEND: hits = 91, misses = 54



*** Compiling sfgen ... 


FASLOUT "sfgen": IN files;  or type in expressions
When all done, execute FASLEND;
+++ sf!*assoc compiled, 18 + 12 bytes
+++ sf!*multi!*assoc!*comparator compiled, 30 + 16 bytes
+++ sf!*multi!*assoc compiled, 18 + 12 bytes
+++ sf!*do!*eval compiled, 13 + 24 bytes
+++ sf!*eval compiled, 138 + 60 bytes
+++ complex!*off!*switch compiled, 35 + 48 bytes
+++ complex!*restore!*switch compiled, 57 + 44 bytes
Completed FASL files for "sfgen"
+++ FASLEND: hits = 49, misses = 38



*** Compiling sfbern ... 


FASLOUT "sfbern": IN files;  or type in expressions
When all done, execute FASLEND;
+++ bernoulli!*calc compiled, 62 + 68 bytes
+++ retrieve!*bern compiled, 94 + 72 bytes
+++ bern!*calc compiled, 41 + 40 bytes
+++ nearest!-int!-to!-bf compiled, 19 + 32 bytes
+++ multi!*bern compiled, 559 + 168 bytes
+++ single!*bern compiled, 501 + 160 bytes
+++ euler_aux compiled, 98 + 32 bytes
Completed FASL files for "sfbern"
+++ FASLEND: hits = 214, misses = 90



*** Compiling dilog ... 


FASLOUT "dilog": IN files;  or type in expressions
When all done, execute FASLEND;
+++ compute_dilog compiled, 449 + 132 bytes
+++ compute_lerch_phi compiled, 58 + 40 bytes
Completed FASL files for "dilog"
+++ FASLEND: hits = 303, misses = 59



*** Compiling sfbinom ... 


FASLOUT "sfbinom": IN files;  or type in expressions
When all done, execute FASLEND;
+++ calc_stirling2 compiled, 88 + 64 bytes
+++ binomial_row compiled, 54 + 24 bytes
+++ motzkin compiled, 81 + 32 bytes
Completed FASL files for "sfbinom"
+++ FASLEND: hits = 351, misses = 63



*** Compiling sfpolys ... 


FASLOUT "sfpolys": IN files;  or type in expressions
When all done, execute FASLEND;
+++ monomial_base compiled, 63 + 44 bytes
+++ trigonometric_base compiled, 127 + 60 bytes
+++ bernstein_base compiled, 120 + 52 bytes
+++ legendre_base compiled, 64 + 40 bytes
+++ legendre_base1 compiled, 308 + 60 bytes
+++ laguerre_base compiled, 27 + 28 bytes
+++ laguerre_base1 compiled, 108 + 56 bytes
+++ hermite_base compiled, 19 + 28 bytes
+++ hermite_base1 compiled, 68 + 52 bytes
+++ chebyshev_base_t compiled, 15 + 20 bytes
+++ chebyshev_base_t1 compiled, 60 + 52 bytes
+++ chebyshev_base_u compiled, 19 + 28 bytes
+++ gegenbauer_base1 compiled, 110 + 56 bytes
+++ gegenbauer_base compiled, 26 + 28 bytes
+++ fibonacci compiled, 61 + 32 bytes
+++ fib_aux compiled, 20 + 16 bytes
+++ fib_aux_aux compiled, 45 + 16 bytes
+++ fibonaccip compiled, 107 + 52 bytes
Completed FASL files for "sfpolys"
+++ FASLEND: hits = 3260, misses = 150



*** Compiling sfsums ... 


FASLOUT "sfsums": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "sfsums"
+++ FASLEND: hits = 769, misses = 42



*** Compiling simpfact ... 


FASLOUT "simpfact": IN files;  or type in expressions
When all done, execute FASLEND;
+++ int_simplify_factorial compiled, 210 + 76 bytes
+++ test_for_expt compiled, 28 + 20 bytes
+++ convert_to_oddexpt compiled, 39 + 40 bytes
+++ gothru_numerator compiled, 70 + 28 bytes
+++ gothru_denominator compiled, 61 + 24 bytes
+++ oddexpt_test compiled, 50 + 28 bytes
+++ compare_factorial compiled, 146 + 36 bytes
+++ compare_numoddexptfactorial compiled, 156 + 52 bytes
+++ simplify_sqrt1 compiled, 73 + 40 bytes
+++ simplify_sqrt2 compiled, 76 + 28 bytes
+++ simplify1 compiled, 64 + 32 bytes
+++ simplify2 compiled, 68 + 32 bytes
+++ compare_denomoddexptfactorial compiled, 156 + 52 bytes
+++ sqrt_test compiled, 9 + 16 bytes
+++ not_int_or_sqrt compiled, 22 + 20 bytes
+++ simplify_sqrt3 compiled, 72 + 28 bytes
+++ simplify_sqrt4 compiled, 87 + 44 bytes
+++ simplify3 compiled, 64 + 32 bytes
+++ simplify4 compiled, 68 + 32 bytes
+++ compare_bothoddexptfactorial compiled, 432 + 60 bytes
+++ simplify_sqrt5 compiled, 100 + 44 bytes
+++ simplify_sqrt6 compiled, 97 + 44 bytes
+++ simplify_sqrt7 compiled, 93 + 44 bytes
+++ simplify_sqrt8 compiled, 104 + 44 bytes
+++ simplify5 compiled, 60 + 28 bytes
+++ simplify6 compiled, 64 + 28 bytes
+++ test_for_facts compiled, 12 + 20 bytes
+++ test_num compiled, 56 + 24 bytes
+++ test_denom compiled, 56 + 24 bytes
Completed FASL files for "simpfact"
+++ FASLEND: hits = 318, misses = 64



*** Compiling harmonic ... 


FASLOUT "harmonic": IN files;  or type in expressions
When all done, execute FASLEND;
+++ solidharmonicy compiled, 580 + 116 bytes
+++ sphericalharmonicy compiled, 40 + 28 bytes
Completed FASL files for "harmonic"
+++ FASLEND: hits = 12, misses = 33



*** Compiling jsymbols ... 


FASLOUT "jsymbols": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(solve)"
Fast-loading "./reduce.img(solve1)"
Fast-loading "./reduce.img(ppsoln)"
Fast-loading "./reduce.img(solvelnr)"
Fast-loading "./reduce.img(glsolve)"
Fast-loading "./reduce.img(solvealg)"
Fast-loading "./reduce.img(solvetab)"
Fast-loading "./reduce.img(quartic)"
Fast-loading "./reduce.img(ineq)"
Fast-loading "./reduce.img(linineq)"
Fast-loading "./reduce.img(liqsimp1)"
Fast-loading "./reduce.img(liqsimp2)"
Fast-loading "./reduce.img(polineq)"
+++ clean_up_sqrt compiled, 30 + 16 bytes
+++ collect_sqrt compiled, 113 + 32 bytes
+++ threejsymbol compiled, 2872 + 184 bytes
+++ !*3j!-symbol!:sign!* compiled, 49 + 56 bytes
+++ !*3j!-symbol!:one!-term!* compiled, 247 + 48 bytes
+++ square_racah_delta compiled, 70 + 40 bytes
+++ racah_w compiled, 588 + 100 bytes
+++ necess_6j compiled, 337 + 56 bytes
+++ aconds!-6j compiled, 375 + 40 bytes
+++ conds!-6j compiled, 383 + 40 bytes
+++ conds!-3j compiled, 167 + 40 bytes
+++ findinterval compiled, 89 + 72 bytes
+++ findinterval1 compiled, 104 + 44 bytes
+++ fancy!-clebsch_gordon compiled, 70 + 40 bytes
+++ fancy!-threejsymbol compiled, 12 + 12 bytes
+++ fancy!-sixjsymbol compiled, 12 + 16 bytes
+++ fancy!-ninejsymbol compiled, 17 + 16 bytes
Completed FASL files for "jsymbols"
+++ FASLEND: hits = 392, misses = 124



*** Compiling recsimpl ... 


FASLOUT "recsimpl": IN files;  or type in expressions
When all done, execute FASLEND;
+++ trim compiled, 54 + 36 bytes
+++ adelete compiled, 57 + 32 bytes
+++ recursionsimplify compiled, 616 + 140 bytes
+++ spec_check_n compiled, 15 + 24 bytes
Completed FASL files for "recsimpl"
+++ FASLEND: hits = 1300, misses = 75



*** Compiling sfellip ... 


FASLOUT "sfellip": IN files;  or type in expressions
When all done, execute FASLEND;
+++ agm_function compiled, 156 + 100 bytes
+++ phi_function compiled, 157 + 88 bytes
+++ amplitude compiled, 8 + 16 bytes
+++ num_jacobi compiled, 23 + 40 bytes
+++ num_jacobisn compiled, 33 + 36 bytes
+++ num_jacobicn compiled, 33 + 36 bytes
+++ num_jacobidn compiled, 95 + 68 bytes
+++ otherdn compiled, 146 + 40 bytes
+++ approx compiled, 31 + 40 bytes
+++ num_jacobicd compiled, 15 + 20 bytes
+++ num_jacobisd compiled, 15 + 20 bytes
+++ num_jacobind compiled, 10 + 20 bytes
+++ num_jacobidc compiled, 15 + 20 bytes
+++ num_jacobinc compiled, 10 + 20 bytes
+++ num_jacobisc compiled, 15 + 20 bytes
+++ num_jacobins compiled, 10 + 20 bytes
+++ num_jacobids compiled, 15 + 20 bytes
+++ num_jacobics compiled, 15 + 20 bytes
Completed FASL files for "sfellip"
+++ FASLEND: hits = 10483, misses = 128



*** Compiling sfellipi ... 


FASLOUT "sfellipi": IN files;  or type in expressions
When all done, execute FASLEND;
+++ landentrans compiled, 167 + 96 bytes
+++ f_function compiled, 130 + 80 bytes
+++ k_function compiled, 44 + 48 bytes
+++ e_function compiled, 397 + 100 bytes
+++ num_theta compiled, 350 + 104 bytes
+++ zeta_function compiled, 126 + 68 bytes
Completed FASL files for "sfellipi"
+++ FASLEND: hits = 1813, misses = 89



*** Compiling sfint ... 


FASLOUT "sfint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ compute_int_functions compiled, 1200 + 176 bytes
Completed FASL files for "sfint"
+++ FASLEND: hits = 700, misses = 73

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling specfn2 ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "specfn2": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(specfn)"
Fast-loading "./reduce.img(sfconsts)"
Fast-loading "./reduce.img(sfgen)"
Fast-loading "./reduce.img(sfbern)"
Fast-loading "./reduce.img(dilog)"
Fast-loading "./reduce.img(sfbinom)"
Fast-loading "./reduce.img(sfpolys)"
Fast-loading "./reduce.img(sfsums)"
Fast-loading "./reduce.img(simpfact)"
Fast-loading "./reduce.img(harmonic)"
Fast-loading "./reduce.img(jsymbols)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(solve)"
Fast-loading "./reduce.img(solve1)"
Fast-loading "./reduce.img(ppsoln)"
Fast-loading "./reduce.img(solvelnr)"
Fast-loading "./reduce.img(glsolve)"
Fast-loading "./reduce.img(solvealg)"
Fast-loading "./reduce.img(solvetab)"
Fast-loading "./reduce.img(quartic)"
Fast-loading "./reduce.img(ineq)"
Fast-loading "./reduce.img(linineq)"
Fast-loading "./reduce.img(liqsimp1)"
Fast-loading "./reduce.img(liqsimp2)"
Fast-loading "./reduce.img(polineq)"
Fast-loading "./reduce.img(recsimpl)"
Fast-loading "./reduce.img(sfellip)"
Fast-loading "./reduce.img(sfellipi)"
Fast-loading "./reduce.img(sfint)"
+++ multpochh compiled, 38 + 32 bytes
+++ simpfunc compiled, 20 + 24 bytes
+++ subsqnew compiled, 22 + 20 bytes
+++ expdeg compiled, 34 + 32 bytes
+++ expdeg1 compiled, 15 + 32 bytes
+++ listplus compiled, 41 + 16 bytes
+++ parfool compiled, 21 + 16 bytes
+++ znak compiled, 51 + 20 bytes
+++ sdiff compiled, 49 + 56 bytes
+++ derivativesq compiled, 17 + 24 bytes
+++ addend compiled, 58 + 16 bytes
+++ parlistfool compiled, 17 + 24 bytes
+++ listparfool compiled, 17 + 24 bytes
+++ listfool compiled, 20 + 20 bytes
+++ listfooltwo compiled, 14 + 16 bytes
+++ redpar1 compiled, 23 + 12 bytes
+++ redpar compiled, 30 + 8 bytes
Completed FASL files for "specfn2"
+++ FASLEND: hits = 1157, misses = 128
Fast-loading "./reduce.img(specfn2)"



*** Compiling ghyper ... 


FASLOUT "ghyper": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpghf compiled, 136 + 52 bytes
+++ ghfexit compiled, 100 + 28 bytes
+++ listmaxsq compiled, 43 + 8 bytes
+++ ghfpolynomp compiled, 45 + 20 bytes
+++ polynom compiled, 90 + 56 bytes
+++ lowering1 compiled, 117 + 36 bytes
+++ lowering2 compiled, 72 + 32 bytes
+++ listnumberp compiled, 14 + 16 bytes
+++ lowering3 compiled, 341 + 32 bytes
+++ ghfsq compiled, 563 + 132 bytes
+++ ghfmid compiled, 74 + 40 bytes
+++ formulaformidcase compiled, 578 + 104 bytes

*** local variable a in procedure ghf01 not used 
+++ ghf01 compiled, 141 + 72 bytes
+++ ghf11 compiled, 228 + 108 bytes
+++ ghf21 compiled, 414 + 112 bytes
+++ formula136 compiled, 100 + 56 bytes
+++ ghf12 compiled, 180 + 96 bytes
+++ hypergeom compiled, 186 + 52 bytes
+++ permutationof compiled, 14 + 16 bytes
Completed FASL files for "ghyper"
+++ FASLEND: hits = 2896, misses = 151



*** Compiling meijerg ... 


FASLOUT "meijerg": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpmeijerg compiled, 256 + 52 bytes
+++ gfmsq compiled, 660 + 188 bytes
+++ gfminvers compiled, 188 + 32 bytes
+++ f6 compiled, 47 + 56 bytes
+++ f8 compiled, 52 + 56 bytes
+++ simpgtoh compiled, 206 + 28 bytes
+++ fromgtoh compiled, 101 + 44 bytes
+++ gfmexit compiled, 238 + 32 bytes
+++ gfmexitinvers compiled, 182 + 28 bytes
+++ allsimplpoles compiled, 41 + 24 bytes
+++ infinitysimplpoles compiled, 752 + 60 bytes
+++ q2p1m1n0 compiled, 33 + 36 bytes
+++ f7 compiled, 66 + 68 bytes
+++ q2p1m2n0 compiled, 31 + 28 bytes
+++ f9 compiled, 59 + 64 bytes
+++ f11 compiled, 58 + 52 bytes
+++ q2p1m2n1 compiled, 44 + 32 bytes
+++ f10 compiled, 65 + 68 bytes
+++ q3p1m2n1 compiled, 231 + 56 bytes
+++ f34 compiled, 114 + 80 bytes
+++ f35 compiled, 92 + 68 bytes
+++ f33 compiled, 154 + 76 bytes
+++ f32 compiled, 76 + 52 bytes
+++ q3p1m2n0 compiled, 123 + 52 bytes
+++ f29 compiled, 47 + 56 bytes
+++ f30 compiled, 153 + 72 bytes
+++ f31 compiled, 75 + 52 bytes
+++ q3p1m1n1 compiled, 103 + 48 bytes
+++ f26 compiled, 73 + 48 bytes
+++ f27 compiled, 71 + 44 bytes
+++ f28 compiled, 57 + 56 bytes
+++ q3p1m3n0 compiled, 66 + 28 bytes
+++ f36 compiled, 75 + 52 bytes
+++ q3p1m3n1 compiled, 160 + 40 bytes
+++ f38 compiled, 157 + 72 bytes
+++ f39 compiled, 122 + 84 bytes
+++ gfmlogcase compiled, 102 + 40 bytes

*** array res redefined 
+++ allpoles compiled, 193 + 48 bytes
+++ logcase compiled, 104 + 24 bytes
+++ ordern compiled, 37 + 20 bytes
+++ sortpoles compiled, 25 + 12 bytes
+++ gfmlogcasemult compiled, 36 + 20 bytes
+++ groupresudes compiled, 29 + 28 bytes
+++ simplepoles compiled, 29 + 24 bytes
+++ specialtransf compiled, 112 + 44 bytes
+++ findtwoparams compiled, 46 + 20 bytes
+++ multpoles compiled, 54 + 32 bytes
+++ multresude compiled, 201 + 84 bytes
+++ findresude compiled, 63 + 44 bytes
+++ seriesfordegree compiled, 67 + 56 bytes
+++ listtaylornom compiled, 18 + 20 bytes
+++ multlistasym compiled, 12 + 16 bytes
+++ multasym compiled, 66 + 56 bytes
+++ oldpolstack compiled, 51 + 48 bytes
+++ listtaylorden compiled, 18 + 20 bytes
+++ taylornom compiled, 97 + 72 bytes
+++ taylorden compiled, 82 + 72 bytes
+++ inversepol compiled, 118 + 68 bytes
+++ taylorgamma compiled, 60 + 48 bytes
+++ gammatopsi compiled, 56 + 36 bytes
Completed FASL files for "meijerg"
+++ FASLEND: hits = 763, misses = 177

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling specfaux ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "specfaux": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(specfn)"
Fast-loading "./reduce.img(sfconsts)"
Fast-loading "./reduce.img(sfgen)"
Fast-loading "./reduce.img(sfbern)"
Fast-loading "./reduce.img(dilog)"
Fast-loading "./reduce.img(sfbinom)"
Fast-loading "./reduce.img(sfpolys)"
Fast-loading "./reduce.img(sfsums)"
Fast-loading "./reduce.img(simpfact)"
Fast-loading "./reduce.img(harmonic)"
Fast-loading "./reduce.img(jsymbols)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(solve)"
Fast-loading "./reduce.img(solve1)"
Fast-loading "./reduce.img(ppsoln)"
Fast-loading "./reduce.img(solvelnr)"
Fast-loading "./reduce.img(glsolve)"
Fast-loading "./reduce.img(solvealg)"
Fast-loading "./reduce.img(solvetab)"
Fast-loading "./reduce.img(quartic)"
Fast-loading "./reduce.img(ineq)"
Fast-loading "./reduce.img(linineq)"
Fast-loading "./reduce.img(liqsimp1)"
Fast-loading "./reduce.img(liqsimp2)"
Fast-loading "./reduce.img(polineq)"
Fast-loading "./reduce.img(recsimpl)"
Fast-loading "./reduce.img(sfellip)"
Fast-loading "./reduce.img(sfellipi)"
Fast-loading "./reduce.img(sfint)"
Completed FASL files for "specfaux"
+++ FASLEND: hits = 2, misses = 9
Fast-loading "./reduce.img(specfaux)"



*** Compiling sfbdata ... 


FASLOUT "sfbdata": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable u in procedure mk-bernoulli not used 
+++ mk!-bernoulli_17ahi99vvpf4 compiled, 22 + 28 bytes
+++ Garbage collection 3 (bignum(352)) after 11.46+0.33 seconds
At gc end about 12.0 Mbytes of 116.0 (10.3%) of heap is in use
+++ save!-bernoulli compiled, 3 + 16 bytes
Completed FASL files for "sfbdata"
+++ FASLEND: hits = 311, misses = 28

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling specbess ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "specbess": IN files;  or type in expressions
When all done, execute FASLEND;
+++ complex!*on!*switch compiled, 35 + 48 bytes
+++ complex!*off!*switch compiled, 35 + 48 bytes
+++ complex!*restore!*switch compiled, 57 + 44 bytes
Completed FASL files for "specbess"
+++ FASLEND: hits = 109, misses = 69
Fast-loading "./reduce.img(specbess)"



*** Compiling sfbes ... 


FASLOUT "sfbes": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cvpr130108 compiled, 409 + 88 bytes
+++ do!*j compiled, 47 + 48 bytes
+++ do!*y compiled, 104 + 64 bytes
+++ do!*i compiled, 47 + 48 bytes
+++ j!*calc!*s compiled, 196 + 112 bytes
+++ new!*bfs declared fluid
+++ j!*calc!*s!*sub compiled, 411 + 128 bytes
+++ asymp!*j!*calc compiled, 256 + 116 bytes
+++ asymp!*y!*calc compiled, 253 + 116 bytes
+++ asymp!*p compiled, 350 + 112 bytes
+++ asymp!*q compiled, 363 + 116 bytes
+++ asymp!*j!*2term compiled, 66 + 52 bytes
+++ asymp!*j!*2term!*modifier compiled, 53 + 48 bytes
+++ y!*calc!*s compiled, 188 + 96 bytes
+++ y!*calc!*s!*sub compiled, 1256 + 168 bytes
+++ i!*calc!*s compiled, 127 + 84 bytes
+++ i!*calc!*s!*sub compiled, 409 + 124 bytes
+++ j!*calc compiled, 470 + 104 bytes
+++ y!*modifier!*calc compiled, 477 + 96 bytes
+++ y!*calc compiled, 547 + 128 bytes
+++ i!*calc compiled, 462 + 100 bytes
+++ k!*calc!*2 compiled, 93 + 60 bytes
+++ y!*reexpress compiled, 81 + 68 bytes
+++ y!*calc!*sc compiled, 233 + 136 bytes
Completed FASL files for "sfbes"
+++ FASLEND: hits = 1581, misses = 145



*** Compiling sfkummer ... 


FASLOUT "sfkummer": IN files;  or type in expressions
When all done, execute FASLEND;
+++ do!*kummerm compiled, 11 + 20 bytes
+++ kummerm!*calc compiled, 77 + 60 bytes

*** nonlocal use of undeclared variable bf*base in procedure kummerm*calc*sub 
+++ bf!*base declared fluid
+++ kummerm!*calc!*sub compiled, 257 + 96 bytes
Completed FASL files for "sfkummer"
+++ FASLEND: hits = 662, misses = 84



*** Compiling sfother ... 


FASLOUT "sfother": IN files;  or type in expressions
When all done, execute FASLEND;
+++ struve_compute_term compiled, 435 + 144 bytes
+++ num_lambert_w compiled, 359 + 120 bytes
Completed FASL files for "sfother"
+++ FASLEND: hits = 1168, misses = 94



*** Compiling sfairy ... 


FASLOUT "sfairy": IN files;  or type in expressions
When all done, execute FASLEND;
+++ myfseries compiled, 151 + 72 bytes
+++ mygseries compiled, 149 + 68 bytes
+++ airya2 compiled, 162 + 84 bytes
+++ asum1 compiled, 201 + 88 bytes
+++ asum2 compiled, 251 + 104 bytes
+++ asum3 compiled, 390 + 96 bytes
+++ asairyam compiled, 180 + 88 bytes
+++ asairyap compiled, 144 + 72 bytes
+++ myfseriesp compiled, 169 + 72 bytes
+++ mygseriesp compiled, 150 + 68 bytes
+++ airyap compiled, 162 + 84 bytes
+++ apsum1 compiled, 271 + 96 bytes
+++ apsum2 compiled, 315 + 116 bytes
+++ apsum3 compiled, 480 + 100 bytes
+++ airyapp compiled, 151 + 88 bytes
+++ airyapm compiled, 171 + 80 bytes
+++ ai_asymptotic compiled, 84 + 68 bytes
+++ num_airy compiled, 448 + 100 bytes
Completed FASL files for "sfairy"
+++ FASLEND: hits = 1172, misses = 81

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling sfgamma ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "sfgamma": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "sfgamma"
+++ FASLEND: hits = 53, misses = 50
Fast-loading "./reduce.img(sfgamma)"



*** Compiling sfgamm ... 


FASLOUT "sfgamm": IN files;  or type in expressions
When all done, execute FASLEND;
+++ do!*gamma compiled, 25 + 40 bytes
+++ gamma!*calc!*s compiled, 112 + 100 bytes
+++ gamma!*calc!*s!*sub compiled, 47 + 44 bytes
+++ log!*gamma compiled, 336 + 168 bytes
+++ loggamma!*calc!*sub compiled, 202 + 76 bytes
+++ gamma!*calc!*sub compiled, 388 + 144 bytes
+++ gamma!*calc compiled, 67 + 72 bytes
+++ do!*pochhammer compiled, 8 + 20 bytes
+++ do!*poch!*conj!*calc compiled, 8 + 20 bytes
+++ pochhammer!*calc compiled, 25 + 32 bytes
+++ pochhammer!*calc!*sub compiled, 68 + 64 bytes
+++ pochhammer!*calc!*sub!*sub!*oldbf compiled, 138 + 64 bytes
+++ pochhammer!*calc!*sub!*sub!*newbf compiled, 155 + 76 bytes
+++ poch!*sub!*1 compiled, 23 + 24 bytes
+++ poch!*sub!*2 compiled, 58 + 28 bytes
+++ poch!*conj!*calc compiled, 63 + 48 bytes
Completed FASL files for "sfgamm"
+++ FASLEND: hits = 2527, misses = 164



*** Compiling sfpsi ... 


FASLOUT "sfpsi": IN files;  or type in expressions
When all done, execute FASLEND;
+++ get!-eulers!-constant compiled, 221 + 92 bytes
+++ printerr compiled as link to rederr
+++ polygamma_aux compiled, 54 + 40 bytes
+++ do!*psi compiled, 7 + 20 bytes
+++ do!*polygamma compiled, 8 + 20 bytes
+++ do!*trigamma!*halves compiled, 7 + 20 bytes
+++ do!*zeta compiled, 96 + 84 bytes
+++ do!*zeta!*pos!*intcalc compiled, 7 + 20 bytes
+++ psi!*calc compiled, 303 + 168 bytes
+++ psi!*calc!*sub compiled, 301 + 112 bytes
+++ polygamma!*aux compiled, 61 + 60 bytes
+++ polygamma!*calc compiled, 130 + 92 bytes
+++ polygamma!*calc!*s compiled, 643 + 180 bytes
+++ trigamma!*halves compiled, 105 + 76 bytes
+++ zeta!*calc compiled, 306 + 124 bytes
+++ zeta!*pos!*intcalc compiled, 55 + 52 bytes
+++ zeta!*error compiled, 25 + 32 bytes
+++ zeta!*general!*calc compiled, 216 + 104 bytes

*** local variable logz in procedure zeta*general*calc*sub not used 
+++ zeta!*general!*calc!*sub compiled, 483 + 112 bytes
+++ raw!*zeta compiled, 77 + 60 bytes
Completed FASL files for "sfpsi"
+++ FASLEND: hits = 2032, misses = 161



*** Compiling sfigamma ... 


FASLOUT "sfigamma": IN files;  or type in expressions
When all done, execute FASLEND;
+++ igamma_iter_series compiled, 80 + 56 bytes
+++ igamma_cont_frac compiled, 62 + 36 bytes
+++ igamma_eval compiled, 218 + 96 bytes
+++ ibeta_cont_frac compiled, 234 + 64 bytes
+++ ibeta_eval compiled, 283 + 128 bytes
Completed FASL files for "sfigamma"
+++ FASLEND: hits = 124, misses = 56

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling tps ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "tps": IN files;  or type in expressions
When all done, execute FASLEND;
+++ constantpsp compiled, 26 + 24 bytes
+++ ps!:getv not compiled (C version available)
+++ ps!:putv compiled, 31 + 32 bytes
+++ ps!:order not compiled (C version available)
+++ ps!:last!-term not compiled (C version available)
+++ ps!:depvar compiled, 15 + 24 bytes
+++ ps!:expansion!-point compiled, 15 + 24 bytes
+++ ps!:value compiled, 19 + 28 bytes
+++ ps!:expression compiled, 15 + 24 bytes
+++ ps!:get!-term not compiled (C version available)
+++ ps!:set!-term compiled, 122 + 68 bytes
+++ pstruncate compiled, 55 + 48 bytes
+++ simppsexplim compiled, 24 + 32 bytes
+++ simpps compiled, 14 + 36 bytes
+++ simpps1 compiled, 65 + 88 bytes
+++ simppsterm compiled, 14 + 36 bytes
+++ simppsterm1 compiled, 56 + 52 bytes
+++ simppsorder compiled, 62 + 64 bytes
+++ simppssetorder compiled, 54 + 56 bytes
+++ simppsexpansionpt compiled, 77 + 64 bytes
+++ simppsdepvar compiled, 69 + 56 bytes
+++ simppsfunction compiled, 42 + 48 bytes
+++ ps!:presimp compiled, 25 + 20 bytes
+++ prepsort compiled, 11 + 24 bytes
+++ !*pre2dp compiled, 36 + 20 bytes
+++ simp!:ps!: compiled, 5 + 16 bytes
+++ simp!:ps1 compiled, 172 + 88 bytes
+++ simppschangevar compiled, 99 + 96 bytes
Completed FASL files for "tps"
+++ FASLEND: hits = 478, misses = 138
Fast-loading "./reduce.img(tps)"



*** Compiling tpscomp ... 


FASLOUT "tpscomp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ps!:compile compiled, 250 + 88 bytes
+++ make!-ps!-id compiled, 163 + 64 bytes
+++ make!-constantps compiled, 64 + 60 bytes
+++ make!-ps compiled, 59 + 56 bytes
+++ ps!:plus!-crule compiled, 225 + 36 bytes
+++ ps!:unary!-crule compiled, 16 + 20 bytes
+++ ps!:minus!-crule compiled, 31 + 24 bytes
+++ ps!:binary!-crule compiled, 28 + 24 bytes
+++ ps!:nary!-crule compiled, 48 + 20 bytes
+++ ps!:times!-crule compiled, 201 + 76 bytes
+++ ps!:quotient!-crule compiled, 252 + 84 bytes
+++ ps!:int!-crule compiled, 129 + 116 bytes
+++ ps!:log!-crule compiled, 82 + 80 bytes
+++ ps!:arg!-values compiled, 87 + 20 bytes
+++ ps!:unknown!-crule compiled, 122 + 100 bytes
+++ ps!:unknown!-term1 compiled, 97 + 88 bytes
+++ ps!:first!-term compiled, 63 + 36 bytes
+++ ps!:differentiate compiled, 40 + 52 bytes
+++ ps!:expt!-crule compiled, 216 + 116 bytes
Completed FASL files for "tpscomp"
+++ FASLEND: hits = 260, misses = 91



*** Compiling tpseval ... 


FASLOUT "tpseval": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ps!:unknown!-order compiled, 31 + 44 bytes
+++ ps!:find!-order compiled, 82 + 64 bytes
+++ ps!:find!-order1 compiled, 105 + 84 bytes
+++ simppsordlim compiled, 24 + 32 bytes
+++ ps!:int!-orderfn compiled, 67 + 64 bytes
+++ ps!:df!-orderfn compiled, 69 + 48 bytes
+++ ps!:quotient!-orderfn compiled, 20 + 24 bytes
+++ ps!:times!-orderfn compiled, 20 + 24 bytes
+++ ps!:plus!-orderfn compiled, 62 + 28 bytes
+++ ps!:minus!-orderfn compiled, 10 + 24 bytes
+++ ps!:difference!-orderfn compiled, 21 + 24 bytes
+++ ps!:sqrt!-orderfn compiled, 32 + 44 bytes
+++ ps!:sqrt!-erule compiled, 108 + 60 bytes
+++ ps!:cbrt!-orderfn compiled, 32 + 44 bytes
+++ ps!:cbrt!-erule compiled, 108 + 60 bytes
+++ ps!:evaluate not compiled (C version available)
+++ ps!:evaluate!-next compiled, 32 + 44 bytes
+++ ps!:plus!-erule compiled, 26 + 20 bytes
+++ ps!:minus!-erule compiled, 6 + 16 bytes
+++ ps!:difference!-erule compiled, 13 + 20 bytes
+++ ps!:times!-erule compiled, 70 + 36 bytes
+++ ps!:quotient!-erule compiled, 75 + 40 bytes
+++ ps!:constmult!-orderfn compiled, 11 + 24 bytes
+++ ps!:constmult!-erule compiled, 9 + 16 bytes
+++ ps!:df!-erule compiled, 89 + 48 bytes
+++ ps!:int!-erule compiled, 52 + 40 bytes
+++ ps!:expt!-orderfn compiled, 44 + 44 bytes
+++ ps!:expt!-erule compiled, 127 + 52 bytes
+++ ps!:exp!-orderfn compiled, 22 + 44 bytes
+++ ps!:exp!-erule compiled, 68 + 48 bytes
Completed FASL files for "tpseval"
+++ FASLEND: hits = 354, misses = 86



*** Compiling tpsdom ... 


FASLOUT "tpsdom": IN files;  or type in expressions
When all done, execute FASLEND;
+++ psintequiv!: compiled, 52 + 32 bytes
+++ i2ps compiled, 1 + 8 bytes
+++ !*d2ps compiled, 11 + 20 bytes

*** local variable u in procedure ps:minusp: not used 
+++ ps!:minusp!: compiled, 1 + 8 bytes
+++ ps!:plus!: compiled, 5 + 16 bytes
+++ ps!:difference!: compiled, 5 + 16 bytes
+++ ps!:times!: compiled, 5 + 16 bytes
+++ ps!:quotient!: compiled, 5 + 16 bytes
+++ ps!:diff!: compiled, 65 + 52 bytes
+++ ps!:depends!-fn compiled, 5 + 16 bytes
+++ ps!:operator!: compiled, 246 + 80 bytes
+++ ps!:zerop!: compiled, 12 + 12 bytes
+++ ps!:onep!: compiled, 5 + 12 bytes
+++ ps!:prepfn!: compiled, 1 + 8 bytes
Completed FASL files for "tpsdom"
+++ FASLEND: hits = 158, misses = 76



*** Compiling tpsfns ... 


FASLOUT "tpsfns": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ps!:expt!: compiled, 74 + 56 bytes
+++ ps!:unary!:fn compiled, 19 + 32 bytes
+++ ps!:cos!: compiled, 4 + 16 bytes
+++ ps!:sin!: compiled, 4 + 16 bytes
+++ ps!:tan!: compiled, 4 + 16 bytes
+++ ps!:log!: compiled, 4 + 16 bytes
+++ ps!:exp!: compiled, 4 + 16 bytes
+++ ps!:cosh!: compiled, 4 + 16 bytes
+++ ps!:sinh!: compiled, 4 + 16 bytes
+++ ps!:tanh!: compiled, 4 + 16 bytes
+++ ps!:asin!: compiled, 4 + 16 bytes
+++ ps!:acos!: compiled, 4 + 16 bytes
+++ ps!:atan!: compiled, 4 + 16 bytes
+++ ps!:asinh!: compiled, 4 + 16 bytes
+++ ps!:acosh!: compiled, 4 + 16 bytes
+++ ps!:atanh!: compiled, 4 + 16 bytes
Completed FASL files for "tpsfns"
+++ FASLEND: hits = 143, misses = 50



*** Compiling tpsrev ... 


FASLOUT "tpsrev": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simppsrev compiled, 14 + 36 bytes
+++ simppsrev1 compiled, 124 + 112 bytes
+++ ps!:generating!-series compiled, 34 + 48 bytes
+++ ps!:set!-rthpow compiled, 105 + 64 bytes
+++ ps!:term!-rthpow compiled, 32 + 24 bytes
+++ ps!:rev!-crule compiled, 52 + 48 bytes
+++ ps!:remove!-constant compiled, 25 + 44 bytes
+++ ps!:rev!-orderfn compiled, 26 + 40 bytes
+++ ps!:rev!-erule compiled, 86 + 64 bytes
+++ ps!:comp!-orderfn compiled, 26 + 32 bytes
+++ ps!:comp!-crule compiled, 62 + 52 bytes
+++ ps!:comp!-erule compiled, 46 + 32 bytes
+++ simppscomp compiled, 14 + 36 bytes
+++ simppscomp1 compiled, 146 + 92 bytes
Completed FASL files for "tpsrev"
+++ FASLEND: hits = 172, misses = 72



*** Compiling tpssum ... 


FASLOUT "tpssum": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ps!:summation!-erule compiled, 99 + 48 bytes
+++ simppssum compiled, 257 + 152 bytes
Completed FASL files for "tpssum"
+++ FASLEND: hits = 22, misses = 31



*** Compiling tpsmisc ... 


FASLOUT "tpsmisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ps!:copy compiled, 21 + 32 bytes
+++ ps!:copy1 compiled, 202 + 84 bytes
+++ ps!:replace compiled, 44 + 12 bytes
+++ ps!:copy2 compiled, 141 + 48 bytes
+++ fix!-up!-links compiled, 55 + 32 bytes
+++ simppscopy compiled, 21 + 40 bytes
Completed FASL files for "tpsmisc"
+++ FASLEND: hits = 51, misses = 30



*** Compiling tpsconv ... 


FASLOUT "tpsconv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ prep!:ps compiled, 158 + 68 bytes
+++ ps!:mkpow compiled, 29 + 24 bytes
+++ ps!:mkvar compiled, 88 + 48 bytes
+++ ps!:big!-o compiled, 19 + 36 bytes
+++ ps!:print1 compiled, 29 + 28 bytes
+++ ps!:print compiled, 70 + 80 bytes
+++ ps!:print0 compiled, 4 + 16 bytes
Completed FASL files for "tpsconv"
+++ FASLEND: hits = 63, misses = 43

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling limits ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "limits": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(tps)"
Fast-loading "./reduce.img(tpscomp)"
Fast-loading "./reduce.img(tpseval)"
Fast-loading "./reduce.img(tpsdom)"
Fast-loading "./reduce.img(tpsfns)"
Fast-loading "./reduce.img(tpsrev)"
Fast-loading "./reduce.img(tpssum)"
Fast-loading "./reduce.img(tpsmisc)"
Fast-loading "./reduce.img(tpsconv)"
+++ limit2 compiled, 18 + 24 bytes
+++ limit!+ compiled, 66 + 72 bytes
+++ limit!- compiled, 66 + 72 bytes
+++ limit compiled, 35 + 44 bytes
+++ limlogsort compiled, 21 + 36 bytes
+++ countof compiled, 19 + 16 bytes
+++ simplimit compiled, 102 + 92 bytes
+++ limit0 compiled, 131 + 96 bytes
+++ limit00 compiled, 181 + 116 bytes
+++ factrprep compiled, 10 + 28 bytes
+++ expt2exp compiled, 55 + 36 bytes
+++ xpwrlcmp compiled, 36 + 32 bytes
+++ getdenomx compiled, 32 + 32 bytes
+++ getdenom compiled, 23 + 20 bytes
+++ pwrdenp compiled, 82 + 44 bytes
+++ limitset compiled, 71 + 48 bytes
+++ limit1t compiled, 147 + 96 bytes
+++ limit1p compiled, 82 + 68 bytes
+++ crlimitset compiled, 166 + 84 bytes
+++ topevalsetsq compiled, 73 + 72 bytes
+++ limsimp compiled, 102 + 60 bytes
+++ lminus2 compiled, 19 + 12 bytes
+++ ltimesfn compiled, 6 + 16 bytes
+++ lquotfn compiled, 8 + 12 bytes
+++ lexptfn compiled, 24 + 32 bytes
+++ specchk compiled, 182 + 40 bytes
+++ trimq compiled, 22 + 20 bytes
+++ triml compiled, 16 + 16 bytes
+++ limsort compiled, 72 + 24 bytes
+++ logcomb compiled, 65 + 32 bytes
+++ logjoin compiled, 80 + 32 bytes
+++ timsift compiled, 17 + 20 bytes
+++ lplusfn compiled, 230 + 72 bytes
+++ minfix compiled, 15 + 12 bytes
+++ qform compiled, 31 + 20 bytes
+++ lhopital compiled, 94 + 72 bytes
+++ notval compiled, 10 + 24 bytes
+++ infinp compiled, 5 + 12 bytes
+++ specval compiled, 9 + 16 bytes
+++ speccomb compiled, 120 + 76 bytes
+++ limfix compiled, 14 + 16 bytes
+++ limitest compiled, 79 + 36 bytes
+++ exptest compiled, 69 + 36 bytes
+++ limlabs compiled, 37 + 28 bytes
+++ limplus compiled, 30 + 24 bytes
+++ limplus1 compiled, 42 + 28 bytes
+++ limtimes compiled, 30 + 24 bytes
+++ mkalg compiled, 12 + 24 bytes
+++ ltimes1 compiled, 87 + 52 bytes
+++ limposp compiled, 19 + 20 bytes
+++ lminus compiled, 8 + 20 bytes
+++ lminus1 compiled, 24 + 32 bytes
+++ limquot compiled, 17 + 20 bytes
+++ limquot1 compiled, 69 + 44 bytes
+++ fixlog compiled, 13 + 20 bytes
+++ fixsqrt compiled, 13 + 20 bytes
+++ fixsin compiled, 7 + 16 bytes
+++ fixcosh compiled, 7 + 16 bytes
+++ fixsinh compiled, 6 + 12 bytes
+++ fixexp compiled, 11 + 20 bytes
Completed FASL files for "limits"
+++ FASLEND: hits = 810, misses = 190
Fast-loading "./reduce.img(limits)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling defint ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "defint": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(limits)"
Fast-loading "./reduce.img(tps)"
Fast-loading "./reduce.img(tpscomp)"
Fast-loading "./reduce.img(tpseval)"
Fast-loading "./reduce.img(tpsdom)"
Fast-loading "./reduce.img(tpsfns)"
Fast-loading "./reduce.img(tpsrev)"
Fast-loading "./reduce.img(tpssum)"
Fast-loading "./reduce.img(tpsmisc)"
Fast-loading "./reduce.img(tpsconv)"
Fast-loading "./reduce.img(specfn2)"
Fast-loading "./reduce.img(specfn)"
Fast-loading "./reduce.img(sfconsts)"
Fast-loading "./reduce.img(sfgen)"
Fast-loading "./reduce.img(sfbern)"
Fast-loading "./reduce.img(dilog)"
Fast-loading "./reduce.img(sfbinom)"
Fast-loading "./reduce.img(sfpolys)"
Fast-loading "./reduce.img(sfsums)"
Fast-loading "./reduce.img(simpfact)"
Fast-loading "./reduce.img(harmonic)"
Fast-loading "./reduce.img(jsymbols)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(solve)"
Fast-loading "./reduce.img(solve1)"
Fast-loading "./reduce.img(ppsoln)"
Fast-loading "./reduce.img(solvelnr)"
Fast-loading "./reduce.img(glsolve)"
Fast-loading "./reduce.img(solvealg)"
Fast-loading "./reduce.img(solvetab)"
Fast-loading "./reduce.img(quartic)"
Fast-loading "./reduce.img(ineq)"
Fast-loading "./reduce.img(linineq)"
Fast-loading "./reduce.img(liqsimp1)"
Fast-loading "./reduce.img(liqsimp2)"
Fast-loading "./reduce.img(polineq)"
Fast-loading "./reduce.img(recsimpl)"
Fast-loading "./reduce.img(sfellip)"
Fast-loading "./reduce.img(sfellipi)"
Fast-loading "./reduce.img(sfint)"
Fast-loading "./reduce.img(ghyper)"
Fast-loading "./reduce.img(meijerg)"
Completed FASL files for "defint"
+++ FASLEND: hits = 6, misses = 43
Fast-loading "./reduce.img(defint)"



*** Compiling definta ... 


FASLOUT "definta": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rdwrap compiled, 140 + 80 bytes
+++ rdwrap!-expt compiled, 26 + 20 bytes
+++ rdwrap2 compiled, 14 + 12 bytes
+++ rdwrap!* compiled, 7 + 16 bytes
+++ rdunwrap compiled, 16 + 28 bytes
+++ expt!-int compiled, 7 + 8 bytes
+++ simpintgg compiled, 17 + 20 bytes
+++ intggg compiled, 1635 + 204 bytes
+++ mgretro compiled, 176 + 16 bytes
+++ intg compiled, 289 + 72 bytes
+++ simp_expt compiled, 298 + 64 bytes
+++ test_1 compiled, 339 + 120 bytes
+++ test2 compiled, 173 + 76 bytes
+++ validity_check compiled, 954 + 136 bytes
+++ tst1a compiled, 104 + 36 bytes
+++ tst1b compiled, 104 + 36 bytes
+++ tst2 compiled, 152 + 68 bytes
+++ tst3 compiled, 163 + 76 bytes
+++ tst4 compiled, 153 + 84 bytes
+++ tst5 compiled, 145 + 84 bytes
+++ tst6 compiled, 145 + 84 bytes
+++ tst7 compiled, 141 + 84 bytes
+++ tst8 compiled, 138 + 76 bytes
+++ tst9 compiled, 139 + 76 bytes
+++ tst10 compiled, 117 + 108 bytes
+++ tst11 compiled, 83 + 76 bytes
+++ tst12 compiled, 114 + 108 bytes
+++ tst13 compiled, 83 + 76 bytes
+++ tst14 compiled, 339 + 136 bytes
+++ tst15 compiled, 468 + 136 bytes
+++ bastab compiled, 19 + 24 bytes
+++ subpar compiled, 60 + 16 bytes
+++ sublist1 compiled, 25 + 12 bytes
+++ subpref1 compiled, 23 + 12 bytes
+++ subpref compiled, 10 + 20 bytes
+++ sublist compiled, 18 + 16 bytes
+++ trpar compiled, 83 + 52 bytes
+++ modintgg compiled, 37 + 32 bytes
+++ change compiled, 50 + 12 bytes
+++ cong compiled, 191 + 24 bytes
+++ modintg compiled, 20 + 28 bytes
+++ ccgf compiled, 26 + 24 bytes
+++ vgg compiled, 29 + 24 bytes
+++ nugg compiled, 29 + 32 bytes
+++ mugf compiled, 68 + 36 bytes
+++ coefintg compiled, 114 + 48 bytes
+++ deltagg compiled, 240 + 28 bytes
+++ redpargf compiled, 51 + 16 bytes
+++ arggf compiled, 103 + 28 bytes
+++ indgf compiled, 78 + 8 bytes
+++ dubdeg compiled, 93 + 28 bytes
+++ delta compiled, 41 + 24 bytes
+++ delta0 compiled, 23 + 28 bytes
+++ nump compiled, 13 + 8 bytes
Completed FASL files for "definta"
+++ FASLEND: hits = 1433, misses = 235



*** Compiling defintc ... 


FASLOUT "defintc": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "defintc"
+++ FASLEND: hits = 481, misses = 26



*** Compiling defintf ... 


FASLOUT "defintf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ test_arg compiled, 66 + 52 bytes
+++ transform_test compiled, 88 + 32 bytes
+++ sigma_tst compiled, 48 + 48 bytes
+++ omega_tst compiled, 28 + 36 bytes
Completed FASL files for "defintf"
+++ FASLEND: hits = 2809, misses = 122



*** Compiling definti ... 


FASLOUT "definti": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "definti"
+++ FASLEND: hits = 1487, misses = 71



*** Compiling defint0 ... 


FASLOUT "defint0": IN files;  or type in expressions
When all done, execute FASLEND;
+++ new_defint compiled, 216 + 88 bytes
+++ specfn_test compiled, 29 + 32 bytes
+++ test_prod compiled, 123 + 44 bytes
+++ test_unknown compiled, 26 + 20 bytes
Completed FASL files for "defint0"
+++ FASLEND: hits = 2626, misses = 87



*** Compiling defintd ... 


FASLOUT "defintd": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(sfgamma)"
Fast-loading "./reduce.img(sfgamm)"
Fast-loading "./reduce.img(sfpsi)"
Fast-loading "./reduce.img(sfigamma)"
+++ simpintgggg compiled, 241 + 112 bytes
+++ spec_log compiled, 148 + 32 bytes
+++ new_laplace compiled, 10 + 20 bytes
+++ new_hankel compiled, 10 + 20 bytes
+++ new_y_transform compiled, 10 + 20 bytes
+++ new_k_transform compiled, 10 + 20 bytes
+++ new_struveh compiled, 13 + 20 bytes
+++ new_fourier_sin compiled, 10 + 20 bytes
+++ new_fourier_cos compiled, 10 + 20 bytes
+++ product_test compiled, 27 + 28 bytes
+++ defint_trans compiled, 104 + 68 bytes
+++ hyperbolic_test compiled, 90 + 28 bytes
Completed FASL files for "defintd"
+++ FASLEND: hits = 240, misses = 90



*** Compiling defintg ... 


FASLOUT "defintg": IN files;  or type in expressions
When all done, execute FASLEND;
+++ print_conditions compiled, 13 + 28 bytes
+++ defint_reform compiled, 387 + 116 bytes
+++ reform_expt compiled, 98 + 36 bytes
+++ reform_const compiled, 80 + 28 bytes
+++ reform_denom compiled, 191 + 60 bytes
+++ reform_quot compiled, 246 + 36 bytes
+++ const_case compiled, 47 + 16 bytes
+++ quotient_case compiled, 55 + 16 bytes
+++ new_indefint compiled, 83 + 48 bytes
Completed FASL files for "defintg"
+++ FASLEND: hits = 74, misses = 51



*** Compiling defintj ... 


FASLOUT "defintj": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mylessp compiled, 55 + 56 bytes
+++ transform_mylessp compiled, 39 + 28 bytes
+++ arg_test compiled, 61 + 52 bytes
+++ transform_arg_test compiled, 39 + 28 bytes
+++ arg_test1 compiled, 69 + 56 bytes
+++ arg_test2 compiled, 47 + 56 bytes
+++ transform_arg_test2 compiled, 38 + 24 bytes
+++ arg_test3 compiled, 89 + 76 bytes
+++ arg_test3a compiled, 39 + 48 bytes
+++ transform_arg_test3 compiled, 39 + 28 bytes
+++ arg_test4 compiled, 117 + 56 bytes
+++ arg_test5 compiled, 96 + 60 bytes
+++ arg_test6 compiled, 70 + 56 bytes
+++ arg_test6a compiled, 61 + 56 bytes
+++ arg_test7 compiled, 64 + 56 bytes
+++ arg_test8 compiled, 48 + 44 bytes
+++ arg_test8a compiled, 70 + 56 bytes
+++ arg_test9 compiled, 123 + 56 bytes
+++ arg_test9a compiled, 145 + 64 bytes

*** local variable lst in procedure transform_test2 not used 
+++ transform_test2 compiled, 64 + 32 bytes
Completed FASL files for "defintj"
+++ FASLEND: hits = 355, misses = 65



*** Compiling defintb ... 


FASLOUT "defintb": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "defintb"
+++ FASLEND: hits = 1413, misses = 69



*** Compiling definte ... 


FASLOUT "definte": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "definte"
+++ FASLEND: hits = 3358, misses = 43



*** Compiling definth ... 


FASLOUT "definth": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpinteg compiled, 140 + 104 bytes
+++ new_meijer compiled, 571 + 104 bytes
+++ reduce_var compiled, 364 + 72 bytes
Completed FASL files for "definth"
+++ FASLEND: hits = 593, misses = 88



*** Compiling defintk ... 


FASLOUT "defintk": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "defintk"
+++ FASLEND: hits = 4480, misses = 130



*** Compiling defintx ... 


FASLOUT "defintx": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(misc)"
Fast-loading "./reduce.img(int)"
Fast-loading "./reduce.img(contents)"
Fast-loading "./reduce.img(csolve)"
Fast-loading "./reduce.img(idepend)"
Fast-loading "./reduce.img(df2q)"
Fast-loading "./reduce.img(distrib)"
Fast-loading "./reduce.img(divide)"
Fast-loading "./reduce.img(driver)"

*** ci already defined as operator 

*** si already defined as operator 
Fast-loading "./reduce.img(symint)"
Fast-loading "./reduce.img(intfac)"
Fast-loading "./reduce.img(ibasics)"
Fast-loading "./reduce.img(makevars)"
Fast-loading "./reduce.img(jpatches)"
Fast-loading "./reduce.img(reform)"
Fast-loading "./reduce.img(simpsqrt)"
Fast-loading "./reduce.img(hacksqrt)"
Fast-loading "./reduce.img(sqrtf)"
Fast-loading "./reduce.img(isolve)"
Fast-loading "./reduce.img(tidysqrt)"
Fast-loading "./reduce.img(trcase)"
Fast-loading "./reduce.img(halfangl)"
Fast-loading "./reduce.img(trialdiv)"
Fast-loading "./reduce.img(vect)"
Fast-loading "./reduce.img(dint)"
go not in program context
+++ defint0 compiled, 266 + 196 bytes
+++ defint1 compiled, 12 + 12 bytes
+++ defint11s compiled, 29 + 40 bytes
+++ fxinfinity compiled, 12 + 24 bytes
+++ defint11 compiled, 527 + 216 bytes
+++ zpsubsq compiled, 42 + 20 bytes
+++ degreeof compiled, 70 + 76 bytes
+++ genminusp compiled, 13 + 20 bytes
+++ sq2int compiled, 24 + 24 bytes
+++ topeval compiled, 44 + 48 bytes
+++ firstatom compiled, 7 + 8 bytes
+++ valueof compiled, 8 + 16 bytes
+++ rdsolvesq compiled, 24 + 20 bytes
+++ defint2 compiled, 65 + 60 bytes
+++ defint3 compiled, 81 + 36 bytes
+++ diffsqn compiled, 22 + 20 bytes
+++ polypwrp compiled, 229 + 44 bytes
+++ termvpwr compiled, 54 + 28 bytes
+++ diffsol compiled, 157 + 76 bytes
+++ residuum compiled, 197 + 80 bytes
+++ splitfactors compiled, 184 + 40 bytes
+++ simptermp compiled, 23 + 16 bytes
+++ fleshout compiled, 9 + 16 bytes
+++ fleshoutt compiled, 12 + 16 bytes
+++ specformtestint compiled, 433 + 116 bytes
+++ aynbmtst compiled, 85 + 40 bytes
+++ getpoles compiled, 305 + 156 bytes
+++ specformtestint2 compiled, 347 + 136 bytes
+++ polanalyz compiled, 34 + 32 bytes
+++ poltstp compiled, 47 + 20 bytes
+++ evalmax compiled, 17 + 16 bytes
+++ evalplus compiled, 19 + 24 bytes
+++ varpwrtst compiled, 117 + 64 bytes
Completed FASL files for "defintx"
+++ FASLEND: hits = 1308, misses = 165

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling fps ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "fps": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "fps"
+++ FASLEND: hits = 6, misses = 22
Fast-loading "./reduce.img(fps)"



*** Compiling simplede ... 


FASLOUT "simplede": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simpledeeval compiled, 84 + 56 bytes
+++ int_simplede compiled, 634 + 236 bytes
+++ fpseval compiled, 102 + 68 bytes
+++ asymptpowerseries compiled, 34 + 28 bytes
+++ fpsexit compiled, 10 + 16 bytes
+++ simpledeexit compiled, 10 + 16 bytes
+++ psalg compiled, 2080 + 448 bytes
+++ verbessere compiled, 108 + 44 bytes
+++ zerlege compiled, 124 + 32 bytes
+++ simplify_expt compiled, 154 + 48 bytes
+++ hypergeomre compiled, 1768 + 356 bytes
+++ converttolist compiled, 70 + 48 bytes
+++ type_fraction compiled, 21 + 12 bytes
+++ type_rational compiled, 22 + 16 bytes
+++ type_ratpoly compiled, 28 + 36 bytes
+++ savesolve compiled, 57 + 56 bytes
+++ setze compiled, 7 + 16 bytes
+++ polynomq compiled, 33 + 32 bytes
Completed FASL files for "simplede"
+++ FASLEND: hits = 623, misses = 178



*** Compiling substexp ... 


FASLOUT "substexp": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "substexp"
+++ FASLEND: hits = 954, misses = 56



*** Compiling linrec ... 


FASLOUT "linrec": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rsolve compiled, 295 + 140 bytes
+++ solve_lin_rec compiled, 769 + 248 bytes
+++ moivre compiled, 106 + 72 bytes
+++ the_indices compiled, 174 + 60 bytes
Completed FASL files for "linrec"
+++ FASLEND: hits = 105, misses = 87



*** Compiling hgrsolve ... 


FASLOUT "hgrsolve": IN files;  or type in expressions
When all done, execute FASLEND;
+++ hypergeomrsolve compiled, 682 + 184 bytes
Completed FASL files for "hgrsolve"
+++ FASLEND: hits = 131, misses = 58



*** Compiling constre ... 


FASLOUT "constre": IN files;  or type in expressions
When all done, execute FASLEND;
+++ constantre compiled, 1201 + 256 bytes
Completed FASL files for "constre"
+++ FASLEND: hits = 4, misses = 52



*** Compiling ratalgo ... 


FASLOUT "ratalgo": IN files;  or type in expressions
When all done, execute FASLEND;
+++ complexapart compiled, 23 + 36 bytes
+++ ratalgo compiled, 400 + 136 bytes
+++ fastpart compiled, 7 + 16 bytes
+++ fastlength compiled, 4 + 8 bytes
+++ auxcopy compiled, 18 + 8 bytes
Completed FASL files for "ratalgo"
+++ FASLEND: hits = 33, misses = 54

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling trigint ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "trigint": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(limits)"
Fast-loading "./reduce.img(tps)"
Fast-loading "./reduce.img(tpscomp)"
Fast-loading "./reduce.img(tpseval)"
Fast-loading "./reduce.img(tpsdom)"
Fast-loading "./reduce.img(tpsfns)"
Fast-loading "./reduce.img(tpsrev)"
Fast-loading "./reduce.img(tpssum)"
Fast-loading "./reduce.img(tpsmisc)"
Fast-loading "./reduce.img(tpsconv)"
Fast-loading "./reduce.img(misc)"
+++ sub_a compiled, 77 + 60 bytes
+++ sub_b compiled, 74 + 60 bytes
+++ sub_c compiled, 76 + 60 bytes
+++ sub_d compiled, 68 + 56 bytes
+++ apply_a compiled, 110 + 80 bytes
+++ apply_b compiled, 131 + 84 bytes
+++ apply_c compiled, 114 + 84 bytes
+++ apply_d compiled, 110 + 80 bytes
+++ unevalp compiled, 72 + 52 bytes
+++ k compiled, 21 + 20 bytes
+++ uneval_int compiled, 21 + 28 bytes
+++ uneval_lim compiled, 30 + 32 bytes
+++ fail_a compiled, 30 + 36 bytes
+++ fail_b compiled, 30 + 36 bytes
+++ fail_c compiled, 30 + 36 bytes
+++ fail_d compiled, 30 + 36 bytes
+++ fail compiled, 26 + 32 bytes
+++ trigint compiled, 672 + 180 bytes
Completed FASL files for "trigint"
+++ FASLEND: hits = 317, misses = 78
Fast-loading "./reduce.img(trigint)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling ratint ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "ratint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ make_mon compiled, 70 + 60 bytes
+++ monic compiled, 17 + 20 bytes
+++ norm compiled, 10 + 16 bytes
+++ gcd_ex compiled, 244 + 76 bytes
+++ u compiled, 14 + 20 bytes
+++ rem_zero compiled, 209 + 60 bytes
+++ hr_monic_den compiled, 323 + 92 bytes
Fast-loading "./reduce.img(arnum)"
Fast-loading "./reduce.img(arinv)"
Fast-loading "./reduce.img(assist)"
Fast-loading "./reduce.img(sl2psl)"
Fast-loading "./reduce.img(switchxt)"
Fast-loading "./reduce.img(baglist)"
Fast-loading "./reduce.img(hcvctors)"
Fast-loading "./reduce.img(genpurfn)"
Fast-loading "./reduce.img(control)"
Fast-loading "./reduce.img(polyexns)"
Fast-loading "./reduce.img(transfns)"
Fast-loading "./reduce.img(vectorop)"
Fast-loading "./reduce.img(grassman)"
Fast-loading "./reduce.img(matrext)"
Fast-loading "./reduce.img(helpasst)"
+++ not_numberp compiled, 11 + 20 bytes
+++ rt compiled, 785 + 208 bytes
+++ prem compiled, 256 + 76 bytes
+++ pseudorem compiled, 8 + 16 bytes
+++ howy compiled, 870 + 156 bytes
+++ newton compiled, 484 + 136 bytes
+++ replace_lc compiled, 46 + 44 bytes
+++ polydi compiled, 205 + 72 bytes
+++ phi compiled, 37 + 44 bytes
+++ nn compiled, 42 + 48 bytes

*** Failed attempt to turn off modular when rational is on 
+++ not_numberp compiled, 11 + 20 bytes
+++ rt compiled, 876 + 252 bytes
+++ dependp compiled, 21 + 28 bytes
+++ ratint compiled, 274 + 108 bytes
Completed FASL files for "ratint"
+++ FASLEND: hits = 383, misses = 128
Fast-loading "./reduce.img(ratint)"

*** c already defined as operator 



*** Compiling convert ... 


FASLOUT "convert": IN files;  or type in expressions
When all done, execute FASLEND;
+++ evalplus compiled, 19 + 24 bytes
+++ my_plus compiled as link to evalplus
+++ evalmax compiled, 17 + 16 bytes
+++ my_max compiled as link to evalmax
+++ convert compiled, 144 + 80 bytes
+++ conv compiled as link to convert
+++ separate_real compiled, 19 + 28 bytes
+++ sep compiled as link to separate_real
+++ convert_log compiled, 32 + 36 bytes
+++ convertlog compiled as link to convert_log
+++ logtoatan compiled, 168 + 72 bytes
Completed FASL files for "convert"
+++ FASLEND: hits = 442, misses = 61

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling mathml ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "mathml": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(assist)"
Fast-loading "./reduce.img(sl2psl)"
Fast-loading "./reduce.img(switchxt)"
Fast-loading "./reduce.img(baglist)"
Fast-loading "./reduce.img(hcvctors)"
Fast-loading "./reduce.img(genpurfn)"
Fast-loading "./reduce.img(control)"
Fast-loading "./reduce.img(polyexns)"
Fast-loading "./reduce.img(transfns)"
Fast-loading "./reduce.img(vectorop)"
Fast-loading "./reduce.img(grassman)"
Fast-loading "./reduce.img(matrext)"
Fast-loading "./reduce.img(helpasst)"
Fast-loading "./reduce.img(ineq)"
Fast-loading "./reduce.img(solve)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(solve1)"
Fast-loading "./reduce.img(ppsoln)"
Fast-loading "./reduce.img(solvelnr)"
Fast-loading "./reduce.img(glsolve)"
Fast-loading "./reduce.img(solvealg)"
Fast-loading "./reduce.img(solvetab)"
Fast-loading "./reduce.img(quartic)"
Fast-loading "./reduce.img(linineq)"
Fast-loading "./reduce.img(liqsimp1)"
Fast-loading "./reduce.img(liqsimp2)"
Fast-loading "./reduce.img(polineq)"
+++ lex not compiled (C version available)
+++ get_token not compiled (C version available)
+++ get_content not compiled (C version available)
+++ search_att compiled, 100 + 44 bytes
+++ find not compiled (C version available)
+++ attributes not compiled (C version available)
+++ butes not compiled (C version available)
+++ mml compiled, 19 + 28 bytes
+++ parseml compiled, 56 + 80 bytes
+++ mathml not compiled (C version available)
+++ mathml2 compiled, 5 + 12 bytes
+++ sub_math compiled, 68 + 72 bytes
+++ compress!* not compiled (C version available)
+++ cnml compiled, 122 + 96 bytes
+++ ciml compiled, 31 + 36 bytes
+++ consts compiled, 49 + 36 bytes
+++ comp2 compiled, 12 + 24 bytes
+++ seprd compiled, 18 + 32 bytes
+++ vectorrd compiled, 11 + 20 bytes
+++ matrixrd compiled, 54 + 56 bytes
+++ matrixrowrd compiled, 12 + 12 bytes
+++ lambdard compiled, 16 + 24 bytes
+++ setrd compiled, 14 + 28 bytes
+++ norepeat compiled, 21 + 16 bytes
+++ delall not compiled (C version available)
+++ listrd compiled, 55 + 60 bytes
+++ pred compiled, 75 + 20 bytes
+++ lexog compiled, 24 + 20 bytes
+++ numer compiled, 17 + 12 bytes
+++ fnrd compiled, 25 + 40 bytes
+++ declarerd compiled, 89 + 92 bytes
+++ applyml compiled, 45 + 60 bytes
+++ setdiffrd compiled, 61 + 28 bytes
+++ selectrd compiled, 23 + 28 bytes
+++ mat_select compiled, 34 + 20 bytes
+++ list_select compiled, 8 + 12 bytes
+++ transposerd compiled, 10 + 24 bytes
+++ determinantrd compiled, 7 + 20 bytes
+++ alg_det compiled, 5 + 16 bytes
+++ applyfnrd compiled, 15 + 20 bytes
+++ unionrd compiled, 52 + 28 bytes
+++ intersectionrd compiled, 52 + 28 bytes
+++ eval_list compiled, 11 + 12 bytes
+++ eval_list_sets compiled, 30 + 20 bytes
+++ constants compiled, 28 + 24 bytes
+++ notrd compiled, 8 + 24 bytes
+++ impliesrd compiled, 31 + 28 bytes
+++ andrd compiled, 12 + 20 bytes
+++ and2rd compiled, 15 + 16 bytes
+++ orrd compiled, 12 + 20 bytes
+++ or2rd compiled, 15 + 16 bytes
+++ xorrd compiled, 12 + 20 bytes
+++ xor2rd compiled, 11 + 16 bytes
+++ alg_xor compiled, 13 + 12 bytes
+++ sinrd compiled, 10 + 24 bytes
+++ secrd compiled, 10 + 24 bytes
+++ sinhrd compiled, 10 + 24 bytes
+++ sechrd compiled, 10 + 24 bytes
+++ arcsinrd compiled, 10 + 24 bytes
+++ cosrd compiled, 10 + 24 bytes
+++ cscrd compiled, 10 + 24 bytes
+++ coshrd compiled, 10 + 24 bytes
+++ cschrd compiled, 10 + 24 bytes
+++ arccosrd compiled, 10 + 24 bytes
+++ tanrd compiled, 10 + 24 bytes
+++ cotrd compiled, 10 + 24 bytes
+++ tanhrd compiled, 10 + 24 bytes
+++ cothrd compiled, 10 + 24 bytes
+++ arctanrd compiled, 10 + 24 bytes
+++ conditionrd compiled, 15 + 28 bytes
+++ relnrd compiled, 40 + 52 bytes
+++ relationrd compiled, 89 + 76 bytes
+++ notsubsetrd compiled, 68 + 36 bytes
+++ notprsubsetrd compiled, 78 + 36 bytes
+++ subsetrd compiled, 60 + 40 bytes
+++ alg_subset compiled, 12 + 16 bytes
+++ prsubsetrd compiled, 48 + 32 bytes
+++ alg_prsubset compiled, 7 + 16 bytes
+++ inrd compiled, 55 + 36 bytes
+++ notinrd compiled, 51 + 36 bytes
+++ alg_eq compiled, 6 + 20 bytes
+++ alg_eq2 compiled, 19 + 20 bytes
+++ alg_neq compiled, 6 + 20 bytes
+++ alg_neq2 compiled, 19 + 20 bytes
+++ alg_lt compiled, 21 + 32 bytes
+++ alg_lt2 compiled, 35 + 32 bytes
+++ alg_gt compiled, 21 + 32 bytes
+++ alg_gt2 compiled, 35 + 32 bytes
+++ alg_geq compiled, 21 + 32 bytes
+++ alg_geq2 compiled, 35 + 32 bytes
+++ alg_leq compiled, 21 + 32 bytes
+++ alg_leq2 compiled, 35 + 32 bytes
+++ tendstord compiled, 26 + 32 bytes
+++ limitrd compiled, 108 + 92 bytes
+++ alg_limit compiled, 57 + 40 bytes
+++ sumrd compiled, 111 + 108 bytes
+++ alg_sum compiled, 59 + 48 bytes
+++ productrd compiled, 104 + 108 bytes
+++ alg_prod compiled, 59 + 48 bytes
+++ partialdiffrd compiled, 11 + 24 bytes
+++ differentiate compiled, 22 + 16 bytes
+++ getargsrd compiled, 13 + 24 bytes
+++ diffrd compiled, 31 + 32 bytes
+++ alg_df compiled, 9 + 16 bytes
+++ intrd compiled, 90 + 80 bytes
+++ alg_int compiled, 44 + 20 bytes
+++ bvarrd compiled, 54 + 68 bytes
+++ lowlimitrd compiled, 14 + 36 bytes
+++ upperlimitrd compiled, 14 + 36 bytes
+++ intervalrd compiled, 18 + 36 bytes
+++ lnrd compiled, 6 + 20 bytes
+++ alg_ln compiled, 5 + 16 bytes
+++ logrd compiled, 20 + 32 bytes
+++ alg_log compiled, 20 + 24 bytes
+++ logbaserd compiled, 14 + 36 bytes
+++ conjugaterd compiled, 6 + 20 bytes
+++ alg_conj compiled, 5 + 16 bytes
+++ minusrd compiled, 17 + 24 bytes
+++ alg_minus compiled, 5 + 16 bytes
+++ alg_difference compiled, 6 + 16 bytes
+++ absrd compiled, 6 + 20 bytes
+++ alg_abs compiled, 5 + 16 bytes
+++ rootrd compiled, 31 + 52 bytes
+++ alg_root compiled, 12 + 24 bytes
+++ remrd compiled, 10 + 20 bytes
+++ alg_remainder compiled, 6 + 16 bytes
+++ factorialrd compiled, 6 + 20 bytes
+++ alg_factorial compiled, 5 + 16 bytes
+++ exprd compiled, 6 + 20 bytes
+++ alg_exp compiled, 5 + 16 bytes
+++ quotientrd compiled, 33 + 28 bytes
+++ alg_quotient compiled, 6 + 16 bytes
+++ dividerd compiled, 17 + 36 bytes
+++ alg_divide compiled, 6 + 16 bytes
+++ gcdrd compiled, 19 + 36 bytes
+++ gcdrd2 compiled, 16 + 20 bytes
+++ alg_gcd2 compiled, 6 + 16 bytes
+++ minrd compiled, 11 + 16 bytes
+++ alg_min compiled, 6 + 16 bytes
+++ maxrd compiled, 11 + 16 bytes
+++ alg_max compiled, 6 + 16 bytes
+++ plusrd compiled, 14 + 20 bytes
+++ alg_plus compiled, 6 + 16 bytes
+++ timesrd compiled, 14 + 20 bytes
+++ alg_times compiled, 22 + 24 bytes
+++ powerrd compiled, 9 + 20 bytes
+++ alg_expt compiled, 6 + 16 bytes
+++ errorml compiled, 462 + 336 bytes
+++ meanrd compiled, 21 + 24 bytes
+++ sdevrd compiled, 26 + 32 bytes
+++ varrd compiled, 7 + 24 bytes
+++ medianrd compiled, 42 + 40 bytes
+++ sortl compiled, 26 + 28 bytes
+++ momentrd compiled, 52 + 56 bytes
+++ alg_mean compiled, 19 + 20 bytes
+++ sdev compiled, 23 + 28 bytes
+++ stats_getargs compiled, 12 + 12 bytes
+++ po2ca compiled, 16 + 20 bytes
+++ rad compiled, 9 + 16 bytes
+++ math_ml_printer compiled, 237 + 172 bytes
+++ vectorml compiled, 15 + 32 bytes
+++ matrixml compiled, 25 + 40 bytes
+++ matrix_rows compiled, 19 + 32 bytes
+++ row compiled, 7 + 12 bytes
+++ arbitrary_c compiled, 326 + 124 bytes
+++ in_complexml compiled, 23 + 40 bytes
+++ in_integerml compiled, 23 + 40 bytes
+++ close_forall compiled, 6 + 24 bytes
+++ setqml compiled, 19 + 32 bytes
+++ listml compiled, 15 + 32 bytes
+++ multilists compiled, 15 + 16 bytes
+++ expression compiled, 53 + 36 bytes
+++ sum_prodml compiled, 77 + 64 bytes
+++ dfml compiled, 41 + 48 bytes
+++ dfargs compiled, 72 + 40 bytes
+++ degreeml compiled, 15 + 32 bytes
+++ complpart compiled, 21 + 36 bytes
+++ sets compiled, 25 + 40 bytes
+++ reln compiled, 25 + 40 bytes
+++ setml compiled, 15 + 32 bytes
+++ operator_fn compiled, 38 + 44 bytes
+++ multi_args compiled, 7 + 12 bytes
+++ trigml compiled, 51 + 56 bytes
+++ unary compiled, 25 + 40 bytes
+++ log_baseml compiled, 45 + 56 bytes
+++ equalml compiled, 18 + 32 bytes

*** local variable type in procedure sqrtml not used 
+++ sqrtml compiled, 17 + 36 bytes
+++ integralml compiled, 73 + 60 bytes
+++ quotientml compiled, 55 + 52 bytes
+++ n_nary compiled, 41 + 56 bytes
+++ multi_elem not compiled (C version available)
+++ minusml compiled, 15 + 32 bytes
+++ multiminus compiled, 10 + 16 bytes
+++ f4 compiled, 221 + 148 bytes
+++ printsub compiled, 64 + 68 bytes
+++ printsub2 compiled, 50 + 60 bytes
+++ ma_print compiled, 24 + 36 bytes
+++ printout not compiled (C version available)
+++ issq compiled, 19 + 20 bytes
+++ isarb_compl not compiled (C version available)
+++ multi_isarb_compl not compiled (C version available)
+++ isarb_int not compiled (C version available)
+++ multi_isarb_int not compiled (C version available)
+++ print_arb_compl compiled, 30 + 32 bytes
+++ multi_compl compiled, 9 + 12 bytes
+++ print_arb_int compiled, 30 + 32 bytes
+++ multi_int compiled, 9 + 12 bytes
+++ isarb_mat_int compiled, 7 + 12 bytes
+++ isarb_row_int compiled, 24 + 28 bytes
+++ isarb_mat_compl compiled, 7 + 12 bytes
+++ isarb_row_compl compiled, 24 + 28 bytes
+++ printarb_mat_compl compiled, 7 + 12 bytes
+++ printarb_row_compl compiled, 43 + 40 bytes
+++ printarb_mat_int compiled, 7 + 12 bytes
+++ printarb_row_int compiled, 43 + 40 bytes
+++ math_ml compiled, 166 + 128 bytes
+++ onoff compiled, 153 + 88 bytes
Completed FASL files for "mathml"
+++ FASLEND: hits = 2263, misses = 720
Fast-loading "./reduce.img(mathml)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling mathmlom ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "mathmlom": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "mathmlom"
+++ FASLEND: hits = 1, misses = 34
Fast-loading "./reduce.img(mathmlom)"



*** Compiling mtables ... 


FASLOUT "mtables": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "mtables"
+++ FASLEND: hits = 741, misses = 522



*** Compiling tools ... 


FASLOUT "tools": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(assist)"
Fast-loading "./reduce.img(sl2psl)"
Fast-loading "./reduce.img(switchxt)"
Fast-loading "./reduce.img(baglist)"
Fast-loading "./reduce.img(hcvctors)"
Fast-loading "./reduce.img(genpurfn)"
Fast-loading "./reduce.img(control)"
Fast-loading "./reduce.img(polyexns)"
Fast-loading "./reduce.img(transfns)"
Fast-loading "./reduce.img(vectorop)"
Fast-loading "./reduce.img(grassman)"
Fast-loading "./reduce.img(matrext)"
Fast-loading "./reduce.img(helpasst)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
+++ lex compiled, 88 + 76 bytes
+++ get_token compiled, 18 + 20 bytes
+++ get_content compiled, 59 + 44 bytes
+++ search_att compiled, 100 + 44 bytes
+++ attributes not compiled (C version available)
+++ butes compiled, 14 + 16 bytes
+++ find compiled, 62 + 48 bytes
+++ compress!* not compiled (C version available)
+++ find2 not compiled (C version available)
+++ retattributes not compiled (C version available)
+++ isvalid not compiled (C version available)
+++ notstring not compiled (C version available)
+++ norepeat compiled, 21 + 16 bytes
+++ delall not compiled (C version available)
+++ list2string not compiled (C version available)
+++ errorml compiled, 463 + 336 bytes
+++ cols2rows compiled, 9 + 12 bytes
+++ cols2rows2 compiled, 15 + 16 bytes
+++ ithlistelem compiled, 13 + 12 bytes
+++ debug compiled, 11 + 16 bytes
+++ indent!* not compiled (C version available)
Completed FASL files for "tools"
+++ FASLEND: hits = 133, misses = 67



*** Compiling ir2om ... 


FASLOUT "ir2om": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ir2om compiled, 18 + 48 bytes
+++ objectom compiled, 25 + 20 bytes
+++ strom compiled, 10 + 20 bytes
+++ basicom compiled, 25 + 24 bytes
+++ integerom compiled, 9 + 20 bytes
+++ floatom compiled, 12 + 24 bytes
+++ variableom compiled, 50 + 40 bytes
+++ naryom compiled, 67 + 60 bytes
+++ multiom compiled, 13 + 16 bytes
+++ selectom compiled, 45 + 56 bytes
+++ containerom compiled, 81 + 72 bytes
+++ intervalom compiled, 70 + 60 bytes
+++ matrixom compiled, 15 + 36 bytes
+++ matrixrowom compiled, 17 + 36 bytes
+++ ciom compiled, 55 + 56 bytes
+++ numom compiled, 35 + 48 bytes
+++ fnom compiled, 48 + 68 bytes
+++ partialdiffom compiled, 34 + 24 bytes
+++ symbolsom compiled, 96 + 84 bytes
+++ lambdaom compiled, 35 + 44 bytes
+++ semanticom compiled, 18 + 36 bytes
+++ limitom compiled, 74 + 64 bytes
+++ quantom compiled, 49 + 64 bytes
+++ bvarom compiled, 14 + 16 bytes
+++ printout compiled, 23 + 28 bytes
+++ mml2om compiled, 17 + 28 bytes
Completed FASL files for "ir2om"
+++ FASLEND: hits = 189, misses = 107



*** Compiling om2ir ... 


FASLOUT "om2ir": IN files;  or type in expressions
When all done, execute FASLEND;
+++ om2ir compiled, 57 + 84 bytes

*** local variable res in procedure omobj not used 
+++ omobj not compiled (C version available)
+++ omobjs not compiled (C version available)
+++ checktag not compiled (C version available)

*** local variable symb in procedure omsir not used 
+++ omsir compiled, 115 + 56 bytes
+++ encodeir compiled, 21 + 32 bytes
+++ omiir compiled, 8 + 16 bytes
+++ omvir compiled, 25 + 40 bytes
+++ variablesir compiled, 20 + 24 bytes
+++ omfir compiled, 15 + 36 bytes
+++ omstrir compiled, 12 + 20 bytes
+++ omair compiled, 18 + 32 bytes
+++ ombindir compiled, 24 + 32 bytes
+++ omattrir compiled, 40 + 40 bytes
+++ omatpir compiled, 19 + 28 bytes
+++ tobvarir compiled, 14 + 16 bytes
+++ matrixir compiled, 30 + 32 bytes
+++ matrixelems compiled, 15 + 12 bytes
+++ sum_prodir compiled, 39 + 40 bytes
+++ integralir compiled, 53 + 48 bytes
+++ partialdiffir compiled, 63 + 64 bytes
+++ pdiffvars compiled, 22 + 20 bytes
+++ selectir compiled, 68 + 48 bytes
+++ limitir compiled, 122 + 84 bytes

*** local variable base in procedure numir not used 
+++ numir compiled, 120 + 64 bytes
+++ unaryir compiled, 20 + 28 bytes
+++ lambdavar compiled, 6 + 8 bytes
+++ lambdavar2 compiled, 4 + 8 bytes
+++ lambdafun compiled, 5 + 8 bytes
+++ om2mml compiled, 19 + 28 bytes
Completed FASL files for "om2ir"
+++ FASLEND: hits = 258, misses = 127



*** Compiling mml_ir ... 


FASLOUT "mml_ir": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mml compiled, 20 + 32 bytes
+++ mml2ir compiled, 54 + 80 bytes
+++ mathml not compiled (C version available)
+++ mathml2 compiled, 5 + 12 bytes
+++ sub_math compiled, 80 + 64 bytes
+++ cnrd compiled, 122 + 80 bytes
+++ cird compiled, 39 + 44 bytes
+++ rational compiled, 11 + 8 bytes
+++ seprd compiled, 17 + 36 bytes
+++ vectorrd compiled, 16 + 28 bytes
+++ matrixrd compiled, 67 + 68 bytes
+++ matrixrowrd compiled, 12 + 12 bytes
+++ lambdard compiled, 24 + 36 bytes
+++ setrd compiled, 14 + 28 bytes
+++ listrd compiled, 13 + 28 bytes
+++ fnrd compiled, 18 + 32 bytes
+++ declarerd compiled, 40 + 60 bytes
+++ applyrd compiled, 43 + 52 bytes
+++ selectrd compiled, 40 + 40 bytes
+++ transposerd compiled, 7 + 16 bytes
+++ determinantrd compiled, 7 + 16 bytes
+++ applyfnrd compiled, 15 + 16 bytes
+++ csymbolrd compiled, 15 + 16 bytes
+++ conditionrd compiled, 17 + 40 bytes
+++ relnrd compiled, 30 + 40 bytes
+++ relationrd compiled, 8 + 12 bytes
+++ binaryrelationrd compiled, 11 + 16 bytes
+++ subsetrd compiled, 12 + 12 bytes
+++ prsubsetrd compiled, 12 + 12 bytes
+++ unaryrd compiled, 7 + 16 bytes
+++ binaryrd compiled, 11 + 16 bytes
+++ naryrd compiled, 10 + 12 bytes
+++ setfuncsnaryrd compiled, 27 + 20 bytes
+++ setfuncsbinrd compiled, 59 + 28 bytes
+++ limitrd compiled, 77 + 72 bytes
+++ partialdiffrd compiled, 14 + 20 bytes
+++ diffrd compiled, 21 + 32 bytes
+++ diff2 compiled, 69 + 24 bytes
+++ getargsrd compiled, 13 + 24 bytes
+++ quantifierrd compiled, 32 + 36 bytes
+++ symbolsrd compiled, 114 + 76 bytes
+++ bvarrd compiled, 57 + 72 bytes
+++ lowupperlimitrd compiled, 23 + 44 bytes
+++ lowlimitrd compiled, 17 + 40 bytes
+++ upperlimitrd compiled, 25 + 48 bytes
+++ intervalrd compiled, 30 + 52 bytes
+++ logrd compiled, 20 + 28 bytes
+++ logbaserd compiled, 14 + 36 bytes
+++ minusrd compiled, 20 + 16 bytes
+++ rootrd compiled, 36 + 52 bytes
+++ minmaxrd compiled, 66 + 48 bytes
+++ momentrd compiled, 35 + 48 bytes
+++ stats_getargs compiled, 12 + 12 bytes
+++ ir2mml compiled, 22 + 56 bytes
+++ vectorml compiled, 15 + 40 bytes
+++ matrixml compiled, 29 + 48 bytes
+++ matrix_rows compiled, 15 + 32 bytes
+++ row compiled, 7 + 12 bytes

*** local variable elem in procedure identml not used 
+++ identml compiled, 3 + 16 bytes
+++ expression compiled, 45 + 28 bytes
+++ tendstoml compiled, 19 + 40 bytes
+++ dfml compiled, 37 + 48 bytes
+++ dfargs compiled, 60 + 40 bytes
+++ degreeml compiled, 14 + 32 bytes
+++ rationalml compiled, 22 + 24 bytes
+++ reln compiled, 22 + 44 bytes
+++ containerml compiled, 32 + 52 bytes
+++ sets compiled, 22 + 44 bytes
+++ listml compiled, 15 + 40 bytes
+++ multilists compiled, 15 + 16 bytes
+++ csymbol_fn compiled, 46 + 60 bytes
+++ operator_fn compiled, 30 + 48 bytes
+++ multi_args compiled, 7 + 12 bytes

*** local variable type in procedure log_baseml not used 
+++ log_baseml compiled, 35 + 48 bytes
+++ equalml compiled, 14 + 32 bytes
+++ degreetoksml compiled, 23 + 44 bytes
+++ bvarml compiled, 21 + 40 bytes
+++ xbvarml compiled, 8 + 12 bytes
+++ conditionml compiled, 11 + 32 bytes
+++ lambdaml compiled, 15 + 40 bytes
+++ attributesml compiled, 48 + 40 bytes
+++ list2string not compiled (C version available)
+++ declareml compiled, 15 + 40 bytes
+++ lowupperlimitml compiled, 24 + 40 bytes
+++ lowlimitml compiled, 11 + 32 bytes
+++ quotientml compiled, 62 + 60 bytes
+++ nary compiled, 38 + 60 bytes
+++ multi_elem not compiled (C version available)
+++ minusml compiled, 11 + 32 bytes
+++ multiminus compiled, 10 + 16 bytes
+++ ciml compiled, 14 + 28 bytes
+++ cnml compiled, 14 + 28 bytes
+++ semanticml compiled, 75 + 80 bytes
+++ numml compiled, 64 + 48 bytes
+++ constsml compiled, 92 + 64 bytes
+++ ma_print compiled, 30 + 44 bytes
+++ printout not compiled (C version available)
+++ test compiled, 17 + 28 bytes
Completed FASL files for "mml_ir"
+++ FASLEND: hits = 959, misses = 215

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling cgb ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "cgb": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(ezgcd)"
Fast-loading "./reduce.img(alphas)"
Fast-loading "./reduce.img(coeffts)"
Fast-loading "./reduce.img(ezgcdf)"
Fast-loading "./reduce.img(facmisc)"
Fast-loading "./reduce.img(facstr)"
Fast-loading "./reduce.img(interfac)"
Fast-loading "./reduce.img(linmodp)"
Fast-loading "./reduce.img(mhensfns)"
Fast-loading "./reduce.img(modpoly)"
Fast-loading "./reduce.img(multihen)"
Fast-loading "./reduce.img(unihens)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
+++ cgb_mkinterface_ctyeg8ufjr8f compiled, 370 + 124 bytes
+++ cgb!$ compiled, 22 + 44 bytes
+++ cgb_cgbf compiled, 35 + 44 bytes
+++ gsys!$ compiled, 22 + 44 bytes
+++ cgb_gsysf compiled, 35 + 44 bytes
+++ ggsys!$ compiled, 22 + 44 bytes
+++ cgb_ggsysf compiled, 40 + 44 bytes
+++ gsys2cgb!$ compiled, 21 + 40 bytes
+++ cgb_gsys2cgbf compiled, 30 + 40 bytes
+++ cgb_a2s!-psys compiled, 35 + 28 bytes
+++ cgb_a2s2!-psys compiled, 32 + 12 bytes
+++ cgb_xvars!-psys compiled as link to cgb_vars

*** local variable cd in procedure cgb_xvars-psys2 not used 
+++ cgb_xvars!-psys2 compiled, 4 + 12 bytes

*** local variable cd in procedure cgb_xvars-psys3 not used 

*** local variable xvl in procedure cgb_xvars-psys3 not used 
+++ cgb_xvars!-psys3 compiled, 5 + 12 bytes
+++ cgb_s2a!-cgb compiled, 39 + 16 bytes
+++ cgb_s2s!-cgb compiled as link to cgb_cgb-sfl
+++ cgb_s2a!-gsys compiled, 39 + 16 bytes
+++ cgb_s2a!-bra compiled, 51 + 36 bytes
+++ cgb_s2s!-gsys compiled, 32 + 12 bytes
+++ cgb_s2s!-bra compiled, 9 + 20 bytes
+++ cgb_a2s!-gsys compiled, 59 + 32 bytes
+++ cgb_a2s2!-gsys compiled, 44 + 16 bytes
+++ cgb_xvars!-gsys compiled, 46 + 20 bytes
+++ cgb_a2s!-cd compiled, 21 + 44 bytes
+++ cgb_cdp compiled, 46 + 36 bytes
+++ cgb_a2s2!-cd compiled, 1 + 8 bytes
+++ cgb_a2s!-varl compiled as link to cdr
+++ cgb_a2s2!-varl compiled, 1 + 8 bytes

*** local variable v in procedure cgb_cleanup not used 
+++ cgb_cleanup compiled, 1 + 8 bytes
+++ cgb_interface!$ compiled, 202 + 84 bytes
+++ cgb_sm!-pargl compiled, 29 + 8 bytes
+++ cgb_am!-pargl compiled, 139 + 32 bytes

*** local variable m in procedure cgb_interface1$ not used 

*** local variable p in procedure cgb_interface1$ not used 
+++ cgb_interface1!$ compiled, 75 + 12 bytes
+++ cgb_greengsysf compiled, 13 + 12 bytes
+++ cgb_gsys2green compiled, 68 + 28 bytes

*** local variable theo in procedure cgb_cgpl2green not used 
+++ cgb_cgpl2green compiled, 32 + 12 bytes
+++ cgb_domainchk compiled, 15 + 32 bytes
+++ cgb_vars compiled, 35 + 24 bytes
+++ cgb_varsgsys compiled, 44 + 28 bytes
+++ cgb_intersection compiled, 53 + 12 bytes
+++ cgb_cgb compiled, 14 + 28 bytes
+++ cgb_gsys2cgb compiled, 43 + 16 bytes
+++ cgb_cgb!-sfl compiled, 32 + 12 bytes
+++ cgb_gsys compiled, 33 + 44 bytes
+++ cgb_ggsys compiled, 36 + 48 bytes
+++ cgb_nonfaithfulgsys compiled, 37 + 44 bytes
+++ cgb_gsys1 compiled, 151 + 152 bytes
+++ cgb_traverso compiled, 75 + 28 bytes
+++ cgb_traverso1 compiled, 75 + 80 bytes
+++ cgb_spolynomial compiled, 5 + 12 bytes
+++ cgb_spolynomial1 compiled, 89 + 60 bytes
+++ cgb_normalform compiled, 74 + 56 bytes
+++ cgb_searchinlist compiled, 15 + 16 bytes
+++ cgb_buch!-ev_divides!? compiled, 3 + 12 bytes
+++ cgb_reduce compiled, 18 + 32 bytes
+++ cgb_reduceonestep compiled, 47 + 44 bytes
+++ cd_init compiled, 16 + 32 bytes
+++ cd_cleanup compiled, 9 + 20 bytes
+++ cd_falsep compiled, 4 + 12 bytes
+++ cd_siadd compiled, 29 + 36 bytes
+++ cd_for2cd compiled, 19 + 28 bytes
+++ cd_surep compiled, 22 + 36 bytes
+++ cd_gsd compiled, 7 + 16 bytes
+++ cd_ordp compiled, 21 + 16 bytes
+++ cd_ordatp compiled, 21 + 24 bytes
+++ cpr_mk compiled, 47 + 36 bytes
+++ cpr_mk1 compiled, 9 + 8 bytes
+++ cpr_lcm compiled as link to car
+++ cpr_p1 compiled as link to cadr
+++ cpr_p2 compiled as link to caddr
+++ cpr_sugar compiled as link to cadddr
+++ cpr_traverso!-pairlist compiled, 94 + 84 bytes
+++ cpr_tr2crit compiled, 69 + 28 bytes
+++ cpr_tr3crit compiled, 60 + 32 bytes
+++ cpr_traverso!-pairs!-discard1 compiled, 103 + 44 bytes
+++ cpr_traverso!-trianglep compiled, 23 + 20 bytes
+++ cpr_buchcrit4t compiled, 4 + 16 bytes
+++ cpr_listsort compiled, 21 + 12 bytes
+++ cpr_listsortin compiled, 11 + 12 bytes
+++ cpr_listsortin1 compiled, 31 + 12 bytes
+++ cpr_lessp compiled, 33 + 28 bytes
+++ cpr_lessp1 compiled, 30 + 20 bytes
+++ cpr_listmerge compiled, 32 + 12 bytes
+++ bra_cd compiled as link to car
+++ bra_system compiled as link to cadr
+++ bra_cprl compiled as link to caddr
+++ bra_mk compiled, 5 + 8 bytes
+++ bra_split compiled, 23 + 32 bytes
+++ bra_split1 compiled, 46 + 20 bytes
+++ bra_ext compiled, 112 + 40 bytes
+++ bra_ordp compiled, 8 + 16 bytes
+++ gsy_init compiled, 73 + 20 bytes
+++ gsy_normalize compiled, 5 + 20 bytes
+++ gsy_normalize1 compiled, 128 + 40 bytes
+++ cgp_mk compiled, 14 + 12 bytes
+++ cgp_hp compiled as link to cadr
+++ cgp_rp compiled as link to caddr
+++ cgp_sugar compiled as link to cadddr
+++ cgp_number compiled, 4 + 16 bytes
+++ cgp_ci compiled, 4 + 16 bytes
+++ cgp_init compiled as link to dip_init
+++ cgp_cleanup compiled as link to dip_cleanup
+++ cgp_lbc compiled, 4 + 16 bytes
+++ cgp_evlmon not compiled (C version available)
+++ cgp_zerop compiled, 12 + 16 bytes
+++ cgp_greenp compiled, 5 + 12 bytes
+++ cgp_monp compiled, 11 + 20 bytes
+++ cgp_zero compiled, 5 + 16 bytes
+++ cgp_one compiled, 9 + 24 bytes
+++ cgp_tdeg compiled, 4 + 16 bytes
+++ cgp_mred compiled, 14 + 32 bytes
+++ cgp_cp compiled, 17 + 32 bytes
+++ cgp_f2cgp compiled, 9 + 20 bytes
+++ cgp_2a compiled, 9 + 24 bytes
+++ cgp_2f compiled, 9 + 24 bytes
+++ cgp_enumerate compiled, 8 + 16 bytes
+++ cgp_unitp compiled, 9 + 20 bytes
+++ cgp_setnumber compiled, 6 + 20 bytes
+++ cgp_setsugar compiled, 6 + 20 bytes
+++ cgp_setci compiled, 6 + 20 bytes
+++ cgp_condense compiled, 7 + 20 bytes
+++ cgp_2scpl compiled, 12 + 20 bytes
+++ cgp_2scpl1 compiled, 226 + 108 bytes
+++ cgp_2scpl!-gen compiled, 50 + 56 bytes
+++ cgp_ilcomb compiled, 65 + 40 bytes
+++ cgp_ilcombr compiled, 55 + 40 bytes
+++ cgp_hpcp compiled, 19 + 36 bytes
+++ cgp_shift compiled, 10 + 20 bytes

*** local variable xvars in procedure cgp_shift1 not used 
+++ cgp_shift1 compiled, 78 + 80 bytes
+++ cgp_shift!-gen compiled, 1 + 8 bytes
+++ cgp_shiftwhite compiled, 51 + 56 bytes
+++ cgp_backshift compiled, 24 + 28 bytes
+++ cgp_backshift1 compiled, 52 + 56 bytes
+++ cgp_cancelmev compiled, 20 + 36 bytes
+++ cgp_bcquot compiled, 22 + 36 bytes
+++ cgp_bcprod compiled, 22 + 36 bytes
+++ cgp_simpdcont compiled, 44 + 56 bytes
+++ cgp_rlbc compiled, 18 + 32 bytes
+++ cgp_dcont compiled, 14 + 28 bytes
+++ cgp_normalize compiled, 15 + 28 bytes
+++ cgp_green compiled, 9 + 20 bytes
+++ cgp_lsort compiled, 4 + 16 bytes
+++ cgp_comp compiled, 8 + 16 bytes
Completed FASL files for "cgb"
+++ FASLEND: hits = 1201, misses = 402
Fast-loading "./reduce.img(cgb)"



*** Compiling gb ... 


FASLOUT "gb": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gb_mkinterface_n6e9e9v1r8wd compiled, 386 + 132 bytes
+++ gb!$ compiled, 21 + 40 bytes
+++ gb_gbf compiled, 30 + 40 bytes
+++ reduce!$ compiled, 21 + 40 bytes
+++ gb_reducef compiled, 34 + 40 bytes
+++ ltb!$ compiled, 21 + 40 bytes
+++ gb_ltbf compiled, 30 + 40 bytes
+++ gb_a2s!-psys compiled, 35 + 28 bytes
+++ gb_a2s2!-psys compiled, 32 + 12 bytes
+++ gb_s2a!-gb compiled, 39 + 16 bytes
+++ gb_s2a!-gbx compiled, 13 + 28 bytes
+++ gb_s2s!-gb compiled as link to gb_gb-sfl
+++ gb_s2a!-gsys compiled, 61 + 28 bytes
+++ gb_s2s!-gsys compiled, 46 + 20 bytes
+++ gb_a2s!-pol compiled, 5 + 16 bytes
+++ gb_a2s2!-pol compiled as link to vdp_f2vdp
+++ gb_s2a!-pol compiled as link to vdp_2a
+++ gb_s2s!-pol compiled as link to vdp_2sq

*** local variable dummy in procedure gb_dummy1 not used 
+++ gb_dummy1 compiled, 1 + 8 bytes
+++ gb_xvars!-psys compiled as link to gb_vars

*** local variable cd in procedure gb_xvars-psys2 not used 
+++ gb_xvars!-psys2 compiled, 4 + 12 bytes

*** local variable cd in procedure gb_xvars-psys3 not used 

*** local variable xvarl in procedure gb_xvars-psys3 not used 
+++ gb_xvars!-psys3 compiled, 5 + 12 bytes
+++ gb_xvars!-ppsys compiled, 5 + 12 bytes

*** local variable v in procedure gb_cleanup not used 
+++ gb_cleanup compiled, 1 + 8 bytes
+++ gb_interface!$ compiled, 158 + 80 bytes
+++ gb_sm!-pargl compiled, 29 + 8 bytes
+++ gb_am!-pargl compiled, 118 + 28 bytes

*** local variable m in procedure gb_interface1$ not used 

*** local variable p in procedure gb_interface1$ not used 
+++ gb_interface1!$ compiled, 75 + 12 bytes
+++ gb_gb!-sfl compiled, 32 + 12 bytes
+++ gb_domainchk compiled, 15 + 32 bytes
+++ gb_vars compiled, 38 + 28 bytes
+++ gb_intersection compiled, 53 + 12 bytes
+++ gb_varsopt compiled, 11 + 24 bytes
+++ gb_gb2gltb compiled, 53 + 32 bytes
+++ gb_ltb compiled, 42 + 24 bytes

*** local variable dummy in procedure gb_gbggsys0 not used 

*** local variable dummy in procedure gb_gbggsys0 not used 
+++ gb_gbggsys0 compiled as link to gb_gbgsys

*** local variable dummy in procedure gb_gbgsys0 not used 
+++ gb_gbgsys0 compiled as link to gb_gbgsys
+++ gb_gbgsys compiled, 7 + 12 bytes

*** local variable dummy in procedure gb_gb0 not used 
+++ gb_gb0 compiled as link to gb_gb
+++ gb_gb compiled, 224 + 212 bytes
+++ gb_traverso!-sturm!-experimental compiled, 225 + 112 bytes
+++ gb_traverso compiled, 266 + 140 bytes
+++ gb_updbase compiled, 116 + 48 bytes
+++ gb_chkgauss compiled, 50 + 28 bytes
+++ gb_chkgauss1 compiled, 97 + 32 bytes
+++ gb_chkgauss!-stat2vl compiled, 24 + 16 bytes
+++ gb_enumerate compiled, 22 + 32 bytes
+++ gb_traverso!-pairlist compiled, 94 + 84 bytes
+++ gb_tr2crit compiled, 65 + 24 bytes
+++ gb_tr3crit compiled, 55 + 28 bytes
+++ gb_traverso!-pairs!-discard1 compiled, 93 + 32 bytes
+++ gb_traverso!-trianglep compiled, 23 + 20 bytes
+++ gb_traverso!-final compiled, 63 + 36 bytes
+++ gb_buchcrit4t compiled, 4 + 16 bytes
+++ gb_cplistsort compiled, 21 + 12 bytes
+++ gb_cplistsortin compiled, 11 + 12 bytes
+++ gb_cplistsortin1 compiled, 31 + 12 bytes
+++ gb_cpcompless!? compiled, 25 + 20 bytes
+++ gb_cpcompless!?s compiled, 26 + 16 bytes
+++ gb_cplistmerge compiled, 32 + 12 bytes
+++ gb_makepair compiled, 48 + 32 bytes
+++ gb_spolynomial compiled, 23 + 24 bytes
+++ gb_spolynomial1 compiled, 108 + 68 bytes
+++ gb_strange!-reduction compiled, 82 + 44 bytes
+++ gb_buch!-ev_divides!? compiled, 3 + 12 bytes
+++ gb_normalform compiled, 112 + 84 bytes
+++ gb_searchinlist compiled, 15 + 16 bytes
+++ gb_adtssimpcont compiled, 40 + 36 bytes
+++ gb_simpcont2 compiled, 56 + 44 bytes
+++ gb_contentcontrol compiled, 27 + 44 bytes
+++ gb_min!# compiled, 6 + 8 bytes
+++ gb_shift compiled, 34 + 40 bytes
+++ gb_reduceonestepint compiled, 71 + 52 bytes
+++ gb_simpcontnormalform compiled, 13 + 24 bytes
+++ gb_vdpvordopt compiled, 108 + 36 bytes
+++ gb_vdpvordopt31 compiled, 83 + 24 bytes
+++ gb_vdpvordopt1 compiled, 81 + 16 bytes
+++ gb_vdpvordopt2 compiled, 21 + 8 bytes
+++ vdp_lbc compiled as link to caddr
+++ vdp_evlmon compiled as link to cadr
+++ vdp_poly compiled, 4 + 8 bytes
+++ vdp_zero!? compiled, 5 + 12 bytes
+++ vdp_plist compiled, 4 + 8 bytes
+++ vdp_remplist compiled, 6 + 20 bytes
+++ vdp_number compiled, 8 + 20 bytes
+++ vdp_sugar compiled, 17 + 28 bytes
+++ vdp_unit!? compiled, 10 + 24 bytes
+++ vdp_make compiled, 11 + 12 bytes
+++ vdp_monp compiled, 4 + 16 bytes
+++ vdp_tdeg compiled, 4 + 16 bytes
+++ vdp_fdip compiled, 12 + 24 bytes
+++ vdp_appendmon compiled, 27 + 40 bytes
+++ vdp_nconcmon compiled, 27 + 40 bytes
+++ vdp_bcquot compiled, 13 + 28 bytes
+++ vdp_content compiled, 4 + 16 bytes
+++ vdp_content1 compiled, 5 + 16 bytes
+++ vdp_length compiled, 4 + 16 bytes
+++ vdp_bcprod compiled, 13 + 28 bytes
+++ vdp_cancelmev compiled, 13 + 28 bytes
+++ vdp_sum compiled, 22 + 32 bytes
+++ vdp_prod compiled, 22 + 28 bytes
+++ vdp_zero compiled, 6 + 16 bytes
+++ vdp_mred compiled, 24 + 40 bytes
+++ vdp_condense compiled, 4 + 16 bytes
+++ vdp_setsugar compiled, 9 + 20 bytes
+++ vdp_setnumber compiled, 6 + 16 bytes
+++ vdp_putprop compiled, 28 + 8 bytes
+++ vdp_getprop compiled, 11 + 12 bytes
+++ vdp_fmon compiled, 16 + 24 bytes
+++ vdp_2a compiled, 4 + 16 bytes
+++ vdp_2f compiled, 4 + 16 bytes
+++ vdp_2sq compiled, 4 + 16 bytes
+++ vdp_init compiled as link to dip_init
+++ vdp_cleanup compiled as link to dip_cleanup
+++ vdp_f2vdp compiled, 16 + 28 bytes
+++ vdp_enumerate compiled, 20 + 28 bytes
+++ vdp_simpcont compiled, 11 + 20 bytes
+++ vdp_lsort compiled, 4 + 16 bytes
+++ vdp_evlcomp compiled, 8 + 16 bytes
+++ vdp_ilcomb compiled, 43 + 36 bytes
+++ vdp_ilcombr compiled, 35 + 36 bytes
+++ gb_reduce compiled, 71 + 60 bytes
+++ gb_reduceonesteprat compiled, 37 + 48 bytes
Completed FASL files for "gb"
+++ FASLEND: hits = 1021, misses = 322



*** Compiling dp ... 


FASLOUT "dp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ bc_zero compiled, 4 + 12 bytes
+++ bc_zero!? compiled, 4 + 8 bytes
+++ bc_abs compiled, 5 + 12 bytes
+++ bc_one!? compiled, 10 + 12 bytes
+++ bc_2sq compiled, 1 + 8 bytes
+++ bc_a2bc compiled as link to simp*
+++ bc_fd compiled, 4 + 12 bytes
+++ bc_neg compiled as link to negsq
+++ bc_prod compiled, 39 + 20 bytes
+++ bc_quot compiled as link to quotsq
+++ bc_sum compiled, 31 + 20 bytes
+++ bc_pmon compiled, 9 + 16 bytes
+++ bc_minus!? compiled, 11 + 12 bytes
+++ bc_2a compiled as link to prepsq
+++ bc_gcd compiled, 31 + 16 bytes
+++ bc_mkat compiled, 6 + 8 bytes
+++ bc_dcont compiled, 3 + 12 bytes
+++ bc_2d compiled, 6 + 12 bytes
+++ bc_vars compiled, 8 + 16 bytes
+++ ev_max!# compiled, 6 + 8 bytes
+++ ev_init compiled, 1 + 8 bytes
+++ ev_member compiled as link to member
+++ ev_divides!? compiled, 3 + 12 bytes
+++ ev_sdivp compiled, 9 + 12 bytes
+++ ev_xrevgradlexcomp compiled, 41 + 24 bytes
+++ ev_lexcomp compiled, 24 + 20 bytes
+++ ev_revgradlexcomp compiled, 35 + 28 bytes
+++ ev_invlexcomp compiled, 39 + 20 bytes
+++ ev_mtest!? compiled, 24 + 12 bytes
+++ ev_2a compiled, 4 + 16 bytes
+++ ev_2a1 compiled, 46 + 24 bytes
+++ ev_2f compiled, 28 + 24 bytes
+++ ev_lcm compiled, 25 + 8 bytes
+++ ev_zero compiled, 30 + 16 bytes
+++ ev_zero!? compiled, 14 + 12 bytes
+++ ev_compless!? compiled, 6 + 16 bytes
+++ ev_comp not compiled (C version available)
+++ ev_insert compiled, 30 + 12 bytes
+++ ev_tdeg compiled, 15 + 12 bytes
+++ ev_dif compiled, 20 + 8 bytes
+++ ev_sum compiled, 20 + 8 bytes
+++ ev_disjointp compiled, 17 + 16 bytes

*** local variable oev in procedure ev_identify not used 
+++ ev_identify compiled, 1 + 8 bytes
+++ dip_fmon compiled, 3 + 8 bytes
+++ dip_moncomp compiled, 6 + 8 bytes
+++ dip_mred compiled as link to cddr
+++ dip_lbc compiled as link to cadr
+++ dip_evlmon compiled as link to car
+++ dip_init compiled, 87 + 76 bytes
+++ dip_cleanup compiled, 21 + 28 bytes
+++ dip_monp compiled, 7 + 12 bytes
+++ dip_2f compiled, 4 + 12 bytes
+++ dip_2sq compiled, 35 + 32 bytes
+++ dip_lmon2sq compiled, 11 + 28 bytes
+++ dip_f2dip compiled, 9 + 24 bytes
+++ dip_f2dip1 compiled, 39 + 28 bytes
+++ dip_f2dip2 compiled, 32 + 28 bytes
+++ dip_prod compiled, 15 + 16 bytes
+++ dip_prodin compiled, 44 + 40 bytes
+++ dip_sum compiled, 121 + 48 bytes
+++ dip_2a compiled, 8 + 20 bytes
+++ dip_2a1 compiled, 47 + 44 bytes
+++ dip_replus compiled, 12 + 12 bytes
+++ dip_retimes compiled, 21 + 16 bytes
+++ dip_simpcont compiled, 20 + 32 bytes
+++ dip_contenti compiled, 5 + 16 bytes
+++ dip_contenti1 compiled, 15 + 24 bytes
+++ dip_reduceconti compiled, 18 + 28 bytes
+++ dip_condense compiled, 1 + 8 bytes
+++ dip_evlcomp compiled, 9 + 20 bytes
+++ dip_length compiled, 25 + 20 bytes
+++ dip_cancelmev compiled, 33 + 28 bytes
+++ dip_bcquot compiled, 8 + 16 bytes
+++ dip_bcquot1 compiled, 24 + 28 bytes
+++ dip_appendmon compiled, 6 + 12 bytes
+++ dip_nconcmon compiled, 6 + 12 bytes
+++ dip_bcprod compiled, 13 + 20 bytes
+++ dip_bcprod1 compiled, 24 + 28 bytes
+++ dip_tdeg compiled, 28 + 28 bytes
+++ dip_append compiled as link to append
+++ dip_cp compiled, 30 + 8 bytes
+++ dip_dcont compiled, 5 + 16 bytes
+++ dip_dcont1 compiled, 20 + 28 bytes
+++ dip_ilcomb compiled, 31 + 20 bytes
+++ dip_ilcombr compiled, 25 + 24 bytes
+++ dip_ilcomb1 compiled, 208 + 40 bytes
+++ dip_ilcomb2 compiled, 159 + 36 bytes
+++ dip_ilcomb1r compiled, 184 + 44 bytes
+++ dip_ilcomb2r compiled, 153 + 32 bytes
+++ dip_comp compiled, 32 + 28 bytes
+++ dip_comp1 compiled, 8 + 16 bytes
+++ dip_one compiled, 7 + 24 bytes
+++ td_vars compiled, 8 + 20 bytes
+++ td_sortmode compiled, 6 + 20 bytes
+++ td_sortextension compiled, 6 + 20 bytes
+++ td_torder compiled, 162 + 48 bytes
Completed FASL files for "dp"
+++ FASLEND: hits = 590, misses = 169



*** Compiling gbsc ... 


FASLOUT "gbsc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gbsc_strconst compiled, 193 + 92 bytes
+++ gbsc_vdpsetprod compiled, 43 + 20 bytes
+++ gbsc_hmmember compiled, 16 + 12 bytes
+++ gbsc_getlincombc compiled, 31 + 36 bytes
+++ gbsc_goodfctr compiled, 108 + 56 bytes
+++ gbsc_mkvar compiled, 46 + 16 bytes
+++ gbsc_sumbeta compiled, 58 + 48 bytes
+++ gbsc_betainit compiled, 5 + 12 bytes
+++ gbsc_betaset compiled, 68 + 24 bytes
+++ gbsc_hashfunction compiled, 28 + 24 bytes
+++ gbsc_betagetline compiled, 16 + 20 bytes
+++ gbsc_betalineget compiled, 11 + 16 bytes
+++ gbsc_betaget compiled, 25 + 24 bytes
Completed FASL files for "gbsc"
+++ FASLEND: hits = 82, misses = 48

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling rltools ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "rltools": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "rltools"
+++ FASLEND: hits = 25, misses = 72
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"



*** Compiling ioto ... 


FASLOUT "ioto": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ioto_prin2 compiled, 7 + 12 bytes
+++ ioto_tprin2 compiled, 8 + 16 bytes
+++ ioto_prin2t compiled, 7 + 16 bytes
+++ ioto_tprin2t compiled, 8 + 16 bytes
+++ ioto_prtmsg compiled, 8 + 16 bytes
+++ ioto_prin21 compiled, 39 + 24 bytes
+++ ioto_cterpri compiled, 10 + 12 bytes
+++ ioto_nterpri compiled, 16 + 8 bytes
+++ ioto_cplu compiled, 19 + 16 bytes
+++ ioto_realtime compiled, 9 + 16 bytes
+++ ioto_flush compiled as link to flush
+++ ioto_datestamp compiled as link to datestamp
Completed FASL files for "ioto"
+++ FASLEND: hits = 60, misses = 31



*** Compiling lto ... 


FASLOUT "lto": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lto_insert compiled, 8 + 8 bytes
+++ lto_insertq compiled, 8 + 8 bytes
+++ lto_quicksort compiled, 53 + 8 bytes
+++ lto_mergesort compiled, 93 + 12 bytes
+++ lto_listend compiled, 8 + 8 bytes
+++ lto_sublistp compiled, 22 + 8 bytes
+++ lto_alinsert compiled, 22 + 12 bytes
+++ lto_lengthp compiled, 26 + 16 bytes
+++ lto_catsoc compiled, 9 + 8 bytes
+++ lto_natsoc compiled, 10 + 12 bytes
+++ lto_cassoc compiled, 9 + 8 bytes
+++ lto_appendn compiled, 41 + 12 bytes
+++ lto_nconcn compiled, 11 + 8 bytes
+++ lto_alunion compiled, 4 + 16 bytes
+++ lto_almerge compiled, 60 + 12 bytes
+++ lto_idconcat2 compiled, 13 + 8 bytes
+++ lto_idconcat compiled, 46 + 12 bytes
+++ lto_sconcat2 compiled, 19 + 8 bytes
+++ lto_sconcat compiled, 14 + 12 bytes
+++ lto_at2str compiled, 14 + 12 bytes
+++ lto_max compiled, 25 + 12 bytes
+++ lto_setminus compiled, 53 + 12 bytes
+++ lto_setequalq compiled, 32 + 16 bytes
+++ delq compiled, 23 + 12 bytes
+++ delqip compiled, 14 + 12 bytes
+++ delqip1 compiled, 20 + 8 bytes
+++ adjoin compiled, 8 + 8 bytes
+++ list2set compiled, 25 + 12 bytes
+++ list2vector compiled, 34 + 12 bytes
Completed FASL files for "lto"
+++ FASLEND: hits = 125, misses = 46



*** Compiling sfto ... 


FASLOUT "sfto": IN files;  or type in expressions
When all done, execute FASLEND;
+++ sfto_dcontentf not compiled (C version available)
+++ sfto_dcontentf1 not compiled (C version available)
+++ sfto_dprpartf compiled, 6 + 16 bytes
+++ sfto_dprpartksf compiled, 6 + 16 bytes
+++ sfto_dprpartf1 compiled, 11 + 20 bytes
+++ sfto_sqfpartf compiled, 29 + 32 bytes
+++ sfto_ucontentf compiled, 11 + 12 bytes
+++ sfto_ucontentf1 compiled, 33 + 12 bytes
+++ sfto_uprpartf compiled, 6 + 16 bytes
+++ sfto_tsqsumf compiled, 32 + 20 bytes
+++ sfto_tsqsum!$ compiled, 5 + 16 bytes
+++ sfto_sqfdecf compiled, 24 + 28 bytes
+++ sfto_sqfdec!$ compiled, 73 + 32 bytes
+++ sfto_usqfdecf compiled, 20 + 40 bytes
+++ sfto_yun!-usqfdecf compiled, 74 + 44 bytes
+++ sfto_musser!-usqfdecf compiled, 67 + 40 bytes
+++ sfto_tobey!-usqfdecf compiled, 65 + 40 bytes
+++ sfto_sqdmerge compiled, 26 + 16 bytes
+++ sfto_pdecf compiled, 30 + 28 bytes
+++ sfto_updecf compiled, 14 + 32 bytes
+++ sfto_yun!-updecf compiled, 92 + 60 bytes
+++ sfto_musser!-updecf compiled, 99 + 60 bytes
+++ sfto_pdec!$ compiled, 15 + 24 bytes
+++ sfto_decdegf compiled, 8 + 20 bytes
+++ sfto_decdegf1 compiled, 29 + 20 bytes
+++ sfto_reorder compiled, 11 + 16 bytes
+++ sfto_groebnerf compiled, 79 + 24 bytes
+++ sfto_preducef compiled, 61 + 24 bytes
+++ sfto_greducef compiled, 61 + 24 bytes
+++ sfto_gcdf!* compiled, 11 + 24 bytes
+++ sfto_gcdf compiled, 29 + 32 bytes
+++ sfto_davp compiled, 50 + 16 bytes
+++ sfto_sqrtf compiled, 65 + 40 bytes
+++ sfto_monfp compiled, 20 + 8 bytes
+++ sfto_sqfpartz compiled, 4 + 16 bytes
+++ sfto_zdeqn compiled, 27 + 16 bytes
+++ sfto_zdgtn compiled, 28 + 16 bytes
+++ sfto_zdgen compiled, 28 + 16 bytes
+++ sfto_exteucf compiled, 112 + 60 bytes
+++ exteuc compiled, 87 + 40 bytes
+++ sfto_exteucd compiled, 82 + 16 bytes
+++ sfto_linp compiled, 6 + 12 bytes
+++ sfto_linp1 compiled, 81 + 16 bytes
+++ sfto_linwpp compiled, 63 + 24 bytes
+++ sfto_varf compiled, 24 + 12 bytes
+++ sfto_idvarf compiled, 29 + 16 bytes
+++ sfto_lmultf compiled, 24 + 16 bytes
+++ sfto_tdegf compiled, 49 + 12 bytes
Completed FASL files for "sfto"
+++ FASLEND: hits = 342, misses = 116

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling redlog ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "redlog": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"

*** local variable x in procedure quotelog not used 
+++ quotelog compiled, 2 + 12 bytes
+++ rl_texmacsp compiled, 4 + 16 bytes

*** local variable argl in procedure rl_getversion not used 
+++ rl_getversion_duf7qo4cdot2 compiled, 28 + 32 bytes
+++ rlabout compiled, 22 + 48 bytes
+++ rl_mkbb_96j5pxqlvdr8 compiled, 133 + 68 bytes
+++ rl_mkserv_deubimjhjkv5 compiled, 311 + 132 bytes
+++ rl_op compiled, 5 + 8 bytes
+++ rl_arg1 compiled as link to cadr
+++ rl_arg2l compiled as link to cadr
+++ rl_arg2r compiled as link to caddr
+++ rl_argn compiled as link to cdr
+++ rl_var compiled as link to cadr
+++ rl_mat compiled as link to caddr
+++ rl_b compiled as link to cadddr
+++ rl_mk1 compiled, 3 + 8 bytes
+++ rl_mk2 compiled, 5 + 8 bytes
+++ rl_mkn compiled as link to cons
+++ rl_smkn compiled, 19 + 20 bytes
+++ rl_mkq compiled, 5 + 8 bytes
+++ rl_mkbq compiled, 9 + 8 bytes
+++ rl_quap compiled, 10 + 16 bytes
+++ rl_bquap compiled, 10 + 16 bytes
+++ rl_junctp compiled, 10 + 16 bytes
+++ rl_basbp compiled, 9 + 16 bytes
+++ rl_extbp compiled, 15 + 20 bytes
+++ rl_boolp compiled, 8 + 16 bytes
+++ rl_tvalp compiled, 10 + 16 bytes
+++ rl_cxp compiled, 16 + 24 bytes
Completed FASL files for "redlog"
+++ FASLEND: hits = 680, misses = 324
Fast-loading "./reduce.img(redlog)"



*** Compiling rlami ... 


FASLOUT "rlami": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rl_mk!*fof compiled, 4 + 16 bytes
+++ rl_mk!*fof1 compiled, 36 + 48 bytes
+++ rl_reval compiled, 10 + 20 bytes
+++ rl_csimpl compiled, 13 + 24 bytes
+++ rl_prepfof compiled, 4 + 16 bytes
+++ rl_prepfof1 compiled, 100 + 52 bytes
+++ rl_cleanup compiled as link to reval1
+++ rl_simpa compiled, 124 + 16 bytes
+++ rl_simp compiled, 4 + 16 bytes
+++ rl_simp1 compiled, 137 + 76 bytes
+++ rl_simpatom compiled, 76 + 60 bytes
+++ rl_simpbop compiled, 40 + 16 bytes
+++ rl_simpq compiled, 48 + 32 bytes
+++ rl_simpbq compiled, 46 + 60 bytes
+++ rl_qvarchk compiled, 37 + 32 bytes
+++ rl_simp!*fof compiled, 45 + 40 bytes
+++ rl_resimp compiled, 128 + 76 bytes
+++ rl_gettype compiled, 12 + 16 bytes
+++ rl_redmsg compiled, 33 + 40 bytes
+++ rl_lengthlogical compiled, 4 + 16 bytes
+++ rl_lengthfof compiled, 42 + 52 bytes
+++ rl_sub!*fof compiled, 7 + 20 bytes
+++ rl_print!*fof compiled, 4 + 16 bytes
+++ rl_setprint!*fof compiled, 11 + 32 bytes
+++ rl_priq compiled, 41 + 44 bytes
+++ rl_pribq compiled, 34 + 48 bytes
+++ rl_pribound compiled, 4 + 16 bytes
+++ rl_fancybound compiled, 106 + 32 bytes
+++ rl_fancybound1 compiled, 84 + 64 bytes
+++ rl_fancybound!-try!-abs compiled, 112 + 40 bytes
+++ rl_ppriop compiled, 25 + 44 bytes
+++ rl_fancy!-ppriop compiled, 37 + 44 bytes
+++ rl_fancy!-priq compiled, 79 + 60 bytes
+++ fancy!-prin2!-underscore compiled, 25 + 32 bytes
+++ rl_fancy!-prib compiled, 7 + 20 bytes
+++ rl_fancy!-prib1 compiled, 35 + 32 bytes
+++ rl_fancy!-pribq compiled, 15 + 28 bytes
+++ rl_fancy!-pribq!-texmacs compiled, 46 + 56 bytes
+++ rl_fancy!-pribq!-texmacs2 compiled, 43 + 48 bytes
+++ rl_fancy!-pribq!-fm compiled, 32 + 48 bytes
+++ rl_interf1 compiled, 190 + 68 bytes
+++ rl_a2s!-decdeg1 compiled, 8 + 16 bytes
+++ rl_a2s!-varl compiled, 35 + 32 bytes
+++ rl_a2s!-number compiled, 10 + 20 bytes
+++ rl_a2s!-sf compiled, 5 + 16 bytes
+++ rl_a2s!-id compiled, 10 + 24 bytes
+++ rl_a2s!-atl compiled, 70 + 44 bytes
+++ rl_a2s!-posf compiled, 4 + 16 bytes
+++ rl_s2a!-simpl compiled, 9 + 24 bytes
+++ rl_s2a!-gqe compiled, 16 + 32 bytes
+++ rl_s2a!-gqea compiled, 16 + 32 bytes
+++ rl_s2a!-qea compiled, 63 + 28 bytes
+++ rl_s2a!-wqea compiled, 147 + 28 bytes
+++ rl_s2a!-opt compiled, 54 + 20 bytes
+++ rl_s2a!-atl compiled, 39 + 16 bytes
+++ rl_s2a!-ml compiled, 49 + 12 bytes
+++ rl_s2a!-term compiled, 7 + 16 bytes
+++ rl_s2a!-decdeg1 compiled, 61 + 16 bytes
+++ rl_a2s!-targfn compiled, 15 + 20 bytes
+++ rl_a2s!-terml compiled, 51 + 32 bytes
+++ rl_s2a!-terml compiled, 47 + 20 bytes
+++ rl_a2s!-term compiled, 7 + 16 bytes
+++ rl_s2a!-varl compiled, 12 + 12 bytes
+++ rl_s2a!-fbvarl compiled, 4 + 12 bytes
+++ rl_s2a!-struct compiled, 85 + 40 bytes
+++ rl_a2s!-pt compiled, 40 + 12 bytes
+++ rl_s2a!-idlist compiled, 4 + 12 bytes
+++ rl_a2s!-idlist compiled, 35 + 32 bytes
+++ rl_s2a!-qsatoptions compiled, 4 + 12 bytes
+++ rl_a2s!-qsatoptions compiled, 78 + 56 bytes
+++ rl_a2s!-string compiled, 9 + 16 bytes
+++ rl_s2a!-ghqe compiled, 11 + 16 bytes
+++ rl_a2s!-sflist compiled, 34 + 12 bytes
+++ rl_s2a!-sflistlist compiled, 112 + 16 bytes
+++ rlmkor compiled, 41 + 32 bytes
+++ rlmkand compiled, 41 + 32 bytes
Completed FASL files for "rlami"
+++ FASLEND: hits = 539, misses = 222



*** Compiling rlsched ... 


FASLOUT "rlsched": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rl_subfof compiled, 5 + 12 bytes
+++ rl_identifyonoff compiled, 4 + 12 bytes
+++ rl_simpl!$ compiled, 12 + 32 bytes
+++ rl_simpl compiled, 7 + 12 bytes
+++ rl_thsimpl!$ compiled, 12 + 24 bytes
+++ rl_thsimpl compiled, 4 + 12 bytes
+++ rl_lthsimpl compiled, 4 + 12 bytes
+++ rl_pnf!$ compiled, 12 + 24 bytes
+++ rl_pnf compiled, 4 + 12 bytes
+++ rl_apnf!$ compiled, 12 + 24 bytes
+++ rl_apnf compiled, 4 + 12 bytes
+++ rl_nnf!$ compiled, 12 + 24 bytes
+++ rl_nnf compiled, 4 + 12 bytes
+++ rl_nnfnot compiled, 4 + 12 bytes
+++ rl_rnf!$ compiled, 12 + 24 bytes
+++ rl_rnf compiled, 4 + 12 bytes
+++ rl_cnf!$ compiled, 12 + 24 bytes
+++ rl_cnf compiled, 4 + 12 bytes
+++ rl_dnf!$ compiled, 12 + 24 bytes
+++ rl_dnf compiled, 4 + 12 bytes
+++ rl_ex!$ compiled, 12 + 32 bytes
+++ rl_ex compiled, 5 + 12 bytes
+++ rl_all!$ compiled, 12 + 32 bytes
+++ rl_all compiled, 5 + 12 bytes
+++ rl_posgqe!$ compiled, 12 + 32 bytes
+++ rl_posgqe compiled, 7 + 12 bytes
+++ rl_gqe!$ compiled, 12 + 32 bytes
+++ rl_gqe compiled, 7 + 12 bytes
+++ rl_posgqea!$ compiled, 12 + 32 bytes
+++ rl_posgqea compiled, 7 + 12 bytes
+++ rl_gqea!$ compiled, 12 + 32 bytes
+++ rl_gqea compiled, 7 + 12 bytes
+++ rl_lqe!$ compiled, 12 + 24 bytes
+++ rl_lqe compiled, 7 + 12 bytes
+++ rl_qe!$ compiled, 12 + 32 bytes
+++ rl_qe compiled, 5 + 12 bytes
+++ rl_posqe!$ compiled, 12 + 32 bytes
+++ rl_posqe compiled, 5 + 12 bytes
+++ rl_qeg!$ compiled, 12 + 24 bytes
+++ rl_qeg compiled, 4 + 12 bytes
+++ rl_pqe!$ compiled, 12 + 32 bytes
+++ rl_pqe compiled, 7 + 12 bytes
+++ rl_stex!$ compiled, 12 + 24 bytes
+++ rl_stex compiled, 4 + 12 bytes
+++ rl_wqe!$ compiled, 12 + 32 bytes
+++ rl_wqe compiled, 5 + 12 bytes
+++ rl_qea!$ compiled, 12 + 32 bytes
+++ rl_qea compiled, 5 + 12 bytes
+++ rl_posqea!$ compiled, 12 + 32 bytes
+++ rl_posqea compiled, 5 + 12 bytes
+++ rl_pqea!$ compiled, 12 + 32 bytes
+++ rl_pqea compiled, 7 + 12 bytes
+++ rl_wqea!$ compiled, 12 + 32 bytes
+++ rl_wqea compiled, 5 + 12 bytes
+++ rl_zsimpl!$ compiled, 12 + 24 bytes
+++ rl_zsimpl compiled, 4 + 12 bytes
+++ rl_atnum!$ compiled, 12 + 24 bytes
+++ rl_atnum compiled, 4 + 12 bytes
+++ rl_qnum!$ compiled, 12 + 24 bytes
+++ rl_qnum compiled, 4 + 12 bytes
+++ rl_gsc!$ compiled, 12 + 32 bytes
+++ rl_gsc compiled, 5 + 12 bytes
+++ rl_gsd!$ compiled, 12 + 32 bytes
+++ rl_gsd compiled, 5 + 12 bytes
+++ rl_gsn!$ compiled, 12 + 32 bytes
+++ rl_gsn compiled, 5 + 12 bytes
+++ rl_opt!$ compiled, 12 + 32 bytes
+++ rl_opt compiled, 11 + 16 bytes
+++ rl_atl!$ compiled, 12 + 24 bytes
+++ rl_atl compiled, 4 + 12 bytes
+++ rl_atml!$ compiled, 12 + 24 bytes
+++ rl_atml compiled, 4 + 12 bytes
+++ rl_matrix!$ compiled, 12 + 24 bytes
+++ rl_matrix compiled, 4 + 12 bytes
+++ rl_ifacl!$ compiled, 12 + 24 bytes
+++ rl_ifacl compiled, 4 + 12 bytes
+++ rl_ifacml!$ compiled, 12 + 24 bytes
+++ rl_ifacml compiled, 4 + 12 bytes
+++ rl_tab!$ compiled, 12 + 24 bytes
+++ rl_tab compiled, 5 + 12 bytes
+++ rl_atab!$ compiled, 12 + 24 bytes
+++ rl_atab compiled, 4 + 12 bytes
+++ rl_itab!$ compiled, 12 + 24 bytes
+++ rl_itab compiled, 4 + 12 bytes
+++ rl_qeipo!$ compiled, 12 + 32 bytes
+++ rl_qeipo compiled, 5 + 12 bytes
+++ rl_qews!$ compiled, 12 + 32 bytes
+++ rl_qews compiled, 5 + 12 bytes
+++ rl_gentheo!$ compiled, 12 + 32 bytes
+++ rl_gentheo compiled, 7 + 12 bytes
+++ rl_tnf!$ compiled, 12 + 24 bytes
+++ rl_tnf compiled, 5 + 12 bytes
+++ rl_terml!$ compiled, 12 + 24 bytes
+++ rl_terml compiled, 4 + 12 bytes
+++ rl_termml!$ compiled, 12 + 24 bytes
+++ rl_termml compiled, 4 + 12 bytes
+++ rl_struct!$ compiled, 12 + 32 bytes
+++ rl_struct compiled, 5 + 12 bytes
+++ rl_ifstruct!$ compiled, 12 + 32 bytes
+++ rl_ifstruct compiled, 5 + 12 bytes
+++ rl_varl!$ compiled, 12 + 24 bytes
+++ rl_varl compiled, 4 + 12 bytes
+++ rl_fvarl!$ compiled, 12 + 24 bytes
+++ rl_fvarl compiled, 4 + 12 bytes
+++ rl_bvarl!$ compiled, 12 + 24 bytes
+++ rl_bvarl compiled, 4 + 12 bytes
+++ rl_decdeg1!$ compiled, 12 + 32 bytes
+++ rl_decdeg1 compiled, 5 + 12 bytes
+++ rl_decdeg!$ compiled, 12 + 24 bytes
+++ rl_decdeg compiled, 4 + 12 bytes
+++ rl_explats!$ compiled, 12 + 24 bytes
+++ rl_explats compiled, 4 + 12 bytes
+++ rl_mkcanonic!$ compiled, 12 + 24 bytes
+++ rl_mkcanonic compiled, 4 + 12 bytes
+++ rl_surep compiled, 5 + 12 bytes
+++ rl_siaddatl compiled, 5 + 12 bytes
+++ rl_xqe!$ compiled, 12 + 24 bytes
+++ rl_xqe compiled, 4 + 12 bytes
+++ rl_xqea!$ compiled, 12 + 24 bytes
+++ rl_xqea compiled, 4 + 12 bytes
+++ rl_cad!$ compiled, 12 + 32 bytes
+++ rl_cad compiled, 7 + 12 bytes
+++ rl_gcad!$ compiled, 12 + 32 bytes
+++ rl_gcad compiled, 7 + 12 bytes
+++ rl_cadporder!$ compiled, 12 + 24 bytes
+++ rl_cadporder compiled, 4 + 12 bytes
+++ rl_gcadporder!$ compiled, 12 + 24 bytes
+++ rl_gcadporder compiled, 4 + 12 bytes
+++ rl_cadproj!$ compiled, 12 + 32 bytes
+++ rl_cadproj compiled, 5 + 12 bytes
+++ rl_kapur!$ compiled, 12 + 32 bytes
+++ rl_kapur compiled, 5 + 12 bytes
+++ rl_miniscope!$ compiled, 12 + 28 bytes
+++ rl_miniscope compiled, 5 + 12 bytes
+++ rl_skolemize!$ compiled, 12 + 32 bytes
+++ rl_skolemize compiled, 5 + 12 bytes
+++ rl_qsat!$ compiled, 12 + 24 bytes
+++ rl_qsat compiled, 4 + 12 bytes
+++ rl_qsatoptions!$ compiled, 12 + 24 bytes
+++ rl_qsatoptions compiled, 4 + 12 bytes
+++ rl_qsatdimacs!$ compiled, 12 + 24 bytes
+++ rl_qsatdimacs compiled, 4 + 12 bytes
+++ rl_readdimacs!$ compiled, 12 + 24 bytes
+++ rl_readdimacs compiled, 4 + 12 bytes
+++ rl_cadswitches!$ compiled, 12 + 20 bytes
+++ rl_cadswitches compiled, 4 + 12 bytes
+++ rl_expand!$ compiled, 12 + 24 bytes
+++ rl_expand compiled, 4 + 12 bytes
+++ rl_expanda!$ compiled, 12 + 32 bytes
+++ rl_expanda compiled, 5 + 12 bytes
+++ rl_hqe!$ compiled, 12 + 24 bytes
+++ rl_hqe compiled, 4 + 12 bytes
+++ rl_ghqe!$ compiled, 12 + 24 bytes
+++ rl_ghqe compiled, 4 + 12 bytes
+++ rl_quine!$ compiled, 12 + 24 bytes
+++ rl_quine compiled, 4 + 12 bytes
+++ rl_resolve!$ compiled, 12 + 24 bytes
+++ rl_resolve compiled, 4 + 12 bytes
+++ rl_posresolve!$ compiled, 12 + 24 bytes
+++ rl_posresolve compiled, 4 + 12 bytes
+++ rl_simplat1 compiled, 5 + 12 bytes
+++ rl_smupdknowl compiled, 11 + 16 bytes
+++ rl_smrmknowl compiled, 5 + 12 bytes
+++ rl_smcpknowl compiled, 4 + 12 bytes
+++ rl_smmkatl compiled, 11 + 16 bytes
+++ rl_smsimpl!-impl compiled, 13 + 16 bytes
+++ rl_smsimpl!-equiv1 compiled, 13 + 16 bytes
+++ rl_negateat compiled, 4 + 12 bytes
+++ rl_varlat compiled, 4 + 12 bytes
+++ rl_varsubstat compiled, 7 + 12 bytes
+++ rl_translat compiled, 13 + 16 bytes
+++ rl_elimset compiled, 5 + 12 bytes
+++ rl_trygauss compiled, 13 + 16 bytes
+++ rl_varsel compiled, 7 + 12 bytes
+++ rl_betterp compiled, 5 + 12 bytes
+++ rl_qemkans compiled, 5 + 12 bytes
+++ rl_ordatp compiled, 5 + 12 bytes
+++ rl_subsumption compiled, 7 + 12 bytes
+++ rl_transform compiled, 5 + 12 bytes
+++ rl_updatr compiled, 5 + 12 bytes
+++ rl_sacat compiled, 7 + 12 bytes
+++ rl_sacatlp compiled, 5 + 12 bytes
+++ rl_bnfsimpl compiled, 5 + 12 bytes
+++ rl_fctrat compiled, 4 + 12 bytes
+++ rl_tordp compiled, 5 + 12 bytes
+++ rl_a2cdl compiled, 4 + 12 bytes
+++ rl_t2cdl compiled, 4 + 12 bytes
+++ rl_subat compiled, 5 + 12 bytes
+++ rl_subalchk compiled, 4 + 12 bytes
+++ rl_eqnrhskernels compiled, 4 + 12 bytes
+++ rl_getineq compiled, 5 + 12 bytes
+++ rl_qefsolset compiled, 13 + 16 bytes
+++ rl_bettergaussp compiled, 5 + 12 bytes
+++ rl_bestgaussp compiled, 4 + 12 bytes
+++ rl_esetunion compiled, 5 + 12 bytes
+++ rl_structat compiled, 5 + 12 bytes
+++ rl_ifstructat compiled, 5 + 12 bytes
+++ rl_termmlat compiled, 4 + 12 bytes
+++ rl_multsurep compiled, 5 + 12 bytes
+++ rl_specelim compiled, 13 + 16 bytes
+++ rl_susipost compiled, 5 + 12 bytes
+++ rl_susitf compiled, 5 + 12 bytes
+++ rl_susibin compiled, 5 + 12 bytes
+++ rl_fbqe compiled, 4 + 12 bytes
+++ rl_qscsaat compiled, 4 + 12 bytes
+++ rl_qssubat compiled, 5 + 12 bytes
+++ rl_qsconsens compiled, 7 + 12 bytes
+++ rl_qstrycons compiled, 11 + 16 bytes
+++ rl_qsimpltestccl compiled, 7 + 12 bytes
+++ rl_qssubsumep compiled, 7 + 12 bytes
+++ rl_qstautp compiled, 4 + 12 bytes
+++ rl_qssusuat compiled, 7 + 12 bytes
+++ rl_qssiadd compiled, 11 + 16 bytes
+++ rl_qssimpl compiled, 7 + 12 bytes
+++ rl_b2terml compiled, 5 + 12 bytes
+++ rl_simplb compiled, 5 + 12 bytes
+++ rl_b2atl compiled, 5 + 12 bytes
+++ rl_bsatp compiled, 5 + 12 bytes
+++ rl_prepat compiled, 4 + 12 bytes
+++ rl_simpat compiled, 4 + 12 bytes
+++ rl_rxffn compiled, 4 + 12 bytes
Completed FASL files for "rlsched"
+++ FASLEND: hits = 2785, misses = 525



*** Compiling rlcont ... 


FASLOUT "rlcont": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rl_set!$ compiled, 62 + 28 bytes
+++ rl_set compiled, 31 + 32 bytes
+++ rl_exit compiled, 79 + 32 bytes
+++ rl_enter compiled, 138 + 108 bytes
+++ rl_onp compiled, 17 + 12 bytes
+++ rl_vonoff compiled, 26 + 36 bytes
+++ rl_updcache compiled, 75 + 28 bytes
+++ rl_serviadd compiled, 7 + 16 bytes
+++ rl_bbiadd compiled, 7 + 16 bytes
+++ rl_cswadd compiled, 7 + 16 bytes
+++ rl_sbiadd compiled, 50 + 36 bytes
+++ rl_copyc compiled, 28 + 20 bytes
+++ rl_cput compiled, 12 + 12 bytes
Completed FASL files for "rlcont"
+++ FASLEND: hits = 144, misses = 89



*** Compiling rlhelp ... 


FASLOUT "rlhelp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !? compiled as link to rl_help$
+++ rl_help!$ compiled, 18 + 12 bytes
+++ rl_help compiled, 60 + 48 bytes
+++ rl_prihelpentry compiled, 111 + 72 bytes
+++ rl_priswitchentry compiled, 145 + 92 bytes
+++ rl_printhelpline compiled, 23 + 12 bytes
+++ rl_printhelpline1 compiled, 163 + 52 bytes
+++ rl_swsetting compiled, 21 + 20 bytes
+++ rl_prioverview compiled, 312 + 116 bytes
+++ rl_idl2str compiled, 78 + 24 bytes
+++ rl_prinstrl compiled, 37 + 24 bytes
+++ rl_addhelp compiled, 22 + 12 bytes
+++ rl_addswitch compiled, 22 + 12 bytes
+++ rlcheckhdb compiled, 576 + 80 bytes
Completed FASL files for "rlhelp"
+++ FASLEND: hits = 342, misses = 95

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling cl ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "cl": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
+++ cl_atfp compiled, 5 + 20 bytes
+++ cl_cxfp compiled, 4 + 16 bytes
+++ cl_atflp compiled, 13 + 12 bytes
+++ cl_ncflp compiled, 17 + 16 bytes
+++ cl_dnfp compiled, 32 + 40 bytes
+++ cl_dnfp1 compiled, 28 + 32 bytes
+++ cl_cnfp compiled, 32 + 40 bytes
+++ cl_cnfp1 compiled, 28 + 32 bytes
+++ cl_bnfp compiled, 39 + 44 bytes
Completed FASL files for "cl"
+++ FASLEND: hits = 87, misses = 143
Fast-loading "./reduce.img(cl)"



*** Compiling clsimpl ... 


FASLOUT "clsimpl": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cl_simpl compiled, 42 + 36 bytes
+++ cl_sitheo compiled, 48 + 32 bytes
+++ cl_simpl1 compiled, 265 + 156 bytes
+++ cl_simplbq compiled, 94 + 68 bytes
+++ cl_simpltb compiled, 65 + 56 bytes
+++ cl_simplstrb compiled, 204 + 88 bytes
+++ cl_negate!-invol compiled, 11 + 24 bytes
+++ cl_gand!-col compiled, 119 + 40 bytes
+++ cl_smsimpl!-junct compiled, 92 + 48 bytes

*** local variable atl in procedure cl_smsimpl-junct1 not used 
+++ cl_smsimpl!-junct1 compiled, 158 + 48 bytes
+++ cl_smsimpl!-junct2 compiled, 62 + 36 bytes
+++ cl_smsimpl!-imprep compiled, 42 + 44 bytes
+++ cl_imprep!-col compiled, 43 + 36 bytes
+++ cl_smsimpl!-imprep1 compiled, 86 + 56 bytes
+++ cl_smtvchk!-impl compiled, 25 + 32 bytes
+++ cl_smsimpl!-imprep!-atprem compiled, 73 + 56 bytes
+++ cl_smsimpl!-imprep!-atconcl compiled, 55 + 56 bytes
+++ cl_smtvchk!-equiv compiled, 33 + 32 bytes
+++ cl_smsimpl!-equiv compiled, 84 + 52 bytes
+++ cl_ordp compiled, 12 + 20 bytes
+++ cl_simplat compiled, 10 + 24 bytes
+++ cl_identifyat compiled, 19 + 16 bytes
+++ cl_smcpknowl compiled, 30 + 8 bytes

*** local variable knowl in procedure cl_smrmknowl not used 

*** local variable v in procedure cl_smrmknowl not used 
+++ cl_smrmknowl compiled, 1 + 8 bytes
+++ cl_smupdknowl compiled, 33 + 20 bytes
+++ cl_smupdknowl1 compiled, 37 + 20 bytes

*** local variable knowl in procedure cl_smmkatl not used 
+++ cl_smmkatl compiled, 99 + 20 bytes

*** local variable newknowl in procedure cl_smsimpl-impl not used 
+++ cl_smsimpl!-impl compiled, 54 + 40 bytes

*** local variable newknowl in procedure cl_smsimpl-equiv1 not used 
+++ cl_smsimpl!-equiv1 compiled, 83 + 40 bytes
+++ cl_siaddatl compiled, 72 + 64 bytes
+++ cl_susimkatl compiled, 173 + 48 bytes
+++ cl_susicpknowl compiled, 34 + 8 bytes
+++ cl_susiupdknowl compiled, 33 + 20 bytes
+++ cl_susiupdknowl1 compiled, 19 + 20 bytes
+++ cl_susiupdknowl2 compiled, 115 + 24 bytes
+++ cl_susiinter compiled, 70 + 32 bytes
+++ cl_susiminlevel compiled, 11 + 16 bytes
Completed FASL files for "clsimpl"
+++ FASLEND: hits = 347, misses = 127



*** Compiling clbnf ... 


FASLOUT "clbnf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cl_dnf compiled, 8 + 24 bytes
+++ cl_cnf compiled, 8 + 24 bytes
+++ cl_gdnf0 compiled, 45 + 36 bytes
+++ cl_gdnf compiled, 42 + 48 bytes
+++ cl_strict!-gdnf compiled, 14 + 28 bytes
+++ cl_subsume compiled, 26 + 16 bytes
+++ cl_subsume1 compiled, 60 + 32 bytes

*** local variable gor in procedure cl_setrel not used 
+++ cl_setrel compiled, 73 + 20 bytes
+++ cl_strict!-gdnf1 compiled, 387 + 60 bytes
+++ cl_mkstrict compiled, 105 + 40 bytes
+++ cl_unstrict compiled, 59 + 16 bytes
+++ cl_bnf!-cartprod compiled, 9 + 12 bytes
+++ cl_bnf!-cartprod1 compiled, 148 + 12 bytes
+++ cl_bnfsimpl compiled, 6 + 16 bytes
+++ cl_sac compiled, 152 + 48 bytes
+++ cl_applysac compiled, 37 + 16 bytes
+++ cl_applysac1 compiled, 51 + 24 bytes
+++ cl_applysac2 compiled, 71 + 36 bytes
+++ cl_subandcut compiled, 141 + 40 bytes
+++ cl_trycut compiled, 103 + 28 bytes
+++ cl_sacatl compiled, 49 + 32 bytes

*** local variable a in procedure cl_sacatlp not used 

*** local variable l in procedure cl_sacatlp not used 
+++ cl_sacatlp compiled, 2 + 12 bytes

*** local variable gor in procedure cl_sacat not used 
+++ cl_sacat compiled, 6 + 12 bytes
+++ cl_quine compiled, 34 + 32 bytes
+++ cl_qsnot compiled, 32 + 12 bytes
+++ cl_qsnot1 compiled, 32 + 12 bytes
+++ cl_bnf2set compiled, 4 + 12 bytes
+++ cl_bnf2set1 compiled, 66 + 44 bytes
+++ cl_bnf2set2 compiled, 98 + 48 bytes
+++ cl_set2bnf compiled, 46 + 16 bytes
+++ cl_qs compiled, 51 + 56 bytes
+++ cl_qscpi compiled, 102 + 28 bytes
+++ cl_qssisu compiled, 63 + 20 bytes
+++ cl_qssisutwo compiled, 69 + 16 bytes
+++ cl_qssubsumelp compiled, 17 + 12 bytes
+++ cl_qssubsumep compiled, 14 + 16 bytes
+++ cl_qsselect compiled, 160 + 72 bytes
+++ cl_qsselect1 compiled, 33 + 16 bytes
+++ cl_qsselect2 compiled, 33 + 24 bytes
+++ cl_qsspltcore compiled, 36 + 16 bytes
+++ cl_qsrmabsdisp compiled, 59 + 16 bytes
+++ cl_qsimpltestclcl compiled, 18 + 16 bytes
+++ cl_subsets compiled, 5 + 20 bytes
+++ cl_lengthp compiled, 8 + 8 bytes
+++ cl_subsets1 compiled, 34 + 8 bytes
+++ cl_qssize compiled, 20 + 12 bytes

*** local variable c1 in procedure cl_qssusubysi not used 

*** local variable c2 in procedure cl_qssusubysi not used 

*** local variable op in procedure cl_qssusubysi not used 
+++ cl_qssusubysi compiled, 3 + 16 bytes
+++ cl_qssusubyit compiled, 8 + 16 bytes

*** local variable op in procedure cl_qssusubymem not used 
+++ cl_qssusubymem compiled, 16 + 12 bytes
+++ cl_qssusubymem1 compiled, 19 + 12 bytes
+++ cl_qssusubytab compiled, 18 + 12 bytes
+++ cl_qssusubytab1 compiled, 19 + 16 bytes
+++ cl_qssusubytab2 compiled, 16 + 12 bytes
+++ cl_qssimpl compiled, 49 + 24 bytes
+++ cl_qssimplc compiled, 37 + 20 bytes

*** local variable *rlsiexpl in procedure cl_qssibysimpl not used 

*** local variable theo in procedure cl_qssibysimpl not used 
+++ cl_qssibysimpl compiled, 27 + 36 bytes
+++ cl_qsimpltestccl compiled, 39 + 28 bytes
+++ cl_qsimpltestcc compiled, 8 + 16 bytes

*** local variable cp in procedure cl_qsimpltestcc1 not used 
+++ cl_qsimpltestcc1 compiled, 26 + 28 bytes
+++ cl_qstautp compiled, 16 + 32 bytes
+++ cl_qscsa compiled, 32 + 12 bytes
+++ cl_qssub compiled, 34 + 12 bytes
+++ cl_qssubc compiled, 34 + 12 bytes
+++ cl_qscsaat compiled, 1 + 8 bytes
+++ cl_qssubat compiled, 15 + 20 bytes
+++ cl_qs1consens compiled, 33 + 16 bytes
+++ cl_qs1consens1 compiled, 22 + 12 bytes
+++ cl_qsnconsens compiled, 23 + 12 bytes
+++ cl_qsnconsens1 compiled, 33 + 16 bytes

*** local variable op in procedure cl_qstrycons not used 
+++ cl_qstrycons compiled, 56 + 32 bytes
+++ cl_ps compiled, 50 + 24 bytes
+++ cl_psnext compiled, 4 + 16 bytes
+++ cl_psnext1 compiled, 66 + 16 bytes
Completed FASL files for "clbnf"
+++ FASLEND: hits = 468, misses = 144



*** Compiling clnf ... 


FASLOUT "clnf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cl_expand!-extbool compiled, 140 + 80 bytes
+++ cl_nnf compiled, 4 + 16 bytes
+++ cl_nnfnot compiled, 4 + 12 bytes
+++ cl_nnf1 compiled, 234 + 104 bytes
+++ cl_pnf compiled, 4 + 16 bytes
+++ cl_pnf1 compiled, 22 + 20 bytes
+++ cl_pnf2 compiled, 42 + 48 bytes
+++ cl_pnf2!-quantifier compiled, 36 + 28 bytes
+++ cl_pnf2!-junctor compiled, 185 + 44 bytes
+++ cl_qb compiled, 23 + 24 bytes
+++ cl_interchange compiled, 125 + 36 bytes
+++ cl_contains!-quantifier compiled, 12 + 16 bytes
+++ cl_rename!-vars compiled, 7 + 16 bytes
+++ cl_replace!-varl compiled, 47 + 20 bytes
+++ cl_fvarl compiled, 5 + 20 bytes
+++ cl_fvarl1 compiled, 4 + 12 bytes
+++ cl_bvarl compiled, 5 + 20 bytes
+++ cl_bvarl1 compiled, 4 + 12 bytes
+++ cl_varl compiled, 13 + 20 bytes
+++ cl_varl1 compiled, 7 + 12 bytes
+++ cl_varl2 compiled, 153 + 56 bytes
+++ cl_rename!-vars1 compiled, 244 + 76 bytes
+++ cl_apnf compiled, 80 + 48 bytes
+++ cl_apnf1 compiled, 178 + 64 bytes
+++ cl_freevp compiled, 52 + 40 bytes
+++ cl_tnf compiled, 8 + 20 bytes
+++ cl_tnff compiled, 145 + 76 bytes
+++ cl_tnft compiled, 58 + 48 bytes
Completed FASL files for "clnf"
+++ FASLEND: hits = 235, misses = 95



*** Compiling clqe ... 


FASLOUT "clqe": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cl_comember compiled, 13 + 8 bytes
+++ cl_gqe compiled, 28 + 40 bytes
+++ cl_gqea compiled, 26 + 36 bytes
+++ cl_lqe compiled, 149 + 76 bytes
+++ cl_qe compiled, 14 + 28 bytes
+++ cl_qea compiled, 16 + 32 bytes
+++ cl_qe1 compiled, 876 + 196 bytes
+++ cl_qeblock compiled, 97 + 28 bytes
+++ cl_qeblock1 compiled, 23 + 20 bytes
+++ cl_qeblock2 compiled, 40 + 36 bytes
+++ cl_qeblock3 compiled, 453 + 148 bytes
+++ cl_qevar compiled, 405 + 140 bytes
+++ cl_esetsubst compiled, 201 + 60 bytes
+++ cl_updans compiled, 16 + 8 bytes
+++ cl_qeatal compiled, 11 + 16 bytes
+++ cl_qeatal1 compiled, 264 + 76 bytes
+++ cl_alpunion compiled, 30 + 20 bytes
+++ cl_save compiled, 8 + 20 bytes
+++ cl_push compiled, 18 + 12 bytes
+++ cl_coinsert compiled, 8 + 12 bytes
+++ cl_enqueue compiled, 42 + 20 bytes
+++ cl_get compiled, 8 + 20 bytes
+++ cl_pop compiled, 1 + 8 bytes
+++ cl_dequeue compiled, 18 + 8 bytes
+++ cl_colength compiled, 11 + 12 bytes
+++ cl_betterp compiled, 26 + 32 bytes
+++ cl_betterp!-count compiled, 21 + 16 bytes
+++ cl_qeipo compiled, 21 + 28 bytes
+++ cl_qeipo1 compiled, 196 + 76 bytes
+++ cl_qews compiled, 113 + 56 bytes
+++ cl_qews1 compiled, 56 + 36 bytes
+++ cl_trygauss compiled, 24 + 20 bytes
+++ cl_trygauss1 compiled, 70 + 44 bytes
+++ cl_trygaussvar compiled, 48 + 44 bytes
+++ cl_gaussand compiled, 45 + 20 bytes
+++ cl_gaussor compiled, 44 + 20 bytes
+++ cl_gaussunion compiled, 50 + 32 bytes
+++ cl_gaussintersection compiled, 33 + 16 bytes

*** local variable f in procedure cl_specelim not used 

*** local variable vl in procedure cl_specelim not used 

*** local variable theo in procedure cl_specelim not used 

*** local variable ans in procedure cl_specelim not used 

*** local variable bvl in procedure cl_specelim not used 
+++ cl_specelim compiled, 3 + 12 bytes
+++ cl_fbqe compiled, 5 + 20 bytes
Completed FASL files for "clqe"
+++ FASLEND: hits = 376, misses = 170



*** Compiling cltab ... 


FASLOUT "cltab": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cl_tab compiled, 4 + 16 bytes
+++ cl_tab1 compiled, 59 + 36 bytes
+++ cl_mktf compiled, 125 + 40 bytes
+++ cl_atab compiled, 10 + 16 bytes
+++ cl_atab1 compiled, 93 + 68 bytes
+++ cl_itab compiled, 8 + 20 bytes
+++ cl_itab1 compiled, 24 + 28 bytes
+++ cl_itab2 compiled, 49 + 16 bytes
+++ cl_gentheo compiled, 11 + 20 bytes
+++ cl_gentheo0 compiled, 22 + 12 bytes
+++ cl_gentheo1 compiled, 51 + 32 bytes
+++ cl_cmpfp compiled, 8 + 12 bytes
Completed FASL files for "cltab"
+++ FASLEND: hits = 71, misses = 42



*** Compiling clmisc ... 


FASLOUT "clmisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cl_apply2ats compiled, 6 + 12 bytes
+++ cl_apply2ats1 compiled, 119 + 60 bytes
+++ cl_apply2ats2 compiled, 101 + 48 bytes
+++ cl_atnum compiled, 63 + 48 bytes
+++ cl_qnum compiled, 56 + 40 bytes
+++ cl_prenexp compiled, 22 + 32 bytes
+++ cl_f2ml compiled, 90 + 48 bytes
+++ lambda_kw1iu16qswwe compiled, 4 + 12 bytes
+++ cl_atml compiled, 5 + 20 bytes
+++ cl_atml1 compiled, 4 + 16 bytes
+++ cl_atmlc compiled, 5 + 12 bytes
+++ cl_atl compiled, 5 + 20 bytes
+++ cl_atl1 compiled, 31 + 12 bytes

*** local variable b in procedure cl_identifyonoff not used 
+++ cl_identifyonoff compiled, 3 + 12 bytes
+++ lambda_e2pvnxopzk65 compiled, 4 + 12 bytes
+++ cl_ifacml compiled, 5 + 20 bytes
+++ cl_ifacml1 compiled, 4 + 16 bytes
+++ cl_ifacl compiled, 5 + 20 bytes
+++ cl_ifacl1 compiled, 31 + 12 bytes
+++ cl_matrix compiled, 11 + 20 bytes
+++ cl_closure compiled, 45 + 20 bytes
+++ cl_all compiled, 5 + 16 bytes
+++ cl_ex compiled, 5 + 16 bytes
+++ cl_flip compiled, 51 + 48 bytes
+++ cl_cflip compiled, 6 + 12 bytes
+++ cl_subfof compiled, 51 + 32 bytes
+++ cl_subfof1 compiled, 431 + 72 bytes
+++ cl_newv compiled, 52 + 24 bytes
+++ cl_subvarsubstat compiled, 103 + 44 bytes
+++ cl_subfvarl compiled, 4 + 12 bytes
+++ cl_subfvarl1 compiled, 124 + 44 bytes
+++ lambda_e2pvnxopzk65 compiled, 4 + 12 bytes
+++ cl_termml compiled, 5 + 20 bytes
+++ cl_termml1 compiled, 4 + 16 bytes
+++ cl_terml compiled, 5 + 20 bytes
+++ cl_terml1 compiled, 31 + 12 bytes
+++ cl_struct compiled, 60 + 24 bytes
+++ cl_struct1 compiled, 8 + 16 bytes
+++ cl_ifstruct compiled, 60 + 24 bytes
+++ cl_ifstruct1 compiled, 8 + 16 bytes
+++ cl_surep compiled, 26 + 32 bytes
+++ cl_splt compiled, 65 + 24 bytes
+++ cl_atl2b compiled, 8 + 20 bytes
Completed FASL files for "clmisc"
+++ FASLEND: hits = 288, misses = 101



*** Compiling clresolv ... 


FASLOUT "clresolv": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rc_term compiled as link to car
+++ rc_guard compiled as link to cadr
+++ rc_ql compiled as link to caddr
+++ rc_mk compiled, 5 + 8 bytes
+++ cl_resolve compiled, 4 + 16 bytes
+++ cl_resolveat compiled, 15 + 32 bytes
+++ cl_resolve1 compiled, 56 + 20 bytes
+++ cl_transrc compiled, 27 + 16 bytes
+++ cl_transrc1 compiled, 36 + 32 bytes
+++ cl_resolve2 compiled, 66 + 32 bytes
+++ cl_cartprod compiled, 230 + 24 bytes
+++ cl_resolve!-simple compiled, 58 + 20 bytes
+++ cl_resolve!-xfn compiled, 45 + 16 bytes
+++ cl_rxffn!-max compiled, 66 + 32 bytes
+++ cl_maxcond compiled, 74 + 24 bytes

*** local variable op in procedure cl_rxffn-abs not used 
+++ cl_rxffn!-abs compiled, 53 + 44 bytes

*** local variable op in procedure cl_rxffn-sign not used 
+++ cl_rxffn!-sign compiled, 71 + 52 bytes

*** local variable op in procedure cl_rxffn-sqrt not used 
+++ cl_rxffn!-sqrt compiled, 51 + 52 bytes
Completed FASL files for "clresolv"
+++ FASLEND: hits = 109, misses = 56

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling ofsf ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "ofsf": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(redlog)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(rlami)"
Fast-loading "./reduce.img(rlsched)"
Fast-loading "./reduce.img(rlcont)"
Fast-loading "./reduce.img(rlhelp)"
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"
Fast-loading "./reduce.img(linalg)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(lamatrix)"
Fast-loading "./reduce.img(gramschm)"
Fast-loading "./reduce.img(ludecom)"
Fast-loading "./reduce.img(cholesky)"
Fast-loading "./reduce.img(svd)"
Fast-loading "./reduce.img(simplex)"
Fast-loading "./reduce.img(tadjoint)"
Fast-loading "./reduce.img(factor)"
Fast-loading "./reduce.img(ezgcd)"
Fast-loading "./reduce.img(alphas)"
Fast-loading "./reduce.img(coeffts)"
Fast-loading "./reduce.img(ezgcdf)"
Fast-loading "./reduce.img(facmisc)"
Fast-loading "./reduce.img(facstr)"
Fast-loading "./reduce.img(interfac)"
Fast-loading "./reduce.img(linmodp)"
Fast-loading "./reduce.img(mhensfns)"
Fast-loading "./reduce.img(modpoly)"
Fast-loading "./reduce.img(multihen)"
Fast-loading "./reduce.img(unihens)"
Fast-loading "./reduce.img(bigmodp)"
Fast-loading "./reduce.img(degsets)"
Fast-loading "./reduce.img(facprim)"
Fast-loading "./reduce.img(facmod)"
Fast-loading "./reduce.img(facuni)"
Fast-loading "./reduce.img(imageset)"
Fast-loading "./reduce.img(pfactor)"
Fast-loading "./reduce.img(vecpoly)"
Fast-loading "./reduce.img(pfacmult)"
+++ ofsf_simpterm compiled, 4 + 12 bytes
+++ ofsf_prepat compiled, 13 + 24 bytes
+++ ofsf_resimpat compiled, 19 + 32 bytes

*** local variable f in procedure ofsf_lengthat not used 
+++ ofsf_lengthat compiled, 2 + 12 bytes
+++ ofsf_chsimpat compiled, 41 + 24 bytes
+++ ofsf_chsimpat1 compiled, 45 + 16 bytes
+++ ofsf_simpat compiled, 141 + 68 bytes
+++ ofsf_op compiled as link to car
+++ ofsf_arg2l compiled as link to cadr
+++ ofsf_arg2r compiled as link to caddr
+++ ofsf_argn compiled, 6 + 8 bytes
+++ ofsf_mk2 compiled, 5 + 8 bytes
+++ ofsf_0mk2 compiled, 6 + 8 bytes
+++ ofsf_mkn compiled, 7 + 8 bytes
+++ ofsf_opp compiled, 5 + 12 bytes
+++ ofsf_mkstrict compiled, 11 + 24 bytes
Completed FASL files for "ofsf"
+++ FASLEND: hits = 205, misses = 539
Fast-loading "./reduce.img(ofsf)"
Fast-loading "./reduce.img(cgb)"
Fast-loading "./reduce.img(gb)"
Fast-loading "./reduce.img(dp)"
Fast-loading "./reduce.img(gbsc)"



*** Compiling ofsfsiat ... 


FASLOUT "ofsfsiat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_simplat1 compiled, 101 + 108 bytes
+++ ofsf_simplequal compiled, 47 + 52 bytes
+++ ofsf_tsqsplequal compiled, 181 + 48 bytes
+++ ofsf_facequal!* compiled, 17 + 36 bytes
+++ ofsf_facequal compiled, 44 + 28 bytes
+++ ofsf_simplneq compiled, 47 + 52 bytes
+++ ofsf_tsqsplneq compiled, 181 + 48 bytes
+++ ofsf_facneq!* compiled, 16 + 36 bytes
+++ ofsf_facneq compiled, 44 + 28 bytes
+++ ofsf_getsqsummons compiled, 45 + 16 bytes
+++ ofsf_simplleq compiled, 225 + 112 bytes
+++ ofsf_facsimpl compiled, 53 + 24 bytes
+++ ofsf_simplgeq compiled, 184 + 96 bytes
+++ ofsf_simpllessp compiled, 184 + 96 bytes
+++ ofsf_simplgreaterp compiled, 237 + 120 bytes
+++ ofsf_evalatp compiled, 62 + 48 bytes
+++ ofsf_posdefp compiled, 8 + 20 bytes
+++ ofsf_posdefp!-pos compiled, 7 + 16 bytes
+++ ofsf_posdefp!-pos1 compiled, 22 + 16 bytes
Completed FASL files for "ofsfsiat"
+++ FASLEND: hits = 241, misses = 72



*** Compiling ofsfsism ... 


FASLOUT "ofsfsism": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_smwupdknowl compiled, 17 + 20 bytes
+++ ofsf_smwrmknowl compiled, 8 + 20 bytes
+++ ofsf_smwcpknowl compiled, 8 + 20 bytes
+++ ofsf_smwmkatl compiled, 17 + 20 bytes
+++ ofsf_smrmknowl compiled, 21 + 16 bytes
+++ ofsf_smcpknowl compiled, 40 + 8 bytes
+++ ofsf_smupdknowl compiled, 52 + 32 bytes
+++ ofsf_smmkatl compiled, 14 + 20 bytes
+++ ofsf_smmkatl!-and compiled, 87 + 36 bytes
+++ ofsf_smmkatl!-and1 compiled, 107 + 32 bytes
+++ ofsf_smmkat!-and2 compiled, 51 + 48 bytes
+++ ofsf_smmkatl!-or compiled, 76 + 24 bytes
+++ ofsf_smmkatl!-or1 compiled, 107 + 32 bytes
+++ ofsf_smmkat!-or2 compiled, 68 + 56 bytes
+++ ofsf_smdbgetrel compiled, 16 + 8 bytes
+++ ofsf_at2ir compiled, 51 + 40 bytes
+++ ofsf_irl2atl compiled, 45 + 16 bytes
+++ ofsf_ir2atl compiled, 65 + 20 bytes
+++ ofsf_entry2at compiled, 14 + 20 bytes
+++ ofsf_entry2at1 compiled, 14 + 24 bytes
+++ ofsf_sminsert compiled, 122 + 28 bytes
+++ ofsf_sminsert1 compiled, 96 + 36 bytes
+++ ofsf_smeqtable compiled, 20 + 12 bytes
+++ ofsf_smordtable compiled, 12 + 12 bytes
+++ ofsf_susirmknowl compiled, 57 + 16 bytes
+++ ofsf_susibin compiled, 25 + 28 bytes
+++ ofsf_susibinmult compiled, 72 + 32 bytes

*** local variable prod in procedure ofsf_susibinmult1 not used 
+++ ofsf_susibinmult1 compiled, 92 + 56 bytes
+++ ofsf_wop compiled, 5 + 12 bytes
+++ ofsf_susibinmulttab compiled, 11 + 12 bytes
+++ ofsf_susibinad compiled, 59 + 32 bytes
+++ ofsf_susibineq compiled, 37 + 36 bytes
+++ ofsf_susidec compiled, 39 + 32 bytes

*** local variable nt in procedure ofsf_susibinord not used 
+++ ofsf_susibinord compiled, 84 + 40 bytes
+++ ofsf_susipost compiled, 6 + 16 bytes
+++ ofsf_susigs compiled, 148 + 48 bytes
+++ ofsf_susitf compiled, 96 + 56 bytes
Completed FASL files for "ofsfsism"
+++ FASLEND: hits = 476, misses = 106



*** Compiling ofsfbnf ... 


FASLOUT "ofsfbnf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_dnf compiled, 16 + 28 bytes
+++ ofsf_cnf compiled, 16 + 28 bytes
+++ ofsf_subsumption compiled, 30 + 28 bytes
+++ ofsf_subsumep!-and compiled, 22 + 20 bytes
+++ ofsf_subsumep!-or compiled, 26 + 28 bytes
+++ ofsf_sacatlp compiled, 21 + 20 bytes
+++ ofsf_sacat compiled, 30 + 28 bytes
+++ ofsf_sacrel compiled, 9 + 20 bytes
+++ ofsf_sacrel!-or compiled, 12 + 12 bytes
+++ ofsf_sacrel!-and compiled, 12 + 12 bytes
+++ ofsf_qssubat compiled, 27 + 32 bytes
+++ ofsf_qssubatfind compiled, 22 + 12 bytes
+++ ofsf_qssubatrel compiled, 13 + 12 bytes
+++ ofsf_qstrycons compiled, 67 + 44 bytes
+++ ofsf_qstrycons!-or compiled, 18 + 16 bytes
+++ ofsf_qsflip compiled, 10 + 20 bytes
+++ ofsf_qstrycons!-find compiled, 22 + 12 bytes

*** local variable op in procedure ofsf_qssusuat not used 
+++ ofsf_qssusuat compiled, 18 + 20 bytes
+++ ofsf_qssusutab compiled, 13 + 12 bytes

*** local variable theo in procedure ofsf_qssiadd not used 
+++ ofsf_qssiadd compiled, 25 + 24 bytes
+++ ofsf_qssibin compiled, 20 + 28 bytes
+++ ofsf_qssifind compiled, 22 + 12 bytes
+++ ofsf_qssirel compiled, 13 + 12 bytes
Completed FASL files for "ofsfbnf"
+++ FASLEND: hits = 484, misses = 64



*** Compiling ofsfqe ... 


FASLOUT "ofsfqe": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_posqe compiled, 12 + 28 bytes
+++ ofsf_posqea compiled, 12 + 28 bytes
+++ ofsf_posgqe compiled, 14 + 28 bytes
+++ ofsf_posgqea compiled, 14 + 28 bytes
+++ ofsf_posqe!-prep compiled, 4 + 12 bytes
+++ ofsf_qe compiled, 22 + 40 bytes
+++ ofsf_qea compiled, 22 + 40 bytes
+++ ofsf_varsel compiled, 14 + 20 bytes

*** local variable theo in procedure ofsf_varsel-try not used 
+++ ofsf_varsel!-try compiled, 598 + 64 bytes

*** local variable theo in procedure ofsf_varsel-classic not used 
+++ ofsf_varsel!-classic compiled, 335 + 64 bytes
+++ ofsf_linp compiled, 49 + 40 bytes
+++ ofsf_qscp compiled, 48 + 36 bytes
+++ ofsf_pseudp compiled, 23 + 16 bytes
+++ ofsf_qesubcr1 compiled, 31 + 28 bytes
+++ ofsf_qesubcr2 compiled, 43 + 32 bytes
+++ ofsf_qesubr compiled, 37 + 32 bytes
+++ ofsf_qesubrat compiled, 17 + 24 bytes
+++ ofsf_qesubrat1 compiled, 88 + 48 bytes
+++ ofsf_qesubreq compiled, 14 + 20 bytes
+++ ofsf_qesubreq1 compiled, 38 + 48 bytes
+++ ofsf_qesubrord compiled, 31 + 28 bytes
+++ ofsf_qesubrord1 compiled, 85 + 56 bytes
+++ ofsf_getsubrcoeffs compiled, 129 + 56 bytes
+++ ofsf_qesubcq compiled, 31 + 28 bytes
+++ ofsf_qesubq compiled, 8 + 16 bytes
+++ ofsf_qesubqat compiled, 77 + 64 bytes
+++ ofsf_qesubqat!-local compiled, 41 + 40 bytes

*** local variable bvl in procedure ofsf_qesubi not used 

*** local variable theo in procedure ofsf_qesubi not used 
+++ ofsf_qesubi compiled, 12 + 16 bytes
+++ ofsf_qesubiat compiled, 36 + 36 bytes
+++ ofsf_qesubtranseq compiled, 10 + 20 bytes
+++ ofsf_qesubtransequal compiled, 5 + 16 bytes
+++ ofsf_qesubtransequal1 compiled, 36 + 28 bytes
+++ ofsf_qesubiord compiled, 9 + 16 bytes
+++ ofsf_qesubiord1 compiled, 68 + 44 bytes
+++ ofsf_qesubcrpe1 compiled, 31 + 28 bytes
+++ ofsf_qesubcrme1 compiled, 31 + 28 bytes
+++ ofsf_qesubcrpe2 compiled, 43 + 32 bytes
+++ ofsf_qesubcrme2 compiled, 43 + 32 bytes
+++ ofsf_qesubrpe compiled, 14 + 24 bytes
+++ ofsf_qesubrme compiled, 14 + 20 bytes
+++ ofsf_qesubcqpe compiled, 31 + 28 bytes
+++ ofsf_qesubcqme compiled, 31 + 28 bytes
+++ ofsf_qesubqpe compiled, 14 + 24 bytes
+++ ofsf_qesubqme compiled, 14 + 20 bytes
+++ ofsf_qesubpmeat compiled, 45 + 36 bytes
+++ ofsf_qesubpmeord compiled, 48 + 48 bytes
+++ ofsf_subsimpl compiled, 119 + 64 bytes
+++ ofsf_valassp compiled, 16 + 24 bytes
+++ ofsf_translat compiled, 73 + 56 bytes
+++ ofsf_translat1 compiled, 126 + 44 bytes
+++ ofsf_translat2 compiled, 27 + 16 bytes
+++ ofsf_translatlin compiled, 69 + 60 bytes
+++ ofsf_translatlin!-local compiled, 56 + 40 bytes
+++ ofsf_tlltag compiled, 89 + 76 bytes
+++ ofsf_tlltag!-local compiled, 7 + 12 bytes

*** local variable theo in procedure ofsf_tlltag-local1 not used 
+++ ofsf_tlltag!-local1 compiled, 77 + 56 bytes
+++ ofsf_translatqua compiled, 278 + 120 bytes
+++ ofsf_surep compiled, 9 + 20 bytes
+++ ofsf_mktriplel compiled, 126 + 64 bytes
+++ ofsf_mktriple compiled, 36 + 12 bytes
+++ ofsf_reotrip compiled, 13 + 12 bytes
+++ ofsf_mksol1 compiled, 11 + 20 bytes
+++ ofsf_mksol2 compiled, 140 + 108 bytes
+++ ofsf_mksol21q compiled, 22 + 16 bytes
+++ ofsf_mksol21r compiled, 18 + 16 bytes
+++ rlqelog compiled, 47 + 16 bytes
+++ ofsf_elimset compiled, 96 + 84 bytes
+++ ofsf_elimsetscq compiled, 130 + 84 bytes
+++ ofsf_elimsetlinbs compiled, 68 + 56 bytes
+++ ofsf_elimsetneqbs compiled, 57 + 52 bytes
+++ ofsf_elimsetscl compiled, 191 + 100 bytes
+++ ofsf_elimsetlin1s compiled, 199 + 92 bytes
+++ ofsf_filterbounds compiled, 73 + 36 bytes
+++ ofsf_elimsetqua compiled, 133 + 84 bytes
+++ ofsf_elimsetneq compiled, 214 + 108 bytes
+++ ofsf_bettergaussp compiled, 78 + 28 bytes
+++ ofsf_esetlength compiled, 39 + 12 bytes
+++ ofsf_esetunion compiled, 4 + 12 bytes
+++ ofsf_bestgaussp compiled, 40 + 28 bytes
+++ ofsf_qefsolset compiled, 51 + 52 bytes
+++ ofsf_findeqsol compiled, 63 + 44 bytes
+++ ofsf_mkgtag compiled, 52 + 44 bytes

*** local variable theo in procedure ofsf_mkgtagq not used 
+++ ofsf_mkgtagq compiled, 29 + 32 bytes
+++ ofsf_gelimset compiled, 69 + 56 bytes
+++ ofsf_pnontrivial compiled, 46 + 24 bytes
+++ ofsf_maybenonzerol compiled, 24 + 16 bytes
+++ ofsf_maybenonzero compiled, 62 + 76 bytes

*** local variable theo in procedure ofsf_maybenonzero-local not used 

*** local variable bvl in procedure ofsf_maybenonzero-local not used 
+++ ofsf_maybenonzero!-local compiled, 23 + 36 bytes

*** local variable atr in procedure ofsf_qemkans not used 
+++ lambda_63ircqeulrd3 compiled, 6 + 12 bytes
+++ ofsf_qemkans compiled, 8 + 28 bytes

*** local variable ioe in procedure ofsf_qemkans1 not used 
+++ ofsf_qemkans1 compiled, 322 + 80 bytes
+++ ofsf_newinfinity compiled, 4 + 16 bytes
+++ ofsf_newepsilon compiled, 18 + 32 bytes

*** local variable rhs in procedure ofsf_qebacksub not used 

*** local variable atr in procedure ofsf_qebacksub not used 
+++ ofsf_qebacksub compiled, 71 + 20 bytes
+++ ofsf_qeapplyatr compiled, 89 + 24 bytes
+++ ofsf_croot compiled, 18 + 24 bytes
+++ ofsf_preprexpr compiled, 26 + 36 bytes
+++ ofsf_decdeg compiled, 5 + 16 bytes
+++ ofsf_decdeg0 compiled, 147 + 68 bytes
+++ ofsf_decdeg1 compiled, 51 + 32 bytes
+++ ofsf_decdeg2 compiled, 100 + 60 bytes
+++ ofsf_transform compiled, 52 + 60 bytes
+++ ofsf_ignshift compiled, 38 + 36 bytes
+++ ofsf_decdeg3 compiled, 8 + 16 bytes
+++ ofsf_decdegat compiled, 17 + 28 bytes
+++ ofsf_updatr compiled, 3 + 8 bytes
+++ ofsf_thsimpl compiled, 20 + 48 bytes
+++ ofsf_thregen compiled, 60 + 36 bytes
+++ ofsf_thregen!-and compiled, 5 + 16 bytes
+++ ofsf_thregen!-or compiled, 46 + 52 bytes
+++ ofsf_thregen!-equal compiled, 41 + 48 bytes
+++ ofsf_thregen!-neq compiled, 41 + 52 bytes
+++ ofsf_specelim compiled, 19 + 24 bytes

*** local variable ans in procedure ofsf_sqsc not used 

*** local variable bvl in procedure ofsf_sqsc not used 
+++ ofsf_sqsc compiled, 106 + 60 bytes
+++ ofsf_sqsc1 compiled, 72 + 28 bytes
+++ ofsf_sqsc1at compiled, 273 + 104 bytes
+++ ofsf_sqsc!-test compiled, 35 + 24 bytes
+++ ofsf_lthsimpl compiled, 36 + 48 bytes
+++ ofsf_cj2atl compiled, 21 + 36 bytes
+++ ofsf_fbqe compiled, 13 + 28 bytes

*** local variable v in procedure ofsf_elimset-precise not used 
+++ ofsf_elimset!-precise compiled, 9 + 20 bytes
+++ ofsf_elimsetq!-precise compiled, 251 + 96 bytes
+++ ofsf_avgq compiled, 22 + 32 bytes
+++ ofsf_elimsetr!-precise compiled, 40 + 40 bytes
+++ ofsf_qeg compiled, 251 + 92 bytes
Completed FASL files for "ofsfqe"
+++ FASLEND: hits = 1459, misses = 407



*** Compiling ofsfopt ... 


FASLOUT "ofsfopt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_sendtask compiled, 25 + 20 bytes
+++ ofsf_optmaster compiled, 253 + 112 bytes
+++ ofsf_opt compiled, 23 + 24 bytes
+++ ofsf_opt0 compiled, 46 + 32 bytes
+++ ofsf_opt1 compiled, 40 + 44 bytes
+++ ofsf_varl compiled, 20 + 16 bytes
+++ ofsf_opt2 compiled, 464 + 184 bytes
+++ ofsf_qevar compiled, 107 + 60 bytes
+++ ofsf_optgauss compiled, 49 + 36 bytes
+++ ofsf_optfindeqsol compiled, 40 + 36 bytes
+++ ofsf_esetsubst compiled, 325 + 72 bytes
+++ ofsf_zesetsubst compiled, 214 + 64 bytes
+++ ofsf_optsubstat compiled, 25 + 32 bytes
+++ ofsf_optsplitterm compiled, 40 + 44 bytes
+++ ofsf_simpl compiled, 49 + 56 bytes

*** local variable pl in procedure ofsf_opteset not used 
+++ ofsf_opteset compiled, 196 + 60 bytes
+++ ofsf_boundchk compiled, 86 + 72 bytes
+++ ofsf_zboundchk compiled, 99 + 64 bytes
+++ ofsf_xor compiled, 13 + 12 bytes
+++ ofsf_getvalue compiled, 65 + 52 bytes
+++ ofsf_optlbp compiled, 6 + 16 bytes
+++ lambda_lgnxmrj9qsi3 compiled, 4 + 12 bytes
+++ ofsf_backsub compiled, 8 + 20 bytes
+++ ofsf_backsub1 compiled, 52 + 16 bytes
+++ ofsf_backsub2 compiled, 67 + 16 bytes
+++ ofsf_optsubsq compiled, 22 + 20 bytes
+++ ofsf_optmkans compiled, 204 + 44 bytes
+++ ofsf_optmksol compiled, 32 + 40 bytes
+++ ofsf_save compiled, 8 + 20 bytes
+++ ofsf_push compiled, 18 + 12 bytes
+++ ofsf_coinsert compiled, 8 + 12 bytes
+++ ofsf_enqueue compiled, 42 + 20 bytes
+++ ofsf_get compiled, 8 + 20 bytes
+++ ofsf_pop compiled, 1 + 8 bytes
+++ ofsf_dequeue compiled, 18 + 8 bytes
+++ ofsf_colength compiled, 11 + 12 bytes
+++ ofsf_comember compiled, 27 + 8 bytes
Completed FASL files for "ofsfopt"
+++ FASLEND: hits = 333, misses = 147



*** Compiling ofsfgs ... 


FASLOUT "ofsfgs": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_gsc compiled, 22 + 36 bytes
+++ ofsf_gsc1 compiled, 68 + 60 bytes
+++ ofsf_gsd compiled, 22 + 36 bytes
+++ ofsf_gsd1 compiled, 74 + 60 bytes
+++ ofsf_gsn compiled, 32 + 36 bytes
+++ ofsf_gssimplify0 compiled, 7 + 16 bytes
+++ ofsf_gssimplify compiled, 130 + 100 bytes
+++ ofsf_gspreducef compiled, 15 + 24 bytes
+++ ofsf_gsgreducef compiled, 15 + 28 bytes
+++ ofsf_gsgbf compiled, 10 + 24 bytes
+++ ofsf_gsvl compiled, 11 + 20 bytes
+++ ofsf_gssm compiled, 6 + 20 bytes
+++ ofsf_gssx compiled, 5 + 16 bytes
+++ ofsf_gsinctheop compiled, 28 + 52 bytes
+++ ofsf_gssplit!-cnf compiled, 148 + 88 bytes
+++ ofsf_gsdis!-type compiled, 29 + 28 bytes
+++ ofsf_gsextract!-gp compiled, 51 + 20 bytes
+++ ofsf_gsgprem compiled, 20 + 40 bytes
+++ ofsf_gspart compiled, 84 + 32 bytes
+++ ofsf_gsimplication compiled, 132 + 76 bytes
+++ ofsf_gsredatl compiled, 44 + 20 bytes
+++ ofsf_gsusepremise compiled, 29 + 16 bytes
+++ ofsf_gseqprod compiled, 61 + 64 bytes
+++ ofsf_gsmkradvar compiled, 24 + 32 bytes
+++ ofsf_gsupdtorder compiled, 26 + 36 bytes
+++ ofsf_gstryeval compiled, 36 + 28 bytes
+++ ofsf_gsdis2impl compiled, 79 + 44 bytes
+++ ofsf_gsattype compiled, 30 + 32 bytes
+++ ofsf_gsredat compiled, 83 + 72 bytes
+++ ofsf_gspremise compiled, 108 + 36 bytes
+++ ofsf_gssimulateprod compiled, 81 + 32 bytes
Completed FASL files for "ofsfgs"
+++ FASLEND: hits = 275, misses = 120



*** Compiling ofsfmisc ... 


FASLOUT "ofsfmisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_termprint compiled, 15 + 28 bytes
+++ ofsf_canegrel compiled, 6 + 12 bytes
+++ ofsf_anegrel compiled, 13 + 20 bytes
+++ ofsf_clnegrel compiled, 6 + 12 bytes
+++ ofsf_lnegrel compiled, 38 + 40 bytes
+++ ofsf_fctrat compiled, 5 + 16 bytes
+++ ofsf_negateat compiled, 9 + 24 bytes
+++ ofsf_varlat compiled, 4 + 16 bytes
+++ ofsf_varsubstat compiled, 15 + 24 bytes
+++ ofsf_ordatp compiled, 21 + 24 bytes
+++ ofsf_ordrelp compiled, 10 + 16 bytes
+++ ofsf_a2cdl compiled, 107 + 44 bytes
+++ ofsf_t2cdl compiled, 14 + 24 bytes
+++ ofsf_subat compiled, 13 + 32 bytes
+++ ofsf_suba compiled, 49 + 12 bytes
+++ ofsf_subalchk compiled, 38 + 28 bytes
+++ ofsf_eqnrhskernels compiled, 12 + 16 bytes
+++ ofsf_getineq compiled, 31 + 32 bytes
+++ ofsf_structat compiled, 22 + 24 bytes
+++ ofsf_ifstructat compiled, 39 + 36 bytes
+++ ofsf_termmlat compiled, 11 + 16 bytes
+++ ofsf_multsurep compiled, 10 + 24 bytes
+++ ofsf_multsurep!-equal compiled, 32 + 28 bytes
+++ ofsf_multsurep!-neq compiled, 32 + 28 bytes
+++ ofsf_posprep compiled, 260 + 92 bytes
+++ ofsf_lpvarl compiled, 66 + 32 bytes
+++ ofsf_arithp compiled, 5 + 12 bytes
+++ ofsf_resolve compiled, 4 + 12 bytes
+++ ofsf_posresolve compiled, 6 + 20 bytes
+++ ofsf_resolve21 compiled, 39 + 40 bytes
+++ ofsf_resolve2topminmax compiled, 48 + 40 bytes
+++ ofsf_resolveminmax compiled, 72 + 44 bytes

*** local variable op in procedure ofsf_rxffn-abs not used 
+++ ofsf_rxffn!-abs compiled, 102 + 60 bytes
+++ ofsf_rxffn compiled, 30 + 44 bytes
Completed FASL files for "ofsfmisc"
+++ FASLEND: hits = 253, misses = 115



*** Compiling ofsfcad ... 


FASLOUT "ofsfcad": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_cadverbosep compiled, 6 + 16 bytes
+++ ofsf_gcad compiled, 12 + 24 bytes
+++ ofsf_cad compiled, 65 + 68 bytes
+++ ofsf_cadpnum compiled, 19 + 32 bytes
+++ lambda_506sbj2y648f compiled, 9 + 24 bytes
+++ lambda_506sbj2y648f compiled, 9 + 24 bytes
+++ ofsf_cadproj compiled, 228 + 92 bytes
+++ lambda_506sbj2y648f compiled, 9 + 24 bytes
+++ ofsf_cadpreparation compiled, 454 + 184 bytes
+++ ofsf_cadprojection compiled, 153 + 80 bytes
+++ ofsf_cadextension compiled, 79 + 60 bytes
+++ lambda_506sbj2y648f compiled, 9 + 24 bytes
+++ lambda_506sbj2y648f compiled, 9 + 24 bytes
+++ lambda_506sbj2y648f compiled, 9 + 24 bytes
+++ ofsf_cadfinish compiled, 182 + 108 bytes
+++ ofsf_cadswitches compiled, 117 + 176 bytes
+++ ofsf_cadswitchprint compiled, 8 + 20 bytes
+++ acell_mk compiled, 11 + 8 bytes
+++ acell_getidx compiled as link to car
+++ acell_getsp compiled as link to cadr
+++ acell_gettv compiled as link to caddr
+++ acell_getdesc compiled as link to cadddr
+++ acell_gettl compiled, 4 + 8 bytes
+++ acell_sri compiled, 33 + 32 bytes
+++ acell_putsp compiled, 4 + 12 bytes
+++ acell_puttv compiled, 5 + 12 bytes
+++ acell_putdesc compiled, 5 + 12 bytes
+++ acell_puttl compiled, 6 + 12 bytes
+++ acell_addtagip compiled, 10 + 16 bytes
+++ acell_tvasstring compiled, 14 + 32 bytes
+++ acell_med compiled, 6 + 20 bytes
+++ acell_sortfn compiled, 8 + 16 bytes
+++ ofsf_tree compiled, 15 + 28 bytes

*** local variable w in procedure ofsf_treeovercell not used 
+++ lambda_3pyx1a8hzh1c compiled, 10 + 24 bytes
+++ ofsf_treeovercell compiled, 663 + 228 bytes
+++ lambda_3pyx1a8hzh1c compiled, 10 + 24 bytes
+++ ofsf_iswhitecell compiled, 54 + 72 bytes
+++ ofsf_addanswers compiled, 229 + 60 bytes
+++ ofsf_addrootinfo compiled, 103 + 36 bytes
+++ ofsf_addrootinfo0dim compiled, 63 + 28 bytes
+++ ofsf_rnlinc compiled, 19 + 12 bytes
+++ doc compiled, 257 + 96 bytes
+++ degreeofcorrespondence compiled, 259 + 80 bytes
+++ quality1 compiled, 64 + 40 bytes
+++ rlcadnumauto compiled, 70 + 44 bytes
+++ rlcadnumepo compiled, 19 + 24 bytes
+++ rlcaddefaultorder compiled, 50 + 36 bytes
+++ rlcadnum compiled, 8 + 16 bytes
+++ rlcadguessauto compiled, 70 + 44 bytes
+++ rlcadguessepo compiled, 19 + 24 bytes
+++ rlcadguess compiled, 29 + 32 bytes
+++ rlcadnum1 compiled, 141 + 28 bytes
+++ rlcadpnum compiled, 5 + 16 bytes

*** local variable *rlacdguessnoc in procedure rlcadguess1 not used 
+++ rlcadguess1 compiled, 142 + 32 bytes
+++ ofsf_cadnum1 compiled, 162 + 32 bytes
+++ ofsf_fulltree compiled, 19 + 24 bytes

*** local variable ffj in procedure ofsf_fulltreeovercell not used 
+++ ofsf_fulltreeovercell compiled, 327 + 100 bytes
+++ ofsf_tocprepare compiled, 260 + 72 bytes
+++ caddata_mkblank compiled, 225 + 184 bytes
+++ caddata_phi compiled, 4 + 12 bytes
+++ caddata_k compiled, 4 + 12 bytes
+++ caddata_r compiled, 4 + 12 bytes
+++ caddata_varl compiled, 4 + 12 bytes
+++ caddata_xj compiled, 6 + 16 bytes
+++ caddata_qal compiled, 4 + 12 bytes
+++ caddata_psi compiled, 4 + 12 bytes
+++ caddata_ff compiled, 4 + 12 bytes
+++ caddata_ffj compiled, 6 + 12 bytes
+++ caddata_ffv compiled, 4 + 12 bytes
+++ caddata_ffl compiled, 6 + 16 bytes
+++ caddata_dd compiled, 4 + 12 bytes
+++ caddata_phiprime compiled, 4 + 12 bytes
+++ caddata_oldorder compiled, 4 + 12 bytes
+++ caddata_ophi compiled, 4 + 12 bytes
+++ caddata_jj compiled, 4 + 12 bytes
+++ caddata_theo compiled, 4 + 12 bytes
+++ caddata_hh compiled, 4 + 12 bytes
+++ caddata_l compiled, 4 + 12 bytes
+++ caddata_ffid compiled, 4 + 12 bytes
+++ caddata_verbose compiled, 4 + 12 bytes
+++ caddata_decdeg compiled, 4 + 12 bytes
+++ caddata_partial compiled, 4 + 12 bytes
+++ caddata_isoallroots compiled, 4 + 12 bytes
+++ caddata_trimtree compiled, 4 + 12 bytes
+++ caddata_fasteval compiled, 4 + 12 bytes
+++ caddata_fulldimonly compiled, 4 + 12 bytes
+++ caddata_te compiled, 4 + 12 bytes
+++ caddata_pbfvs compiled, 4 + 12 bytes
+++ caddata_rawformula compiled, 4 + 12 bytes
+++ caddata_dnfformula compiled, 4 + 12 bytes
+++ caddata_ans compiled, 4 + 12 bytes
+++ caddata_tv compiled, 4 + 12 bytes
+++ caddata_aa compiled, 4 + 12 bytes
+++ caddata_aaplus compiled, 4 + 12 bytes
+++ caddata_bvl compiled, 41 + 24 bytes
+++ caddata_fvl compiled, 39 + 24 bytes
+++ caddata_putphi compiled, 7 + 12 bytes
+++ caddata_putk compiled, 7 + 12 bytes
+++ caddata_putr compiled, 7 + 12 bytes
+++ caddata_putvarl compiled, 7 + 12 bytes
+++ caddata_putqal compiled, 7 + 12 bytes
+++ caddata_putpsi compiled, 7 + 12 bytes
+++ caddata_putff compiled, 7 + 12 bytes
+++ caddata_putdd compiled, 7 + 12 bytes
+++ caddata_putphiprime compiled, 7 + 12 bytes
+++ caddata_putoldorder compiled, 7 + 12 bytes
+++ caddata_putophi compiled, 7 + 12 bytes
+++ caddata_putjj compiled, 7 + 12 bytes
+++ caddata_puttheo compiled, 7 + 12 bytes
+++ caddata_puthh compiled, 7 + 12 bytes
+++ caddata_putl compiled, 7 + 12 bytes
+++ caddata_putffid compiled, 7 + 12 bytes
+++ caddata_putverbose compiled, 7 + 12 bytes
+++ caddata_putdecdeg compiled, 7 + 12 bytes
+++ caddata_putpartial compiled, 7 + 12 bytes
+++ caddata_putisoallroots compiled, 7 + 12 bytes
+++ caddata_puttrimtree compiled, 7 + 12 bytes
+++ caddata_putfasteval compiled, 7 + 12 bytes
+++ caddata_putfulldimonly compiled, 7 + 12 bytes
+++ caddata_putte compiled, 7 + 12 bytes
+++ caddata_putpbfvs compiled, 7 + 12 bytes
+++ caddata_putrawformula compiled, 7 + 12 bytes
+++ caddata_putdnfformula compiled, 7 + 12 bytes
+++ caddata_putans compiled, 7 + 12 bytes
+++ caddata_puttv compiled, 7 + 12 bytes
+++ caddata_putaa compiled, 7 + 12 bytes
+++ caddata_putaaplus compiled, 7 + 12 bytes
+++ caddata_print compiled, 141 + 108 bytes
+++ caddata_print1 compiled, 63 + 60 bytes
+++ ofsf_ncinit compiled, 3 + 8 bytes
+++ ofsf_nextcell compiled, 258 + 112 bytes
+++ ofsf_subsp compiled, 20 + 12 bytes
+++ ofsf_subsp!* compiled, 20 + 20 bytes
+++ atree_new compiled, 4 + 12 bytes
+++ atree_rootlabel compiled as link to cadr
+++ atree_sortfn compiled, 8 + 16 bytes
+++ atree_addchildip compiled, 8 + 12 bytes
+++ atree_addchildlistip compiled, 9 + 12 bytes
+++ atree_childlist compiled as link to cddr
+++ atree_firstchild compiled, 9 + 12 bytes
+++ atree_levellabels compiled, 51 + 24 bytes
+++ atree_yield compiled, 46 + 20 bytes
+++ atree_tvyield compiled, 47 + 24 bytes
+++ atree_print compiled, 17 + 20 bytes
+++ atree_print1 compiled, 158 + 40 bytes
+++ atree_print1raw compiled, 136 + 24 bytes
+++ atree_printlin compiled, 37 + 24 bytes
+++ atree_2dot compiled, 15 + 36 bytes
+++ atree_2dot1 compiled, 47 + 44 bytes
+++ atree_prinnode compiled, 19 + 16 bytes
+++ atree_2dotnodetail compiled, 17 + 36 bytes
+++ ofsf_mkvarl compiled, 30 + 28 bytes
+++ ofsf_solutionformula_old compiled, 194 + 144 bytes

*** local variable cellstogo in procedure ofsf_solutionformula not used 
+++ ofsf_solutionformula compiled, 449 + 148 bytes

*** local variable ff in procedure ofsf_solutionformula1 not used 

*** local variable yyi in procedure ofsf_solutionformula1 not used 
+++ ofsf_solutionformula1 compiled, 101 + 96 bytes
+++ ofsf_sfchong compiled, 59 + 40 bytes
+++ ofsf_ssfc2 compiled, 71 + 52 bytes
+++ ofsf_compsig compiled, 32 + 12 bytes
+++ ofsf_compsig1 compiled, 30 + 12 bytes
+++ ofsf_sigbasedfo compiled, 29 + 24 bytes
+++ ofsf_signofpolyfo compiled, 22 + 36 bytes
+++ ofsf_evalqff compiled, 20 + 32 bytes
+++ ofsf_evalsignf compiled, 10 + 24 bytes
+++ ofsf_trialevalsgnf compiled, 19 + 36 bytes
+++ ofsf_sgnf4 compiled, 14 + 28 bytes
+++ ratpoly_tosf compiled, 10 + 24 bytes
+++ ofsf_subsignat compiled, 12 + 24 bytes
+++ ofsf_evalqff!-fast compiled, 17 + 24 bytes
+++ ofsf_evalqff!-fast1 compiled, 14 + 24 bytes
+++ ofsf_evalqff!-gand compiled, 81 + 44 bytes
+++ ofsf_signature compiled, 38 + 20 bytes
+++ ofsf_signature4 compiled, 34 + 12 bytes
+++ ofsf_signaturesbytv compiled, 55 + 20 bytes
+++ ofsf_sortsignatures compiled, 43 + 24 bytes
+++ lto_orderedlist2set compiled, 19 + 8 bytes
+++ ofsf_s1 compiled, 55 + 16 bytes
+++ type_checking compiled, 6 + 16 bytes
+++ type_checking1 compiled, 21 + 28 bytes
+++ type_check compiled, 134 + 108 bytes
+++ type_s2a compiled, 234 + 64 bytes
+++ type_s2a!-1l compiled, 18 + 24 bytes
+++ type_a2s compiled, 210 + 56 bytes
+++ type_checkl1 compiled, 15 + 12 bytes
+++ type_check1l compiled, 16 + 16 bytes
+++ type_typep compiled, 90 + 52 bytes
+++ type_typep1 compiled, 13 + 12 bytes
+++ type_listp compiled, 14 + 8 bytes
+++ type_sfp compiled, 49 + 12 bytes
+++ type_sqp compiled, 13 + 12 bytes
Completed FASL files for "ofsfcad"
+++ FASLEND: hits = 1271, misses = 471



*** Compiling ofsfcadproj ... 


FASLOUT "ofsfcadproj": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rlcadporders compiled, 7 + 16 bytes
+++ ordersfromvbl compiled, 178 + 48 bytes
+++ rlcadpordersnum compiled, 57 + 24 bytes
+++ rlcadvbl2pord compiled, 35 + 12 bytes
+++ rlcadvbl compiled, 43 + 20 bytes
+++ ofsf_cadvbl compiled, 9 + 24 bytes
+++ ofsf_cadvbl1 compiled, 54 + 12 bytes
+++ ofsf_gcadporder compiled, 9 + 24 bytes
+++ ofsf_cadporder compiled, 6 + 20 bytes
+++ ofsf_cadporder!-betterp compiled, 50 + 20 bytes
+++ ofsf_cadporder!-rate compiled, 20 + 16 bytes
+++ ofsf_cadporder0 compiled, 130 + 80 bytes
+++ ofsf_caddecdeg compiled, 73 + 40 bytes
+++ ofsf_cadsplt compiled, 54 + 12 bytes
+++ ofsf_cadporder1 compiled, 105 + 16 bytes
+++ ofsf_cadporder2 compiled, 88 + 32 bytes
+++ ofsf_cadporder3 compiled, 126 + 56 bytes
+++ ofsf_cadporder!-project compiled, 112 + 36 bytes
+++ ofsf_cadporder!-project1 compiled, 69 + 24 bytes
+++ ofsf_cadprojection1 compiled, 268 + 100 bytes
+++ ofsf_ffji compiled, 25 + 20 bytes
+++ ofsf_level compiled, 24 + 24 bytes
+++ ofsf_mapdistribute compiled, 19 + 12 bytes
+++ ofsf_distribute compiled, 31 + 16 bytes
+++ delnth compiled, 39 + 40 bytes
+++ mynth compiled, 28 + 32 bytes
+++ perturbations compiled, 247 + 68 bytes
+++ rlstdeg compiled, 5 + 16 bytes
+++ sf_stdeg compiled, 10 + 20 bytes
+++ sf_stdeg1 compiled, 25 + 12 bytes
+++ sf_print compiled, 4 + 16 bytes
+++ rltdeg compiled, 7 + 20 bytes
+++ sf_tdeg!* compiled, 12 + 20 bytes
+++ sf_tdeg compiled, 14 + 20 bytes
+++ sf_tdeg1 compiled, 32 + 28 bytes
+++ rllc compiled, 7 + 20 bytes
+++ sf_lc!* compiled, 15 + 20 bytes
+++ sf_lc compiled, 14 + 8 bytes
+++ rlred compiled, 15 + 24 bytes
+++ sf_red compiled, 13 + 8 bytes
+++ rldis compiled, 15 + 24 bytes
+++ sf_discriminant compiled, 12 + 20 bytes
+++ rlres compiled, 20 + 24 bytes
+++ sf_foldgcd compiled, 25 + 12 bytes
+++ sf_densecoeffs compiled, 46 + 20 bytes
+++ sf_fromdensecoeffs compiled, 30 + 16 bytes
+++ sf_c compiled, 12 + 16 bytes
+++ sf_pp compiled, 6 + 16 bytes
+++ rlisregular compiled, 47 + 24 bytes
+++ sf_isregular!* compiled, 46 + 20 bytes
+++ sf_isregular compiled, 18 + 24 bytes
+++ rltransreg compiled, 82 + 24 bytes
+++ sf_transreg!* compiled, 51 + 20 bytes
+++ sf_transreg compiled, 40 + 12 bytes
+++ sf_transregf compiled, 39 + 20 bytes
+++ rlregularize compiled, 80 + 24 bytes
+++ sf_regularize!* compiled, 77 + 20 bytes
+++ sf_regularize compiled, 4 + 12 bytes
+++ rlregularize1 compiled, 88 + 24 bytes
+++ sf_regularize1!* compiled, 84 + 20 bytes
+++ sf_regularize1 compiled, 103 + 28 bytes
+++ sf_nextcl compiled, 14 + 8 bytes
+++ sf_regoptordf!* compiled, 14 + 20 bytes
+++ sf_regoptordf compiled, 186 + 36 bytes
+++ rlrorders compiled, 80 + 20 bytes
+++ sf_rorders!* compiled, 46 + 20 bytes
+++ sf_rorders compiled, 250 + 52 bytes
+++ ofsf_rordp compiled, 19 + 8 bytes
+++ rlchoose compiled, 42 + 16 bytes
+++ lto_choose compiled, 50 + 8 bytes
+++ rlnom compiled, 5 + 16 bytes
+++ sf_nom compiled, 20 + 16 bytes
+++ lto_select compiled, 6 + 12 bytes
+++ lto_select1 compiled, 59 + 16 bytes
+++ lto_remove compiled, 6 + 12 bytes
+++ lto_remove1 compiled, 59 + 16 bytes
+++ sf_rmconst compiled, 53 + 12 bytes
+++ foldr compiled, 15 + 8 bytes
+++ foldr1 compiled, 14 + 8 bytes
+++ mymap compiled, 34 + 8 bytes
+++ mtx_0 compiled, 99 + 12 bytes
+++ mtx_1 compiled, 125 + 12 bytes
+++ mtx_froml compiled, 69 + 32 bytes
+++ mtx_tol compiled, 35 + 12 bytes
+++ mtx_nol compiled as link to length
+++ mtx_noc compiled, 7 + 12 bytes
+++ mtx_get compiled, 5 + 12 bytes
+++ mtx_put compiled, 8 + 20 bytes
+++ mtx_print compiled, 16 + 8 bytes
+++ lto_rmpos compiled, 60 + 16 bytes
+++ mtx_rmlscs compiled, 36 + 12 bytes
+++ sf_coeffs compiled, 16 + 12 bytes
+++ mtx_sylvester compiled, 143 + 36 bytes
+++ mtx_det compiled as link to ofsf_det
+++ mtx_resultant compiled, 25 + 28 bytes
+++ mtx_mmji compiled, 218 + 28 bytes
+++ rlpsc compiled, 24 + 24 bytes
+++ sf_psc compiled, 14 + 16 bytes
+++ sf_expt compiled, 6 + 16 bytes
+++ sf_subresultant compiled, 39 + 32 bytes
+++ sf_factorize compiled as link to fctrf
+++ sf_factors compiled, 32 + 12 bytes
+++ pairunion compiled, 10 + 12 bytes
+++ tag_ compiled, 5 + 12 bytes
+++ tag_object compiled as link to car
+++ tag_taglist compiled as link to cdr
+++ tag_add compiled, 17 + 16 bytes
+++ tgdomainp compiled, 13 + 12 bytes
+++ sf_tgdeg compiled, 5 + 16 bytes
+++ sf_tglc compiled, 10 + 24 bytes
+++ sf_tgred compiled, 10 + 24 bytes
+++ sf_tgdiscriminant compiled, 10 + 24 bytes
+++ tgresultant compiled, 20 + 28 bytes
+++ tgunion compiled, 20 + 12 bytes
+++ tgunion1 compiled, 43 + 24 bytes
+++ tglist2set compiled, 5 + 12 bytes
+++ rlprojamat2 compiled, 91 + 24 bytes
+++ rltgprojamat2 compiled, 109 + 32 bytes
+++ rlprojsetco compiled, 5 + 16 bytes
+++ ofsf_projsetco compiled, 7 + 20 bytes
+++ rlprojsetcov22 compiled, 5 + 16 bytes
+++ ofsf_projsetcov22 compiled, 7 + 20 bytes
+++ rlprojsetcov23 compiled, 5 + 16 bytes
+++ ofsf_projsetcov23 compiled, 7 + 20 bytes
+++ rlprojsetcov33 compiled, 5 + 16 bytes
+++ ofsf_projsetcov33 compiled, 7 + 20 bytes
+++ rlprojsetcoho compiled, 5 + 16 bytes
+++ ofsf_projsetcoho compiled, 7 + 20 bytes
+++ ofsf_projsetcohogen compiled, 10 + 20 bytes
+++ rlprojsetcolg compiled, 5 + 16 bytes
+++ ofsf_projsetcolg compiled, 7 + 20 bytes
+++ rlprojsetmc compiled, 5 + 16 bytes
+++ ofsf_projsetmc compiled, 7 + 20 bytes
+++ rlprojsetmcbr compiled, 5 + 16 bytes
+++ ofsf_projsetmcbr compiled, 7 + 20 bytes
+++ rltgprojsetmcbr compiled, 5 + 16 bytes
+++ ofsf_tgprojsetmcbr compiled, 7 + 20 bytes
+++ ofsf_projset compiled, 13 + 20 bytes
+++ ofsf_tgprojset compiled, 54 + 28 bytes
+++ ofsf_projset1 compiled, 98 + 44 bytes
+++ ofsf_genprojset compiled, 113 + 56 bytes
+++ lambda_j1kikzxdfp9a compiled, 8 + 20 bytes
+++ ofsf_polyoflevel compiled, 9 + 16 bytes
+++ lambda_7pjr83fuqc46 compiled, 8 + 20 bytes
+++ ofsf_tgpolyoflevel compiled, 9 + 16 bytes

*** local variable x in procedure ofsf_transid not used 
+++ ofsf_transid compiled, 1 + 8 bytes
+++ rltransfac compiled, 5 + 16 bytes

*** local variable x in procedure ofsf_transfac not used 
+++ ofsf_transfac compiled, 43 + 20 bytes

*** local variable x in procedure ofsf_tgtransfac not used 
+++ ofsf_tgtransfac compiled, 127 + 32 bytes
+++ ofsf_projopco compiled, 15 + 24 bytes
+++ ofsf_projopcov22 compiled, 15 + 24 bytes
+++ ofsf_projopcov23 compiled, 15 + 24 bytes
+++ ofsf_projopcov33 compiled, 15 + 28 bytes
+++ lto_take compiled, 22 + 16 bytes
+++ lto_drop compiled, 15 + 12 bytes
+++ lto_init compiled, 15 + 12 bytes
+++ ofsf_projopcoho compiled, 26 + 36 bytes
+++ ofsf_projopcohogen compiled, 31 + 36 bytes
+++ ofsf_projopmc compiled, 6 + 16 bytes
+++ ofsf_projopmcbr compiled, 6 + 16 bytes
+++ ofsf_tgprojopmcbr compiled, 6 + 16 bytes
+++ notdomainp compiled, 10 + 12 bytes
+++ rlprojco compiled, 5 + 16 bytes
+++ ofsf_projco compiled, 30 + 40 bytes
+++ rlprojcov22 compiled, 5 + 16 bytes
+++ ofsf_projcov22 compiled, 30 + 40 bytes
+++ rlprojcov23 compiled, 5 + 16 bytes
+++ ofsf_projcov23 compiled, 30 + 40 bytes
+++ rlprojcov33 compiled, 5 + 16 bytes
+++ ofsf_projcov33 compiled, 34 + 44 bytes
+++ lto_last compiled, 9 + 8 bytes
+++ rlprojcoho compiled, 5 + 16 bytes
+++ ofsf_projcoho compiled, 38 + 44 bytes
+++ ofsf_defpdel compiled, 75 + 36 bytes
+++ ofsf_projcohogen compiled, 53 + 40 bytes
+++ rlprojco2v compiled, 5 + 16 bytes
+++ ofsf_projco2v compiled, 234 + 64 bytes
+++ rlprojmc compiled, 5 + 16 bytes
+++ ofsf_projmc compiled, 179 + 44 bytes
+++ ofsf_projmcgen compiled, 192 + 44 bytes
+++ ofsf_tgprojmc compiled, 346 + 64 bytes
+++ rlprojmcbr compiled, 5 + 16 bytes
+++ ofsf_projmcbr compiled, 224 + 40 bytes
+++ ofsf_tgprojmcbr compiled, 343 + 60 bytes
+++ rlprojamat compiled, 90 + 24 bytes
+++ rlprojcobb compiled, 5 + 16 bytes
+++ ofsf_projcobb compiled, 39 + 16 bytes
+++ ofsf_projcobb1 compiled, 21 + 12 bytes
+++ rlprojcobbv2 compiled, 5 + 16 bytes
+++ ofsf_projcobbv2 compiled, 59 + 32 bytes
+++ ofsf_projcobb1v2 compiled, 34 + 16 bytes
+++ rlprojcobbv3 compiled, 5 + 16 bytes
+++ ofsf_projcobbv3 compiled, 39 + 16 bytes
+++ ofsf_projcobb1v3 compiled, 30 + 20 bytes
+++ rlzerodimp compiled, 54 + 24 bytes
+++ sfto_zerodimp compiled, 12 + 16 bytes
+++ lambda_u7njsdj92quc compiled as link to times2
+++ sfto_zerodimp1 compiled, 107 + 44 bytes
+++ lambda_h217p9mhqqtd compiled, 6 + 8 bytes
+++ sfto_zerodimp2 compiled, 64 + 28 bytes
+++ sfto_hterm compiled, 22 + 24 bytes
+++ ofsf_projcobbv2gen compiled, 75 + 32 bytes
+++ ofsf_projcobbv2gen1 compiled, 108 + 64 bytes
+++ ofsf_cadvalassp compiled, 16 + 24 bytes
+++ rlprojcoll compiled, 5 + 16 bytes
+++ ofsf_projcoll compiled, 54 + 28 bytes
+++ rlprojmcll compiled, 5 + 16 bytes
+++ ofsf_projmcll compiled, 159 + 16 bytes
+++ sf_cdl compiled, 27 + 20 bytes
+++ sf_fromcdl compiled, 21 + 16 bytes
+++ sf_pscs compiled, 65 + 24 bytes
+++ sf_pscsgen compiled, 148 + 80 bytes
+++ sf_diff compiled, 4 + 12 bytes
+++ rlprojcoss1 compiled, 5 + 16 bytes
+++ ofsf_projcoss1 compiled, 69 + 36 bytes
+++ ofsf_projcoss1gen compiled, 85 + 36 bytes
+++ rlprojcoss2 compiled, 5 + 16 bytes
+++ ofsf_projcoss2 compiled, 133 + 16 bytes
+++ rlprojcoss2v2 compiled, 5 + 16 bytes
+++ ofsf_projcoss2v2 compiled, 127 + 16 bytes
+++ rlprojcoss2v3 compiled, 5 + 16 bytes
+++ ofsf_projcoss2v3 compiled, 670 + 20 bytes
+++ ofsf_splitredl compiled, 37 + 20 bytes
+++ ofsf_splitredlordp compiled, 63 + 16 bytes
+++ rlprojhoss2 compiled, 5 + 16 bytes
+++ ofsf_projhoss2 compiled, 351 + 44 bytes
+++ ofsf_projhoss2gen compiled, 422 + 36 bytes
+++ show compiled as link to print
Completed FASL files for "ofsfcadproj"
+++ FASLEND: hits = 1635, misses = 378



*** Compiling ofsfanuex ... 


FASLOUT "ofsfanuex": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_anuexverbosep compiled, 6 + 16 bytes
+++ type_of compiled as link to car
+++ generic_sort compiled, 52 + 12 bytes
+++ generic_doublesort compiled, 28 + 12 bytes
+++ generic_doublesort1 compiled, 58 + 16 bytes
+++ iv_mk compiled as link to cons
+++ iv_mk4 compiled, 10 + 16 bytes
+++ iv_lb compiled as link to car
+++ iv_rb compiled as link to cdr
+++ iv_print compiled, 13 + 36 bytes
+++ iv_neg compiled, 10 + 24 bytes
+++ iv_add compiled, 18 + 24 bytes
+++ iv_mapadd compiled, 30 + 24 bytes
+++ iv_mult compiled, 53 + 32 bytes
+++ iv_med compiled, 16 + 36 bytes
+++ iv_tothen compiled, 35 + 28 bytes
+++ iv_containszero compiled, 19 + 28 bytes
+++ iv_comp compiled, 24 + 32 bytes
+++ iv_maxabs compiled, 10 + 24 bytes
+++ iv_minabs compiled, 16 + 32 bytes
+++ iv_minus compiled, 57 + 32 bytes
+++ iv_minuslist compiled, 11 + 16 bytes
+++ iv_listminuslist compiled, 39 + 16 bytes
+++ num_even compiled, 9 + 12 bytes
+++ num_sgnch compiled, 57 + 24 bytes
+++ num_sgnch1 compiled, 24 + 16 bytes
+++ num_sortfn compiled, 4 + 12 bytes
+++ numpoly_null compiled, 1 + 8 bytes
+++ numpoly_nullp compiled, 10 + 12 bytes
+++ numpoly_lc compiled, 11 + 8 bytes
+++ numpoly_red compiled, 10 + 12 bytes
+++ numpoly_mvartest compiled, 13 + 8 bytes
+++ numpoly_ldeg compiled, 15 + 20 bytes
+++ numpoly_factorize compiled as link to fctrf
+++ rat_mk compiled, 8 + 16 bytes
+++ rat_numr compiled as link to car
+++ rat_denr compiled as link to cdr
+++ rat_normdenr compiled, 14 + 36 bytes
+++ rat_print compiled, 7 + 16 bytes
+++ rat_fromnum compiled as link to simp
+++ rat_neg compiled as link to negsq
+++ rat_add compiled as link to addsq
+++ rat_minus compiled, 6 + 16 bytes
+++ rat_mapadd compiled, 24 + 16 bytes
+++ rat_mult compiled as link to multsq
+++ rat_quot compiled as link to quotsq
+++ rat_nullp compiled, 10 + 12 bytes
+++ rat_sgn compiled, 20 + 24 bytes
+++ rat_0 compiled, 3 + 16 bytes
+++ rat_1 compiled, 3 + 16 bytes
+++ rat_less compiled, 9 + 24 bytes
+++ rat_greater compiled, 9 + 24 bytes
+++ rat_eq compiled, 6 + 20 bytes
+++ rat_leq compiled, 9 + 24 bytes
+++ rat_min compiled, 6 + 12 bytes
+++ rat_max compiled, 6 + 12 bytes
+++ rat_mapmax compiled, 25 + 12 bytes
+++ rat_min4 compiled, 10 + 12 bytes
+++ rat_max4 compiled, 10 + 12 bytes
+++ rat_abs compiled, 5 + 12 bytes
+++ ratpoly_fromatom compiled as link to simp
+++ ratpoly_fromsf compiled, 4 + 12 bytes
+++ ratpoly_fromrat compiled, 1 + 8 bytes
+++ ratpoly_torat compiled, 9 + 24 bytes
+++ ratpoly_toaf compiled as link to prepsq
+++ ratpoly_0 compiled, 3 + 16 bytes
+++ ratpoly_1 compiled, 3 + 16 bytes
+++ ratpoly_mklin compiled, 18 + 36 bytes
+++ ratpoly_print compiled, 4 + 16 bytes
+++ ratpoly_ratp compiled, 9 + 8 bytes
+++ ratpoly_null compiled, 3 + 16 bytes
+++ ratpoly_nullp compiled, 10 + 12 bytes
+++ ratpoly_sgn compiled, 12 + 28 bytes
+++ ratpoly_neg compiled as link to negsq
+++ ratpoly_add compiled as link to addsq
+++ ratpoly_minus compiled, 6 + 16 bytes
+++ ratpoly_mult compiled as link to multsq
+++ ratpoly_foldmult compiled, 24 + 16 bytes
+++ ratpoly_quot compiled as link to quotsq
+++ ratpoly_pp compiled, 5 + 12 bytes
+++ sf_univarp compiled, 23 + 16 bytes
+++ sf_univarp1 compiled, 27 + 12 bytes
+++ ratpoly_univarp compiled, 3 + 12 bytes
+++ ratpoly_idl compiled, 3 + 12 bytes
+++ ratpoly_mvartest compiled, 15 + 8 bytes
+++ ratpoly_lc compiled, 5 + 12 bytes
+++ ratpoly_red compiled, 5 + 12 bytes
+++ ratpoly_ldeg compiled, 3 + 12 bytes
+++ ratpoly_deg compiled, 16 + 28 bytes
+++ ratpoly_exp compiled, 26 + 20 bytes
+++ ratpoly_xtothen compiled, 28 + 24 bytes
+++ ratpoly_diff compiled as link to diffsq
+++ ratpoly_subrat compiled, 74 + 56 bytes
+++ ratpoly_subrat1 compiled, 74 + 56 bytes
+++ ratpoly_sub compiled, 7 + 12 bytes
+++ ratpoly_tad compiled, 4 + 12 bytes
+++ ratpoly_gcd compiled, 29 + 36 bytes
+++ ratpoly_resultant compiled, 32 + 36 bytes
+++ ratpoly_factorize compiled, 112 + 60 bytes
+++ sf_deg compiled, 21 + 16 bytes
+++ ctx_fromial compiled, 4 + 12 bytes
+++ ctx_new compiled, 3 + 12 bytes
+++ ctx_ial compiled as link to cadr
+++ ctx_idl compiled, 31 + 12 bytes
+++ ctx_print compiled, 25 + 32 bytes
+++ ctx_add compiled, 8 + 16 bytes
+++ ctx_addip compiled, 8 + 16 bytes
+++ ctx_rm compiled, 58 + 20 bytes
+++ ctx_free compiled, 36 + 36 bytes
+++ ctx_get compiled, 34 + 36 bytes
+++ ctx_union compiled, 79 + 28 bytes
+++ aex_fromrp compiled, 11 + 20 bytes
+++ aex_fromrat compiled, 13 + 24 bytes
+++ aex_0 compiled, 3 + 16 bytes
+++ aex_1 compiled, 3 + 16 bytes
+++ aex_mk compiled, 11 + 12 bytes
+++ aex_mklin compiled, 4 + 16 bytes
+++ aex_fromsf compiled, 4 + 16 bytes
+++ aex_mapfromsf compiled, 32 + 12 bytes
+++ aex_ex compiled as link to cadr
+++ aex_ctx compiled as link to caddr
+++ aex_freeall compiled, 9 + 24 bytes
+++ aex_free compiled, 13 + 24 bytes
+++ aex_bind compiled, 42 + 52 bytes
+++ aex_print compiled, 16 + 36 bytes
+++ aex_lcnttag compiled as link to cadddr
+++ aex_reducedtag compiled, 4 + 8 bytes
+++ aex_putlcnttag compiled, 5 + 12 bytes
+++ aex_putreducedtag compiled, 6 + 12 bytes
+++ aex_neg compiled, 15 + 32 bytes
+++ aex_add compiled, 28 + 32 bytes
+++ aex_addrat compiled, 16 + 28 bytes
+++ aex_minus compiled, 28 + 32 bytes
+++ aex_mult compiled, 27 + 32 bytes
+++ aex_foldmult compiled, 24 + 16 bytes
+++ aex_multrat compiled, 16 + 28 bytes
+++ aex_diff compiled, 12 + 24 bytes
+++ aex_subrp compiled, 14 + 24 bytes
+++ aex_subrat compiled, 14 + 24 bytes
+++ aex_subrat1 compiled, 14 + 24 bytes
+++ aex_tad compiled, 11 + 24 bytes
+++ aex_xtothen compiled, 9 + 24 bytes
+++ aex_deg compiled, 5 + 16 bytes
+++ aex_simpleratpolyp compiled, 12 + 24 bytes
+++ aex_simpleratp compiled, 4 + 16 bytes
+++ aex_simplenullp compiled, 4 + 16 bytes
+++ aex_simplenumberp compiled, 4 + 16 bytes
+++ aex_ids compiled, 4 + 16 bytes
+++ aex_freeids compiled, 10 + 28 bytes
+++ aex_boundids compiled, 9 + 24 bytes
+++ aex_constp compiled, 5 + 12 bytes
+++ aex_nullp compiled, 15 + 28 bytes
+++ aex_mvaroccurtest compiled, 5 + 16 bytes
+++ aex_red compiled, 18 + 32 bytes
+++ aex_lc compiled, 17 + 28 bytes
+++ aex_mvar compiled, 9 + 20 bytes
+++ aex_mklcnt compiled, 41 + 52 bytes
+++ aex_reduce compiled, 101 + 68 bytes
+++ aex_reducetest compiled, 7 + 20 bytes
+++ aex_psquotrem1 compiled, 59 + 36 bytes
+++ aex_psquotrem compiled, 119 + 68 bytes
+++ aex_psquot compiled, 7 + 12 bytes
+++ aex_psrem compiled, 7 + 12 bytes
+++ aex_psquotremtest compiled, 74 + 60 bytes
+++ aex_stdsturmchain compiled, 7 + 16 bytes
+++ aex_sturmchain compiled, 14 + 16 bytes
+++ aex_sturmchaincheck compiled, 39 + 32 bytes
+++ aex_pp compiled, 37 + 52 bytes
+++ aex_remseq compiled, 56 + 56 bytes
+++ aex_sturmchainsgnch compiled, 48 + 20 bytes
+++ aex_stchsgnch compiled, 92 + 32 bytes
+++ aex_sgnatinfty compiled, 40 + 48 bytes
+++ aex_sgnatminfty compiled, 55 + 56 bytes
+++ aex_sgn compiled, 182 + 168 bytes
+++ aex_pssqfree compiled, 18 + 28 bytes
+++ sqfr_norm compiled, 63 + 40 bytes
+++ aex_factorize compiled, 264 + 84 bytes
+++ aex_quotrem compiled, 152 + 92 bytes
+++ aex_quotremtest compiled, 15 + 24 bytes
+++ aex_quot compiled, 7 + 12 bytes
+++ aex_rem compiled, 7 + 12 bytes
+++ aex_gcdext compiled, 8 + 16 bytes
+++ aex_gcdext1 compiled, 119 + 60 bytes
+++ aex_gcd compiled, 32 + 44 bytes
+++ aex_gcd1 compiled, 11 + 12 bytes
+++ aex_gcdexttest compiled, 21 + 24 bytes
+++ aex_pairwiseprime compiled, 71 + 20 bytes
+++ aex_pairwiseprime1 compiled, 23 + 20 bytes
+++ aex_tgpairwiseprime compiled, 27 + 24 bytes
+++ aex_tgpairwiseprime1 compiled, 79 + 40 bytes
+++ aex_sqfree compiled, 21 + 28 bytes
+++ aex_inv compiled, 108 + 88 bytes
+++ aex_invtest compiled, 10 + 24 bytes
+++ aex_linsolv compiled, 24 + 44 bytes
+++ aex_coefl compiled, 21 + 20 bytes
+++ aex_coefdegl compiled, 28 + 28 bytes
+++ aex_fromcoefdegl compiled, 27 + 24 bytes
+++ aex_coefdegltest compiled, 9 + 24 bytes
+++ aex_containment compiled, 106 + 80 bytes
+++ aex_distinguishpositivefromzero compiled, 30 + 40 bytes
+++ aex_distinguishfromzero compiled, 37 + 40 bytes
+++ aex_cauchybound compiled, 296 + 156 bytes
+++ aex_findrootsoflist compiled, 5 + 16 bytes
+++ aex_findroots compiled, 39 + 48 bytes
+++ aex_findrootsiniv compiled, 11 + 16 bytes
+++ aex_findrootsiniv1 compiled, 160 + 84 bytes
+++ aex_isoroot compiled, 56 + 40 bytes
+++ aex_atrat0p compiled, 10 + 20 bytes
+++ aex_nextroot compiled, 145 + 88 bytes
+++ aex_nextroot1 compiled, 186 + 132 bytes
+++ aex_isoratroot compiled, 125 + 48 bytes
+++ aex_refinewrt1 compiled, 61 + 44 bytes
+++ aex_deltastchsgnch compiled, 26 + 24 bytes
+++ aex_atratnullp compiled, 9 + 20 bytes
+++ psc_sortdesc compiled, 9 + 12 bytes
+++ psc_sortasc compiled, 9 + 12 bytes
+++ rip_init compiled, 49 + 16 bytes
+++ rip_rootl compiled as link to car
+++ rip_rootlnotags compiled, 32 + 12 bytes
+++ rip_ivl compiled as link to cadr
+++ rip_pscl compiled as link to caddr
+++ rip_psclnotags compiled, 37 + 12 bytes
+++ rip_putivl compiled, 4 + 12 bytes
+++ rip_putpscl compiled, 5 + 12 bytes
+++ rip_addroot compiled, 7 + 12 bytes
+++ rip_addivl compiled, 9 + 16 bytes
+++ rip_poppscl compiled, 7 + 12 bytes
+++ rip_popivl compiled, 10 + 16 bytes
+++ anu_mk compiled, 5 + 12 bytes
+++ anu_dp compiled as link to cadr
+++ anu_iv compiled as link to caddr
+++ anu_putiv compiled, 5 + 12 bytes
+++ anu_print compiled, 14 + 40 bytes
+++ anu_check compiled, 81 + 76 bytes
+++ anu_fromrat compiled, 6 + 20 bytes
+++ anu_refine1ip compiled, 114 + 84 bytes
+++ sf_idl compiled, 24 + 16 bytes
+++ idorder compiled, 6 + 12 bytes
Completed FASL files for "ofsfanuex"
+++ FASLEND: hits = 1702, misses = 350



*** Compiling ofsfxopt ... 


FASLOUT "ofsfxopt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_xopt!-co!-putl compiled, 34 + 12 bytes
+++ ofsf_xopt!-cs!-null compiled, 17 + 8 bytes
+++ ofsf_xopt!-check compiled, 19 + 36 bytes
+++ ofsf_xopt!-check1 compiled, 76 + 64 bytes
+++ ofsf_xopt!-qea compiled, 7 + 20 bytes
+++ ofsf_xopt!-trans!-ansl compiled, 118 + 12 bytes
+++ ofsf_xopt!-qe compiled, 9 + 24 bytes
+++ ofsf_xopt!-xopt compiled, 242 + 120 bytes
+++ ofsf_xopt!-elim compiled, 103 + 92 bytes
+++ ofsf_xopt!-qevar compiled, 71 + 48 bytes
+++ ofsf_xopt!-varsel compiled, 3 + 8 bytes
+++ ofsf_xopt!-cset compiled, 8 + 20 bytes
+++ ofsf_xopt!-scset compiled, 14 + 28 bytes
+++ ofsf_xopt!-scset1 compiled, 22 + 36 bytes
+++ ofsf_xopt!-scsetjunct compiled, 125 + 52 bytes
+++ ofsf_xopt!-scsetselect compiled as link to car
+++ ofsf_xopt!-scsetunion compiled, 18 + 12 bytes
+++ ofsf_xopt!-scsetat compiled, 47 + 32 bytes
+++ ofsf_xopt!-boundarytype compiled, 75 + 60 bytes
+++ ofsf_xopt!-csettrad compiled, 58 + 32 bytes
+++ ofsf_xopt!-applypl compiled, 22 + 16 bytes
+++ ofsf_xopt!-applypl1 compiled, 71 + 36 bytes
+++ ofsf_xopt!-eset compiled, 8 + 20 bytes
+++ ofsf_xopt!-esetos compiled, 46 + 20 bytes
+++ ofsf_xopt!-esetbs compiled, 8 + 12 bytes
+++ ofsf_xopt!-succs compiled, 42 + 16 bytes
+++ ofsf_xopt!-succs1 compiled, 51 + 28 bytes
+++ ofsf_xopt!-sub compiled, 37 + 32 bytes
+++ ofsf_xopt!-sub1 compiled, 21 + 24 bytes
+++ ofsf_xopt!-subiat compiled, 94 + 60 bytes
+++ ofsf_xopt!-subat compiled, 12 + 24 bytes
+++ ofsf_xopt!-sublf compiled, 62 + 36 bytes
+++ ofsf_xopt!-solv compiled, 26 + 36 bytes
+++ ofsf_xopt!-plsub compiled, 131 + 80 bytes
+++ ofsf_xopt!-updpl compiled, 17 + 24 bytes
+++ ofsf_xopt!-updco compiled, 104 + 40 bytes
+++ ofsf_xopt!-resinherit compiled, 169 + 88 bytes
+++ ofsf_xopt!-celmember compiled, 25 + 12 bytes
+++ ofsf_xopt!-thapplycel compiled, 61 + 24 bytes
+++ ofsf_xopt!-thapplyco compiled, 43 + 24 bytes
+++ ofsf_xopt!-ccoput compiled, 63 + 28 bytes
+++ ofsf_xopt!-cel2ansl compiled, 38 + 8 bytes
+++ ofsf_xopt!-backsub compiled, 32 + 12 bytes
+++ ofsf_xopt!-backsubans compiled, 5 + 12 bytes
+++ ofsf_xopt!-backsubpt compiled, 59 + 20 bytes
Completed FASL files for "ofsfxopt"
+++ FASLEND: hits = 587, misses = 194



*** Compiling ofsfdet ... 


FASLOUT "ofsfdet": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_det compiled, 8 + 20 bytes
+++ ofsf_bareiss compiled, 231 + 56 bytes
+++ ofsf_linesort1 compiled, 25 + 12 bytes
+++ ofsf_linesort2 compiled, 67 + 24 bytes
+++ ofsf_linesort3 compiled, 4 + 16 bytes
+++ ofsf_newbareiss compiled, 208 + 96 bytes
+++ ofsf_newbareiss2 compiled, 193 + 100 bytes
+++ ofsf_bareiss!-pivot compiled, 56 + 44 bytes
+++ ofsf_bareiss!-step compiled, 333 + 40 bytes
+++ ofsf_cdet2 compiled, 11 + 20 bytes
+++ ofsf_goodline compiled, 77 + 24 bytes
+++ ofsf_goodcolumn compiled, 77 + 24 bytes
+++ ofsf_goodlcpair compiled, 151 + 28 bytes
+++ ofsf_quality compiled, 12 + 16 bytes
+++ vmat_print compiled, 4 + 16 bytes
+++ vmat_prep compiled, 138 + 28 bytes
+++ vmat_mk compiled, 109 + 12 bytes
+++ vmat_get compiled, 9 + 12 bytes
+++ vmat_put compiled, 11 + 12 bytes
+++ vmat_cmap compiled, 9 + 8 bytes
+++ vmat_swapl compiled, 19 + 8 bytes
+++ vmat_swapc compiled, 26 + 8 bytes
+++ bdet1 compiled, 111 + 20 bytes
+++ bdet compiled, 111 + 20 bytes
+++ gmat compiled, 120 + 24 bytes
Completed FASL files for "ofsfdet"
+++ FASLEND: hits = 162, misses = 62



*** Compiling ofsftfc ... 


FASLOUT "ofsftfc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_tfcmain compiled, 27 + 20 bytes
+++ ofsf_tfcmain1 compiled, 48 + 44 bytes
+++ ofsf_split compiled, 124 + 44 bytes
+++ ofsf_multfl compiled, 25 + 20 bytes
+++ ofsf_splitlist compiled, 22 + 8 bytes
+++ ofsf_tfc compiled, 6 + 12 bytes
+++ ofsf_tfc1 compiled, 39 + 48 bytes
+++ ofsf_norm compiled, 13 + 12 bytes
+++ ofsf_tfcodd compiled, 31 + 32 bytes
+++ ofsf_tfceven compiled, 64 + 40 bytes
+++ ofsf_stfc compiled, 52 + 40 bytes
+++ ofsf_buildconj compiled, 29 + 16 bytes
+++ ofsf_af compiled, 21 + 20 bytes
+++ ofsf_af1 compiled, 11 + 24 bytes
+++ ofsf_tfcmkand compiled, 8 + 24 bytes
+++ ofsf_tfcmkor compiled, 4 + 16 bytes
+++ ofsf_signs compiled, 49 + 24 bytes
+++ ofsf_tfk compiled, 161 + 60 bytes
+++ ofsf_stfk compiled, 56 + 40 bytes
+++ ofsf_kols compiled, 69 + 32 bytes
+++ ofsf_kextend compiled, 190 + 36 bytes
+++ ofsf_kolsfast compiled, 274 + 32 bytes
+++ ofsf_kextendfast compiled, 385 + 36 bytes
+++ ofsf_kextend0 compiled, 119 + 36 bytes
+++ ofsf_kextend1 compiled, 12 + 8 bytes
+++ ofsf_knnz compiled, 8 + 16 bytes
+++ ofsf_knpz compiled, 11 + 20 bytes
+++ ofsf_splittypes compiled, 149 + 52 bytes
+++ ofsf_ols compiled, 63 + 32 bytes
+++ ofsf_extend compiled, 181 + 36 bytes
+++ ofsf_olsfast compiled, 254 + 32 bytes
+++ ofsf_extendfast compiled, 367 + 36 bytes
+++ ofsf_extend0 compiled, 45 + 40 bytes
+++ ofsf_extend1 compiled, 9 + 8 bytes
+++ ofsf_nnz compiled, 8 + 16 bytes
+++ ofsf_npz compiled, 11 + 20 bytes
Completed FASL files for "ofsftfc"
+++ FASLEND: hits = 244, misses = 67



*** Compiling ofsfhqe ... 


FASLOUT "ofsfhqe": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ofsf_ghqe compiled, 25 + 44 bytes
+++ ofsf_hqe compiled, 32 + 40 bytes
+++ ofsf_hqe0 compiled, 157 + 132 bytes
+++ ofsf_rqrequantify compiled, 8 + 16 bytes
+++ ofsf_rqrequantify2 compiled, 15 + 12 bytes
+++ ofsf_rqrequantify3 compiled, 17 + 12 bytes
+++ ofsf_rrcnfblockqe compiled, 134 + 116 bytes
+++ ofsf_rrcnfeliminate compiled, 107 + 40 bytes
+++ ofsf_connect compiled, 110 + 40 bytes
+++ ofsf_samephi compiled, 27 + 16 bytes
+++ ofsf_samephip compiled, 19 + 8 bytes
+++ ofsf_connectrrcnf compiled, 42 + 20 bytes
+++ ofsf_smkn compiled, 6 + 16 bytes
+++ ofsf_conjp compiled, 11 + 24 bytes
+++ ofsf_genvar compiled, 26 + 8 bytes
+++ ofsf_rrcnf compiled, 100 + 56 bytes
+++ ofsf_new compiled, 9 + 8 bytes
+++ ofsf_addequal compiled, 20 + 12 bytes
+++ ofsf_addgreaterp compiled, 21 + 12 bytes
+++ ofsf_addlessp compiled, 25 + 16 bytes
+++ ofsf_addneq compiled, 22 + 12 bytes
+++ ofsf_addgeq compiled, 97 + 12 bytes
+++ ofsf_addleq compiled, 101 + 16 bytes
+++ ofsf_addtheo compiled, 23 + 12 bytes
+++ ofsf_rrcnf1 compiled, 97 + 80 bytes
+++ ofsf_qenf compiled, 75 + 52 bytes
+++ ofsf_eliminategsys compiled, 112 + 84 bytes
+++ ofsf_eliminatedim compiled, 67 + 40 bytes
+++ ofsf_caser0 compiled, 170 + 112 bytes
+++ ofsf_eliminatephi34 compiled, 83 + 64 bytes
+++ ofsf_selectxn compiled, 22 + 36 bytes
+++ ofsf_selectxn1 compiled, 112 + 20 bytes
+++ ofsf_selectxn2 compiled, 83 + 40 bytes
+++ ofsf_difference compiled, 30 + 20 bytes
+++ ofsf_gethexponent compiled, 39 + 16 bytes
+++ ofsf_getminvar compiled, 63 + 12 bytes
+++ ofsf_consistent compiled, 40 + 32 bytes
+++ ofsf_consistent1 compiled, 100 + 56 bytes
+++ ofsf_transformmatrix compiled, 51 + 32 bytes
+++ ofsf_getphi3phi4 compiled, 58 + 24 bytes
+++ ofsf_getconj3 compiled, 24 + 24 bytes
+++ ofsf_getneq0f compiled, 76 + 40 bytes
+++ ofsf_getneq0fgen compiled, 100 + 56 bytes
+++ ofsf_getconj4 compiled, 27 + 28 bytes
+++ ofsf_getnotconst compiled, 30 + 32 bytes
+++ ofsf_getnotconstf compiled, 105 + 44 bytes
+++ ofsf_normcond compiled, 4 + 16 bytes
+++ ofsf_getnotconstfgen compiled, 129 + 64 bytes
+++ ofsf_quottest compiled, 51 + 24 bytes
+++ ofsf_quottest1 compiled, 14 + 16 bytes
+++ ofsf_inf compiled, 15 + 24 bytes
+++ ofsf_inf1 compiled, 65 + 40 bytes
+++ ofsf_minf compiled, 15 + 24 bytes
+++ ofsf_minf1 compiled, 85 + 56 bytes
+++ ofsf_buildphi1 compiled, 27 + 24 bytes
+++ ofsf_buildphi2 compiled, 27 + 24 bytes
+++ ofsf_buildhkneq0 compiled, 59 + 44 bytes
+++ ofsf_and compiled, 22 + 44 bytes
+++ ofsf_or compiled, 27 + 48 bytes
+++ ofsf_and1 compiled, 27 + 48 bytes
+++ ofsf_mknewf2 compiled, 17 + 16 bytes
+++ ofsf_qenfcase0 compiled, 59 + 40 bytes
+++ ofsf_deletemon compiled, 52 + 24 bytes
+++ ofsf_ggsys compiled, 67 + 68 bytes
+++ ofsf_gbred compiled, 42 + 12 bytes
+++ ofsf_gbred1 compiled, 86 + 32 bytes
+++ ofsf_mkconj compiled, 16 + 20 bytes
+++ ofsf_casedimn compiled, 22 + 28 bytes
+++ ofsf_sfl2f compiled, 128 + 32 bytes
+++ ofsf_remvarl compiled as link to setdiff
+++ ofsf_casedim compiled, 72 + 52 bytes
+++ ofsf_rqsimpl compiled, 29 + 48 bytes
+++ ofsf_sort compiled, 28 + 16 bytes
+++ ofsf_mktheo compiled, 128 + 32 bytes
+++ ofsf_mkcondlist compiled, 30 + 24 bytes
+++ ofsf_getcdform compiled, 28 + 36 bytes
+++ ofsf_buildtheory compiled, 83 + 44 bytes
+++ ofsf_buildgenggsys compiled, 40 + 16 bytes
+++ ofsf_d0main compiled, 379 + 216 bytes
+++ ofsf_d0main1 compiled, 15 + 20 bytes
+++ ofsf_gb2gltb compiled, 87 + 28 bytes
+++ ofsf_gvsbasis compiled, 93 + 40 bytes
+++ ofsf_mvp compiled, 56 + 24 bytes
+++ ofsf_redp compiled, 24 + 20 bytes
+++ ofsf_trace compiled, 34 + 24 bytes
+++ ofsf_trace1 compiled, 18 + 20 bytes
+++ ofsf_prod compiled, 13 + 20 bytes
+++ ofsf_getcoeff compiled, 23 + 32 bytes
+++ ofsf_charpoly compiled, 7 + 20 bytes
+++ ofsf_coefflist compiled, 68 + 28 bytes
+++ ofsf_coefflist1 compiled, 52 + 12 bytes
+++ ofsf_buildq compiled, 15 + 20 bytes
+++ ofsf_buildq1 compiled, 338 + 56 bytes
+++ ofsf_buildhelist compiled, 73 + 28 bytes
+++ ofsf_buildglist compiled, 32 + 24 bytes
+++ ofsf_buildglist1 compiled, 34 + 12 bytes
+++ ofsf_redgroebner compiled, 30 + 16 bytes
+++ ofsf_buildqsc compiled, 345 + 64 bytes
+++ ofsf_tracesc compiled, 36 + 24 bytes
+++ ofsf_tracesc1 compiled, 41 + 28 bytes
+++ ofsf_tracesc2 compiled, 15 + 24 bytes
+++ ofsf_dim compiled, 18 + 20 bytes
+++ ofsf_proper compiled, 15 + 20 bytes
+++ ofsf_dimmain compiled, 24 + 32 bytes
+++ ofsf_htl compiled, 134 + 44 bytes
+++ ofsf_dimrec compiled, 57 + 24 bytes
+++ ofsf_getxi compiled as link to nth
+++ ofsf_getmax compiled, 24 + 12 bytes
+++ ofsf_getmin compiled, 44 + 12 bytes
+++ ofsf_intersectionp compiled, 22 + 20 bytes
+++ ofsf_subsetp compiled, 21 + 16 bytes
Completed FASL files for "ofsfhqe"
+++ FASLEND: hits = 891, misses = 243

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling dvfsf ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "dvfsf": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"

*** <> redefined 

*** || redefined 

*** | redefined 

*** ~ redefined 

*** /~ redefined 
+++ dvfsf_enter compiled, 81 + 84 bytes
+++ dvfsf_exit compiled, 9 + 20 bytes
+++ dvfsf_simpterm compiled, 4 + 12 bytes
+++ dvfsf_prepat compiled, 13 + 24 bytes
+++ dvfsf_resimpat compiled, 19 + 32 bytes

*** local variable f in procedure dvfsf_lengthat not used 
+++ dvfsf_lengthat compiled, 2 + 12 bytes
+++ dvfsf_chsimpat compiled, 41 + 24 bytes
+++ dvfsf_chsimpat1 compiled, 45 + 16 bytes
+++ dvfsf_simpat compiled, 69 + 52 bytes
+++ dvfsf_op compiled as link to car
+++ dvfsf_arg2l compiled as link to cadr
+++ dvfsf_arg2r compiled as link to caddr
+++ dvfsf_argn compiled, 6 + 8 bytes
+++ dvfsf_mk2 compiled, 5 + 8 bytes
+++ dvfsf_0mk2 compiled, 6 + 8 bytes
+++ dvfsf_mkn compiled, 7 + 8 bytes
+++ dvfsf_opp compiled, 5 + 12 bytes
Completed FASL files for "dvfsf"
+++ FASLEND: hits = 283, misses = 253
Fast-loading "./reduce.img(dvfsf)"

*** <> redefined 

*** || redefined 

*** | redefined 

*** ~ redefined 

*** /~ redefined 



*** Compiling dvfsfsiat ... 


FASLOUT "dvfsfsiat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dvfsf_simplat1 compiled, 27 + 36 bytes
+++ dvfsf_saval compiled, 83 + 52 bytes
+++ dvfsf_saval1 compiled, 82 + 64 bytes
+++ dvfsf_compose compiled, 61 + 44 bytes
+++ dvfsf_saval2 compiled, 77 + 60 bytes
+++ dvfsf_sacval compiled, 134 + 56 bytes
+++ dvfsf_safield compiled, 60 + 44 bytes

*** local variable w in procedure dvfsf_sapfacf not used 
+++ dvfsf_sapfacf compiled, 70 + 44 bytes
+++ dvfsf_dppower compiled, 21 + 20 bytes
+++ dvfsf_saaval compiled, 39 + 28 bytes
+++ dvfsf_sappow compiled, 42 + 40 bytes
+++ dvfsf_savpc compiled, 36 + 44 bytes
+++ dvfsf_savpc1 compiled, 164 + 64 bytes
+++ dvfsf_ppowerp compiled, 44 + 20 bytes
+++ dvfsf_ppolyp compiled, 21 + 20 bytes
+++ dvfsf_ppolydec compiled, 31 + 16 bytes
+++ lambda_x9hgwkw3owh3 compiled, 4 + 8 bytes
+++ dvfsf_vsimpf compiled, 123 + 60 bytes
+++ dvfsf_vsimpf1 compiled, 53 + 16 bytes
+++ dvfsf_sapureintc compiled, 71 + 56 bytes
+++ dvfsf_sapeq compiled, 78 + 56 bytes
+++ dvfsf_sapfactor compiled, 45 + 36 bytes
Completed FASL files for "dvfsfsiat"
+++ FASLEND: hits = 196, misses = 87



*** Compiling dvfsfsism ... 


FASLOUT "dvfsfsism": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dvfsf_smupdknowl compiled, 17 + 20 bytes
+++ dvfsf_smrmknowl compiled, 8 + 20 bytes
+++ dvfsf_smcpknowl compiled, 8 + 20 bytes
+++ dvfsf_smmkatl compiled, 17 + 20 bytes
+++ dvfsf_susirmknowl compiled, 57 + 16 bytes
+++ dvfsf_susibin compiled, 157 + 44 bytes
+++ dvfsf_susibin!-eqlhsmatch compiled, 22 + 36 bytes
+++ dvfsf_susibin1 compiled, 180 + 76 bytes
+++ dvfsf_susibin2 compiled, 126 + 56 bytes

*** local variable knowl in procedure dvfsf_susipost not used 
+++ dvfsf_susipost compiled, 1 + 8 bytes

*** local variable knowl in procedure dvfsf_susitf not used 
+++ dvfsf_susitf compiled, 1 + 8 bytes
Completed FASL files for "dvfsfsism"
+++ FASLEND: hits = 71, misses = 51



*** Compiling dvfsfqe ... 


FASLOUT "dvfsfqe": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable f in procedure dvfsf_varsel not used 

*** local variable theo in procedure dvfsf_varsel not used 
+++ dvfsf_varsel compiled, 3 + 8 bytes
+++ dvfsf_pmultf compiled, 7 + 20 bytes
+++ dvfsf_pmultsq compiled, 6 + 20 bytes
+++ dvfsf_ipmultsq compiled, 6 + 20 bytes

*** local variable theo in procedure dvfsf_translat not used 

*** local variable ans in procedure dvfsf_translat not used 
+++ dvfsf_translat compiled, 100 + 64 bytes

*** local variable eqsoll in procedure dvfsf_translat2 not used 
+++ dvfsf_translat2 compiled, 240 + 84 bytes
+++ dvfsf_mkpair compiled, 37 + 40 bytes
+++ dvfsf_mkcsol compiled, 18 + 28 bytes
+++ dvfsf_mkcpoint compiled, 16 + 24 bytes

*** local variable i in procedure dvfsf_elimset not used 

*** local variable v in procedure dvfsf_elimset not used 
+++ dvfsf_elimset compiled, 250 + 100 bytes

*** local variable bvl in procedure dvfsf_qesubcq not used 

*** local variable theo in procedure dvfsf_qesubcq not used 
+++ dvfsf_qesubcq compiled, 29 + 32 bytes
+++ dvfsf_qesubq compiled, 8 + 16 bytes
+++ dvfsf_qesubqat compiled, 43 + 44 bytes

*** local variable v in procedure dvfsf_transform not used 
+++ dvfsf_transform compiled, 3 + 8 bytes

*** local variable bvl in procedure dvfsf_trygauss not used 
+++ dvfsf_trygauss compiled, 52 + 32 bytes
+++ dvfsf_findeqsol compiled, 28 + 16 bytes

*** local variable theo in procedure dvfsf_findeqsol1 not used 

*** local variable ans in procedure dvfsf_findeqsol1 not used 
+++ dvfsf_findeqsol1 compiled, 21 + 32 bytes
+++ dvfsf_gelimset compiled, 20 + 28 bytes

*** local variable atr in procedure dvfsf_qemkans not used 
+++ lambda_63ircqeulrd3 compiled, 6 + 12 bytes
+++ dvfsf_qemkans compiled, 6 + 24 bytes
+++ dvfsf_qemkans1 compiled, 46 + 16 bytes
+++ dvfsf_qebacksub compiled, 75 + 24 bytes
Completed FASL files for "dvfsfqe"
+++ FASLEND: hits = 153, misses = 84



*** Compiling dvfsfmisc ... 


FASLOUT "dvfsfmisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dvfsf_ordatp compiled, 33 + 28 bytes
+++ dvfsf_ordrelp compiled, 10 + 16 bytes
+++ dvfsf_varlat compiled, 14 + 32 bytes
+++ dvfsf_varsubstat compiled, 25 + 28 bytes
+++ dvfsf_negateat compiled, 84 + 56 bytes
+++ dvfsf_fctrat compiled, 16 + 28 bytes
+++ dvfsf_v compiled, 13 + 20 bytes
+++ dvfsf_dnf compiled, 16 + 28 bytes
+++ dvfsf_cnf compiled, 16 + 28 bytes
+++ dvfsf_subsumption compiled, 30 + 28 bytes
+++ dvfsf_subsumep!-and compiled, 22 + 20 bytes
+++ dvfsf_subsumep!-or compiled, 26 + 28 bytes
+++ dvfsf_a2cdl compiled, 153 + 48 bytes
+++ dvfsf_subat compiled, 58 + 48 bytes
+++ dvfsf_subalchk compiled, 33 + 20 bytes
+++ dvfsf_eqnrhskernels compiled, 12 + 16 bytes
+++ dvfsf_structat compiled, 38 + 28 bytes
+++ dvfsf_ifstructat compiled, 74 + 40 bytes
+++ dvfsf_termmlat compiled, 24 + 20 bytes
+++ dvfsf_explats compiled, 14 + 24 bytes
+++ dvfsf_explodezat compiled, 66 + 52 bytes
+++ dvfsf_explodezat1 compiled, 62 + 40 bytes
+++ dvfsf_mkcanonic compiled, 222 + 104 bytes
+++ dvfsf_coeffacl compiled, 34 + 16 bytes
+++ dvfsf_coeffaclat compiled, 12 + 28 bytes
+++ dvfsf_coeffaclf compiled, 29 + 32 bytes
+++ dvfsf_coeffaclz compiled, 22 + 24 bytes
+++ dvfsf_subp compiled, 11 + 20 bytes
+++ cl_subpat compiled, 17 + 28 bytes
Completed FASL files for "dvfsfmisc"
+++ FASLEND: hits = 221, misses = 95

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling acfsf ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "acfsf": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"

*** <> redefined 
+++ acfsf_simpterm compiled, 4 + 12 bytes
+++ acfsf_prepat compiled, 13 + 24 bytes
+++ acfsf_resimpat compiled, 19 + 32 bytes

*** local variable f in procedure acfsf_lengthat not used 
+++ acfsf_lengthat compiled, 2 + 12 bytes
+++ acfsf_chsimpat compiled, 41 + 24 bytes
+++ acfsf_chsimpat1 compiled, 45 + 16 bytes
+++ acfsf_simpat compiled, 79 + 52 bytes
+++ acfsf_op compiled as link to car
+++ acfsf_arg2l compiled as link to cadr
+++ acfsf_arg2r compiled as link to caddr
+++ acfsf_argn compiled, 6 + 8 bytes
+++ acfsf_mk2 compiled, 5 + 8 bytes
+++ acfsf_0mk2 compiled, 6 + 8 bytes
+++ acfsf_mkn compiled, 7 + 8 bytes
+++ acfsf_opp compiled, 5 + 12 bytes
Completed FASL files for "acfsf"
+++ FASLEND: hits = 186, misses = 247
Fast-loading "./reduce.img(acfsf)"
Fast-loading "./reduce.img(cgb)"
Fast-loading "./reduce.img(ezgcd)"
Fast-loading "./reduce.img(alphas)"
Fast-loading "./reduce.img(coeffts)"
Fast-loading "./reduce.img(ezgcdf)"
Fast-loading "./reduce.img(facmisc)"
Fast-loading "./reduce.img(facstr)"
Fast-loading "./reduce.img(interfac)"
Fast-loading "./reduce.img(linmodp)"
Fast-loading "./reduce.img(mhensfns)"
Fast-loading "./reduce.img(modpoly)"
Fast-loading "./reduce.img(multihen)"
Fast-loading "./reduce.img(unihens)"
Fast-loading "./reduce.img(redlog)"
Fast-loading "./reduce.img(rlami)"
Fast-loading "./reduce.img(rlsched)"
Fast-loading "./reduce.img(rlcont)"
Fast-loading "./reduce.img(rlhelp)"
Fast-loading "./reduce.img(gb)"
Fast-loading "./reduce.img(dp)"
Fast-loading "./reduce.img(gbsc)"

*** <> redefined 



*** Compiling acfsfsiat ... 


FASLOUT "acfsfsiat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ acfsf_simplat1 compiled, 64 + 72 bytes

*** local variable w in procedure acfsf_simplequal not used 

*** local variable ww in procedure acfsf_simplequal not used 
+++ acfsf_simplequal compiled, 22 + 40 bytes
+++ acfsf_facequal compiled, 44 + 28 bytes

*** local variable w in procedure acfsf_simplneq not used 

*** local variable ww in procedure acfsf_simplneq not used 
+++ acfsf_simplneq compiled, 22 + 40 bytes
+++ acfsf_facneq compiled, 44 + 28 bytes
+++ acfsf_evalatp compiled, 20 + 28 bytes
Completed FASL files for "acfsfsiat"
+++ FASLEND: hits = 50, misses = 38



*** Compiling acfsfsism ... 


FASLOUT "acfsfsism": IN files;  or type in expressions
When all done, execute FASLEND;
+++ acfsf_smrmknowl compiled, 21 + 16 bytes
+++ acfsf_smcpknowl compiled, 40 + 8 bytes
+++ acfsf_smupdknowl compiled, 52 + 32 bytes

*** local variable oldknowl in procedure acfsf_smmkatl not used 
+++ acfsf_smmkatl compiled, 6 + 12 bytes
+++ acfsf_smdbgetrel compiled, 16 + 8 bytes
+++ acfsf_at2ir compiled, 51 + 40 bytes
+++ acfsf_irl2atl compiled, 45 + 16 bytes
+++ acfsf_ir2atl compiled, 65 + 20 bytes
+++ acfsf_entry2at compiled, 14 + 20 bytes
+++ acfsf_entry2at1 compiled, 14 + 24 bytes
+++ acfsf_sminsert compiled, 122 + 28 bytes
+++ acfsf_sminsert1 compiled, 86 + 36 bytes
+++ acfsf_smeqtable compiled, 6 + 12 bytes
+++ acfsf_smordtable compiled, 18 + 16 bytes
Completed FASL files for "acfsfsism"
+++ FASLEND: hits = 76, misses = 47



*** Compiling acfsfbnf ... 


FASLOUT "acfsfbnf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ acfsf_dnf compiled, 16 + 28 bytes
+++ acfsf_cnf compiled, 16 + 28 bytes
+++ acfsf_subsumption compiled, 30 + 28 bytes
+++ acfsf_subsumep!-and compiled, 22 + 20 bytes
+++ acfsf_subsumep!-or compiled, 26 + 28 bytes
+++ acfsf_sacatlp compiled, 21 + 20 bytes
+++ acfsf_sacat compiled, 30 + 28 bytes

*** local variable gor in procedure acfsf_sacrel not used 
+++ acfsf_sacrel compiled, 7 + 16 bytes
Completed FASL files for "acfsfbnf"
+++ FASLEND: hits = 48, misses = 35



*** Compiling acfsfgs ... 


FASLOUT "acfsfgs": IN files;  or type in expressions
When all done, execute FASLEND;
+++ acfsf_gsc compiled, 22 + 36 bytes
+++ acfsf_gsc1 compiled, 68 + 60 bytes
+++ acfsf_gsd compiled, 22 + 36 bytes
+++ acfsf_gsd1 compiled, 74 + 60 bytes
+++ acfsf_gsn compiled, 32 + 36 bytes
+++ acfsf_gssimplify0 compiled, 7 + 16 bytes
+++ acfsf_gssimplify compiled, 130 + 100 bytes
+++ acfsf_gspreducef compiled, 15 + 24 bytes
+++ acfsf_gsgreducef compiled, 15 + 28 bytes
+++ acfsf_gsgbf compiled, 10 + 24 bytes
+++ acfsf_gsvl compiled, 11 + 20 bytes
+++ acfsf_gssm compiled, 6 + 20 bytes
+++ acfsf_gssx compiled, 5 + 16 bytes
+++ acfsf_gsinctheop compiled, 28 + 52 bytes
+++ acfsf_gssplit!-cnf compiled, 148 + 88 bytes
+++ acfsf_gsdis!-type compiled, 29 + 28 bytes
+++ acfsf_gsextract!-gp compiled, 51 + 20 bytes
+++ acfsf_gsgprem compiled, 20 + 40 bytes
+++ acfsf_gspart compiled, 84 + 32 bytes
+++ acfsf_gsimplication compiled, 132 + 76 bytes
+++ acfsf_gsredatl compiled, 44 + 20 bytes
+++ acfsf_gsusepremise compiled, 29 + 16 bytes
+++ acfsf_gseqprod compiled, 61 + 64 bytes
+++ acfsf_gsmkradvar compiled, 24 + 32 bytes
+++ acfsf_gsupdtorder compiled, 26 + 36 bytes
+++ acfsf_gstryeval compiled, 36 + 28 bytes
+++ acfsf_gsdis2impl compiled, 80 + 44 bytes
+++ acfsf_gsattype compiled, 30 + 32 bytes
+++ acfsf_gsredat compiled, 83 + 72 bytes
+++ acfsf_gspremise compiled, 108 + 36 bytes
+++ acfsf_gssimulateprod compiled, 81 + 32 bytes
Completed FASL files for "acfsfgs"
+++ FASLEND: hits = 274, misses = 121



*** Compiling acfsfmisc ... 


FASLOUT "acfsfmisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ acfsf_termprint compiled, 15 + 28 bytes
+++ acfsf_clnegrel compiled, 6 + 12 bytes
+++ acfsf_lnegrel compiled, 15 + 24 bytes
+++ acfsf_fctrat compiled, 5 + 16 bytes
+++ acfsf_negateat compiled, 9 + 24 bytes
+++ acfsf_varlat compiled, 4 + 16 bytes
+++ acfsf_varsubstat compiled, 15 + 24 bytes
+++ acfsf_ordatp compiled, 21 + 24 bytes
+++ acfsf_ordrelp compiled, 9 + 12 bytes
+++ acfsf_a2cdl compiled, 53 + 24 bytes
+++ acfsf_t2cdl compiled, 10 + 20 bytes
+++ acfsf_subat compiled, 21 + 32 bytes
+++ acfsf_subalchk compiled, 33 + 20 bytes
+++ acfsf_eqnrhskernels compiled, 12 + 16 bytes
+++ acfsf_getineq compiled, 30 + 32 bytes
+++ acfsf_structat compiled, 22 + 24 bytes
+++ acfsf_ifstructat compiled, 39 + 36 bytes
+++ acfsf_termmlat compiled, 11 + 16 bytes
+++ acfsf_decdeg compiled, 4 + 16 bytes

*** local variable w in procedure acfsf_decdeg0 not used 

*** local variable gamma in procedure acfsf_decdeg0 not used 

*** local variable newmat in procedure acfsf_decdeg0 not used 
+++ acfsf_decdeg0 compiled, 75 + 44 bytes
+++ acfsf_decdeg1 compiled, 51 + 32 bytes

*** local variable oddp in procedure acfsf_decdeg2 not used 
+++ acfsf_decdeg2 compiled, 70 + 48 bytes
+++ acfsf_ignshift compiled, 22 + 20 bytes
+++ acfsf_decdeg3 compiled, 8 + 16 bytes
+++ acfsf_decdegat compiled, 17 + 28 bytes
+++ acfsf_multsurep compiled, 10 + 24 bytes
+++ acfsf_multsurep!-equal compiled, 32 + 28 bytes
+++ acfsf_multsurep!-neq compiled, 32 + 28 bytes
Completed FASL files for "acfsfmisc"
+++ FASLEND: hits = 178, misses = 78



*** Compiling acfsfqe ... 


FASLOUT "acfsfqe": IN files;  or type in expressions
When all done, execute FASLEND;
+++ acfsf_gqe compiled, 12 + 24 bytes
+++ acfsf_qe compiled, 12 + 20 bytes
+++ acfsf_qe1 compiled, 133 + 56 bytes
+++ acfsf_qeblk compiled, 22 + 20 bytes
+++ acfsf_qeblk1 compiled, 75 + 40 bytes

*** local variable theo in procedure acfsf_qeblk2 not used 

*** local variable bvl in procedure acfsf_qeblk2 not used 
+++ acfsf_qeblk2 compiled, 62 + 52 bytes
+++ acfsf_spltcj compiled, 32 + 16 bytes
+++ acfsf_eqtl compiled, 41 + 24 bytes
+++ acfsf_rmneqtl compiled, 48 + 32 bytes
+++ acfsf_tagvar compiled, 6 + 12 bytes
+++ acfsf_qefl compiled, 57 + 40 bytes
+++ acfsf_qefl1 compiled, 91 + 56 bytes
+++ acfsf_bc2f compiled, 4 + 12 bytes
+++ acfsf_thsimpl compiled, 20 + 48 bytes
+++ acfsf_thregen compiled, 60 + 36 bytes
+++ acfsf_thregen!-or compiled, 44 + 52 bytes
Completed FASL files for "acfsfqe"
+++ FASLEND: hits = 109, misses = 77

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling dcfsf ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "dcfsf": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"
Fast-loading "./reduce.img(acfsf)"
Fast-loading "./reduce.img(cgb)"
Fast-loading "./reduce.img(ezgcd)"
Fast-loading "./reduce.img(alphas)"
Fast-loading "./reduce.img(coeffts)"
Fast-loading "./reduce.img(ezgcdf)"
Fast-loading "./reduce.img(facmisc)"
Fast-loading "./reduce.img(facstr)"
Fast-loading "./reduce.img(interfac)"
Fast-loading "./reduce.img(linmodp)"
Fast-loading "./reduce.img(mhensfns)"
Fast-loading "./reduce.img(modpoly)"
Fast-loading "./reduce.img(multihen)"
Fast-loading "./reduce.img(unihens)"
Fast-loading "./reduce.img(redlog)"
Fast-loading "./reduce.img(rlami)"
Fast-loading "./reduce.img(rlsched)"
Fast-loading "./reduce.img(rlcont)"
Fast-loading "./reduce.img(rlhelp)"
Fast-loading "./reduce.img(gb)"
Fast-loading "./reduce.img(dp)"
Fast-loading "./reduce.img(gbsc)"
Fast-loading "./reduce.img(acfsfsiat)"
Fast-loading "./reduce.img(acfsfsism)"
Fast-loading "./reduce.img(acfsfbnf)"
Fast-loading "./reduce.img(acfsfgs)"
Fast-loading "./reduce.img(acfsfmisc)"
Fast-loading "./reduce.img(acfsfqe)"

*** <> redefined 

*** <> redefined 
+++ dcfsf_simpterm compiled, 4 + 12 bytes
+++ dcfsf_prepat compiled, 13 + 24 bytes
+++ dcfsf_resimpat compiled, 19 + 32 bytes
+++ dcfsf_simpd compiled, 66 + 60 bytes

*** local variable f in procedure dcfsf_lengthat not used 
+++ dcfsf_lengthat compiled, 2 + 12 bytes
+++ dcfsf_chsimpat compiled, 41 + 24 bytes
+++ dcfsf_chsimpat1 compiled, 45 + 16 bytes
+++ dcfsf_simpat compiled, 79 + 52 bytes
+++ dcfsf_op compiled as link to car
+++ dcfsf_arg2l compiled as link to cadr
+++ dcfsf_arg2r compiled as link to caddr
+++ dcfsf_argn compiled, 6 + 8 bytes
+++ dcfsf_mk2 compiled, 5 + 8 bytes
+++ dcfsf_0mk2 compiled, 6 + 8 bytes
+++ dcfsf_mkn compiled, 7 + 8 bytes
+++ dcfsf_opp compiled, 5 + 12 bytes
Completed FASL files for "dcfsf"
+++ FASLEND: hits = 158, misses = 266
Fast-loading "./reduce.img(dcfsf)"

*** equal already defined as operator 

*** neq already defined as operator 

*** <> redefined 



*** Compiling dcfsfmisc ... 


FASLOUT "dcfsfmisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dcfsf_termprint compiled, 15 + 28 bytes
+++ dcfsf_clnegrel compiled, 6 + 12 bytes
+++ dcfsf_lnegrel compiled, 15 + 24 bytes
+++ dcfsf_fctrat compiled, 5 + 16 bytes
+++ dcfsf_negateat compiled, 9 + 24 bytes
+++ dcfsf_varlat compiled, 5 + 20 bytes
+++ dcfsf_varlat1 compiled, 61 + 16 bytes
+++ dcfsf_varsubstat compiled, 15 + 24 bytes
+++ dcfsf_ordatp compiled, 21 + 24 bytes
+++ dcfsf_ordrelp compiled, 9 + 12 bytes
+++ dcfsf_subalchk compiled, 53 + 44 bytes
+++ dcfsf_eqnrhskernels compiled, 12 + 16 bytes
+++ dcfsf_subat compiled, 21 + 32 bytes
Completed FASL files for "dcfsfmisc"
+++ FASLEND: hits = 73, misses = 44



*** Compiling dcfsfqe ... 


FASLOUT "dcfsfqe": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dcfsf_orddegf compiled, 9 + 16 bytes
+++ dcfsf_orddegf1 compiled, 86 + 20 bytes
+++ dcfsf_ordf compiled, 32 + 16 bytes
+++ dcfsf_degf compiled, 28 + 12 bytes
+++ dcfsf_df compiled, 15 + 20 bytes
+++ dcfsf_df1 compiled, 45 + 24 bytes
+++ dcfsf_derivationnf compiled, 21 + 16 bytes
+++ dcfsf_derivationf compiled, 29 + 28 bytes
+++ dcfsf_derivationk compiled, 60 + 48 bytes
+++ dcfsf_derivationk1 compiled, 20 + 20 bytes

*** local variable theo in procedure dcfsf_qe-kacem not used 
+++ dcfsf_qe!-kacem compiled, 24 + 36 bytes
+++ dcfsf_qe compiled, 8 + 20 bytes
+++ dcfsf_qe0 compiled, 44 + 32 bytes
+++ dcfsf_qeblk compiled, 16 + 20 bytes
+++ dcfsf_qeblk1 compiled, 27 + 24 bytes
+++ dcfsf_qevar compiled, 74 + 44 bytes
+++ dcfsf_qevar1 compiled, 34 + 32 bytes
+++ dcfsf_nf compiled, 14 + 24 bytes
+++ dcfsf_nf1 compiled, 53 + 36 bytes
+++ dcfsf_qevar2 compiled, 70 + 36 bytes
+++ dcfsf_reorderat compiled, 14 + 28 bytes
+++ dcfsf_maxorder compiled, 31 + 16 bytes
+++ dcfsf_mkkl compiled, 48 + 20 bytes
+++ dcfsf_qesc5 compiled, 55 + 60 bytes
+++ dcfsf_qesc50 compiled, 89 + 48 bytes
+++ dcfsf_qeordp compiled, 27 + 16 bytes
+++ dcfsf_qebasis compiled, 39 + 28 bytes
+++ dcfsf_qebasis1 compiled, 76 + 48 bytes
+++ dcfsf_qebasis2 compiled, 194 + 76 bytes
+++ dcfsf_mvar compiled, 21 + 12 bytes
+++ dcfsf_separant compiled, 5 + 12 bytes
+++ dcfsf_qesc5r compiled, 54 + 36 bytes
+++ dcfsf_qesc5r2 compiled, 48 + 20 bytes
+++ dcfsf_qesc5r2u1 compiled, 63 + 32 bytes
+++ dcfsf_qesc5r2u2 compiled, 101 + 44 bytes
+++ dcfsf_dn compiled, 64 + 48 bytes

*** local variable theo in procedure dcfsf_qesc1 not used 
+++ dcfsf_qesc1 compiled, 44 + 28 bytes
+++ dcfsf_cl compiled, 40 + 16 bytes
+++ dcfsf_cl1 compiled, 6 + 16 bytes
+++ dcfsf_cl2 compiled, 45 + 20 bytes
+++ dcfsf_qesc compiled, 73 + 56 bytes

*** local variable theo in procedure dcfsf_qesc2 not used 
+++ dcfsf_qesc2 compiled, 57 + 32 bytes

*** local variable iff in procedure dcfsf_qesc3 not used 

*** local variable theo in procedure dcfsf_qesc3 not used 
+++ dcfsf_qesc3 compiled, 100 + 36 bytes

*** local variable iff in procedure dcfsf_qesc4 not used 

*** local variable theo in procedure dcfsf_qesc4 not used 
+++ dcfsf_qesc4 compiled, 140 + 56 bytes
Completed FASL files for "dcfsfqe"
+++ FASLEND: hits = 343, misses = 108



*** Compiling dcfsfkacem ... 


FASLOUT "dcfsfkacem": IN files;  or type in expressions
When all done, execute FASLEND;
+++ dqe_isconstant compiled, 25 + 16 bytes
+++ dqe_isatomarp compiled, 15 + 16 bytes
+++ dqe_isquantfree compiled, 42 + 28 bytes
+++ dqe_isprenexp compiled, 24 + 24 bytes
+++ dqe_modatomar compiled, 18 + 20 bytes
+++ dqe_helpelim compiled, 44 + 48 bytes
+++ dqe_helpelim!-and compiled, 41 + 32 bytes
+++ dqe_andorvaleur compiled, 85 + 16 bytes
+++ dqe_consm compiled, 8 + 8 bytes
+++ dqe_modcons compiled, 13 + 8 bytes
+++ dqe_makepositiveat compiled, 23 + 16 bytes
+++ dqe_makepositive compiled, 244 + 36 bytes
+++ dqe_interchange7 compiled, 130 + 24 bytes
+++ dqe_pnfquantor compiled, 174 + 24 bytes
+++ dqe_pnfjunktor compiled, 187 + 36 bytes
+++ dqe_pnf compiled, 32 + 36 bytes
+++ dqe_makeprenex compiled, 29 + 20 bytes
+++ dqe_pnfquantormod compiled, 189 + 24 bytes
+++ dqe_pnfjunktormod compiled, 208 + 36 bytes
+++ dqe_pnfmod compiled, 34 + 36 bytes
+++ dqe_makeprenexmod compiled, 92 + 20 bytes
+++ dqe_disjnf compiled, 114 + 48 bytes
+++ dqe_konjnf compiled, 114 + 48 bytes
+++ dqe_distributiv compiled, 1013 + 48 bytes
+++ dqe_simplifyat compiled, 190 + 80 bytes
+++ dqe_simplify compiled, 144 + 36 bytes
+++ qe92_lin_normcontent compiled, 7 + 20 bytes
+++ qe92_lin_normcontent1 compiled, 26 + 20 bytes
+++ dqe_helpremainder compiled, 14 + 20 bytes
+++ dqe_helpcoeff compiled, 9 + 16 bytes
+++ dqe_koeff compiled, 7 + 16 bytes
+++ dqe_restfkt compiled, 13 + 20 bytes
+++ dqe_pseudf compiled, 6 + 16 bytes
+++ dqe_varmengefkt compiled, 77 + 36 bytes
+++ dqe_partieldf compiled, 82 + 36 bytes
+++ dqe_diffkt compiled, 47 + 28 bytes
+++ dqe_diff compiled, 20 + 16 bytes
+++ dqe_termcoefkt compiled, 128 + 44 bytes
+++ dqe_helpord compiled, 73 + 28 bytes
+++ dqe_ord compiled, 37 + 20 bytes
+++ dqe_grad compiled, 26 + 24 bytes
+++ dqe_initial compiled, 24 + 28 bytes
+++ dqe_reduktum compiled, 49 + 44 bytes
+++ dqe_separante compiled, 22 + 24 bytes
+++ dqe_pseudrest compiled, 111 + 40 bytes
+++ dqe_listenord compiled, 136 + 28 bytes
+++ dqe_neqnullfkt compiled, 58 + 24 bytes
+++ dqe_equalnullfkt compiled, 40 + 20 bytes
+++ dqe_elimsimplify compiled, 71 + 40 bytes
+++ dqe_start1 compiled, 61 + 72 bytes
+++ dqe_start2 compiled, 57 + 72 bytes
+++ dqe_elim compiled, 1155 + 140 bytes
+++ dqe_exqelim compiled, 217 + 120 bytes
+++ dqe_allqelim compiled, 239 + 128 bytes
+++ dqe_quantelim compiled, 289 + 132 bytes
+++ dqe_elimopt compiled, 42 + 48 bytes

*** local variable diffequaliste in procedure dqe_elimopt-neq not used 
+++ dqe_elimopt!-neq compiled, 32 + 44 bytes

*** local variable diffequaliste in procedure dqe_elimopt-oneeq not used 
+++ dqe_elimopt!-oneeq compiled, 62 + 68 bytes
+++ dqe_elimopt!-regular compiled, 33 + 28 bytes
+++ dqe_elimopt!-regular1 compiled, 551 + 128 bytes
+++ dqe_elimopt!-regular!-oneeq compiled, 511 + 124 bytes
+++ dqe_exqelimopt compiled, 252 + 128 bytes
+++ dqe_allqelimopt compiled, 273 + 136 bytes
+++ dqe_quantelimopt compiled, 309 + 136 bytes
+++ dqe_elimberechnung compiled, 62 + 24 bytes
+++ dqe_helpsimplify compiled, 342 + 64 bytes
+++ dqe_logsimp compiled, 122 + 44 bytes
+++ dqe_listequal compiled, 43 + 12 bytes
+++ dqe_vorkommen compiled, 46 + 28 bytes
+++ dqe_laengefkt compiled, 38 + 28 bytes
+++ dqe_specneq compiled, 24 + 28 bytes
+++ dqe_specequal compiled, 24 + 28 bytes
+++ dqe_tableau compiled, 58 + 44 bytes
+++ dqe_ltableau compiled, 15 + 12 bytes
+++ dqe_dknfsimplify compiled, 143 + 32 bytes
+++ dqe_permutationfkt compiled, 61 + 20 bytes
+++ dqe_sanselem compiled, 21 + 8 bytes
+++ dqe_pform compiled, 12 + 20 bytes
Completed FASL files for "dcfsfkacem"
+++ FASLEND: hits = 741, misses = 144

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling geometry ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "geometry": IN files;  or type in expressions
When all done, execute FASLEND;
+++ getcoord compiled, 81 + 32 bytes
+++ clear_ndg compiled, 7 + 24 bytes
+++ print_ndg compiled, 2 + 12 bytes
+++ add_ndg compiled, 20 + 28 bytes
+++ point compiled, 5 + 12 bytes
+++ line compiled, 8 + 12 bytes
+++ pp_line compiled, 74 + 32 bytes
+++ intersection_point compiled, 164 + 76 bytes
+++ lot compiled, 45 + 36 bytes
+++ par compiled, 57 + 36 bytes
+++ pedalpoint compiled, 9 + 16 bytes
+++ midpoint compiled, 44 + 32 bytes
+++ varpoint compiled, 66 + 36 bytes
+++ choose_pl compiled, 112 + 64 bytes
+++ sqrdist compiled, 44 + 32 bytes
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
+++ collinear compiled, 51 + 28 bytes
+++ concurrent compiled, 69 + 32 bytes
+++ parallel compiled, 36 + 28 bytes
+++ orthogonal compiled, 36 + 28 bytes
+++ point_on_line compiled, 44 + 32 bytes
+++ mp compiled, 15 + 20 bytes
+++ altitude compiled, 10 + 16 bytes
+++ median compiled, 10 + 16 bytes
+++ l2_angle compiled, 89 + 48 bytes
+++ p3_angle compiled, 15 + 16 bytes
+++ angle_sum compiled, 32 + 40 bytes
+++ point_on_bisector compiled, 349 + 44 bytes
+++ sympoint compiled, 12 + 20 bytes
+++ symline compiled, 175 + 52 bytes
+++ circle1 compiled, 5 + 12 bytes
+++ p3_circle1 compiled, 30 + 28 bytes
+++ point_on_circle1 compiled, 21 + 28 bytes
+++ choose_pc compiled, 83 + 56 bytes
+++ circle compiled, 11 + 12 bytes
+++ c1_circle compiled, 65 + 44 bytes
+++ circle_center compiled, 68 + 52 bytes
+++ circle_sqradius compiled, 85 + 60 bytes
+++ p3_circle compiled, 303 + 44 bytes
+++ point_on_circle compiled, 76 + 44 bytes
+++ p4_circle compiled, 15 + 16 bytes
+++ other_cl_point compiled, 261 + 96 bytes
+++ other_cc_point compiled, 124 + 52 bytes
+++ cl_tangent compiled, 210 + 52 bytes
+++ cc_tangent compiled, 332 + 52 bytes
+++ list2mat compiled, 39 + 16 bytes
+++ extractmat compiled, 229 + 68 bytes
+++ red_hom_coords compiled, 120 + 60 bytes
Completed FASL files for "geometry"
+++ FASLEND: hits = 560, misses = 95
Fast-loading "./reduce.img(geometry)"

 Geometry  1.1  Last update  Sept 6, 1998 

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling ibalp ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "ibalp": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(redlog)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(rlami)"
Fast-loading "./reduce.img(rlsched)"
Fast-loading "./reduce.img(rlcont)"
Fast-loading "./reduce.img(rlhelp)"
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"
+++ ibalp_priequal compiled, 78 + 68 bytes
+++ ibalp_fancy!-priequal compiled, 19 + 32 bytes

*** local variable rhs in procedure ibalp_fancy-priequal-pc not used 
+++ ibalp_fancy!-priequal!-pc compiled, 67 + 64 bytes
+++ ibalp_pribnot compiled, 31 + 36 bytes
+++ ibalp_fancy!-pribnot compiled, 9 + 20 bytes
+++ ibalp_fancy!-pribnot!-tm compiled, 10 + 28 bytes
+++ ibalp_fancy!-pribnot!-fm compiled, 25 + 32 bytes
+++ ibalp_fancy!-pribequiv compiled, 13 + 28 bytes
+++ ibalp_fancy!-pribimpl compiled, 13 + 28 bytes
+++ ibalp_fancy!-pribrepl compiled, 13 + 28 bytes
+++ ibalp_fancy!-pribor compiled, 22 + 28 bytes
+++ ibalp_pcstat compiled, 7 + 16 bytes

*** local variable an-empty-al in procedure ibalp_pcform not used 
+++ ibalp_pcform compiled, 16 + 28 bytes

*** local variable an-empty-al in procedure ibalp_pcvarform not used 

*** local variable mode in procedure ibalp_pcvarform not used 
+++ ibalp_pcvarform compiled, 106 + 44 bytes
+++ ibalp_pcvar compiled, 25 + 28 bytes
+++ ibalp_uppercasep compiled, 5 + 12 bytes
+++ ibalp_pcvarp compiled, 6 + 16 bytes
+++ ibalp_upcase compiled, 43 + 12 bytes
+++ ibalp_downcase compiled, 43 + 12 bytes
+++ ibalp_subat compiled, 17 + 28 bytes
+++ ibalp_subt compiled, 56 + 12 bytes

*** local variable al in procedure ibalp_subalchk not used 
+++ ibalp_subalchk compiled, 1 + 8 bytes
+++ ibalp_eqnrhskernels compiled, 3 + 12 bytes
+++ ibalp_simpterm compiled, 64 + 28 bytes
+++ ibalp_simpatom compiled, 57 + 56 bytes
+++ ibalp_prepterm compiled, 1 + 8 bytes
+++ ibalp_boolfp compiled, 5 + 12 bytes
+++ ibalp_resimpterm compiled as link to ibalp_simpterm
+++ ibalp_prepat compiled, 1 + 8 bytes
+++ ibalp_resimpat compiled, 13 + 28 bytes
+++ ibalp_lengthat compiled, 4 + 12 bytes
+++ ibalp_simpat compiled, 12 + 16 bytes
+++ ibalp_op compiled as link to car
+++ ibalp_atfp compiled, 6 + 16 bytes
+++ ibalp_arg1 compiled as link to cadr
+++ ibalp_arg2l compiled as link to cadr
+++ ibalp_arg2r compiled as link to caddr
+++ ibalp_argn compiled as link to cdr
+++ ibalp_mk2 compiled, 5 + 8 bytes
+++ ibalp_1mk2 compiled, 6 + 12 bytes
+++ ibalp_mkn compiled as link to cons
+++ ibalp_dnf compiled, 16 + 28 bytes
+++ ibalp_cnf compiled, 16 + 28 bytes
+++ ibalp_subsumption compiled, 30 + 28 bytes
+++ ibalp_subsumep!-and compiled, 22 + 20 bytes
+++ ibalp_subsumep!-or compiled, 26 + 28 bytes

*** local variable gor in procedure ibalp_sacat not used 
+++ ibalp_sacat compiled, 37 + 32 bytes
+++ ibalp_atab compiled, 8 + 20 bytes
+++ ibalp_itab compiled, 8 + 20 bytes
+++ ibalp_a2cdl compiled, 64 + 28 bytes
+++ ibalp_substat compiled, 20 + 28 bytes
+++ ibalp_ordatp compiled, 33 + 28 bytes
+++ ibalp_ordp compiled, 16 + 20 bytes
+++ ibalp_ordrelp compiled, 10 + 16 bytes
+++ ibalp_negateat compiled, 12 + 28 bytes
+++ ibalp_negatet compiled, 14 + 20 bytes
+++ seidl_negateat compiled, 78 + 48 bytes
+++ ibalp_flip01 compiled, 15 + 24 bytes
+++ ibalp_cveq compiled, 18 + 32 bytes
+++ ibalp_termmlat compiled, 48 + 28 bytes

*** local variable sop in procedure ibalp_simplat1 not used 
+++ ibalp_simplat1 compiled, 82 + 68 bytes
+++ ibalp_term2fo compiled, 194 + 124 bytes
+++ ibalp_varlat compiled, 10 + 24 bytes
+++ ibalp_varlt compiled, 4 + 12 bytes
+++ ibalp_varlt1 compiled, 33 + 28 bytes

*** local variable v in procedure ibalp_transform not used 
+++ ibalp_transform compiled, 3 + 8 bytes

*** local variable f in procedure ibalp_trygauss not used 

*** local variable v in procedure ibalp_trygauss not used 

*** local variable theo in procedure ibalp_trygauss not used 

*** local variable ans in procedure ibalp_trygauss not used 

*** local variable bvl in procedure ibalp_trygauss not used 
+++ ibalp_trygauss compiled, 3 + 12 bytes

*** local variable f in procedure ibalp_specelim not used 

*** local variable vl in procedure ibalp_specelim not used 

*** local variable theo in procedure ibalp_specelim not used 

*** local variable ans in procedure ibalp_specelim not used 

*** local variable bvl in procedure ibalp_specelim not used 
+++ ibalp_specelim compiled, 3 + 12 bytes

*** local variable theo in procedure ibalp_varsel not used 
+++ ibalp_varsel compiled, 52 + 32 bytes
+++ ibalp_badvarsel compiled, 45 + 24 bytes

*** local variable theo in procedure ibalp_translat not used 

*** local variable ans in procedure ibalp_translat not used 
+++ ibalp_translat compiled, 34 + 32 bytes
+++ ibalp_mkalp compiled, 11 + 12 bytes

*** local variable v in procedure ibalp_elimset not used 
+++ ibalp_elimset compiled, 50 + 24 bytes

*** local variable bvl in procedure ibalp_qesub not used 
+++ ibalp_qesub compiled, 12 + 16 bytes
+++ ibalp_qesubat compiled, 16 + 28 bytes
+++ ibalp_qesubt compiled, 54 + 8 bytes

*** local variable atr in procedure ibalp_qemkans not used 
+++ lambda_2rl3rykco26b compiled, 18 + 20 bytes
+++ ibalp_qemkans compiled, 49 + 20 bytes
+++ ibalp_qscsaat compiled, 24 + 32 bytes
+++ ibalp_qssubat compiled, 36 + 40 bytes
Completed FASL files for "ibalp"
+++ FASLEND: hits = 728, misses = 392
Fast-loading "./reduce.img(ibalp)"



*** Compiling ibalpkapur ... 


FASLOUT "ibalpkapur": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ibalp_setkapuroption compiled, 20 + 16 bytes
+++ ibalp_getkapuroption compiled, 4 + 16 bytes
+++ ibalp_initkapuroptions compiled, 41 + 60 bytes
+++ ibalp_kapur compiled, 105 + 124 bytes
+++ ibalp_regformula compiled, 27 + 36 bytes
+++ ibalp_kapur1 compiled, 60 + 64 bytes
+++ ibalp_polyset compiled, 27 + 40 bytes
+++ ibalp_formulaform compiled, 94 + 72 bytes
+++ ibalp_polyform compiled, 172 + 96 bytes
+++ ibalp_polyformatf compiled, 38 + 36 bytes
+++ ibalp_remnested compiled, 57 + 12 bytes
+++ ibalp_polyformlist compiled, 32 + 12 bytes
+++ ibalp_groebnereval compiled, 27 + 44 bytes
+++ ibalp_torderp compiled, 50 + 44 bytes
+++ ibalp_torderlexp compiled, 100 + 24 bytes
+++ ibalp_tordergradlexp compiled, 103 + 20 bytes
+++ ibalp_gbdegd compiled, 124 + 40 bytes
+++ ibalp_gb compiled, 209 + 72 bytes
+++ ibalp_gbsimplifyall compiled, 107 + 52 bytes
+++ ibalp_gboverlaprules compiled, 107 + 48 bytes
+++ ibalp_gboverlapruleszcritp compiled, 87 + 20 bytes
+++ ibalp_gbreducepoly compiled, 37 + 16 bytes
+++ ibalp_gbapplyrule compiled, 43 + 44 bytes
+++ ibalp_gbapplyrulem compiled, 73 + 40 bytes
+++ ibalp_gbinitrules compiled, 50 + 40 bytes
+++ ibalp_genpolyform compiled, 15 + 20 bytes
+++ ibalp_genidemppolylist compiled, 135 + 28 bytes
+++ ibalp_pset3knf compiled, 128 + 60 bytes
+++ ibalp_pset3knfnf compiled, 135 + 76 bytes
+++ ibalp_pset3knfnf1 compiled, 161 + 80 bytes
+++ ibalp_pset3knf2 compiled, 194 + 84 bytes
+++ ibalp_pset3knf3 compiled, 113 + 52 bytes
+++ ibalp_psetkapur compiled, 24 + 36 bytes
+++ ibalp_psetkapurtaut compiled, 97 + 64 bytes
+++ ibalp_psetkapurcont compiled, 90 + 68 bytes
+++ ibalp_psetkapurnary compiled, 56 + 64 bytes
+++ ibalp_psetkapurnary1 compiled, 55 + 48 bytes
+++ ibalp_psetkapurnoopt compiled, 20 + 32 bytes
+++ ibalp_psetkapurdistleft compiled, 57 + 36 bytes
+++ ibalp_psetkapurdistright compiled, 57 + 36 bytes
+++ ibalp_psetdirekt compiled, 4 + 12 bytes
+++ ibalp_splitlist compiled, 48 + 24 bytes
+++ ibalp_clonestruct compiled, 16 + 8 bytes
+++ krule_head compiled as link to car
+++ krule_tail compiled as link to cdr
+++ krule_genrule compiled as link to cons
+++ krule_rule2poly compiled, 9 + 20 bytes
+++ krule_poly2rule compiled, 20 + 32 bytes
+++ kpoly_times compiled, 101 + 48 bytes
+++ kpoly_times2 compiled, 28 + 24 bytes
+++ kpoly_times2sums compiled, 40 + 16 bytes
+++ kpoly_times2monomsum compiled, 47 + 20 bytes
+++ kpoly_times2monoms compiled, 70 + 32 bytes
+++ kpoly_plus compiled, 71 + 40 bytes
+++ kpoly_monomialp compiled, 10 + 12 bytes
+++ kpoly_idemppoly compiled, 10 + 16 bytes
+++ kpoly_norm compiled, 22 + 20 bytes
+++ kpoly_mondivp compiled, 85 + 24 bytes
Completed FASL files for "ibalpkapur"
+++ FASLEND: hits = 540, misses = 158



*** Compiling ibalpqsat ... 


FASLOUT "ibalpqsat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ my_mkvect compiled, 35 + 20 bytes
+++ my_putv compiled, 20 + 24 bytes
+++ my_getv compiled, 16 + 20 bytes
+++ my_mkvect compiled, 8 + 16 bytes

*** local variable w in procedure my_putv not used 
+++ my_putv compiled, 31 + 24 bytes
+++ my_getv compiled, 15 + 20 bytes
+++ ibalp_qsat!-initoptions compiled, 12 + 32 bytes
+++ ibalp_qsat!-getoptionl compiled, 31 + 36 bytes
+++ ibalp_qsat!-setoptionl compiled, 53 + 36 bytes
+++ ibalp_qsat!-getoption compiled, 4 + 16 bytes
+++ ibalp_printclause compiled, 73 + 24 bytes
+++ ibalp_printvaral compiled, 17 + 12 bytes
+++ ibalp_qsat!-dimacs compiled, 29 + 32 bytes
+++ ibalp_qsat!-readdimacs compiled, 15 + 16 bytes
+++ ibalp_qsat compiled, 74 + 72 bytes
+++ ibalp_start!-sat compiled, 51 + 44 bytes
+++ ibalp_start!-qsat compiled, 39 + 36 bytes
+++ ibalp_start!-pqsat compiled, 53 + 40 bytes
+++ ibalp_cdcl compiled, 196 + 84 bytes
+++ ibalp_preprocess compiled, 82 + 32 bytes
+++ ibalp_getvar compiled, 15 + 28 bytes
+++ ibalp_restart compiled, 40 + 44 bytes
+++ ibalp_analconf compiled, 45 + 32 bytes
+++ ibalp_dosimpl compiled, 23 + 16 bytes
+++ ibalp_simplify compiled, 144 + 40 bytes
+++ ibalp_hassimple compiled, 27 + 12 bytes
+++ ibalp_getupl compiled, 37 + 12 bytes
+++ ibalp_unitprop compiled, 89 + 24 bytes
+++ ibalp_initwl compiled, 122 + 20 bytes
+++ ibalp_renewwl compiled, 178 + 20 bytes
+++ ibalp_resolve compiled, 208 + 12 bytes
+++ ibalp_dav compiled, 79 + 20 bytes
+++ ibalp_calccc!-fuip compiled, 148 + 36 bytes
+++ ibalp_countgetlev compiled, 59 + 8 bytes
+++ ibalp_dellit compiled, 34 + 16 bytes
+++ ibalp_dimcount compiled, 35 + 20 bytes
+++ ibalp_killcount compiled, 36 + 20 bytes
+++ ibalp_delclause compiled, 179 + 20 bytes
+++ ibalp_getmacvext compiled, 107 + 20 bytes
+++ ibalp_recalcv compiled, 44 + 16 bytes
+++ ibalp_calccvar compiled, 95 + 12 bytes
+++ ibalp_tvb compiled, 29 + 12 bytes
+++ ibalp_istotal compiled, 14 + 8 bytes
+++ ibalp_getvar!-zmom compiled, 76 + 28 bytes
+++ ibalp_isinminclause compiled, 63 + 12 bytes
+++ ibalp_getvar!-dlcs compiled, 81 + 20 bytes
+++ ibalp_minclnr compiled, 46 + 12 bytes
+++ ibalp_calcmom compiled, 24 + 12 bytes
+++ ibalp_cec compiled, 29 + 12 bytes
+++ ibalp_csat compiled, 15 + 8 bytes
+++ ibalp_cv compiled, 12 + 8 bytes
+++ ibalp_var!-set compiled, 70 + 36 bytes
+++ ibalp_var!-satlist compiled, 140 + 20 bytes
+++ ibalp_var!-unsatlist compiled, 35 + 16 bytes
+++ ibalp_var!-wclist compiled, 100 + 20 bytes
+++ ibalp_var!-setq compiled, 121 + 36 bytes
+++ ibalp_var!-satlistq compiled, 100 + 16 bytes
+++ ibalp_var!-unset compiled, 94 + 32 bytes
+++ ibalp_unvar!-unsatlist compiled, 214 + 24 bytes
+++ ibalp_var!-unsetq compiled, 165 + 36 bytes
+++ ibalp_unvar!-unsatlistq compiled, 35 + 16 bytes
+++ ibalp_getnewwl compiled, 53 + 8 bytes
+++ ibalp_iscnf compiled, 69 + 36 bytes
+++ ibalp_readform compiled, 58 + 44 bytes
+++ ibalp_clmember compiled, 13 + 12 bytes
+++ ibalp_cequal compiled, 153 + 12 bytes
+++ ibalp_undoclause compiled, 94 + 16 bytes
+++ ibalp_redclause compiled, 20 + 12 bytes
+++ ibalp_readclause compiled, 147 + 56 bytes
+++ ibalp_qsat!-readdimacs2 compiled, 129 + 84 bytes
+++ ibalp_readquant!-cnf compiled, 125 + 44 bytes
+++ ibalp_readclause!-cnf compiled, 162 + 48 bytes
+++ ibalp_process!-var compiled, 139 + 24 bytes
+++ ibalp_get3cnf compiled, 151 + 56 bytes
+++ ibalp_convcnf compiled, 184 + 40 bytes
+++ ibalp_var!-mkid compiled, 13 + 20 bytes
+++ ibalp_qsat!-cdcl compiled, 177 + 56 bytes
+++ ibalp_qsat!-preprocess compiled, 66 + 36 bytes
+++ ibalp_qsat!-dosimpl compiled, 146 + 44 bytes
+++ ibalp_qsat!-cv compiled, 43 + 32 bytes
+++ ibalp_qsat!-btcase compiled, 34 + 24 bytes
+++ ibalp_qsat!-analconf compiled, 45 + 28 bytes
+++ ibalp_qsat!-mom compiled, 69 + 24 bytes
+++ ibalp_qsat!-calcmom compiled, 79 + 16 bytes
+++ ibalp_qsat!-qlevel compiled, 19 + 8 bytes
+++ ibalp_qsat!-hassimple compiled, 79 + 20 bytes
+++ ibalp_qsat!-abort compiled, 17 + 12 bytes
+++ ibalp_qsat!-calccvar compiled, 78 + 16 bytes
+++ ibalp_qsat!-getbtlevel compiled, 107 + 20 bytes
+++ ibalp_qsat!-calccc compiled, 129 + 44 bytes
+++ ibalp_clausetest compiled, 12 + 8 bytes
+++ ibalp_qsat!-doresolve compiled, 194 + 36 bytes
+++ ibalp_qsat!-searchdec compiled, 28 + 8 bytes
+++ ibalp_qsat!-unicheck compiled, 125 + 20 bytes
+++ ibalp_qsat!-getresvar compiled, 70 + 12 bytes
+++ ibalp_qsat!-analsatnaiv compiled, 65 + 20 bytes
+++ ibalp_qsat!-backtrack compiled, 80 + 16 bytes
+++ ibalp_qsat!-cdclup compiled, 48 + 12 bytes
+++ ibalp_qsat!-isunit compiled, 173 + 32 bytes
+++ ibalp_qsat!-isec compiled, 138 + 28 bytes
+++ ibalp_qsat!-csat compiled as link to ibalp_csat
+++ ibalp_readquantal compiled, 30 + 20 bytes
+++ ibalp_readquantal2 compiled, 81 + 28 bytes
+++ ibalp_qsat!-par compiled, 121 + 52 bytes
+++ ibalp_qsat!-getupl compiled, 27 + 12 bytes
+++ ibalp_exres2 compiled, 57 + 32 bytes
+++ ibalp_exres compiled, 57 + 20 bytes
+++ ibalp_getfree compiled, 13 + 8 bytes
+++ ibalp_splitvars compiled, 32 + 8 bytes
+++ ibalp_qsat!-dav compiled, 31 + 16 bytes
Completed FASL files for "ibalpqsat"
+++ FASLEND: hits = 1368, misses = 268

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling pasf ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "pasf": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"

*** <> redefined 
+++ pasf_simprnd compiled, 37 + 44 bytes
+++ pasf_mkrndf compiled, 9 + 20 bytes
+++ pasf_pricong compiled, 25 + 40 bytes
+++ pasf_gpricong compiled, 53 + 24 bytes
+++ pasf_princong compiled, 25 + 40 bytes
+++ pasf_fancy!-pricong compiled, 9 + 20 bytes
+++ pasf_fancy!-pricong!-texmacs compiled, 33 + 48 bytes
+++ pasf_fancy!-pricong!-fm compiled, 40 + 52 bytes
+++ pasf_verbosep compiled, 6 + 16 bytes
+++ pasf_simpterm compiled, 4 + 12 bytes
+++ pasf_prepat compiled, 68 + 36 bytes
+++ pasf_resimpat compiled, 39 + 44 bytes
+++ pasf_lengthat compiled, 4 + 12 bytes
+++ pasf_chsimpat compiled, 41 + 24 bytes
+++ pasf_chsimpat1 compiled, 45 + 16 bytes
+++ pasf_simpat compiled, 193 + 92 bytes
+++ pasf_termp compiled, 90 + 44 bytes
+++ pasf_uprap compiled, 4 + 12 bytes
+++ pasf_uprap1 compiled, 108 + 64 bytes
+++ pasf_opn compiled, 13 + 12 bytes
+++ pasf_univnlfp compiled, 22 + 16 bytes
+++ pasf_univnlp compiled, 33 + 28 bytes
+++ pasf_op compiled as link to car
+++ pasf_opp compiled, 17 + 16 bytes
+++ pasf_mkop compiled, 17 + 20 bytes
+++ pasf_atfp compiled, 6 + 16 bytes
+++ pasf_congp compiled, 6 + 16 bytes
+++ pasf_m compiled as link to cdar
+++ pasf_arg2l compiled as link to cadr
+++ pasf_arg2r compiled as link to caddr
+++ pasf_mk2 compiled, 5 + 8 bytes
+++ pasf_0mk2 compiled, 6 + 8 bytes
+++ pasf_mkrng compiled, 35 + 40 bytes
Completed FASL files for "pasf"
+++ FASLEND: hits = 440, misses = 303
Fast-loading "./reduce.img(pasf)"

*** <> redefined 



*** Compiling pasfbnf ... 


FASLOUT "pasfbnf": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable a1 in procedure pasf_sacat not used 

*** local variable a2 in procedure pasf_sacat not used 

*** local variable gor in procedure pasf_sacat not used 
+++ pasf_sacat compiled, 1 + 8 bytes
+++ pasf_dnf compiled, 5 + 20 bytes
+++ pasf_cnf compiled, 5 + 20 bytes
+++ pasf_pbnf compiled, 52 + 52 bytes
Completed FASL files for "pasfbnf"
+++ FASLEND: hits = 21, misses = 27



*** Compiling pasfmisc ... 


FASLOUT "pasfmisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pasf_atf2iv compiled, 152 + 124 bytes
+++ pasf_qff2ivl compiled, 12 + 28 bytes
+++ pasf_qff2ivl1 compiled, 117 + 72 bytes
+++ pasf_ivl2qff compiled, 70 + 32 bytes

*** local variable a in procedure pasf_bsatp not used 
+++ pasf_bsatp compiled, 87 + 64 bytes

*** local variable k in procedure pasf_b2atl not used 
+++ pasf_b2atl compiled, 29 + 40 bytes
+++ pasf_simplb compiled, 126 + 72 bytes

*** local variable var in procedure pasf_b2terml not used 
+++ pasf_b2terml compiled, 142 + 36 bytes
+++ pasf_rmax compiled, 10 + 16 bytes
+++ pasf_brng compiled, 77 + 80 bytes

*** local variable var in procedure pasf_brng1 not used 
+++ pasf_brng1 compiled, 71 + 40 bytes
+++ pasf_ordatp compiled, 21 + 24 bytes
+++ pasf_ordrelp compiled, 10 + 16 bytes
+++ pasf_dec compiled, 20 + 16 bytes
+++ pasf_deci compiled, 14 + 16 bytes
+++ pasf_varlat compiled, 18 + 24 bytes
+++ pasf_varsubstat compiled, 42 + 40 bytes
+++ pasf_negateat compiled, 52 + 52 bytes
+++ pasf_lnegrel compiled, 51 + 48 bytes
+++ pasf_anegateat compiled, 42 + 44 bytes
+++ pasf_anegrel compiled, 13 + 20 bytes
+++ pasf_subat compiled, 90 + 56 bytes
+++ pasf_mkstrict compiled, 11 + 24 bytes
+++ pasf_subalchk compiled, 33 + 20 bytes
+++ pasf_eqnrhskernels compiled, 12 + 16 bytes
+++ pasf_floor compiled, 47 + 24 bytes
+++ pasf_ceil compiled, 47 + 24 bytes
+++ pasf_const compiled, 10 + 8 bytes
+++ pasf_fctrat compiled, 22 + 24 bytes
+++ pasf_termmlat compiled, 11 + 16 bytes
+++ pasf_max compiled, 6 + 12 bytes
+++ pasf_min compiled, 6 + 12 bytes
+++ pasf_leqp compiled, 27 + 24 bytes
+++ pasf_leq compiled, 30 + 24 bytes
+++ pasf_expand compiled, 20 + 64 bytes
+++ pasf_exprng1 compiled, 118 + 76 bytes
+++ pasf_exprng1!-gand compiled, 121 + 76 bytes
+++ pasf_exprng2 compiled, 282 + 144 bytes

*** local variable phi in procedure pasf_expanda not used 
+++ pasf_expanda compiled, 186 + 68 bytes
+++ pasf_srip compiled, 13 + 28 bytes
+++ pasf_findsample compiled, 139 + 44 bytes
+++ pasf_zsimpl compiled, 112 + 80 bytes
+++ pasf_zsimpl!-firstbound compiled, 43 + 24 bytes
+++ pasf_improve compiled, 184 + 56 bytes
+++ pasf_improve!-getval compiled, 23 + 20 bytes
+++ pasf_improve!-congp compiled, 13 + 24 bytes
+++ pasf_pdp compiled, 81 + 32 bytes
+++ pasf_subfof compiled, 8 + 16 bytes
+++ pasf_subfof1 compiled, 46 + 36 bytes

*** local variable f in procedure pasf_newvar not used 
+++ pasf_newvar compiled, 6 + 12 bytes
+++ pasf_newvar1 compiled, 53 + 24 bytes
+++ pasf_cauchybnd compiled, 29 + 28 bytes
+++ pasf_cauchybndcl compiled, 24 + 24 bytes
+++ pasf_coeflst compiled, 41 + 24 bytes
+++ repr_new compiled, 21 + 16 bytes
+++ repr_eq compiled, 4 + 8 bytes
+++ repr_pos compiled as link to car
+++ repr_setpos compiled, 4 + 8 bytes
+++ repr_op compiled as link to cadr
+++ repr_ldeg compiled, 5 + 8 bytes
+++ repr_n compiled, 19 + 20 bytes
+++ repr_r compiled, 6 + 8 bytes
+++ repr_cl compiled as link to caddr
+++ repr_t compiled as link to cadddr
+++ repr_a compiled, 10 + 12 bytes
+++ repr_atfnew compiled, 80 + 44 bytes
+++ repr_atfbnew compiled, 87 + 60 bytes
+++ fdec_new compiled, 58 + 48 bytes
+++ fdec_mat compiled as link to car
+++ fdec_pos compiled as link to cadr
+++ fdec_bvl compiled as link to caddr
+++ fdec_bopl compiled as link to cadddr
+++ elimpt_new compiled, 14 + 8 bytes
+++ elimpt_pos compiled as link to car
+++ elimpt_cpos compiled, 27 + 8 bytes
+++ elimpt_guard compiled as link to cadr
+++ elimpt_nom compiled as link to caddr
+++ elimpt_den compiled as link to cadddr
+++ elimpt_bvl compiled, 5 + 8 bytes
+++ elimpt_unif compiled, 5 + 8 bytes
+++ answ_new compiled, 5 + 8 bytes
+++ answ_f compiled as link to car
+++ answ_bl compiled as link to cadr
+++ answ_tl compiled as link to caddr

*** local variable var in procedure answ_backsubst not used 
+++ answ_backsubst compiled, 109 + 44 bytes
+++ iv_new compiled, 17 + 12 bytes
+++ iv_newcong compiled, 10 + 12 bytes
+++ iv_congp compiled, 12 + 8 bytes
+++ iv_empty compiled as link to not
+++ iv_congsplitl compiled, 21 + 12 bytes
+++ iv_congsplit compiled, 33 + 12 bytes
+++ iv_cutn compiled, 11 + 12 bytes
+++ iv_cut compiled, 81 + 20 bytes
+++ iv_cutcongs compiled, 75 + 16 bytes
+++ iv_cutcongs1 compiled, 14 + 16 bytes
+++ iv_cutcongs2 compiled, 24 + 20 bytes
+++ iv_mergen compiled, 11 + 12 bytes
+++ iv_merge compiled, 92 + 32 bytes
+++ pasf_rxffn compiled, 30 + 44 bytes
+++ pasf_stex compiled, 9 + 16 bytes
+++ pasf_stexat compiled, 18 + 28 bytes
+++ pasf_stexf compiled, 45 + 24 bytes
+++ pasf_stexk compiled, 56 + 36 bytes
Completed FASL files for "pasfmisc"
+++ FASLEND: hits = 743, misses = 226



*** Compiling pasfnf ... 


FASLOUT "pasfnf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pasf_pnf compiled, 4 + 16 bytes
+++ pasf_pnf1 compiled, 22 + 20 bytes
+++ pasf_pnf2 compiled, 47 + 52 bytes

*** local variable tp in procedure pasf_pnf2-quantifier not used 
+++ pasf_pnf2!-quantifier compiled, 97 + 52 bytes
+++ pasf_pnf2!-junctor compiled, 203 + 52 bytes
+++ pasf_qb compiled, 50 + 40 bytes
+++ pasf_interchange compiled, 209 + 64 bytes
+++ pasf_contains!-quantifier compiled, 17 + 20 bytes
Completed FASL files for "pasfnf"
+++ FASLEND: hits = 74, misses = 40



*** Compiling pasfsiat ... 


FASLOUT "pasfsiat": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable sop in procedure pasf_simplat1 not used 
+++ pasf_simplat1 compiled, 82 + 80 bytes
+++ pasf_zcong compiled, 48 + 52 bytes
+++ pasf_mkpos compiled, 43 + 44 bytes
+++ pasf_vf compiled, 59 + 40 bytes
+++ pasf_dt compiled, 132 + 88 bytes
+++ pasf_mr compiled, 37 + 36 bytes
+++ pasf_ceeq compiled, 31 + 44 bytes
+++ pasf_cein compiled, 72 + 72 bytes
+++ pasf_cecong compiled, 90 + 60 bytes
+++ pasf_se compiled, 50 + 52 bytes
+++ pasf_or compiled, 120 + 68 bytes
+++ pasf_sc compiled, 96 + 60 bytes
+++ pasf_evalatp compiled, 32 + 24 bytes
+++ pasf_evalatpm compiled, 124 + 60 bytes

*** local variable m in procedure pasf_fact not used 
+++ pasf_fact compiled, 103 + 68 bytes
+++ pasf_fact1 compiled, 76 + 40 bytes
Completed FASL files for "pasfsiat"
+++ FASLEND: hits = 227, misses = 69



*** Compiling pasfqe ... 


FASLOUT "pasfqe": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pasf_qe compiled, 21 + 36 bytes
+++ pasf_wqe compiled, 10 + 20 bytes
+++ pasf_qea compiled, 14 + 28 bytes
+++ pasf_wqea compiled, 133 + 60 bytes
+++ pasf_pqe compiled, 16 + 24 bytes
+++ pasf_pqea compiled, 16 + 28 bytes
+++ pasf_pqea1 compiled, 129 + 52 bytes
+++ pasf_gqe compiled, 168 + 104 bytes
+++ pasf_inplaceqe compiled, 39 + 24 bytes
+++ pasf_inplaceqe1 compiled, 126 + 40 bytes
+++ pasf_qeblock compiled, 158 + 80 bytes
+++ pasf_qeexblock compiled, 307 + 104 bytes
+++ pasf_qeex compiled, 487 + 128 bytes
+++ pasf_vs compiled, 124 + 68 bytes
+++ pasf_vsubstatf compiled, 185 + 104 bytes
+++ pasf_vsubstcatf compiled, 187 + 92 bytes
+++ pasf_qesubi compiled, 8 + 16 bytes
+++ pasf_qesubiat compiled, 36 + 36 bytes
+++ pasf_qesubtranseq compiled, 10 + 20 bytes
+++ pasf_qesubtransequal compiled, 5 + 16 bytes
+++ pasf_qesubtransequal1 compiled, 36 + 28 bytes
+++ pasf_qesubiord compiled, 9 + 16 bytes
+++ pasf_qesubiord1 compiled, 68 + 44 bytes
+++ pasf_condense compiled, 140 + 60 bytes

*** local variable theo in procedure pasf_elimset not used 
+++ pasf_elimset compiled, 332 + 144 bytes

*** local variable rnd in procedure pasf_testpt not used 

*** local variable rng in procedure pasf_testpt not used 

*** local variable n in procedure pasf_testpt not used 
+++ pasf_testpt compiled, 272 + 112 bytes
+++ pasf_testptpqe compiled, 31 + 20 bytes

*** local variable n in procedure pasf_testptpqenew not used 

*** local variable a in procedure pasf_testptpqenew not used 

*** local variable p in procedure pasf_testptpqenew not used 
+++ pasf_testptpqenew compiled, 94 + 56 bytes
+++ pasf_testptpqeold compiled, 108 + 64 bytes
+++ pasf_substb compiled, 228 + 72 bytes
+++ pasf_bapprox compiled, 202 + 72 bytes
+++ pasf_conflate compiled, 16 + 12 bytes
+++ pasf_conflate1 compiled, 109 + 44 bytes
+++ pasf_rep compiled, 67 + 48 bytes

*** local variable pos in procedure pasf_rep1 not used 
+++ pasf_rep1 compiled, 91 + 60 bytes
+++ pasf_ses compiled, 306 + 76 bytes
+++ pasf_gaussdec compiled, 144 + 56 bytes
+++ pasf_gaussdec1 compiled, 267 + 80 bytes
+++ pasf_gaussdec2 compiled, 107 + 68 bytes
+++ pasf_gaussesord compiled, 40 + 8 bytes
Completed FASL files for "pasfqe"
+++ FASLEND: hits = 431, misses = 188



*** Compiling pasfsism ... 


FASLOUT "pasfsism": IN files;  or type in expressions
When all done, execute FASLEND;
+++ pasf_smwupdknowl compiled, 17 + 20 bytes
+++ pasf_smwrmknowl compiled, 8 + 20 bytes
+++ pasf_smwcpknowl compiled, 8 + 20 bytes
+++ pasf_smwmkatl compiled, 17 + 20 bytes
+++ pasf_susirmknowl compiled, 57 + 16 bytes
+++ pasf_susibin compiled as link to pasf_susibinad
+++ pasf_susibinad compiled, 155 + 72 bytes
+++ pasf_susibinad1 compiled, 90 + 44 bytes
+++ pasf_susibineq compiled, 116 + 52 bytes
+++ pasf_susibineqcong compiled, 233 + 88 bytes
+++ pasf_susibineqcong1 compiled, 75 + 28 bytes
+++ pasf_susibinord compiled, 252 + 84 bytes
+++ pasf_susibinordcongeq compiled, 43 + 28 bytes

*** local variable nt in procedure pasf_susibinordcong not used 
+++ pasf_susibinordcong compiled, 100 + 64 bytes

*** local variable knowl in procedure pasf_susipost not used 
+++ pasf_susipost compiled, 1 + 8 bytes

*** local variable knowl in procedure pasf_susitf not used 
+++ pasf_susitf compiled, 1 + 8 bytes
+++ pasf_smeqtable compiled, 12 + 12 bytes
+++ pasf_smordtable compiled, 19 + 24 bytes
+++ pasf_smordtable1 compiled, 12 + 12 bytes
+++ pasf_smordtable2 compiled, 12 + 12 bytes
Completed FASL files for "pasfsism"
+++ FASLEND: hits = 361, misses = 75



*** Compiling pasfopt ... 


FASLOUT "pasfopt": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable cl in procedure pasf_opt not used 

*** local variable targ in procedure pasf_opt not used 

*** local variable parml in procedure pasf_opt not used 

*** local variable nproc in procedure pasf_opt not used 
+++ pasf_opt compiled, 5 + 16 bytes
Completed FASL files for "pasfopt"
+++ FASLEND: hits = 3, misses = 14

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling qqe ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "qqe": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"

*** == redefined 

*** <<>> redefined 
+++ qqe_enter compiled, 123 + 100 bytes
+++ qqe_load!-basetype compiled, 73 + 72 bytes
+++ qqe_patch!-ctag compiled, 38 + 16 bytes
+++ qqe_exit compiled, 1 + 8 bytes

*** local variable f in procedure qqe_lengthat not used 
+++ qqe_lengthat compiled, 2 + 12 bytes
+++ qqe_prepat compiled, 1 + 8 bytes
+++ qqe_simpat compiled, 1 + 8 bytes
+++ qqe_prepterm compiled, 1 + 8 bytes
+++ qqe_chsimpat compiled, 16 + 28 bytes
+++ qqe_chsimpterm compiled, 56 + 36 bytes
+++ qqe_chsimpterm1 compiled, 31 + 28 bytes
+++ qqe_op compiled as link to car
+++ qqe_lhs compiled as link to cadr
+++ qqe_rhs compiled as link to caddr
+++ qqe_arg2l compiled as link to cadr
+++ qqe_arg2r compiled as link to caddr
+++ qqe_argn compiled, 6 + 8 bytes
+++ qqe_mk2 compiled, 5 + 8 bytes
+++ qqe_0mk2 compiled, 6 + 8 bytes
+++ qqe_mkn compiled, 7 + 8 bytes
+++ qqe_rqopp compiled, 5 + 12 bytes
+++ qqe_rbopp compiled, 5 + 12 bytes
+++ qqe_ropp compiled, 8 + 16 bytes
+++ qqe_qopp compiled, 5 + 12 bytes
+++ qqe_qopheadp compiled, 5 + 12 bytes
+++ qqe_arg!-check compiled, 80 + 64 bytes
+++ qqe_arg!-check!-lb!-rq compiled, 23 + 32 bytes
+++ qqe_arg!-check!-lq!-rq compiled, 24 + 28 bytes
+++ qqe_arg!-check!-q compiled, 39 + 36 bytes
+++ qqe_arg!-check!-b compiled, 38 + 36 bytes
+++ qqe_arg!-check!-lb!-rb compiled, 24 + 28 bytes
+++ qqe_qoptailp compiled, 8 + 16 bytes
+++ qqe_qopaddp compiled, 8 + 16 bytes
+++ qqe_id!-nyt!-branchq compiled, 17 + 24 bytes
+++ qqe_id!-nyt!-branchb compiled, 18 + 28 bytes
+++ qqe_btid compiled, 6 + 20 bytes
+++ qqe_qtid compiled, 6 + 20 bytes
+++ qqe_niltid compiled, 6 + 16 bytes
+++ qqe_btidp compiled, 6 + 16 bytes
+++ qqe_qtidp compiled, 6 + 16 bytes
+++ qqe_nytidp compiled, 6 + 12 bytes
+++ qqe_fancy!-priqequal compiled, 7 + 16 bytes
+++ qqe_fancy!-priqequal!-texmacs compiled, 15 + 32 bytes
+++ qqe_fancy!-priqneq compiled, 7 + 16 bytes
+++ qqe_fancy!-priqneq!-texmacs compiled, 17 + 36 bytes
+++ qqe_arg!-check!-marked!-ids!-rollback compiled, 11 + 16 bytes
+++ qqe_add2rollbackids compiled, 5 + 12 bytes
+++ qqe_iterate!-ltail compiled, 22 + 16 bytes
+++ qqe_iterate!-rtail compiled, 22 + 16 bytes
+++ qqe_iterate!-radd compiled, 28 + 16 bytes
+++ qqe_iterate!-ladd compiled, 28 + 16 bytes
+++ qqe_varsubstat compiled, 23 + 24 bytes
Completed FASL files for "qqe"
+++ FASLEND: hits = 440, misses = 151
Fast-loading "./reduce.img(qqe)"

*** == redefined 

*** <<>> redefined 



*** Compiling qqetrans ... 


FASLOUT "qqetrans": IN files;  or type in expressions
When all done, execute FASLEND;
+++ qqe_la2lth compiled, 35 + 44 bytes
+++ qqe_la2lth1 compiled, 53 + 16 bytes
+++ qqe_la2lth!-at compiled, 50 + 44 bytes
+++ qqe_la2lth!-at1 compiled, 11 + 20 bytes
+++ qqe_la2lth!-addout compiled, 221 + 84 bytes
+++ qqe_la2lth!-addin compiled, 136 + 104 bytes
+++ qqe_la2lth!-addin!-laddlhead compiled, 18 + 28 bytes
+++ qqe_la2lth!-addin!-laddrhead compiled, 152 + 60 bytes
+++ qqe_la2lth!-addin!-laddltail compiled, 174 + 64 bytes
+++ qqe_la2lth!-addin!-laddrtail compiled, 156 + 52 bytes
+++ qqe_la2lth!-addin!-raddlhead compiled, 151 + 60 bytes
+++ qqe_la2lth!-addin!-raddrhead compiled as link to qqe_la2lth-addin-laddlhead
+++ qqe_la2lth!-addin!-raddltail compiled as link to qqe_la2lth-addin-laddrtail
+++ qqe_la2lth!-addin!-raddrtail compiled, 176 + 64 bytes
+++ qqe_reset!-qadd!-location compiled, 3 + 12 bytes
+++ qqe_qadd!-inside!-at compiled, 20 + 28 bytes
+++ qqe_qadd!-insidef compiled, 26 + 20 bytes
+++ qqe_qadd!-inside compiled, 74 + 32 bytes
+++ qqe_qadd!-inside!-relocate compiled, 32 + 16 bytes
+++ qqe_qadd!-inside!-relocate!-2up compiled, 41 + 20 bytes
Completed FASL files for "qqetrans"
+++ FASLEND: hits = 199, misses = 61



*** Compiling qqemisc ... 


FASLOUT "qqemisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ qqe_prefix!-length compiled, 29 + 16 bytes
+++ qqe_prefix!-lefts compiled, 36 + 28 bytes
+++ qqe_prefix!-lefts1 compiled, 36 + 32 bytes
+++ qqe_prefix!-rights compiled, 37 + 28 bytes
+++ qqe_prefix!-rights1 compiled, 36 + 32 bytes
+++ qqe_dfs compiled, 39 + 12 bytes
+++ qqe_lcm compiled, 25 + 8 bytes
+++ qqe_lcm!-list compiled, 25 + 12 bytes
+++ qqe_plcm compiled, 67 + 28 bytes
+++ qqe_plcm!-list compiled, 41 + 20 bytes
+++ qqe_plcm!-2list compiled, 42 + 20 bytes
+++ qqe_quicksort compiled, 25 + 12 bytes
+++ qqe_partition compiled, 42 + 8 bytes
+++ qqe_length!-graph!-update!-lengths compiled, 68 + 36 bytes
+++ qqe_clause!-update!-lengths compiled, 4 + 16 bytes
+++ qqe_length!-graph!-clause compiled, 247 + 88 bytes
+++ qqe_length!-graph!-update!-edges compiled, 92 + 68 bytes
+++ qqe_length!-graph!-neighbor!-not!-redundant!-edge compiled, 84 + 44 bytes
+++ qqe_length!-graph!-neighbor compiled, 5 + 8 bytes
+++ qqe_length!-graph!-insert!-neighbor compiled, 11 + 16 bytes
+++ qqe_length!-graph!-is!-neighbor compiled, 26 + 20 bytes
+++ qqe_length!-graph!-delete!-neighbor compiled, 35 + 24 bytes
+++ qqe_length!-graph!-edge compiled, 5 + 8 bytes
+++ qqe_length!-graph!-neighbor!-left!-on!-edge compiled as link to cadr
+++ qqe_length!-graph!-neighbor!-edge1 compiled, 10 + 20 bytes
+++ qqe_length!-graph!-neighbor!-edge2 compiled, 10 + 20 bytes
+++ qqe_length!-graph!-neighbor!-edge compiled, 4 + 8 bytes
+++ qqe_length!-graph!-neighbor!-edge!-left compiled, 4 + 16 bytes
+++ qqe_length!-graph!-neighbor!-edge!-right compiled, 4 + 16 bytes
+++ qqe_length!-graph!-neighbor!-edge!-diff compiled, 5 + 12 bytes
+++ qqe_length!-graph!-edge!-mark compiled, 9 + 16 bytes
+++ qqe_length!-graph!-edge!-marked compiled as link to cdddr
+++ qqe_length!-graph!-edge!-unmark compiled, 12 + 16 bytes
+++ qqe_length!-graph!-edge!-el compiled as link to car
+++ qqe_length!-graph!-edge!-er compiled as link to cadr
+++ qqe_length!-graph!-edge!-diff compiled as link to caddr
+++ qqe_length!-graph!-neighbor!-diff compiled, 14 + 20 bytes
+++ qqe_length!-graph!-neighbor!-node compiled as link to car
+++ qqe_length!-graph!-neighbors compiled, 4 + 12 bytes
+++ qqe_update!-minlength compiled, 17 + 16 bytes
+++ qqe_update!-maxlength compiled, 17 + 16 bytes
+++ qqe_update!-headmin compiled, 11 + 20 bytes
+++ qqe_length!-graph!-detect!-bad!-circles compiled, 66 + 36 bytes
+++ qqe_length!-graph!-detect!-bad!-circles!-clean!-up compiled, 5 + 16 bytes
+++ qqe_length!-graph!-remove!-edge!-marks compiled, 16 + 16 bytes
+++ qqe_length!-graph!-remove!-edge!-marks!-neighbors compiled, 16 + 16 bytes
+++ qqe_graph!-get!-dfsnum compiled, 4 + 12 bytes
+++ qqe_graph!-put!-dfsnum compiled, 6 + 16 bytes
+++ qqe_graph!-rem!-dfsnum compiled, 5 + 12 bytes
+++ qqe_length!-graph!-detect!-bad!-circles!-component compiled, 260 + 120 bytes
+++ qqe_length!-graph!-detect!-bad!-circles!-rem!-marks!-nodes compiled, 22 + 20
 bytes
+++ qqe_length!-graph!-detect!-bad!-circles!-rem!-marks!-edges compiled, 15 + 12
 bytes
+++ qqe_length!-graph!-get!-circle compiled, 9 + 8 bytes

*** local variable prop in procedure qqe_print-prop-path not used 
+++ qqe_print!-prop!-path compiled, 8 + 12 bytes
+++ qqe_length!-graph!-maxlength!-bad!-circles compiled, 15 + 12 bytes
+++ qqe_length!-graph!-maxlength!-bad!-circle compiled, 92 + 40 bytes
+++ qqe_length!-graph!-path!-next!-node compiled, 12 + 8 bytes
+++ qqe_length!-graph!-path!-step compiled, 7 + 8 bytes
+++ qqe_length!-graph!-path!-next!-edge compiled, 8 + 8 bytes
+++ qqe_length!-graph!-path!-next!-edge!-left compiled, 8 + 8 bytes
+++ qqe_length!-graph!-path!-next!-edge!-value compiled, 12 + 24 bytes
+++ qqe_length!-graph!-path!-next!-edge!-diff compiled, 14 + 20 bytes
+++ qqe_length!-graph!-maxlength!-bad!-circle1 compiled, 42 + 28 bytes
+++ qqe_length!-graph!-reverse!-path compiled, 42 + 20 bytes
+++ qqe_length!-graph!-path!-insert!-edge!-right compiled, 7 + 8 bytes
+++ qqe_length!-graph!-path!-insert!-edge!-left compiled, 5 + 8 bytes
+++ qqe_length!-graph!-path!-insert!-node!-right compiled, 6 + 8 bytes
+++ qqe_length!-graph!-path!-insert!-node!-left compiled, 3 + 8 bytes
+++ qqe_length!-graph!-shuffle!-circle!-psets compiled, 45 + 12 bytes
+++ qqe_length!-graph!-shuffle!-circle!-sets compiled, 54 + 16 bytes
+++ qqe_length!-graph!-shufflable compiled, 28 + 16 bytes
+++ qqe_length!-graph!-shuffle!-circles compiled, 80 + 12 bytes
+++ qqe_length!-graph!-shuffle!-circles!-order compiled, 47 + 12 bytes
+++ qqe_length!-graph!-neighbor!-mark compiled, 4 + 16 bytes
+++ qqe_length!-graph!-neighbor!-marked compiled, 4 + 16 bytes
+++ qqe_length!-graph!-update!-maxlength compiled, 39 + 32 bytes
+++ qqe_length!-graph!-update!-maxlength!-context compiled, 35 + 32 bytes
+++ qqe_length!-graph!-update!-maxlengths compiled, 19 + 16 bytes
+++ qqe_length!-graph!-update!-minlengths compiled, 19 + 16 bytes
+++ qqe_length!-graph!-update!-minlength!-context compiled, 33 + 28 bytes
+++ qqe_length!-graph!-update!-minlength compiled, 38 + 28 bytes
+++ qqe_length!-graph!-marked compiled, 4 + 12 bytes
+++ qqe_length!-graph!-mark compiled, 6 + 20 bytes
+++ qqe_length!-graph!-unmark compiled, 5 + 12 bytes
+++ qqe_length!-graph!-bterm compiled, 34 + 20 bytes
+++ qqe_length!-graph!-bterm!-update!-headmin compiled, 40 + 32 bytes
+++ qqe_length!-graph!-at!-notq compiled, 11 + 20 bytes
+++ qqe_length!-graph!-term!-notq compiled, 39 + 32 bytes
+++ qqe_length!-graph!-at!-qneq compiled, 13 + 24 bytes
+++ qqe_length!-graph!-at!-qequal compiled, 66 + 40 bytes
+++ qqe_length!-graph!-correct compiled, 50 + 24 bytes
+++ qqe_length!-graph!-correct!-adlist compiled, 72 + 20 bytes
+++ qqe_length!-graph!-remove!-mark compiled, 18 + 8 bytes
+++ qqe_length!-graph!-delete compiled, 19 + 32 bytes
+++ qqe_length!-graph!-print compiled, 53 + 48 bytes
+++ qqe_print!-prop!-list compiled, 20 + 12 bytes
+++ qqe_minlength!-var compiled, 9 + 16 bytes
+++ qqe_maxlength!-var compiled, 9 + 16 bytes
+++ qqe_less!-length compiled, 20 + 16 bytes
+++ qqe_lesseq!-length compiled, 21 + 16 bytes
+++ qqe_greatereq!-length compiled, 4 + 16 bytes
+++ qqe_min!-length compiled, 18 + 12 bytes
+++ qqe_max!-length compiled, 18 + 12 bytes
+++ qqe_qprefix!-var compiled, 21 + 24 bytes
+++ qqe_harmless!-formula!-test compiled, 33 + 28 bytes
+++ qqe_harmless!-formula!-test!-clause compiled, 21 + 32 bytes
+++ qqe_harmless!-formula!-test!-clause2 compiled, 35 + 20 bytes
+++ qqe_harmless!-formula!-test!-clause1 compiled, 45 + 32 bytes
+++ qqe_harmless!-formula!-test!-at compiled, 12 + 20 bytes
+++ qqe_harmless!-formula!-test!-term compiled, 30 + 24 bytes
+++ qqe_harmless!-formula!-test!-qterm compiled, 25 + 28 bytes
+++ qqe_make!-harmless compiled, 36 + 16 bytes
+++ qqe_make!-harmless!-clause compiled, 56 + 24 bytes
+++ qqe_make!-harmless!-at compiled, 54 + 32 bytes
+++ qqe_quicksort!-dbl!-crit compiled, 25 + 12 bytes
+++ qqe_partition!-dbl!-crit compiled, 42 + 16 bytes
+++ qqe_lessp!-dbl!-crit compiled, 76 + 24 bytes
Completed FASL files for "qqemisc"
+++ FASLEND: hits = 757, misses = 169



*** Compiling qqesism ... 


FASLOUT "qqesism": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "qqesism"
+++ FASLEND: hits = 3, misses = 4



*** Compiling qqeqe ... 


FASLOUT "qqeqe": IN files;  or type in expressions
When all done, execute FASLEND;
+++ qqe_satlengths compiled, 92 + 28 bytes
+++ qqe_qe compiled, 148 + 80 bytes
+++ qqe_qeexit compiled, 55 + 84 bytes
+++ qqe_qe!-clause!-init compiled, 53 + 84 bytes
+++ qqe_qe!-dnf compiled, 55 + 20 bytes
+++ qqe_qe!-clause compiled, 135 + 116 bytes
+++ qqe_qe!-dna compiled, 6 + 20 bytes
+++ qqe_qe!-dna!-fd compiled, 11 + 28 bytes
+++ qqe_qe!-dna!-nfd compiled, 139 + 104 bytes
+++ qqe_atf!-dna!-nfd!-rho compiled, 40 + 28 bytes
+++ qqe_atf!-dna!-nfd!-rho!-subst compiled, 28 + 20 bytes
+++ qqe_atf!-dna!-nfd!-psi!-subst compiled, 153 + 56 bytes
+++ qqe_ndna compiled, 120 + 88 bytes
+++ qqe_ndna!-qneq!-ext!-phi2!-true compiled, 24 + 44 bytes
+++ qqe_ndna!-qneq!-ext compiled, 83 + 76 bytes
Completed FASL files for "qqeqe"
+++ FASLEND: hits = 181, misses = 102



*** Compiling qqesiat ... 


FASLOUT "qqesiat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ qqe_simplat1 compiled, 20 + 32 bytes

*** local variable sop in procedure qqe_simplbtat not used 
+++ qqe_simplbtat compiled, 57 + 48 bytes
+++ qqe_eta!-in!-term compiled, 43 + 20 bytes
+++ qqe_eta!-in!-term1 compiled, 16 + 24 bytes

*** local variable sop in procedure qqe_simplqequal not used 
+++ qqe_simplqequal compiled, 174 + 56 bytes
+++ qqe_simplterm compiled, 31 + 36 bytes
+++++ return or return-from not in prog context
+++++ return or return-from not in prog context
+++ qqe_simplterm!-add compiled, 27 + 28 bytes
+++++ return or return-from not in prog context
+++++ return or return-from not in prog context
+++++ return or return-from not in prog context
+++++ return or return-from not in prog context
+++++ return or return-from not in prog context
+++ qqe_simplterm!-tail compiled, 66 + 48 bytes
+++++ return or return-from not in prog context
+++++ return or return-from not in prog context
+++ qqe_simplterm!-head compiled, 35 + 32 bytes
+++ qqe_number!-of!-adds!-in!-qterm compiled, 20 + 28 bytes
+++ qqe_number!-of!-tails!-in!-qterm compiled, 20 + 28 bytes

*** local variable sop in procedure qqe_simplqneq not used 
+++ qqe_simplqneq compiled, 45 + 40 bytes
+++ qqe_simpl_standardizeqterm compiled, 14 + 16 bytes
Completed FASL files for "qqesiat"
+++ FASLEND: hits = 120, misses = 44



*** Compiling qqeqemisc ... 


FASLOUT "qqeqemisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ qqe_insert!-resf compiled, 5 + 12 bytes
+++ qqe_insert!-qvarf compiled, 5 + 12 bytes
+++ qqe_sort!-resf!-qvarf compiled, 56 + 40 bytes
+++ qqe_atf!-qequal!-ext!-c compiled, 20 + 32 bytes
+++ qqe_atf!-qequal!-ext!-p compiled, 27 + 36 bytes
+++ qqe_atf!-equal!-ext compiled, 14 + 28 bytes
+++ qqe_atf!-equal!-int compiled, 5 + 16 bytes
+++ qqe_atf!-qequal!-int compiled, 46 + 36 bytes
+++ qqe_atf!-qneq!-ext compiled, 21 + 32 bytes
+++ qqe_atf!-qneq!-ext!-qepsilon compiled, 12 + 24 bytes
+++ qqe_atf!-neq compiled, 5 + 16 bytes
+++ qqe_atf!-qneq!-int compiled, 12 + 24 bytes
+++ qqe_atf!-misc!-basic compiled, 7 + 20 bytes
+++ qqe_sort!-atf compiled, 146 + 96 bytes
+++ qqe_la compiled, 70 + 72 bytes
+++ qqe_ra compiled, 71 + 72 bytes
+++ qqe_max!-lefts!-bs!-recursive compiled, 40 + 32 bytes
+++ qqe_max!-lefts!-ls!-recursive compiled, 31 + 28 bytes
+++ qqe_max!-lefts!-term!-recursive compiled, 56 + 36 bytes
+++ qqe_max!-lefts!-lhs compiled, 26 + 28 bytes
+++ qqe_max!-lefts!-bs compiled, 33 + 32 bytes
+++ qqe_max!-rights!-lhs compiled, 26 + 28 bytes
+++ qqe_max!-rights!-bs compiled, 33 + 32 bytes
+++ qqe_max!-rights!-bs!-recursive compiled, 39 + 32 bytes
+++ qqe_max!-rights!-ls!-recursive compiled, 32 + 28 bytes
+++ qqe_max!-rights!-term!-recursive compiled, 56 + 36 bytes
+++ qqe_max!-prefix!-length!-term!-recursive compiled, 57 + 36 bytes
+++ qqe_patpos compiled, 30 + 32 bytes
+++ qqe_pat!-lengths compiled, 51 + 20 bytes
+++ qqe_pat!-length compiled, 59 + 40 bytes
+++ qqe_get!-quantifier!-sequenz compiled, 54 + 32 bytes
+++ qqe_atf!-qequal!-ext!-min!-prefix compiled, 45 + 20 bytes
+++ qqe_atf!-qequal!-ext!-p!-min!-lefts compiled, 56 + 24 bytes
+++ qqe_atf!-qequal!-ext!-p!-min!-rights compiled, 53 + 24 bytes
+++ qqe_new!-ids!-x compiled, 44 + 16 bytes
+++ qqe_make!-id!-x compiled, 18 + 12 bytes
+++ qqe_list!-take!-n compiled, 18 + 12 bytes
+++ qqe_subst compiled, 120 + 92 bytes
+++ qqe_subst!-batf compiled, 53 + 36 bytes
+++ qqe_subst!-bterm compiled, 51 + 28 bytes
+++ qqe_subst!-qequal!-ext!-p compiled, 70 + 48 bytes
+++ qqe_subst!-qneq!-ext compiled, 99 + 52 bytes
+++ qqe_makef!-qneq2equal compiled, 37 + 28 bytes
+++ qqe_subst!-qneq!-int compiled, 69 + 40 bytes
+++ qqe_subst!-qequal!-int compiled, 80 + 44 bytes
+++ qqe_makef!-list2qneq compiled, 29 + 20 bytes
+++ qqe_makef!-list2equal compiled, 29 + 20 bytes
+++ qqe_makef!-qequal2equal compiled, 37 + 28 bytes
+++ qqe_makef!-termlength!-l compiled, 7 + 20 bytes
+++ qqe_makef!-termlength!-g compiled, 7 + 20 bytes
+++ qqe_subst!-simplterm compiled, 94 + 48 bytes
+++ qqe_subst!-simplterm!-lhead compiled, 23 + 16 bytes
+++ qqe_subst!-simplterm!-rhead compiled, 27 + 16 bytes
+++ qqe_iterate!-quantifier!-ex compiled, 28 + 16 bytes
+++ qqe_iterate!-quantifier compiled, 21 + 8 bytes
+++ qqe_simpl!-dnf compiled, 60 + 36 bytes
+++ qqe_simpl!-clause compiled, 136 + 72 bytes
+++ qqe_simpl!-clause!-remprop compiled, 22 + 16 bytes
+++ qqe_simpl!-clause!-qequal compiled, 146 + 64 bytes
+++ qqe_simpl!-clause!-qneq compiled, 140 + 64 bytes
+++ qqe_simpl!-clause!-term compiled, 27 + 28 bytes
Completed FASL files for "qqeqemisc"
+++ FASLEND: hits = 560, misses = 137

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling qqe_ofsf ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "qqe_ofsf": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(ofsf)"
Fast-loading "./reduce.img(redlog)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(rlami)"
Fast-loading "./reduce.img(rlsched)"
Fast-loading "./reduce.img(rlcont)"
Fast-loading "./reduce.img(rlhelp)"
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"
Fast-loading "./reduce.img(linalg)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(lamatrix)"
Fast-loading "./reduce.img(gramschm)"
Fast-loading "./reduce.img(ludecom)"
Fast-loading "./reduce.img(cholesky)"
Fast-loading "./reduce.img(svd)"
Fast-loading "./reduce.img(simplex)"
Fast-loading "./reduce.img(tadjoint)"
Fast-loading "./reduce.img(factor)"
Fast-loading "./reduce.img(ezgcd)"
Fast-loading "./reduce.img(alphas)"
Fast-loading "./reduce.img(coeffts)"
Fast-loading "./reduce.img(ezgcdf)"
Fast-loading "./reduce.img(facmisc)"
Fast-loading "./reduce.img(facstr)"
Fast-loading "./reduce.img(interfac)"
Fast-loading "./reduce.img(linmodp)"
Fast-loading "./reduce.img(mhensfns)"
Fast-loading "./reduce.img(modpoly)"
Fast-loading "./reduce.img(multihen)"
Fast-loading "./reduce.img(unihens)"
Fast-loading "./reduce.img(bigmodp)"
Fast-loading "./reduce.img(degsets)"
Fast-loading "./reduce.img(facprim)"
Fast-loading "./reduce.img(facmod)"
Fast-loading "./reduce.img(facuni)"
Fast-loading "./reduce.img(imageset)"
Fast-loading "./reduce.img(pfactor)"
Fast-loading "./reduce.img(vecpoly)"
Fast-loading "./reduce.img(pfacmult)"
Fast-loading "./reduce.img(cgb)"
Fast-loading "./reduce.img(gb)"
Fast-loading "./reduce.img(dp)"
Fast-loading "./reduce.img(gbsc)"
Fast-loading "./reduce.img(ofsfsiat)"
Fast-loading "./reduce.img(ofsfsism)"
Fast-loading "./reduce.img(ofsfbnf)"
Fast-loading "./reduce.img(ofsfqe)"
Fast-loading "./reduce.img(ofsfopt)"
Fast-loading "./reduce.img(ofsfgs)"
Fast-loading "./reduce.img(ofsfmisc)"
Fast-loading "./reduce.img(ofsfcad)"
Fast-loading "./reduce.img(ofsfcadproj)"
Fast-loading "./reduce.img(ofsfanuex)"
Fast-loading "./reduce.img(ofsfxopt)"
Fast-loading "./reduce.img(ofsfdet)"
Fast-loading "./reduce.img(ofsftfc)"
Fast-loading "./reduce.img(ofsfhqe)"

*** <> redefined 

*** <> redefined 
+++ qqe_ofsf_prepat compiled, 11 + 24 bytes
+++ qqe_ofsf_resimpat compiled, 26 + 36 bytes
+++ qqe_ofsf_chsimpat compiled, 41 + 24 bytes
+++ qqe_ofsf_chsimpat1 compiled, 45 + 20 bytes
+++ qqe_ofsf_simpat compiled, 22 + 40 bytes
+++ qqe_ofsf_chsimpterm compiled, 47 + 32 bytes
+++ qqe_ofsf_simplat1 compiled, 18 + 28 bytes
+++ qqe_ofsf_simplqequal compiled, 10 + 24 bytes
+++ qqe_ofsf_simplqneq compiled, 10 + 24 bytes
+++ qqe_ofsf_canegrel compiled, 6 + 12 bytes
+++ qqe_ofsf_anegrel compiled, 11 + 16 bytes
+++ qqe_ofsf_clnegrel compiled, 6 + 12 bytes
+++ qqe_ofsf_lnegrel compiled, 13 + 20 bytes
+++ qqe_ofsf_negateat compiled, 9 + 24 bytes
+++ qqe_ofsf_varsubstat compiled, 15 + 24 bytes
+++ qqe_ofsf_varlterm compiled, 35 + 20 bytes
+++ qqe_ofsf_ordatp compiled as link to ofsf_ordatp
+++ qqe_ofsf_varlat compiled, 15 + 28 bytes
+++ qqe_ofsf_smwupdknowl compiled, 17 + 20 bytes
+++ qqe_ofsf_smwrmknowl compiled as link to qqe_ofsf_smrmknowl
+++ qqe_ofsf_smwcpknowl compiled as link to qqe_ofsf_smcpknowl
+++ qqe_ofsf_smwmkatl compiled, 8 + 12 bytes
+++ qqe_ofsf_smrmknowl compiled, 21 + 16 bytes
+++ qqe_ofsf_smcpknowl compiled, 40 + 8 bytes
+++ qqe_ofsf_smupdknowl compiled, 52 + 32 bytes
+++ qqe_ofsf_smmkatl compiled, 14 + 20 bytes
+++ qqe_ofsf_smmkatl!-and compiled, 87 + 36 bytes
+++ qqe_ofsf_smmkatl!-and1 compiled, 107 + 32 bytes
+++ qqe_ofsf_smmkat!-and2 compiled, 51 + 48 bytes
+++ qqe_ofsf_smmkatl!-or compiled, 76 + 24 bytes
+++ qqe_ofsf_smmkatl!-or1 compiled, 107 + 32 bytes
+++ qqe_ofsf_smmkat!-or2 compiled, 68 + 56 bytes
+++ qqe_ofsf_smdbgetrel compiled, 16 + 8 bytes
+++ qqe_ofsf_at2ir compiled, 51 + 40 bytes
+++ qqe_ofsf_irl2atl compiled, 45 + 16 bytes
+++ qqe_ofsf_ir2atl compiled, 65 + 20 bytes
+++ qqe_ofsf_entry2at compiled, 14 + 20 bytes
+++ qqe_ofsf_entry2at1 compiled, 14 + 24 bytes
+++ qqe_ofsf_mk2 compiled as link to qqe_mk2
+++ qqe_ofsf_qe compiled, 3 + 12 bytes
+++ qqe_qe!-basic compiled, 4 + 12 bytes
Completed FASL files for "qqe_ofsf"
+++ FASLEND: hits = 386, misses = 340
Fast-loading "./reduce.img(qqe_ofsf)"

*** <> redefined 

*** leq already defined as operator 

*** geq already defined as operator 

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling mri ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "mri": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"
Fast-loading "./reduce.img(pasf)"
Fast-loading "./reduce.img(pasfbnf)"
Fast-loading "./reduce.img(pasfmisc)"
Fast-loading "./reduce.img(pasfnf)"
Fast-loading "./reduce.img(pasfsiat)"
Fast-loading "./reduce.img(pasfqe)"
Fast-loading "./reduce.img(pasfsism)"
Fast-loading "./reduce.img(pasfopt)"
Fast-loading "./reduce.img(ofsf)"
Fast-loading "./reduce.img(redlog)"
Fast-loading "./reduce.img(rlami)"
Fast-loading "./reduce.img(rlsched)"
Fast-loading "./reduce.img(rlcont)"
Fast-loading "./reduce.img(rlhelp)"
Fast-loading "./reduce.img(linalg)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(lamatrix)"
Fast-loading "./reduce.img(gramschm)"
Fast-loading "./reduce.img(ludecom)"
Fast-loading "./reduce.img(cholesky)"
Fast-loading "./reduce.img(svd)"
Fast-loading "./reduce.img(simplex)"
Fast-loading "./reduce.img(tadjoint)"
Fast-loading "./reduce.img(factor)"
Fast-loading "./reduce.img(ezgcd)"
Fast-loading "./reduce.img(alphas)"
Fast-loading "./reduce.img(coeffts)"
Fast-loading "./reduce.img(ezgcdf)"
Fast-loading "./reduce.img(facmisc)"
Fast-loading "./reduce.img(facstr)"
Fast-loading "./reduce.img(interfac)"
Fast-loading "./reduce.img(linmodp)"
Fast-loading "./reduce.img(mhensfns)"
Fast-loading "./reduce.img(modpoly)"
Fast-loading "./reduce.img(multihen)"
Fast-loading "./reduce.img(unihens)"
Fast-loading "./reduce.img(bigmodp)"
Fast-loading "./reduce.img(degsets)"
Fast-loading "./reduce.img(facprim)"
Fast-loading "./reduce.img(facmod)"
Fast-loading "./reduce.img(facuni)"
Fast-loading "./reduce.img(imageset)"
Fast-loading "./reduce.img(pfactor)"
Fast-loading "./reduce.img(vecpoly)"
Fast-loading "./reduce.img(pfacmult)"
Fast-loading "./reduce.img(cgb)"
Fast-loading "./reduce.img(gb)"
Fast-loading "./reduce.img(dp)"
Fast-loading "./reduce.img(gbsc)"
Fast-loading "./reduce.img(ofsfsiat)"
Fast-loading "./reduce.img(ofsfsism)"
Fast-loading "./reduce.img(ofsfbnf)"
Fast-loading "./reduce.img(ofsfqe)"
Fast-loading "./reduce.img(ofsfopt)"
Fast-loading "./reduce.img(ofsfgs)"
Fast-loading "./reduce.img(ofsfmisc)"
Fast-loading "./reduce.img(ofsfcad)"
Fast-loading "./reduce.img(ofsfcadproj)"
Fast-loading "./reduce.img(ofsfanuex)"
Fast-loading "./reduce.img(ofsfxopt)"
Fast-loading "./reduce.img(ofsfdet)"
Fast-loading "./reduce.img(ofsftfc)"
Fast-loading "./reduce.img(ofsfhqe)"
+++ mri_prifloor compiled, 12 + 32 bytes
+++ mrireal compiled, 21 + 24 bytes
+++ mri_putreal compiled, 8 + 24 bytes
+++ mri_realvarp compiled, 11 + 20 bytes
+++ mriclear compiled, 19 + 16 bytes
+++ mri_simpat compiled, 7 + 16 bytes
+++ mri_chsimpat compiled, 7 + 16 bytes
+++ mri_resimpat compiled, 6 + 20 bytes
+++ mri_pasf2mri compiled, 8 + 16 bytes
+++ mri_2pasf compiled, 4 + 16 bytes
+++ mri_pasf2mriat compiled, 8 + 20 bytes
+++ mri_ofsf2mri compiled, 8 + 16 bytes
+++ mri_ofsf2mriat compiled, 8 + 20 bytes
+++ mri_prepat compiled, 4 + 16 bytes
+++ mri_2pasfat compiled, 8 + 20 bytes
+++ mri_2ofsfat compiled, 8 + 20 bytes
+++ mri_op compiled as link to car
+++ mri_opn compiled, 8 + 12 bytes
+++ mri_m compiled as link to cdadr
+++ mri_type compiled, 9 + 8 bytes
+++ mri_arg2l compiled as link to cadr
+++ mri_mkop compiled as link to cons
+++ mri_0mk2 compiled, 9 + 8 bytes
+++ mri_atfp compiled, 6 + 16 bytes
+++ mri_congp compiled, 6 + 16 bytes

*** local variable w in procedure mri_simplat1 not used 
+++ mri_simplat1 compiled, 60 + 72 bytes
+++ mri_simplfloor compiled, 8 + 16 bytes
+++ mri_simplfloor1 compiled, 31 + 28 bytes
+++ mri_irsplit compiled, 43 + 40 bytes
+++ mri_irsplit1 compiled, 63 + 36 bytes
+++ mri_floorkernelp compiled, 4 + 16 bytes
+++ mri_floorp compiled, 12 + 12 bytes
+++ mri_dettype compiled, 53 + 32 bytes
+++ mri_negateat compiled, 9 + 24 bytes
+++ mri_varlat compiled, 4 + 16 bytes
+++ mri_ordatp compiled, 8 + 16 bytes
+++ mri_simplb compiled as link to pasf_simplb

*** local variable var in procedure mri_bsatp not used 
+++ mri_bsatp compiled, 4 + 12 bytes
+++ mri_subat compiled, 11 + 24 bytes
+++ mri_eqnrhskernels compiled, 12 + 16 bytes
+++ mri_expand compiled, 17 + 28 bytes
+++ mri_bqp compiled, 12 + 16 bytes
Completed FASL files for "mri"
+++ FASLEND: hits = 333, misses = 179
Fast-loading "./reduce.img(mri)"



*** Compiling mriqe ... 


FASLOUT "mriqe": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mri_qe compiled, 75 + 60 bytes
+++ mri_splitqf compiled, 46 + 24 bytes
+++ mri_qeblock compiled, 13 + 20 bytes
+++ mri_qeblock1 compiled, 46 + 44 bytes
+++ mri_varsel compiled, 35 + 44 bytes
+++ mri_varselreal compiled, 13 + 12 bytes
+++ mri_qereal compiled, 72 + 76 bytes
+++ mri_qereal1 compiled, 18 + 36 bytes
+++ mri_truncate compiled, 85 + 80 bytes
+++ mri_smartand compiled, 67 + 28 bytes
+++ mri_vbin compiled, 18 + 36 bytes
+++ mri_vbout compiled, 27 + 40 bytes
+++ mri_lemma33 compiled, 23 + 32 bytes
+++ mri_lemma33at compiled, 119 + 64 bytes
+++ mri_lemma33f compiled, 38 + 28 bytes
+++ mri_lemma33k compiled, 240 + 96 bytes
+++ mri_add33 compiled, 242 + 24 bytes
+++ mri_mult33 compiled, 409 + 40 bytes
+++ mri_expt33 compiled, 77 + 24 bytes
+++ mri_qeint compiled, 37 + 60 bytes
+++ mri_qeint1 compiled, 18 + 36 bytes
+++ mri_lemma32 compiled, 23 + 32 bytes
+++ mri_lemma32at compiled, 14 + 28 bytes
+++ mri_lemma32f compiled, 112 + 48 bytes
+++ mri_case1 compiled, 28 + 40 bytes
+++ mri_case1at compiled, 55 + 52 bytes
+++ mri_case1at1 compiled, 67 + 52 bytes
+++ mri_case1at2 compiled, 78 + 52 bytes
+++ mri_case2 compiled, 28 + 40 bytes
+++ mri_case2at compiled, 186 + 104 bytes
Completed FASL files for "mriqe"
+++ FASLEND: hits = 281, misses = 112

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling mri_ofsf ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "mri_ofsf": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(redlog)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(rlami)"
Fast-loading "./reduce.img(rlsched)"
Fast-loading "./reduce.img(rlcont)"
Fast-loading "./reduce.img(rlhelp)"
Fast-loading "./reduce.img(ofsf)"
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"
Fast-loading "./reduce.img(linalg)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(lamatrix)"
Fast-loading "./reduce.img(gramschm)"
Fast-loading "./reduce.img(ludecom)"
Fast-loading "./reduce.img(cholesky)"
Fast-loading "./reduce.img(svd)"
Fast-loading "./reduce.img(simplex)"
Fast-loading "./reduce.img(tadjoint)"
Fast-loading "./reduce.img(factor)"
Fast-loading "./reduce.img(ezgcd)"
Fast-loading "./reduce.img(alphas)"
Fast-loading "./reduce.img(coeffts)"
Fast-loading "./reduce.img(ezgcdf)"
Fast-loading "./reduce.img(facmisc)"
Fast-loading "./reduce.img(facstr)"
Fast-loading "./reduce.img(interfac)"
Fast-loading "./reduce.img(linmodp)"
Fast-loading "./reduce.img(mhensfns)"
Fast-loading "./reduce.img(modpoly)"
Fast-loading "./reduce.img(multihen)"
Fast-loading "./reduce.img(unihens)"
Fast-loading "./reduce.img(bigmodp)"
Fast-loading "./reduce.img(degsets)"
Fast-loading "./reduce.img(facprim)"
Fast-loading "./reduce.img(facmod)"
Fast-loading "./reduce.img(facuni)"
Fast-loading "./reduce.img(imageset)"
Fast-loading "./reduce.img(pfactor)"
Fast-loading "./reduce.img(vecpoly)"
Fast-loading "./reduce.img(pfacmult)"
Fast-loading "./reduce.img(cgb)"
Fast-loading "./reduce.img(gb)"
Fast-loading "./reduce.img(dp)"
Fast-loading "./reduce.img(gbsc)"
Fast-loading "./reduce.img(ofsfsiat)"
Fast-loading "./reduce.img(ofsfsism)"
Fast-loading "./reduce.img(ofsfbnf)"
Fast-loading "./reduce.img(ofsfqe)"
Fast-loading "./reduce.img(ofsfopt)"
Fast-loading "./reduce.img(ofsfgs)"
Fast-loading "./reduce.img(ofsfmisc)"
Fast-loading "./reduce.img(ofsfcad)"
Fast-loading "./reduce.img(ofsfcadproj)"
Fast-loading "./reduce.img(ofsfanuex)"
Fast-loading "./reduce.img(ofsfxopt)"
Fast-loading "./reduce.img(ofsfdet)"
Fast-loading "./reduce.img(ofsftfc)"
Fast-loading "./reduce.img(ofsfhqe)"
Completed FASL files for "mri_ofsf"
+++ FASLEND: hits = 16, misses = 24
Fast-loading "./reduce.img(mri_ofsf)"

*** Changed definition of rl_simplat1* 

*** Changed definition of rl_negateat* 

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling mri_pasf ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "mri_pasf": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(redlog)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(rlami)"
Fast-loading "./reduce.img(rlsched)"
Fast-loading "./reduce.img(rlcont)"
Fast-loading "./reduce.img(rlhelp)"
Fast-loading "./reduce.img(pasf)"
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"
Fast-loading "./reduce.img(pasfbnf)"
Fast-loading "./reduce.img(pasfmisc)"
Fast-loading "./reduce.img(pasfnf)"
Fast-loading "./reduce.img(pasfsiat)"
Fast-loading "./reduce.img(pasfqe)"
Fast-loading "./reduce.img(pasfsism)"
Fast-loading "./reduce.img(pasfopt)"
Completed FASL files for "mri_pasf"
+++ FASLEND: hits = 12, misses = 20
Fast-loading "./reduce.img(mri_pasf)"

*** Changed definition of rl_simplat1* 

*** Changed definition of rl_negateat* 

*** Changed definition of rlsism 

*** Changed definition of rlsusi 

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling redfront ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "redfront": IN files;  or type in expressions
When all done, execute FASLEND;
+++ redfront_oh compiled, 56 + 64 bytes
+++ redfront_on compiled, 11 + 24 bytes
+++ redfront_off compiled, 9 + 24 bytes
+++ redfront_formwrite compiled, 45 + 56 bytes
+++ redfront_pslp compiled, 5 + 16 bytes
+++ redfront_color compiled, 62 + 24 bytes
+++ redfront_uncolor compiled, 36 + 16 bytes
+++ redfront_setpchar!-psl compiled, 10 + 24 bytes
+++ redfront_setpchar!-csl compiled, 5 + 20 bytes
+++ redfront_yesp!-psl compiled, 67 + 52 bytes
+++ redfront_compute!-prompt!-string compiled, 4 + 16 bytes
+++ redfront_break_prompt compiled, 10 + 32 bytes
Completed FASL files for "redfront"
+++ FASLEND: hits = 151, misses = 83
Fast-loading "./reduce.img(redfront)"

+++ setpchar redefined

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling reduce4 ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "reduce4": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !%reduce4 compiled, 32 + 64 bytes
+++ !%reduce3 compiled, 31 + 48 bytes
Completed FASL files for "reduce4"
+++ FASLEND: hits = 28, misses = 42
Fast-loading "./reduce.img(reduce4)"



*** Compiling form4 ... 


FASLOUT "form4": IN files;  or type in expressions
When all done, execute FASLEND;
+++ n_form compiled, 5 + 16 bytes
+++ n_form1 compiled, 469 + 136 bytes
+++ mk_type_reduce compiled, 16 + 20 bytes
+++ type_function2 compiled, 23 + 16 bytes
+++ type_assocf compiled, 22 + 16 bytes
+++ type_assoc1f compiled, 59 + 24 bytes
+++ ceiling_of_constraints compiled, 15 + 12 bytes
+++ type_assoc0f compiled, 34 + 24 bytes
+++ type_1 compiled, 6 + 16 bytes
+++ n_formbool compiled, 60 + 44 bytes
+++ n_boolvalue!* compiled, 12 + 16 bytes
+++ n_formcond compiled, 14 + 24 bytes
+++ n_formcond1 compiled, 78 + 44 bytes
+++ n_formlist compiled, 75 + 40 bytes
+++ mklistt compiled, 4 + 16 bytes
+++ n_formprogn compiled, 54 + 24 bytes
+++ n_formsetq compiled, 185 + 88 bytes
Completed FASL files for "form4"
+++ FASLEND: hits = 142, misses = 73



*** Compiling block4 ... 


FASLOUT "block4": IN files;  or type in expressions
When all done, execute FASLEND;
+++ n_formblock compiled, 27 + 28 bytes
+++ n_initprogvars compiled, 48 + 32 bytes
+++ get_type_initvalue compiled, 10 + 12 bytes
+++ mkobject compiled, 12 + 20 bytes
+++ n_formprog compiled, 24 + 28 bytes
+++ n_formprog1 compiled, 51 + 24 bytes
+++ n_formreturn compiled, 55 + 44 bytes
+++ read_type compiled, 33 + 32 bytes
+++ read_param_list compiled, 117 + 88 bytes
Completed FASL files for "block4"
+++ FASLEND: hits = 75, misses = 56



*** Compiling proc4 ... 


FASLOUT "proc4": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable vars in procedure n_formproc not used 
+++ n_formproc compiled, 589 + 204 bytes
+++ mkretract compiled, 12 + 16 bytes

*** local variable atyp in procedure retract not used 
+++ retract compiled, 11 + 24 bytes
Completed FASL files for "proc4"
+++ FASLEND: hits = 29, misses = 54



*** Compiling forstat4 ... 


FASLOUT "forstat4": IN files;  or type in expressions
When all done, execute FASLEND;
+++ top_type compiled, 27 + 24 bytes
+++ n_formfor compiled, 230 + 128 bytes
Completed FASL files for "forstat4"
+++ FASLEND: hits = 129, misses = 54



*** Compiling struct4 ... 


FASLOUT "struct4": IN files;  or type in expressions
When all done, execute FASLEND;
+++ n_formstructure compiled, 54 + 24 bytes
+++ n_formstructure1 compiled, 134 + 44 bytes
+++ n_structurefn compiled, 19 + 20 bytes
+++ n_structurefn1 compiled, 96 + 36 bytes
+++ mkn_structure compiled, 39 + 20 bytes
+++ getell compiled, 42 + 16 bytes
+++ getell1 compiled, 11 + 8 bytes
+++ setell compiled, 6 + 16 bytes
+++ setell1 compiled, 26 + 20 bytes
+++ int_check compiled, 14 + 28 bytes
+++ n_formarray compiled, 6 + 16 bytes
Completed FASL files for "struct4"
+++ FASLEND: hits = 71, misses = 40



*** Compiling reval4 ... 


FASLOUT "reval4": IN files;  or type in expressions
When all done, execute FASLEND;
+++ type compiled as link to car
+++ value compiled as link to cadr
+++ mknovalobj compiled, 4 + 16 bytes
+++ getobject compiled, 17 + 28 bytes
+++ putobject compiled, 8 + 20 bytes
+++ xtype compiled, 5 + 16 bytes
+++ xtype1 compiled, 16 + 20 bytes
+++ xtypelist compiled, 13 + 12 bytes
+++ rapply compiled as link to rapply1
+++ rapply1 compiled, 109 + 60 bytes
Completed FASL files for "reval4"
+++ FASLEND: hits = 48, misses = 33



*** Compiling simp4 ... 


FASLOUT "simp4": IN files;  or type in expressions
When all done, execute FASLEND;
+++ ideval compiled as link to kernelvalue
+++ kernelvalue compiled, 114 + 104 bytes
+++ eval_generic compiled, 264 + 128 bytes
+++ simp4!* compiled, 93 + 100 bytes
+++ simp4 compiled, 5 + 20 bytes
Completed FASL files for "simp4"
+++ FASLEND: hits = 46, misses = 74



*** Compiling forall4 ... 


FASLOUT "forall4": IN files;  or type in expressions
When all done, execute FASLEND;
+++ n_formforall compiled, 9 + 24 bytes
+++ n_formlet compiled, 9 + 24 bytes
+++ n_formclear compiled, 9 + 24 bytes
+++ n_formmatch compiled, 9 + 24 bytes
+++ form4where compiled, 79 + 88 bytes
Completed FASL files for "forall4"
+++ FASLEND: hits = 48, misses = 47



*** Compiling rankstat ... 


FASLOUT "rankstat": IN files;  or type in expressions
When all done, execute FASLEND;
+++ type_stat compiled, 12 + 24 bytes
+++ subtype_rels_stat compiled, 6 + 24 bytes
+++ n_formsubtyperels compiled, 52 + 32 bytes
+++ n_formsubtyperels1 compiled, 44 + 16 bytes

*** local variable vars in procedure n_formsubtyperels2 not used 
+++ n_formsubtyperels2 compiled, 319 + 44 bytes
+++ flat_typel compiled, 13 + 8 bytes

*** -> redefined 
+++ ranks_stat compiled, 99 + 68 bytes
+++ n_formranks compiled, 281 + 100 bytes
+++ mk_rankfns compiled, 424 + 72 bytes
+++ symmetricp compiled, 33 + 16 bytes
+++ mk_nullaryfns compiled, 117 + 36 bytes
+++ installstat compiled, 137 + 68 bytes
Completed FASL files for "rankstat"
+++ FASLEND: hits = 108, misses = 87



*** Compiling ranks ... 


FASLOUT "ranks": IN files;  or type in expressions
When all done, execute FASLEND;
+++ addrank compiled, 54 + 28 bytes
+++ addrank0 compiled, 46 + 24 bytes
+++ addrank1 compiled, 60 + 16 bytes
+++ mergerank compiled, 60 + 20 bytes
+++ mkrankedname compiled, 64 + 16 bytes
+++ mkranklist compiled, 35 + 16 bytes
+++ upd_coarity compiled, 35 + 16 bytes

*** local variable v in procedure type_greaterp not used 
+++ type_greaterp compiled, 4 + 12 bytes

*** local variable y in procedure addnullary not used 
+++ addnullary compiled, 44 + 24 bytes
Completed FASL files for "ranks"
+++ FASLEND: hits = 53, misses = 24



*** Compiling tower ... 


FASLOUT "tower": IN files;  or type in expressions
When all done, execute FASLEND;
+++ type_reduce compiled, 4 + 12 bytes
+++ type_reduce2 compiled, 39 + 24 bytes
+++ delrelatedtype compiled, 24 + 16 bytes
+++ type_reduce5 compiled, 97 + 60 bytes
+++ type_reduce1 compiled, 24 + 20 bytes
+++ type_function compiled, 23 + 16 bytes
+++ type_assoc compiled, 22 + 16 bytes
+++ type_assoc1 compiled, 77 + 28 bytes
+++ constraint_apply compiled as link to apply
+++ type_assoc0 compiled as link to assoc
+++ check_type compiled, 20 + 28 bytes
+++ get_disambop compiled, 23 + 16 bytes
+++ disambop_assoc compiled, 22 + 16 bytes
+++ disambop_assoc1 compiled, 66 + 24 bytes
+++ assoc_coarity compiled, 20 + 8 bytes
+++ coercable compiled, 12 + 16 bytes
+++ coercablelis compiled, 13 + 12 bytes
Completed FASL files for "tower"
+++ FASLEND: hits = 92, misses = 47



*** Compiling package4 ... 


FASLOUT "package4": IN files;  or type in expressions
When all done, execute FASLEND;
+++ read_package compiled, 73 + 60 bytes
+++ read_package_name compiled, 62 + 52 bytes
+++ n_form_package compiled, 244 + 76 bytes

*** local variable u in procedure types not used 
+++ types compiled, 1 + 8 bytes
+++ mk_new_base_env compiled, 19 + 24 bytes
+++ get_pckg compiled, 4 + 12 bytes
+++ mk_new_assertion_env compiled, 6 + 16 bytes
+++ mk_new_param_env compiled, 8 + 16 bytes
+++ rm_base_env compiled, 17 + 12 bytes
+++ pckg_base compiled as link to car
+++ copy_assertions compiled, 47 + 28 bytes
+++ mk_retag_sl compiled, 53 + 32 bytes
+++ retag_package compiled, 74 + 28 bytes
+++ form_pckg_expr compiled, 49 + 24 bytes
+++ pckg_combine compiled, 34 + 12 bytes
+++ form_extends_pckg compiled, 138 + 44 bytes
+++ mk_prefix compiled, 11 + 8 bytes
+++ read_view compiled, 30 + 44 bytes
+++ bind_param_package compiled, 53 + 24 bytes
+++ pckg_geq compiled, 11 + 16 bytes
+++ pckg_geql compiled, 13 + 12 bytes
+++ op_in_pckgp compiled, 4 + 16 bytes
+++ type_in_pckgp compiled, 7 + 20 bytes
+++ pckg_type compiled, 24 + 20 bytes
+++ pckg_op_chk compiled, 12 + 16 bytes
Completed FASL files for "package4"
+++ FASLEND: hits = 185, misses = 84

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling tables ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "tables": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(reduce4)"
Fast-loading "./reduce.img(form4)"
Fast-loading "./reduce.img(block4)"
Fast-loading "./reduce.img(proc4)"
Fast-loading "./reduce.img(forstat4)"
Fast-loading "./reduce.img(struct4)"
Fast-loading "./reduce.img(reval4)"
Fast-loading "./reduce.img(simp4)"
Fast-loading "./reduce.img(forall4)"
Fast-loading "./reduce.img(rankstat)"
Fast-loading "./reduce.img(ranks)"
Fast-loading "./reduce.img(tower)"
Fast-loading "./reduce.img(package4)"
Completed FASL files for "tables"
+++ FASLEND: hits = 2, misses = 11
Fast-loading "./reduce.img(tables)"



*** Compiling table1 ... 


FASLOUT "table1": IN files;  or type in expressions
When all done, execute FASLEND;
+++ abs_int compiled, 7 + 20 bytes
+++ lessp_int_int compiled, 10 + 20 bytes
+++ leq_int_int compiled, 11 + 20 bytes
+++ greaterp_int_int compiled, 10 + 20 bytes
+++ geq_int_int compiled, 11 + 20 bytes
+++ int!>sint compiled, 6 + 16 bytes
+++ int!>bint compiled, 6 + 16 bytes
+++ sint!>zero compiled, 6 + 16 bytes
+++ sint!>nzint compiled, 6 + 16 bytes
+++ abs_int compiled, 7 + 20 bytes
+++ lessp_int_int compiled, 10 + 20 bytes
+++ leq_int_int compiled, 11 + 20 bytes
+++ greaterp_int_int compiled, 11 + 20 bytes
+++ geq_int_int compiled, 11 + 20 bytes
+++ equal_int_int compiled, 10 + 20 bytes
+++ and_bool_bool compiled, 9 + 20 bytes
+++ or_bool_bool compiled, 9 + 20 bytes
+++ not_bool compiled, 6 + 24 bytes
+++ and_bool_bool compiled, 9 + 20 bytes
+++ or_bool_bool compiled, 9 + 20 bytes
+++ not_bool compiled, 7 + 20 bytes
+++ fixp_poly compiled, 7 + 20 bytes
+++ idp_poly compiled, 6 + 24 bytes
+++ poly!>zero compiled, 6 + 16 bytes
+++ poly!>int compiled, 6 + 16 bytes
+++ poly!>kernel compiled, 6 + 16 bytes
+++ poly!>xpoly compiled, 6 + 16 bytes
+++ kernel!>variable compiled, 6 + 16 bytes
+++ kernelp compiled, 29 + 12 bytes
+++ fixp_poly compiled, 7 + 20 bytes
+++ idp_poly compiled, 6 + 24 bytes
+++ poly!>kernel compiled, 7 + 20 bytes
+++ den_ratpol compiled, 6 + 24 bytes
+++ ratpol!>poly compiled, 6 + 16 bytes
+++ ratpol!>xratpol compiled, 6 + 16 bytes
+++ den_ratpol compiled, 6 + 20 bytes
+++ ratpol!>poly compiled, 6 + 20 bytes
+++ plus_sint_sint compiled, 10 + 20 bytes
+++ plus_int_int compiled, 10 + 20 bytes
+++ plus_int_poly compiled, 10 + 20 bytes
+++ plus_poly_int compiled, 10 + 20 bytes
+++ plus_kernel_kernel compiled, 10 + 20 bytes
+++ plus_xpoly_xpoly compiled, 10 + 20 bytes
+++ plus_kernel_poly compiled, 10 + 20 bytes
+++ plus_poly_kernel compiled, 10 + 20 bytes
+++ plus_sint_sint compiled, 11 + 20 bytes
+++ plus_int_int compiled, 10 + 20 bytes
+++ plus_poly_poly compiled, 45 + 40 bytes
+++ plus_xpoly_xpoly compiled, 10 + 24 bytes
+++ addf!* compiled, 8 + 16 bytes
+++ plus_int_poly compiled, 10 + 28 bytes
+++ plus_poly_int compiled, 3 + 12 bytes
+++ addd!* compiled, 28 + 32 bytes
+++ plus_kernel_kernel compiled, 21 + 32 bytes
+++ plus_kernel_poly compiled, 16 + 32 bytes
+++ plus_xratpol_xratpol compiled, 10 + 20 bytes
+++ plus_poly_xratpol compiled, 10 + 20 bytes
+++ plus_xratpol_poly compiled, 10 + 20 bytes
+++ plus_xratpol_poly compiled, 3 + 12 bytes
+++ plus_poly_xratpol compiled, 31 + 32 bytes
+++ plus_xratpol_xratpol compiled, 10 + 24 bytes
+++ xaddsq compiled, 83 + 48 bytes
+++ minus_int compiled, 7 + 20 bytes
+++ minus_kernel compiled, 7 + 20 bytes
+++ minus_poly compiled, 7 + 20 bytes
+++ minus_ratpol compiled, 7 + 20 bytes
+++ difference_int_int compiled, 10 + 20 bytes
+++ difference_int_poly compiled, 10 + 20 bytes
+++ difference_poly_int compiled, 10 + 20 bytes
+++ difference_kernel_kernel compiled, 10 + 20 bytes
+++ difference_poly_poly compiled, 10 + 20 bytes
+++ difference_ratpol_ratpol compiled, 10 + 20 bytes
+++ minus_int compiled, 7 + 20 bytes
+++ difference_int_int compiled, 10 + 20 bytes
+++ difference_poly_poly compiled, 37 + 44 bytes
+++ difference_int_poly compiled, 13 + 32 bytes
+++ difference_poly_int compiled, 12 + 32 bytes
+++ difference!* compiled, 30 + 36 bytes
+++ difference_kernel_kernel compiled, 29 + 40 bytes
+++ difference_kernel_poly compiled, 6 + 16 bytes
+++ minus_ratpol compiled, 11 + 24 bytes
+++ minus_xratpol compiled, 6 + 24 bytes
+++ minus_poly compiled, 26 + 40 bytes
+++ minus_kernel compiled, 7 + 28 bytes
+++ minus_xpoly compiled, 6 + 24 bytes
+++ difference_xpoly_xpoly compiled, 11 + 28 bytes
+++ difference_ratpol_ratpol compiled, 42 + 44 bytes
+++ times_sint_sint compiled, 10 + 20 bytes
+++ times_int_int compiled, 10 + 20 bytes
+++ times_int_poly compiled, 10 + 20 bytes
+++ times_poly_int compiled, 10 + 20 bytes
+++ times_poly_poly compiled, 10 + 20 bytes
+++ times_xpoly_xpoly compiled, 10 + 20 bytes
+++ times_kernel_kernel compiled, 10 + 20 bytes
+++ times_ratpol_ratpol compiled, 10 + 20 bytes
+++ times_sint_sint compiled, 10 + 20 bytes
+++ times_int_int compiled, 10 + 20 bytes
+++ times_int_poly compiled, 11 + 28 bytes
+++ times_poly_int compiled, 3 + 12 bytes
+++ multd!* compiled, 28 + 32 bytes
+++ times_kernel_kernel compiled, 21 + 32 bytes
+++ times_kernel_poly compiled, 17 + 32 bytes
+++ times_poly_poly compiled, 45 + 40 bytes
+++ times_xpoly_xpoly compiled, 10 + 24 bytes
+++ times_ratpol_ratpol compiled, 31 + 32 bytes
+++ times_poly_xratpol compiled, 38 + 40 bytes
+++ times_xratpol_xratpol compiled, 10 + 24 bytes
+++ xmultsq compiled as link to multsq
+++ expt_int_int compiled, 11 + 20 bytes
+++ expt_poly_int compiled, 11 + 20 bytes
+++ expt_xratpol_int compiled, 11 + 20 bytes
+++ expt_ratpol_ratpol compiled, 11 + 20 bytes
+++ expt_int_int compiled, 11 + 20 bytes
+++ expt_poly_int compiled, 60 + 68 bytes
+++ expt_xratpol_int compiled, 17 + 36 bytes
+++ expt_ratpol_ratpol compiled, 11 + 20 bytes
+++ svalue compiled, 14 + 20 bytes
+++ quotient_ratpol_nzint compiled, 11 + 20 bytes
+++ quotient_ratpol_xpoly compiled, 11 + 20 bytes
+++ quotient_ratpol_kernel compiled, 11 + 20 bytes
+++ quotient_ratpol_xratpol compiled, 11 + 20 bytes
+++ quotient_ratpol_nzint compiled, 77 + 56 bytes
+++ quotient_ratpol_xpoly compiled as link to quotient_ratpol_nzint
+++ quotient_ratpol_kernel compiled, 91 + 56 bytes
+++ quotient_ratpol_xratpol compiled, 71 + 56 bytes
+++ df_poly_kernel compiled, 10 + 24 bytes
+++ df_xratpol_kernel compiled, 10 + 24 bytes
+++ df_poly_kernel compiled, 47 + 56 bytes
+++ df_xratpol_kernel compiled, 10 + 24 bytes
+++ int_poly_kernel compiled, 10 + 24 bytes
+++ int_xratpol_kernel compiled, 10 + 24 bytes
+++ int_poly_kernel compiled, 46 + 48 bytes
+++ int_xratpol_kernel compiled, 12 + 28 bytes
+++ setq_kernel_poly compiled, 11 + 20 bytes
+++ setq_kernel_xratpol compiled, 11 + 20 bytes
+++ setq_kernel_poly compiled, 26 + 40 bytes
+++ setq_kernel_xratpol compiled as link to setq_kernel_poly
+++ lessp_int_int compiled, 10 + 20 bytes
+++ greaterp_int_int compiled, 10 + 20 bytes
+++ neq_int_int compiled, 11 + 20 bytes
+++ equal_int_int compiled, 10 + 20 bytes
+++ greaterp_int_int compiled, 10 + 20 bytes
+++ lessp_int_int compiled, 10 + 20 bytes
+++ neq_int_int compiled, 12 + 24 bytes
+++ quote_generic compiled, 4 + 20 bytes
+++ quote_generic compiled, 1 + 8 bytes
+++ equal_kernel_kernel compiled, 10 + 20 bytes
+++ equal_power_power compiled, 10 + 20 bytes
+++ greaterp_xpower_xpower compiled as link to greaterp_power_power
+++ greaterp_power_power compiled, 24 + 20 bytes
+++ greaterp_kernel_kernel compiled, 20 + 24 bytes
Completed FASL files for "table1"
+++ FASLEND: hits = 1497, misses = 189



*** Compiling table2 ... 


FASLOUT "table2": IN files;  or type in expressions
When all done, execute FASLEND;
+++ print_bool compiled, 7 + 20 bytes
+++ print_list compiled, 7 + 20 bytes
+++ print_noval compiled, 7 + 20 bytes
+++ print_kernel compiled, 7 + 20 bytes
+++ print_variable compiled, 7 + 20 bytes
+++ print_xkernel compiled, 7 + 20 bytes
+++ print_poly compiled, 7 + 20 bytes
+++ print_ratpol compiled, 7 + 20 bytes
+++ print_sint compiled, 7 + 20 bytes
+++ print_string compiled, 7 + 20 bytes
+++ print_generic compiled, 7 + 20 bytes
+++ print_sint compiled as link to print_algebraic
+++ print_poly compiled, 8 + 24 bytes
+++ print_ratpol compiled, 6 + 20 bytes
+++ print_algebraic compiled, 14 + 24 bytes
+++ print_list compiled, 4 + 16 bytes
+++ print_list1 compiled, 70 + 76 bytes
+++ print_bool compiled as link to print_algebraic

*** local variable u in procedure print_noval not used 
+++ print_noval compiled, 1 + 8 bytes
+++ print_string compiled as link to print_algebraic
+++ print_kernel compiled as link to print_algebraic
+++ print_xkernel compiled as link to print_algebraic
+++ print_variable compiled as link to print_algebraic
+++ print_generic compiled as link to print_algebraic
+++ prin2_bool compiled, 6 + 24 bytes
+++ prin2_list compiled, 6 + 24 bytes
+++ prin2_noval compiled, 6 + 24 bytes
+++ prin2_kernel compiled, 6 + 24 bytes
+++ prin2_variable compiled, 6 + 24 bytes
+++ prin2_xkernel compiled, 6 + 24 bytes
+++ prin2_poly compiled, 6 + 24 bytes
+++ prin2_ratpol compiled, 6 + 24 bytes
+++ prin2_sint compiled, 6 + 24 bytes
+++ prin2_string compiled, 6 + 24 bytes
+++ prin2_generic compiled, 6 + 24 bytes
+++ prin2_sint compiled as link to prin2_algebraic
+++ prin2_poly compiled, 6 + 20 bytes
+++ prin2_ratpol compiled, 4 + 16 bytes
+++ prin2_algebraic compiled, 12 + 20 bytes
+++ prin2_list compiled, 4 + 12 bytes
+++ prin2_bool compiled as link to prin2_algebraic

*** local variable u in procedure prin2_noval not used 
+++ prin2_noval compiled, 1 + 8 bytes
+++ prin2_string compiled as link to prin2_algebraic
+++ prin2_variable compiled as link to prin2_algebraic
+++ prin2_xkernel compiled as link to prin2_algebraic
+++ prin2_generic compiled as link to prin2_algebraic
+++ on_list compiled, 6 + 24 bytes
+++ off_list compiled, 6 + 24 bytes
+++ on_list compiled, 4 + 16 bytes
+++ off_list compiled, 4 + 12 bytes
+++ onoff_list compiled, 20 + 20 bytes
+++ tr_list compiled, 5 + 24 bytes
+++ untr_list compiled, 5 + 24 bytes
+++ trst_list compiled, 5 + 24 bytes
+++ untrst_list compiled, 5 + 24 bytes
+++ tr_list compiled, 4 + 16 bytes
+++ untr_list compiled, 4 + 16 bytes
+++ trst_list compiled, 4 + 16 bytes
+++ untrst_list compiled, 4 + 16 bytes
+++ trfn compiled, 43 + 16 bytes
+++ write_list compiled, 6 + 24 bytes
+++ write_list compiled, 23 + 32 bytes
+++ factor_list compiled, 6 + 24 bytes
+++ remfac_list compiled, 6 + 24 bytes
+++ factor_list compiled, 4 + 16 bytes
+++ remfac_list compiled, 4 + 12 bytes
+++ factor_list1 compiled, 24 + 24 bytes
Completed FASL files for "table2"
+++ FASLEND: hits = 455, misses = 90



*** Compiling table3 ... 


FASLOUT "table3": IN files;  or type in expressions
When all done, execute FASLEND;
+++ getd_variable compiled, 6 + 24 bytes
+++ get_variable_variable compiled, 10 + 20 bytes
+++ prop_variable compiled, 6 + 24 bytes
+++ put_variable_variable_generic compiled, 14 + 24 bytes
+++ lterm_poly_kernel compiled, 10 + 24 bytes
+++ sub_list_generic compiled, 10 + 24 bytes
+++ operator_list compiled, 6 + 24 bytes
+++ lterm1 compiled, 7 + 24 bytes
+++ prop1 compiled, 60 + 36 bytes
+++ pair2list compiled, 22 + 12 bytes
+++ getd1 compiled, 6 + 20 bytes
+++ operator1 compiled, 37 + 36 bytes
Completed FASL files for "table3"
+++ FASLEND: hits = 90, misses = 43



*** Compiling matrix4 ... 


FASLOUT "matrix4": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mkn_matrix compiled, 17 + 36 bytes
+++ print_matrix compiled, 7 + 20 bytes
+++ print_matrix compiled as link to matpri
+++ n_formmatr compiled, 6 + 16 bytes
Completed FASL files for "matrix4"
+++ FASLEND: hits = 19, misses = 28

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling talp ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "talp": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"

*** <> redefined 
+++ talp_enter compiled, 156 + 36 bytes
+++ talp_exit compiled, 28 + 28 bytes
+++ talp_mkalop compiled, 19 + 20 bytes
+++ talp_unmkalop compiled, 5 + 16 bytes
+++ talp_get!-invs compiled, 41 + 16 bytes
+++ talp_mkinvop compiled, 25 + 12 bytes
+++ talp_getl compiled, 2 + 12 bytes
+++ talp_getextl compiled, 2 + 12 bytes
+++ talp_prepat compiled, 16 + 24 bytes
+++ talp_lengthat compiled, 4 + 12 bytes
+++ talp_simpterm compiled, 83 + 40 bytes
+++ talp_resimpterm compiled as link to talp_simpterm
+++ talp_prepterm compiled as link to talp_simpterm
+++ talp_simpat compiled, 31 + 28 bytes
+++ talp_resimpat compiled, 13 + 28 bytes
+++ talp_opp compiled, 5 + 12 bytes
+++ talp_op compiled as link to car
+++ talp_fop compiled as link to car
+++ talp_arg2l compiled as link to cadr
+++ talp_arg2r compiled as link to caddr
+++ talp_argl compiled as link to cdr
+++ talp_invp compiled, 25 + 24 bytes
+++ talp_invf compiled, 8 + 12 bytes
+++ talp_invn compiled, 11 + 12 bytes
+++ talp_invarg compiled as link to cadr
+++ talp_mkinv compiled, 5 + 8 bytes
+++ talp_mk2 compiled, 5 + 8 bytes
+++ talp_mkn compiled as link to cons
+++ talp_mktn compiled as link to cons
+++ talp_fargl compiled as link to cdr
Completed FASL files for "talp"
+++ FASLEND: hits = 256, misses = 199
Fast-loading "./reduce.img(talp)"

*** <> redefined 



*** Compiling talpsiat ... 


FASLOUT "talpsiat": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable sop in procedure talp_simplat1 not used 
+++ talp_simplat1 compiled, 26 + 40 bytes
+++ talp_simplat2 compiled, 30 + 28 bytes
+++ talp_simplatrinv compiled, 50 + 36 bytes
+++ talp_simplatlinv compiled, 19 + 24 bytes
+++ talp_simplatfn compiled, 116 + 60 bytes
+++ talp_simplatat compiled, 61 + 28 bytes
+++ talp_simplt compiled, 4 + 12 bytes
+++ talp_simplt1 compiled, 162 + 68 bytes
+++ talp_telp compiled, 27 + 16 bytes
+++ stack_new compiled, 1 + 8 bytes
+++ stack_push compiled as link to cons
+++ stack_top compiled as link to car
+++ stack_pop compiled as link to cdr
+++ stack_print compiled, 15 + 12 bytes
Completed FASL files for "talpsiat"
+++ FASLEND: hits = 88, misses = 51



*** Compiling talpmisc ... 


FASLOUT "talpmisc": IN files;  or type in expressions
When all done, execute FASLEND;
+++ talp_ordatp compiled, 43 + 28 bytes
+++ talp_tordp compiled as link to ordp
+++ talp_termmlat compiled, 24 + 20 bytes
+++ talp_atnum compiled, 47 + 40 bytes
+++ talp_varlat compiled, 10 + 24 bytes
+++ talp_varlt compiled, 4 + 12 bytes
+++ talp_varlt1 compiled, 33 + 24 bytes
+++ talp_subat compiled, 17 + 28 bytes
+++ talp_subt compiled, 56 + 12 bytes

*** local variable al in procedure talp_subalchk not used 
+++ talp_subalchk compiled, 1 + 8 bytes
+++ talp_eqnrhskernels compiled, 3 + 12 bytes
+++ talp_varsubstat compiled, 20 + 28 bytes
+++ talp_varsubstat1 compiled, 54 + 8 bytes
+++ talp_negateat compiled, 22 + 32 bytes
+++ talp_tab compiled, 14 + 24 bytes
+++ talp_atab compiled, 10 + 16 bytes
+++ talp_atab1 compiled, 93 + 68 bytes
+++ talp_itab compiled, 8 + 20 bytes
+++ talp_itab1 compiled, 24 + 28 bytes
+++ talp_itab2 compiled, 49 + 16 bytes
+++ talp_a2cdl compiled, 85 + 28 bytes
+++ talp_rnf compiled, 8 + 20 bytes
+++ talp_rnf1 compiled, 81 + 40 bytes
+++ talp_acfrp compiled, 10 + 20 bytes
+++ talp_tcfrp compiled, 9 + 16 bytes
+++ talp_raf compiled, 209 + 80 bytes
+++ talp_atfp compiled, 12 + 16 bytes
+++ talp_getinvfsym compiled, 29 + 16 bytes
Completed FASL files for "talpmisc"
+++ FASLEND: hits = 175, misses = 78



*** Compiling talpbnf ... 


FASLOUT "talpbnf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ talp_dnf compiled, 16 + 28 bytes
+++ talp_cnf compiled, 16 + 28 bytes
+++ talp_subsumption compiled, 30 + 28 bytes
+++ talp_subsumep!-and compiled, 22 + 20 bytes
+++ talp_subsumep!-or compiled, 26 + 28 bytes
+++ talp_sacatlp compiled, 21 + 20 bytes
+++ talp_sacat compiled, 34 + 32 bytes
+++ talp_sacrel compiled, 9 + 20 bytes
+++ talp_sacrel!-or compiled, 12 + 12 bytes
+++ talp_sacrel!-and compiled, 12 + 12 bytes
Completed FASL files for "talpbnf"
+++ FASLEND: hits = 75, misses = 40



*** Compiling talpsism ... 


FASLOUT "talpsism": IN files;  or type in expressions
When all done, execute FASLEND;
+++ talp_smwupdknowl compiled, 17 + 20 bytes
+++ talp_smupdknowl compiled, 33 + 20 bytes
+++ talp_smupdknowl1 compiled, 44 + 24 bytes
+++ talp_chkknowl compiled, 84 + 52 bytes
+++ talp_smwrmknowl compiled, 8 + 20 bytes
+++ talp_smwcpknowl compiled, 8 + 20 bytes
+++ talp_smwmkatl compiled, 17 + 20 bytes

*** local variable old in procedure talp_susibin not used 

*** local variable new in procedure talp_susibin not used 
+++ talp_susibin compiled, 1 + 8 bytes

*** local variable knowl in procedure talp_susipost not used 
+++ talp_susipost compiled, 1 + 8 bytes

*** local variable knowl in procedure talp_susitf not used 
+++ talp_susitf compiled, 1 + 8 bytes
+++ rltrygs compiled as link to talp_try
+++ talp_try compiled, 6 + 24 bytes
+++ talp_try1 compiled, 140 + 60 bytes
+++ talp_try2 compiled, 19 + 20 bytes
+++ talp_try3 compiled, 179 + 72 bytes
+++ talp_specsub compiled, 62 + 28 bytes
+++ talp_specsubat compiled, 25 + 32 bytes
+++ talp_specsubt compiled, 63 + 12 bytes
+++ talp_eqtp compiled, 39 + 12 bytes
+++ talp_chsbstres compiled, 107 + 44 bytes
+++ talp_extlftrs compiled, 98 + 24 bytes
+++ talp_gettransl compiled, 89 + 12 bytes
+++ talp_sumd compiled, 29 + 28 bytes
+++ talp_ctns compiled, 23 + 12 bytes
+++ talp_lssimpl compiled, 85 + 48 bytes
+++ talp_lssimpl1 compiled, 183 + 40 bytes
+++ talp_candp compiled, 41 + 28 bytes
+++ talp_tcandt compiled, 11 + 16 bytes
+++ talp_tcandt1 compiled, 186 + 56 bytes
+++ talp_testknowl compiled, 63 + 40 bytes
+++ talp_getinvfts compiled, 66 + 32 bytes
+++ talp_getinvn compiled, 10 + 8 bytes
+++ talp_invtscsimpl compiled, 98 + 56 bytes
+++ talp_invtscsimplat compiled, 230 + 68 bytes
+++++ return or return-from not in prog context
+++ talp_invtscc compiled, 67 + 36 bytes
+++ talp_noffcts compiled, 28 + 16 bytes
+++ talp_getcts compiled, 49 + 20 bytes
Completed FASL files for "talpsism"
+++ FASLEND: hits = 282, misses = 101



*** Compiling talpqe ... 


FASLOUT "talpqe": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable theo in procedure talp_qe not used 
+++ talp_qe compiled, 10 + 24 bytes

*** local variable theo in procedure talp_qea not used 
+++ talp_qea compiled, 16 + 36 bytes
+++ talp_qe1 compiled, 24 + 32 bytes
+++ talp_qe2 compiled, 53 + 32 bytes
+++ talp_qeblock compiled, 180 + 76 bytes
+++ talp_qeblock1 compiled, 91 + 40 bytes
+++ talp_qeexblock compiled, 125 + 48 bytes
+++ talp_qevar compiled, 225 + 132 bytes
+++ talp_qevar1 compiled, 107 + 64 bytes
+++ talp_permbvarl compiled, 189 + 52 bytes
+++ talp_cocc compiled, 49 + 16 bytes
+++ talp_mergesort compiled, 53 + 8 bytes
+++ talp_getpairs compiled, 34 + 8 bytes
+++ talp_copy compiled, 55 + 8 bytes
+++ talp_inserteq compiled, 49 + 20 bytes
+++ talp_updateinfo compiled, 57 + 16 bytes
+++ talp_getans compiled, 89 + 12 bytes
+++ talp_gettype compiled, 41 + 36 bytes
+++ talp_depthbound compiled, 48 + 36 bytes
+++ talp_numberbound compiled, 15 + 28 bytes
+++ talp_nbu1 compiled, 32 + 16 bytes
+++ talp_nbun compiled, 21 + 20 bytes
+++ talp_nbnn compiled, 27 + 24 bytes
+++ talp_getnofcts compiled, 25 + 20 bytes
+++ talp_getmaxar compiled, 27 + 16 bytes
+++ talp_maxd compiled, 35 + 28 bytes
+++ talp_td compiled, 44 + 20 bytes
+++ talp_contains compiled, 45 + 12 bytes
+++ talp_nextt compiled, 193 + 40 bytes
+++++ return or return-from not in prog context
+++++ return or return-from not in prog context
+++++ return or return-from not in prog context
+++ talp_nextt1 compiled, 174 + 44 bytes
+++ talp_nextt!-atom compiled, 87 + 24 bytes
+++ talp_list2vec compiled, 32 + 12 bytes
+++ talp_mk!-invs compiled, 51 + 16 bytes
+++ talp_get!-idx compiled, 98 + 32 bytes
+++ talp_get!-minfct compiled, 63 + 28 bytes
+++ talp_tryqegauss compiled, 52 + 56 bytes
+++ talp_trygauss compiled, 33 + 28 bytes
+++ talp_trygauss1 compiled, 80 + 44 bytes
+++ talp_trygaussvar compiled, 31 + 44 bytes
+++ talp_qesolset compiled, 61 + 36 bytes
+++ talp_gaussand compiled, 46 + 24 bytes
+++ talp_gaussor compiled, 55 + 24 bytes
Completed FASL files for "talpqe"
+++ FASLEND: hits = 296, misses = 107

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling v3tools ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "v3tools": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(crack)"
Fast-loading "./reduce.img(crdec)"
Fast-loading "./reduce.img(crinit)"
Fast-loading "./reduce.img(crmain)"
Fast-loading "./reduce.img(crsep)"
Fast-loading "./reduce.img(crgensep)"
Fast-loading "./reduce.img(crint)"
Fast-loading "./reduce.img(crsimp)"
Fast-loading "./reduce.img(crutil)"
Fast-loading "./reduce.img(crsimpso)"
Fast-loading "./reduce.img(crequsol)"
Fast-loading "./reduce.img(crshort)"
Fast-loading "./reduce.img(crorder)"
Fast-loading "./reduce.img(crstruc)"
Fast-loading "./reduce.img(crunder)"
Fast-loading "./reduce.img(crlinalg)"
Fast-loading "./reduce.img(crsubsys)"
Fast-loading "./reduce.img(crtrafo)"
Fast-loading "./reduce.img(crident)"
Fast-loading "./reduce.img(crhomalg)"
Fast-loading "./reduce.img(crpvm)"
Fast-loading "./reduce.img(crstart)"
+++ gen compiled, 223 + 28 bytes
+++ is_reduceable compiled, 52 + 48 bytes
+++ l2s compiled, 251 + 48 bytes
+++ permu_repi compiled, 193 + 20 bytes
+++ genid compiled, 196 + 72 bytes
+++ expro compiled, 26 + 16 bytes
+++ extract_prod compiled, 39 + 24 bytes
+++ e2s compiled, 36 + 16 bytes
+++ vc compiled, 14 + 24 bytes
+++ dot compiled, 29 + 20 bytes
+++ cross compiled, 59 + 16 bytes
+++ spat compiled, 6 + 16 bytes
+++ v2c compiled, 73 + 52 bytes
+++ addvec compiled, 24 + 12 bytes
+++ letters_of compiled, 40 + 24 bytes
+++ get_vlist_of_term compiled, 197 + 60 bytes
+++ filter_hom compiled, 75 + 48 bytes
+++ t1 compiled, 30 + 28 bytes
+++ genpro_wg compiled, 76 + 16 bytes
+++ addvectowg compiled, 55 + 24 bytes
+++ genpro_wg_l compiled, 960 + 40 bytes
+++ std_wg compiled, 145 + 20 bytes
+++ genpro compiled, 39 + 20 bytes
+++ hc2s compiled, 704 + 252 bytes
+++ c2s compiled, 89 + 60 bytes
+++ c2sl compiled, 120 + 92 bytes
+++ add_hom_term compiled, 48 + 12 bytes
+++ shortvex compiled, 412 + 192 bytes
+++ s2s compiled, 4 + 12 bytes
+++ s2e compiled, 4 + 16 bytes
+++ poisson_c compiled, 86 + 52 bytes
+++ poisson_v compiled, 233 + 112 bytes
+++ symaddweights compiled, 232 + 32 bytes
+++ addweights compiled, 43 + 16 bytes
+++ gfi compiled, 370 + 104 bytes
+++ gpi compiled, 431 + 132 bytes
+++ vinit compiled, 162 + 96 bytes
+++ wg_li compiled, 171 + 56 bytes
+++ fnc_dep compiled, 398 + 160 bytes
Completed FASL files for "v3tools"
+++ FASLEND: hits = 1841, misses = 167
Fast-loading "./reduce.img(v3tools)"

********************************************************************
* Please note the following conventions to use these routines:     *
* - Vectors are denoted by a single character and products         *
*   (A,Bx(Cx(Dx...))) by single identifiers ABCD... . For example, *
*   scalar products (A,B) by AB, triple products (A,BxC) by ABC,   *
*   (A,Bx(CxD)) by ABCD and so on. For scalar and triple products  *
*   only those versions are used for which letters are sorted      *
*   alphabetically, for example, AB, ABU but not BA, AUB or BUA.   *
* - Any non-vectorial variable starts with the two characters !&.  *
* - For further comments see the beginning of this file and the    *
*   files v3tools.tex and v3tools.tst.                             *
********************************************************************

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling sum ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "sum": IN files;  or type in expressions
When all done, execute FASLEND;
+++ freeof!-df compiled, 25 + 28 bytes
+++ freeof!-dfl compiled, 14 + 16 bytes
+++ simp!-sum compiled, 67 + 52 bytes
Completed FASL files for "sum"
+++ FASLEND: hits = 21, misses = 29
Fast-loading "./reduce.img(sum)"



*** Compiling sum2 ... 


FASLOUT "sum2": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simp!-sum0 compiled, 104 + 48 bytes
+++ simp!-sum1 compiled, 203 + 112 bytes
+++ sum!-trig compiled, 42 + 40 bytes
+++ sum!-unknown compiled, 99 + 60 bytes
+++ sum!-subst compiled, 27 + 8 bytes
+++ sum!-df compiled, 127 + 68 bytes
+++ sum!-sq compiled, 450 + 184 bytes
+++ integer!-root compiled, 114 + 48 bytes
+++ lowcoef compiled, 22 + 20 bytes
+++ dcoefl compiled, 40 + 8 bytes
+++ testdivide compiled, 31 + 16 bytes
+++ degree!-bound compiled, 112 + 44 bytes
+++ solve!-fn compiled, 359 + 128 bytes
+++ subst!-cn compiled, 44 + 24 bytes
+++ makevar compiled, 13 + 8 bytes
+++ deleteq compiled, 23 + 12 bytes
+++ nsubsf compiled, 100 + 40 bytes
+++ nsubsq compiled, 11 + 16 bytes
+++ nonpolyp compiled, 30 + 16 bytes
+++ depend!-sq compiled, 10 + 12 bytes
+++ depend!-f compiled, 23 + 12 bytes
+++ depend!-p compiled, 26 + 28 bytes
+++ depend!-l compiled, 15 + 20 bytes
+++ sum!-term!-split compiled, 60 + 40 bytes
+++ kern!-list compiled, 27 + 16 bytes
+++ termlst compiled, 89 + 24 bytes
+++ trig!-to!-expsq compiled, 11 + 20 bytes
+++ trig!-to!-expf compiled, 39 + 24 bytes
+++ trig!-to!-expp compiled, 330 + 124 bytes
+++ exp!-to!-trigsq compiled, 9 + 20 bytes
+++ exp!-to!-trigf compiled, 119 + 56 bytes
+++ exp!-to!-trigl compiled, 67 + 56 bytes
+++ termlst1 compiled, 76 + 36 bytes
Completed FASL files for "sum2"
+++ FASLEND: hits = 714, misses = 140



*** Compiling complx ... 


FASLOUT "complx": IN files;  or type in expressions
When all done, execute FASLEND;
+++ real!-imag!-sq compiled, 46 + 28 bytes
+++ real!-imag!-f compiled, 43 + 24 bytes
+++ real!-imag!-sincos compiled, 117 + 56 bytes
+++ sum!-split!-log compiled, 113 + 44 bytes
+++ prod!-split!-exp compiled, 191 + 52 bytes
Completed FASL files for "complx"
+++ FASLEND: hits = 30, misses = 36



*** Compiling prod ... 


FASLOUT "prod": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simp!-prod compiled, 122 + 48 bytes
+++ simp!-prod1 compiled, 182 + 96 bytes
+++ prod!-unknown compiled, 214 + 88 bytes
+++ prod!-sq compiled, 300 + 140 bytes
+++ prod!-nsubsf compiled, 70 + 32 bytes
+++ integer!-root2 compiled, 142 + 48 bytes
Completed FASL files for "prod"
+++ FASLEND: hits = 274, misses = 94

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling zeilberg ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "zeilberg": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gosper!* compiled, 63 + 48 bytes
+++ gosper!-eval compiled, 19 + 36 bytes
+++ gosperborders compiled, 78 + 68 bytes
+++ gosper0 compiled, 25 + 36 bytes
+++ gosper1 compiled, 1483 + 340 bytes
+++ sumrecursion!-eval compiled, 52 + 40 bytes
+++ sumrecursion0 compiled, 34 + 48 bytes
+++ sumrecursion1 compiled, 861 + 256 bytes
+++ sumrecursion2 compiled, 2068 + 332 bytes
+++ testnonnegintroots compiled, 115 + 88 bytes
+++ hypersum!-eval compiled, 60 + 40 bytes
+++ recursion_to_closed_form compiled, 356 + 120 bytes
+++ hypersum1 compiled, 224 + 120 bytes
+++ summation compiled, 845 + 232 bytes
+++ recorder compiled, 39 + 52 bytes
+++ rectopoch compiled, 690 + 180 bytes
+++ refactors compiled, 211 + 104 bytes
+++ hyperrecursion!-eval compiled, 60 + 40 bytes
+++ hyperrecursion0 compiled, 36 + 48 bytes
+++ hyperrecursion1 compiled, 780 + 248 bytes
+++ determine_polynomials compiled, 213 + 88 bytes
+++ determine_polynomials2 compiled, 352 + 132 bytes
+++ maxshift compiled, 110 + 56 bytes
+++ maxdegf compiled, 267 + 136 bytes
+++ comppol compiled, 253 + 92 bytes
+++ hyperterm compiled, 134 + 60 bytes
+++ simplify_combinatorial compiled, 7 + 16 bytes
+++ togamma compiled, 300 + 100 bytes
+++ ratsimplify_gamma compiled, 1168 + 112 bytes
+++ strip_power compiled, 107 + 84 bytes
+++ simplify_gamma compiled, 93 + 76 bytes
+++ matchgammashift compiled, 145 + 68 bytes
+++ highest_gamma_order compiled, 411 + 96 bytes
+++ gammashift compiled, 287 + 96 bytes
+++ shift_gamma compiled, 132 + 60 bytes
+++ listshift_gamma compiled, 179 + 68 bytes
+++ producttopochhammer compiled, 364 + 112 bytes
+++ extended_gosper!-eval compiled, 76 + 48 bytes
+++ extended_gosperborders compiled, 106 + 84 bytes
+++ extended_gosper2 compiled, 85 + 80 bytes
+++ extended_gosper1 compiled, 328 + 164 bytes
+++ extended_sumrecursion!-eval compiled, 63 + 40 bytes
+++ extended_sumrecursion0 compiled, 28 + 48 bytes
+++ extended_sumrecursion1 compiled, 588 + 184 bytes
+++ extended_sumrecursion20 compiled, 34 + 48 bytes
+++ extended_sumrecursion2 compiled, 261 + 140 bytes
+++ extended_hyperrecursion!-eval compiled, 40 + 32 bytes
+++ extended_hyperrecursion0 compiled, 16 + 20 bytes
+++ extended_hyperrecursion1 compiled, 20 + 20 bytes
+++ linearfactor compiled, 56 + 56 bytes
+++ lcml compiled, 57 + 40 bytes
+++ argumentlist compiled, 149 + 80 bytes
+++ negintoccurs compiled, 73 + 60 bytes
+++ sumtohyper compiled, 1247 + 280 bytes
+++ remove_reduntant_elements compiled, 334 + 60 bytes
+++ trim compiled, 54 + 36 bytes
+++ maxposint compiled, 70 + 60 bytes
+++ minnegint compiled, 69 + 56 bytes
+++ binom compiled, 136 + 76 bytes
+++ numberofzeros compiled, 58 + 48 bytes
+++ patternarguments compiled, 98 + 64 bytes
+++ remove_part compiled, 100 + 48 bytes
+++ remove_nonlinear_parts compiled, 77 + 76 bytes
+++ closedform_initialization compiled, 273 + 124 bytes
+++ simplify_gamma2 compiled, 520 + 112 bytes
+++ simplify_gamman compiled, 440 + 112 bytes
+++ simplify_gamma3 compiled, 431 + 124 bytes
+++ newrederr compiled, 35 + 36 bytes
+++ newrederr1 compiled, 27 + 20 bytes
+++ polynomq4 compiled, 14 + 28 bytes
+++ type_ratpoly compiled, 34 + 36 bytes
+++ tttype_ratpoly compiled, 44 + 36 bytes
+++ savesolve compiled, 46 + 52 bytes
+++ polynomq compiled, 33 + 32 bytes
+++ polynomqqq compiled, 41 + 36 bytes
+++ polynomqqq compiled, 110 + 52 bytes
+++ ttttype_ratpoly compiled, 44 + 36 bytes
Completed FASL files for "zeilberg"
+++ FASLEND: hits = 1957, misses = 375
Fast-loading "./reduce.img(zeilberg)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling symaux ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "symaux": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"

*** local variable u in procedure give_groups not used 
+++ give_groups compiled, 3 + 16 bytes
+++ print_group compiled, 27 + 36 bytes
+++ print_generators compiled, 27 + 36 bytes
+++ character_table compiled, 19 + 32 bytes
+++ character_nr compiled, 56 + 60 bytes
+++ irreducible_rep_table compiled, 27 + 36 bytes
+++ irreducible_rep_nr compiled, 53 + 60 bytes
+++ canonical_decomposition compiled, 20 + 36 bytes
+++ sym_character compiled, 36 + 48 bytes
+++ symmetry_adapted_basis compiled, 67 + 64 bytes
+++ symmetry_adapted_basis_part compiled, 67 + 64 bytes
+++ symmetry_bases compiled, 38 + 48 bytes
+++ sym_diagonalize compiled, 65 + 68 bytes
+++ set_generators_group compiled, 101 + 84 bytes
+++ set_elements compiled, 143 + 80 bytes
+++ set_group_table compiled, 181 + 92 bytes
+++ set_real_rep compiled, 74 + 88 bytes
+++ set_complex_rep compiled, 55 + 76 bytes
+++ mk_available compiled, 32 + 48 bytes
+++ update_new_group compiled, 35 + 48 bytes
+++ loadgroups compiled, 6 + 20 bytes
Completed FASL files for "symaux"
+++ FASLEND: hits = 237, misses = 130
Fast-loading "./reduce.img(symaux)"

*** @ already defined as operator 



*** Compiling symatvec ... 


FASLOUT "symatvec": IN files;  or type in expressions
When all done, execute FASLEND;
+++ gen!+can!+bas compiled, 143 + 12 bytes
+++ alg!+matrix!+p compiled, 51 + 28 bytes
+++ matrix!+p not compiled (C version available)
+++ squared!+matrix!+p compiled, 15 + 24 bytes

*** local variable rule1 in procedure equal+matrices+p not used 

*** local variable rule2 in procedure equal+matrices+p not used 
+++ equal!+matrices!+p compiled, 90 + 56 bytes
+++ get!+row!+nr not compiled (C version available)
+++ get!+col!+nr not compiled (C version available)
+++ get!+mat!+entry not compiled (C version available)
+++ same!+dim!+squared!+p compiled, 19 + 20 bytes
+++ mk!+transpose!+matrix compiled, 139 + 36 bytes
+++ mk!+conjugate!+matrix compiled, 145 + 40 bytes
+++ mk!+hermitean!+matrix compiled, 9 + 20 bytes
+++ unitarian!+p compiled, 19 + 32 bytes
+++ mk!+mat!+mult!+mat compiled, 367 + 76 bytes
+++ mk!+mat!+plus!+mat compiled, 277 + 72 bytes
+++ mk!+mat!*mat!*mat compiled, 7 + 12 bytes
+++ add!+two!+mats compiled, 78 + 36 bytes
+++ mk!+scal!+mult!+mat compiled, 187 + 52 bytes
+++ mk!+trace compiled, 49 + 52 bytes
+++ mk!+block!+diagonal!+mat compiled, 20 + 24 bytes
+++ fill!+zeros compiled, 27 + 24 bytes
+++ mk!+outer!+mat compiled, 118 + 28 bytes
+++ mk!+inner!+mat compiled, 114 + 24 bytes
+++ mk!+resimp!+mat compiled, 107 + 12 bytes
+++ mk!+null!+mat compiled, 111 + 12 bytes
+++ mk!+unit!+mat compiled, 3 + 12 bytes
+++ vector!+p compiled, 9 + 16 bytes
+++ get!+vec!+dim not compiled (C version available)
+++ get!+vec!+entry not compiled (C version available)
+++ mk!+mat!+mult!+vec compiled, 35 + 12 bytes
+++ mk!+scal!+mult!+vec compiled, 69 + 32 bytes
+++ mk!+vec!+add!+vec compiled, 86 + 44 bytes
+++ mk!+squared!+norm compiled, 4 + 12 bytes
+++ my!+nullsq!+p compiled, 6 + 12 bytes
+++ mk!+null!+vec compiled, 42 + 12 bytes
+++ mk!+conjugate!+vec compiled, 39 + 12 bytes
+++ null!+vec!+p compiled, 8 + 20 bytes
+++ mk!+normalize!+vector compiled, 39 + 56 bytes
+++ mk!+inner!+product compiled, 69 + 60 bytes
+++ mk!+real!+inner!+product compiled, 57 + 52 bytes
+++ mk!+gram!+schmid compiled, 53 + 44 bytes
+++ gram!+schmid compiled, 43 + 36 bytes
+++ add!+vector!+to!+list compiled, 6 + 8 bytes
+++ mk!+internal!+mat compiled, 3 + 12 bytes
+++ mat!+veclist compiled, 3 + 12 bytes
+++ change!+sq!+to!+int compiled, 13 + 28 bytes
+++ change!+int!+to!+sq compiled, 4 + 12 bytes
+++ change!+sq!+to!+algnull compiled, 31 + 44 bytes
+++ mk!+conjugate!+sq compiled, 3 + 12 bytes
+++ mk!+equation compiled, 5 + 12 bytes
+++ outer!+equation!+p compiled, 7 + 16 bytes
+++ mk!+outer!+list compiled, 6 + 12 bytes
+++ mk!+inner!+list compiled, 7 + 12 bytes
+++ outer!+list!+p compiled, 7 + 16 bytes
+++ equal!+lists!+p compiled, 8 + 12 bytes
+++ list!+in!+list!+p compiled, 17 + 16 bytes
+++ print!-matrix compiled, 6 + 24 bytes
+++ print!-sq compiled, 6 + 24 bytes
Completed FASL files for "symatvec"
+++ FASLEND: hits = 415, misses = 104



*** Compiling symcheck ... 


FASLOUT "symcheck": IN files;  or type in expressions
When all done, execute FASLEND;
+++ representation!:p compiled, 198 + 92 bytes
+++ irr!:nr!:p compiled, 21 + 28 bytes
+++ symmetry!:p compiled, 41 + 36 bytes
+++ identifier!:list!:p compiled, 16 + 20 bytes
+++ generator!:list!:p compiled, 50 + 40 bytes
+++ relation!:list!:p compiled, 20 + 28 bytes
+++ relation!:part!:p compiled, 57 + 40 bytes
+++ group!:table!:p compiled, 63 + 44 bytes
+++ group!:elemts!:p compiled, 5 + 16 bytes
+++ check!:complete!:rep!:p compiled, 252 + 100 bytes
+++ orthogonal!:characters!:p compiled, 38 + 32 bytes
+++ write!:to!:file compiled, 210 + 152 bytes
+++ mk_relation_list compiled, 46 + 28 bytes
+++ change_eq_to_lists compiled, 18 + 28 bytes
+++ mk_side_to_list compiled, 75 + 44 bytes
+++ alg!:print!:group compiled, 4 + 16 bytes
+++ alg!:generators compiled, 9 + 16 bytes
+++ alg!:characters compiled, 97 + 36 bytes
+++ alg!:irr!:reps compiled, 97 + 36 bytes
+++ alg!:print!:rep compiled, 70 + 28 bytes
+++ alg!:can!:decomp compiled, 94 + 60 bytes
+++ alg!:print!:character compiled, 100 + 28 bytes
Completed FASL files for "symcheck"
+++ FASLEND: hits = 145, misses = 113



*** Compiling symchrep ... 


FASLOUT "symchrep": IN files;  or type in expressions
When all done, execute FASLEND;
+++ mk_internal compiled, 79 + 44 bytes
+++ hard_representation_check_p compiled, 28 + 20 bytes
+++ relation_check_p compiled, 13 + 16 bytes
+++ mk_relation_mat compiled, 27 + 24 bytes
+++ get_mat compiled, 38 + 36 bytes
+++ mk_rep_mat compiled, 27 + 24 bytes
+++ get_rep_of_generator compiled, 40 + 36 bytes
+++ get_group_in compiled, 2 + 8 bytes
+++ eli_group_in compiled, 2 + 8 bytes
+++ get_rep_matrix_in compiled, 32 + 24 bytes
+++ get_dimension_in compiled, 6 + 24 bytes
+++ get_rep_matrix_entry compiled, 7 + 16 bytes
+++ mk_resimp_rep compiled, 57 + 24 bytes
+++ get_char_group compiled, 2 + 8 bytes
+++ get_char_dim compiled, 5 + 20 bytes
+++ get_char_value compiled, 32 + 24 bytes
Completed FASL files for "symchrep"
+++ FASLEND: hits = 89, misses = 38



*** Compiling symhandl ... 


FASLOUT "symhandl": IN files;  or type in expressions
When all done, execute FASLEND;
+++ available!*p compiled, 10 + 24 bytes
+++ storing!*p compiled, 4 + 12 bytes
+++ g!*element!*p compiled, 10 + 16 bytes
+++ g!*generater!*p compiled, 10 + 16 bytes
+++ get!*available!*groups compiled, 4 + 16 bytes
+++ get!*order compiled, 4 + 12 bytes

*** local variable ll in procedure get*elements not used 
+++ get!*elements compiled, 5 + 12 bytes
+++ get!*generators compiled, 4 + 12 bytes
+++ get!*generator!*relations compiled, 4 + 12 bytes
+++ get!*product compiled, 54 + 20 bytes
+++ get!*inverse compiled, 13 + 20 bytes
+++ give!*position compiled, 34 + 28 bytes
+++ get!*elem!*in!*generators compiled, 41 + 32 bytes
+++ get!*nr!*equi!*classes compiled, 5 + 12 bytes
+++ get!*equi!*class compiled, 32 + 20 bytes
+++ get!*all!*equi!*classes compiled, 4 + 12 bytes
+++ get!*nr!*real!*irred!*reps compiled, 4 + 12 bytes
+++ get!*real!*character compiled, 4 + 16 bytes
+++ get!*real!*comp!*chartype!*p compiled, 12 + 24 bytes
+++ get!*real!*irreducible!*rep compiled, 15 + 20 bytes
+++ get!*nr!*complex!*irred!*reps compiled, 4 + 12 bytes
+++ get!*complex!*character compiled, 4 + 16 bytes
+++ get!*complex!*irreducible!*rep compiled, 14 + 20 bytes
+++ set!*group compiled, 7 + 16 bytes
+++ set!*elems!*group compiled, 7 + 16 bytes
+++ set!*generators compiled, 7 + 16 bytes
+++ set!*relations compiled, 7 + 16 bytes
+++ set!*available compiled, 23 + 24 bytes
+++ set!*storing compiled, 6 + 12 bytes
+++ set!*grouptable compiled, 7 + 16 bytes
+++ set!*inverse compiled, 7 + 16 bytes
+++ set!*elemasgen compiled, 7 + 16 bytes
+++ set!*representation compiled, 31 + 32 bytes
+++ set!*repnumber compiled, 9 + 20 bytes
+++ mk!*inverse!*list compiled, 77 + 24 bytes
+++ mk!*equiclasses compiled, 113 + 32 bytes
Completed FASL files for "symhandl"
+++ FASLEND: hits = 191, misses = 70



*** Compiling sympatch ... 


FASLOUT "sympatch": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(rprint)"
+++ rprint compiled, 47 + 60 bytes
+++ reimexpt compiled, 95 + 80 bytes
Completed FASL files for "sympatch"
+++ FASLEND: hits = 27, misses = 42



*** Compiling symwork ... 


FASLOUT "symwork": IN files;  or type in expressions
When all done, execute FASLEND;
+++ correct_diagonal_p compiled, 18 + 28 bytes
+++ get_nr_irred_reps compiled, 8 + 20 bytes
+++ get_dim_irred_reps compiled, 14 + 24 bytes
+++ get_group_out compiled, 35 + 28 bytes
+++ get_repmatrix_out compiled, 48 + 36 bytes
+++ mk_rep_relation compiled, 63 + 28 bytes
+++ mk_character compiled, 58 + 24 bytes
+++ mk_multiplicity compiled, 44 + 52 bytes
+++ char_prod compiled, 76 + 68 bytes
+++ mk_proj_iso compiled, 115 + 108 bytes

*** local variable charnr in procedure mk_proj_first not used 
+++ mk_proj_first compiled, 108 + 92 bytes
+++ mk_mapping compiled, 106 + 92 bytes
+++ mk_part_sym compiled, 53 + 32 bytes
+++ mk_part_sym1 compiled, 75 + 52 bytes
+++ mk_part_symnext compiled, 53 + 24 bytes
+++ mk_sym_basis compiled, 307 + 68 bytes
+++ mk_part_sym_all compiled, 114 + 48 bytes
+++ mk_diagonal compiled, 247 + 76 bytes
Completed FASL files for "symwork"
+++ FASLEND: hits = 182, misses = 72

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling symmetry ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "symmetry": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(symaux)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"

*** @ already defined as operator 
Fast-loading "./reduce.img(symatvec)"
Fast-loading "./reduce.img(symcheck)"
Fast-loading "./reduce.img(symchrep)"
Fast-loading "./reduce.img(symhandl)"
Fast-loading "./reduce.img(sympatch)"
Fast-loading "./reduce.img(rprint)"
Fast-loading "./reduce.img(symwork)"
Completed FASL files for "symmetry"
+++ FASLEND: hits = 2, misses = 10
Fast-loading "./reduce.img(symmetry)"



*** Compiling symdata1 ... 


FASLOUT "symdata1": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "symdata1"
+++ FASLEND: hits = 3899, misses = 80



*** Compiling symdata2 ... 


FASLOUT "symdata2": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "symdata2"
+++ FASLEND: hits = 1953, misses = 64

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling taylor ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "taylor": IN files;  or type in expressions
When all done, execute FASLEND;
+++ !*tayexp2q compiled, 15 + 12 bytes
+++ !*q2tayexp compiled, 20 + 24 bytes
+++ preptayexp compiled, 6 + 12 bytes
+++ tayexp!-plus_m7dg27j7mawf compiled, 18 + 20 bytes
+++ tayexp!-plus2 not compiled (C version available)
+++ tayexp!-difference not compiled (C version available)
+++ tayexp!-minus compiled, 9 + 12 bytes
+++ tayexp!-times_ozzhxvfgto63 compiled, 18 + 20 bytes
+++ tayexp!-times2 compiled, 35 + 20 bytes
+++ tayexp!-quotient compiled, 26 + 20 bytes
+++ tayexp!-minusp not compiled (C version available)
+++ tayexp!-greaterp not compiled (C version available)
+++ tayexp!-geq_itdbj3lzc7h compiled, 9 + 16 bytes
+++ tayexp!-lessp not compiled (C version available)
+++ tayexp!-leq_bwmi16ngngt6 compiled, 9 + 16 bytes
+++ tayexp!-max2 compiled, 6 + 12 bytes
+++ tayexp!-min2 not compiled (C version available)
+++ taylor!:_lrvyx0ml1pif compiled, 8 + 12 bytes

*** local variable u in procedure tayflagscombine not used 

*** local variable v in procedure tayflagscombine not used 
+++ taylor!*!-zerop compiled, 4 + 12 bytes
+++ taycoefflist!-zerop compiled, 16 + 8 bytes
Completed FASL files for "taylor"
+++ FASLEND: hits = 1738, misses = 266
Fast-loading "./reduce.img(taylor)"



*** Compiling tayintro ... 


FASLOUT "tayintro": IN files;  or type in expressions
When all done, execute FASLEND;
+++ var!-is!-nth compiled, 48 + 24 bytes
+++ delete!-nth compiled, 20 + 12 bytes
+++ delete!-nth!-nth compiled, 24 + 16 bytes
+++ replace!-nth compiled, 22 + 12 bytes
+++ replace!-nth!-nth compiled, 27 + 16 bytes
+++ constant!-sq!-p compiled, 38 + 24 bytes
+++ smemberlp compiled, 19 + 8 bytes
+++ confusion compiled, 29 + 60 bytes

*** local variable errno in procedure taylor-error not used 
+++ taylor!-error compiled, 147 + 148 bytes
+++ taylor!-error!* compiled, 10 + 24 bytes
Completed FASL files for "tayintro"
+++ FASLEND: hits = 65, misses = 53



*** Compiling tayutils ... 


FASLOUT "tayutils": IN files;  or type in expressions
When all done, execute FASLEND;
+++ add!-degrees compiled, 41 + 12 bytes
+++ subtr!-degrees compiled, 41 + 12 bytes
+++ find!-non!-zero compiled, 37 + 20 bytes
+++ lcmn compiled, 9 + 8 bytes
+++ get!-denom!-l compiled, 34 + 16 bytes
+++ get!-denom!-ll compiled, 20 + 20 bytes
+++ smallest!-increment compiled, 109 + 28 bytes
+++ common!-increment compiled, 49 + 24 bytes
+++ min2!-order compiled, 51 + 28 bytes
+++ replace!-next compiled, 27 + 12 bytes
+++ comp!.tp!.!-p compiled, 36 + 12 bytes
+++ add!.comp!.tp!. compiled, 72 + 12 bytes
+++ taymindegreel compiled, 37 + 24 bytes
+++ get!-min!-degreelist compiled, 85 + 24 bytes
+++ mult!.comp!.tp!. compiled, 269 + 32 bytes
+++ inv!.tp!. compiled, 162 + 28 bytes
+++ taydegree!< compiled, 33 + 20 bytes
+++ taydegree!-strict!<!= compiled, 27 + 16 bytes
+++ exceeds!-order compiled, 33 + 24 bytes
+++ exceeds!-order!-variant compiled, 32 + 20 bytes
+++ enter!-sorted compiled, 29 + 12 bytes
+++ delete!-superfluous!-coeffs compiled, 97 + 28 bytes
+++ truncate!-coefflist compiled, 29 + 12 bytes
+++ taytp!-min2 compiled, 57 + 24 bytes
+++ truncate!-taylor!* compiled, 232 + 32 bytes
+++ tp!-greaterp compiled, 17 + 12 bytes
+++ subtr!-tp!-order compiled, 22 + 16 bytes
+++ addto!-all!-taytpelorders compiled, 35 + 16 bytes
+++ taymincoeff compiled, 34 + 16 bytes
+++ tayminpowerlist compiled, 13 + 16 bytes
+++ tayminpowerlist1 compiled, 84 + 20 bytes
+++ get!-cst!-coeff compiled, 56 + 20 bytes
+++ taylor!*!-constantp compiled, 47 + 20 bytes
+++ taylor!*!-constantp1 compiled, 22 + 16 bytes
+++ check!-for!-cst!-taylor compiled, 74 + 28 bytes
+++ taylor!*!-nzconstantp compiled, 47 + 20 bytes
+++ taylor!*!-nzconstantp1 compiled, 32 + 12 bytes
+++ taylor!*!-onep compiled, 47 + 20 bytes
+++ taylor!-onep1 compiled, 29 + 20 bytes
+++ is!-neg!-pl compiled, 33 + 24 bytes
+++ rat!-kern!-pow compiled, 65 + 44 bytes
Completed FASL files for "tayutils"
+++ FASLEND: hits = 282, misses = 111



*** Compiling tayintrf ... 


FASLOUT "tayintrf": IN files;  or type in expressions
When all done, execute FASLEND;
+++ simptaylor compiled, 197 + 100 bytes
+++ taylor1 compiled, 62 + 28 bytes
+++ taylor1sq compiled, 292 + 36 bytes
+++ taylor2 compiled, 44 + 44 bytes
+++ taylor2e compiled, 253 + 60 bytes
+++ taylor2f compiled, 115 + 52 bytes
+++ taylor2hom compiled, 220 + 24 bytes
+++ taylorsamevar compiled, 172 + 68 bytes
+++ simptaylor!* compiled, 116 + 56 bytes
Completed FASL files for "tayintrf"
+++ FASLEND: hits = 113, misses = 103



*** Compiling tayexpnd ... 


FASLOUT "tayexpnd": IN files;  or type in expressions
When all done, execute FASLEND;
+++ init!-taylor!-cache compiled, 5 + 16 bytes
+++ taylor!-add!-to!-cache compiled, 21 + 20 bytes
+++ taylorexpand compiled, 165 + 120 bytes
+++ taylorexpand1 compiled, 466 + 168 bytes
+++ taylorexpand!-sf compiled, 506 + 148 bytes
+++ taylorexpand!-sp compiled, 675 + 156 bytes
+++ make!-pow!-taylor!* compiled, 204 + 72 bytes
+++ make!-var!-coefflist compiled, 17 + 16 bytes
+++ make!-var!-powerlist compiled, 94 + 24 bytes
+++ taylorexpand!-taylor compiled, 122 + 36 bytes
+++ taylorexpand!-diff compiled, 129 + 68 bytes

*** local variable flg in procedure taylorexpand-diff1 not used 
+++ taylorexpand!-diff1 compiled, 210 + 32 bytes
+++ taylorexpand!-diff2 compiled, 474 + 104 bytes
+++ taylorexpand!-samevar compiled, 226 + 76 bytes
Completed FASL files for "tayexpnd"
+++ FASLEND: hits = 265, misses = 183



*** Compiling taybasic ... 


FASLOUT "taybasic": IN files;  or type in expressions
When all done, execute FASLEND;
+++ multtaylorsq compiled, 82 + 28 bytes
+++ addtaylor compiled, 15 + 20 bytes
+++ addtaylor!-as!-sq compiled, 52 + 36 bytes
+++ addtaylor!* compiled, 44 + 28 bytes
+++ addtaylor1 compiled, 289 + 32 bytes
+++ negtaylor compiled, 31 + 24 bytes
+++ negtaylor1 compiled, 36 + 12 bytes
+++ multtaylor compiled, 18 + 20 bytes
+++ multtaylor!-as!-sq compiled, 54 + 36 bytes
+++ multtaylor!* compiled, 44 + 28 bytes
+++ multtaylor1 compiled, 225 + 40 bytes
+++ quottaylor compiled, 18 + 24 bytes
+++ quottaylor!-as!-sq compiled, 55 + 40 bytes
+++ quottaylor!* compiled, 44 + 28 bytes
+++ quottaylor1 compiled, 410 + 88 bytes
+++ taydegree!-min2 compiled, 153 + 20 bytes
+++ makecoeffshom compiled, 147 + 36 bytes
+++ makecoeffshom0 compiled, 145 + 40 bytes
+++ makecoeffs compiled, 182 + 32 bytes
+++ makecoeffs0 compiled, 136 + 24 bytes
+++ makecoeffpairs1 compiled, 165 + 24 bytes
+++ makecoeffpairs compiled, 13 + 12 bytes
+++ makecoeffpairshom compiled, 186 + 32 bytes
+++ addcoeffs compiled, 73 + 32 bytes
+++ invtaylor compiled, 42 + 32 bytes
+++ invtaylor1 compiled, 323 + 64 bytes
Completed FASL files for "taybasic"
+++ FASLEND: hits = 250, misses = 104



*** Compiling taysimp ... 


FASLOUT "taysimp": IN files;  or type in expressions
When all done, execute FASLEND;
+++ taysimpsq compiled, 246 + 104 bytes
+++ taysimpsq!* compiled, 9 + 20 bytes
+++ taysimpf compiled, 252 + 84 bytes
+++ taysimpt compiled, 155 + 72 bytes
+++ multpowerintotaylor compiled, 131 + 56 bytes
+++ taysimpp compiled, 120 + 56 bytes
+++ taysimpmainvar compiled, 12 + 24 bytes
+++ taysimpkernel compiled, 29 + 24 bytes
+++ expttayi compiled, 115 + 40 bytes
+++ expttayrat compiled, 774 + 108 bytes
+++ expttayrat1 compiled, 268 + 60 bytes
Completed FASL files for "taysimp"
+++ FASLEND: hits = 154, misses = 124



*** Compiling taysubst ... 


FASLOUT "taysubst": IN files;  or type in expressions
When all done, execute FASLEND;
+++ subsubtaylor compiled, 827 + 192 bytes
+++ sortpred compiled, 15 + 8 bytes
+++ check!-pl compiled, 28 + 20 bytes
+++ check!-pl0 compiled, 12 + 8 bytes
+++ change!-coefflist compiled, 38 + 12 bytes
+++ change!-tp compiled, 32 + 12 bytes
+++ change!-pl compiled, 59 + 16 bytes
Completed FASL files for "taysubst"
+++ FASLEND: hits = 67, misses = 80



*** Compiling taydiff ... 


FASLOUT "taydiff": IN files;  or type in expressions
When all done, execute FASLEND;
+++ taydiffp compiled, 35 + 36 bytes
+++ difftaylor compiled, 195 + 56 bytes
+++ difftaylorwrttayvar compiled, 329 + 76 bytes
Completed FASL files for "taydiff"
+++ FASLEND: hits = 40, misses = 56



*** Compiling tayconv ... 


FASLOUT "tayconv": IN files;  or type in expressions
When all done, execute FASLEND;

*** local variable count in procedure preptaylor*1 not used 
+++ preptaylor!*1 compiled, 113 + 32 bytes
+++ preptaylor!*2 compiled, 41 + 32 bytes
+++ checkdifference compiled, 9 + 16 bytes
+++ checkexp compiled, 17 + 24 bytes
+++ preptaycoeff compiled, 62 + 36 bytes
+++ preptaylor!*!* compiled, 6 + 16 bytes
+++ preptaylor!* compiled, 8 + 12 bytes
+++ taylor!-gen!-big!-o compiled, 252 + 44 bytes
Completed FASL files for "tayconv"
+++ FASLEND: hits = 77, misses = 51



*** Compiling tayprint ... 


FASLOUT "tayprint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ check!-print!-terms compiled, 27 + 32 bytes
+++ taylor!*print1 compiled, 137 + 72 bytes
+++ taylor!*print compiled, 113 + 52 bytes
Completed FASL files for "tayprint"
+++ FASLEND: hits = 40, misses = 55



*** Compiling tayfront ... 


FASLOUT "tayfront": IN files;  or type in expressions
When all done, execute FASLEND;
+++ taylorseriesp compiled, 14 + 20 bytes
+++ taylorcombine compiled, 5 + 20 bytes
+++ taylortostandard compiled, 20 + 32 bytes
+++ taylororiginal compiled, 36 + 40 bytes
+++ taylortemplate compiled, 98 + 32 bytes
Completed FASL files for "tayfront"
+++ FASLEND: hits = 50, misses = 37



*** Compiling tayfns ... 


FASLOUT "tayfns": IN files;  or type in expressions
When all done, execute FASLEND;
+++ taysimpexpt compiled, 449 + 120 bytes
+++ taycoefflist!-union compiled, 25 + 12 bytes
+++ taycoefflist!-union2 compiled, 26 + 8 bytes
+++ inttaylorwrttayvar compiled, 8 + 12 bytes
+++ inttaylorwrttayvar1 compiled, 439 + 92 bytes
+++ taysimpasin compiled, 657 + 156 bytes
+++ taysimpasec!* compiled, 157 + 96 bytes
+++ taysimpasin!* compiled, 128 + 84 bytes
+++ taysimpatan compiled, 605 + 144 bytes
+++ taysimpatan!* compiled, 133 + 84 bytes
+++ taysimplog compiled, 686 + 164 bytes
+++ taysimpexp compiled, 529 + 116 bytes
+++ taysimptan compiled, 1301 + 208 bytes
+++ taysimpsin compiled, 369 + 116 bytes
+++ taysimpsinh compiled, 284 + 108 bytes
+++ revaltaylorint1 compiled, 99 + 48 bytes
+++ revaltaylorint compiled, 188 + 44 bytes
Completed FASL files for "tayfns"
+++ FASLEND: hits = 672, misses = 202



*** Compiling tayrevrt ... 


FASLOUT "tayrevrt": IN files;  or type in expressions
When all done, execute FASLEND;
+++ tayrevert compiled, 68 + 36 bytes
+++ tayrevertreorder compiled, 34 + 20 bytes
+++ tayrevertfirstdegreecoeffs compiled, 69 + 12 bytes

*** local variable newel in procedure tayrevert1 not used 
+++ tayrevert1 compiled, 823 + 148 bytes

*** local variable z in procedure tayrevert1pole not used 

*** local variable newcf in procedure tayrevert1pole not used 

*** local variable newtp in procedure tayrevert1pole not used 
+++ tayrevert1pole compiled, 57 + 40 bytes
+++ taylorrevert compiled, 29 + 36 bytes
Completed FASL files for "tayrevrt"
+++ FASLEND: hits = 62, misses = 70



*** Compiling tayimpl ... 


FASLOUT "tayimpl": IN files;  or type in expressions
When all done, execute FASLEND;
+++ implicit_taylor compiled, 75 + 56 bytes
+++ implicit_taylor1 compiled, 195 + 88 bytes
+++ construct!-taylor!* compiled, 65 + 32 bytes
+++ inverse_taylor compiled, 60 + 56 bytes
+++ inverse_taylor1 compiled, 136 + 76 bytes
Completed FASL files for "tayimpl"
+++ FASLEND: hits = 75, misses = 49



*** Compiling taypart ... 


FASLOUT "taypart": IN files;  or type in expressions
When all done, execute FASLEND;
+++ taylor!*part compiled, 38 + 24 bytes
Completed FASL files for "taypart"
+++ FASLEND: hits = 9, misses = 26

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling mrvlimit ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "mrvlimit": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(limits)"
Fast-loading "./reduce.img(tps)"
Fast-loading "./reduce.img(tpscomp)"
Fast-loading "./reduce.img(tpseval)"
Fast-loading "./reduce.img(tpsdom)"
Fast-loading "./reduce.img(tpsfns)"
Fast-loading "./reduce.img(tpsrev)"
Fast-loading "./reduce.img(tpssum)"
Fast-loading "./reduce.img(tpsmisc)"
Fast-loading "./reduce.img(tpsconv)"
Fast-loading "./reduce.img(sets)"
+++ maxi compiled, 87 + 44 bytes
+++ maxi1 compiled, 7 + 16 bytes
+++ compare compiled, 68 + 44 bytes
+++ comp compiled, 5 + 16 bytes
Fast-loading "./reduce.img(assist)"
Fast-loading "./reduce.img(sl2psl)"
Fast-loading "./reduce.img(switchxt)"
Fast-loading "./reduce.img(baglist)"
Fast-loading "./reduce.img(hcvctors)"
Fast-loading "./reduce.img(genpurfn)"
Fast-loading "./reduce.img(control)"
Fast-loading "./reduce.img(polyexns)"
Fast-loading "./reduce.img(transfns)"
Fast-loading "./reduce.img(vectorop)"
Fast-loading "./reduce.img(grassman)"
Fast-loading "./reduce.img(matrext)"
Fast-loading "./reduce.img(helpasst)"
+++ mrv compiled, 343 + 92 bytes
+++ mrv1 compiled as link to mrv
+++ flatten compiled, 4 + 12 bytes
+++ makeflat compiled, 26 + 8 bytes
+++ flat compiled as link to flatten
+++ mkflat compiled, 4 + 12 bytes

*** local variable var in procedure lim not used 

*** local variable val in procedure lim not used 
+++ lim compiled, 22 + 36 bytes
+++ move_up compiled, 27 + 32 bytes
+++ move_down compiled, 27 + 32 bytes
+++ rewrite compiled, 248 + 124 bytes
+++ smallest compiled, 77 + 44 bytes
+++ lngth compiled, 23 + 16 bytes
+++ lngth2 compiled as link to lngth
+++ mrv_limit compiled, 1447 + 332 bytes
Completed FASL files for "mrvlimit"
+++ FASLEND: hits = 249, misses = 117
Fast-loading "./reduce.img(mrvlimit)"



*** Compiling expon ... 


FASLOUT "expon": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(taylor)"
Fast-loading "./reduce.img(tayintro)"
Fast-loading "./reduce.img(tayutils)"
Fast-loading "./reduce.img(tayintrf)"
Fast-loading "./reduce.img(tayexpnd)"
Fast-loading "./reduce.img(taybasic)"
Fast-loading "./reduce.img(taysimp)"
Fast-loading "./reduce.img(taysubst)"
Fast-loading "./reduce.img(taydiff)"
Fast-loading "./reduce.img(tayconv)"
Fast-loading "./reduce.img(tayprint)"
Fast-loading "./reduce.img(tayfront)"
Fast-loading "./reduce.img(tayfns)"
Fast-loading "./reduce.img(tayrevrt)"
Fast-loading "./reduce.img(tayimpl)"
Fast-loading "./reduce.img(taypart)"
+++ split compiled, 235 + 104 bytes
+++ collect_power compiled, 98 + 68 bytes
+++ conv compiled, 130 + 88 bytes
+++ find_expt compiled, 67 + 60 bytes
+++ find compiled, 618 + 76 bytes
+++ fin compiled, 5 + 16 bytes
+++ find_numbers compiled, 283 + 124 bytes
+++ find_least_expt compiled, 825 + 176 bytes
Completed FASL files for "expon"
+++ FASLEND: hits = 148, misses = 73

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling residue ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "residue": IN files;  or type in expressions
When all done, execute FASLEND;
+++ polynomqqq compiled, 109 + 48 bytes
+++ ttttype_ratpoly compiled, 44 + 32 bytes
+++ type_ratpoly compiled, 4 + 12 bytes
+++ residue compiled, 275 + 136 bytes
+++ poleorder compiled, 140 + 100 bytes
Completed FASL files for "residue"
+++ FASLEND: hits = 64, misses = 59
Fast-loading "./reduce.img(residue)"
Fast-loading "./reduce.img(taylor)"
Fast-loading "./reduce.img(tayintro)"
Fast-loading "./reduce.img(tayutils)"
Fast-loading "./reduce.img(tayintrf)"
Fast-loading "./reduce.img(tayexpnd)"
Fast-loading "./reduce.img(taybasic)"
Fast-loading "./reduce.img(taysimp)"
Fast-loading "./reduce.img(taysubst)"
Fast-loading "./reduce.img(taydiff)"
Fast-loading "./reduce.img(tayconv)"
Fast-loading "./reduce.img(tayprint)"
Fast-loading "./reduce.img(tayfront)"
Fast-loading "./reduce.img(tayfns)"
Fast-loading "./reduce.img(tayrevrt)"
Fast-loading "./reduce.img(tayimpl)"
Fast-loading "./reduce.img(taypart)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling susy2 ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "susy2": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rzut compiled, 217 + 80 bytes
+++ sd_part compiled, 205 + 92 bytes
+++ d_part compiled, 183 + 88 bytes
+++ pr compiled, 119 + 52 bytes
+++ cp compiled, 173 + 96 bytes
+++ cp1 compiled, 356 + 136 bytes
+++ cp2 compiled, 86 + 60 bytes
+++ odwa compiled, 154 + 72 bytes
+++ lyst compiled, 128 + 88 bytes
+++ lyst1 compiled, 17 + 28 bytes
+++ lyst2 compiled, 17 + 28 bytes
+++ war compiled, 131 + 92 bytes
+++ dyw compiled, 105 + 76 bytes
+++ gra compiled, 91 + 68 bytes
+++ fpart compiled, 139 + 72 bytes
+++ bpart compiled, 150 + 88 bytes
+++ koza compiled, 231 + 76 bytes
+++ w_comb compiled, 951 + 160 bytes
+++ w_comb1 compiled, 543 + 108 bytes
+++ fcomb compiled, 293 + 96 bytes
+++ pse_ele compiled, 522 + 140 bytes
+++ n_gat compiled, 32 + 40 bytes
+++ gato compiled, 167 + 108 bytes
+++ gat1 compiled, 41 + 48 bytes
+++ fjacob compiled, 591 + 152 bytes
+++ jacob compiled, 1016 + 172 bytes
+++ jacob1 compiled, 254 + 108 bytes
+++ macierz compiled, 560 + 184 bytes
+++ dot_ham compiled, 150 + 80 bytes
+++ maxi compiled, 317 + 172 bytes
+++ n_dyw compiled, 370 + 156 bytes
+++ s_int compiled, 187 + 104 bytes
+++ cal compiled, 325 + 160 bytes
+++ hom compiled, 435 + 160 bytes
Completed FASL files for "susy2"
+++ FASLEND: hits = 24206, misses = 394
Fast-loading "./reduce.img(susy2)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling tri ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "tri": IN files;  or type in expressions
When all done, execute FASLEND;
+++ tri!-error compiled, 24 + 24 bytes
+++ texpri compiled, 25 + 20 bytes
+++ texvarpri compiled, 79 + 64 bytes

*** local variable w in procedure texindxpri not used 
+++ texindxpri compiled, 216 + 108 bytes
+++ makeop compiled, 29 + 24 bytes
+++ makeops compiled, 26 + 12 bytes
+++ mktag compiled, 47 + 32 bytes
+++ makearg compiled, 28 + 16 bytes
+++ makemat compiled, 18 + 12 bytes
+++ makefunc compiled, 223 + 84 bytes

*** local variable op in procedure make*sq not used 

*** local variable prec in procedure make*sq not used 
+++ make!*sq compiled, 9 + 28 bytes
+++ makedf compiled, 144 + 40 bytes

*** local variable op in procedure makepartdf not used 
+++ makepartdf compiled, 37 + 28 bytes

*** local variable prec in procedure makeexcinx not used 
+++ makeexcinx compiled, 119 + 36 bytes

*** local variable prec in procedure make:rd: not used 
+++ make!:rd!: compiled, 111 + 36 bytes
+++ makedomain compiled, 70 + 44 bytes
+++ makelimit compiled, 124 + 64 bytes
+++ texgroup compiled, 20 + 20 bytes

*** local variable prec in procedure makeint not used 
+++ makeint compiled, 93 + 40 bytes
+++ maketaylor compiled, 13 + 16 bytes

*** local variable prec in procedure make:ps: not used 
+++ make!:ps!: compiled, 388 + 180 bytes
+++ texitem compiled, 106 + 64 bytes
+++ makeitems compiled, 53 + 24 bytes
+++ unknownitem compiled, 31 + 40 bytes
+++ texexplode compiled, 62 + 32 bytes
+++ texcollect compiled, 89 + 24 bytes
+++ strcollect compiled, 139 + 36 bytes
+++ texexplist compiled, 51 + 16 bytes
+++ texassertset compiled, 54 + 48 bytes
+++ texretractset compiled, 53 + 48 bytes
+++ trimakeset compiled, 6 + 16 bytes
+++ makeglue compiled, 36 + 12 bytes
+++ interglue compiled, 152 + 92 bytes
+++ insertglue compiled, 106 + 48 bytes
+++ width compiled, 34 + 28 bytes
+++ settolerance compiled, 24 + 28 bytes
+++ setpagewidth compiled, 45 + 52 bytes
+++ setbreak compiled, 5 + 16 bytes
+++ resolve compiled, 206 + 96 bytes
+++ breaklist compiled, 627 + 104 bytes
+++ offsetitem compiled, 28 + 16 bytes
+++ trybreak compiled, 871 + 116 bytes
+++ texstrlen compiled, 34 + 20 bytes
+++ texout compiled, 403 + 116 bytes
+++ texsetbreak compiled as link to setbreak
+++ textolerance compiled as link to settolerance
+++ texpagewidth compiled as link to setpagewidth
+++ texlet compiled, 44 + 48 bytes
+++ texdisplay compiled, 81 + 64 bytes
Completed FASL files for "tri"
+++ FASLEND: hits = 1619, misses = 844
Fast-loading "./reduce.img(tri)"
% TeX-REDUCE-Interface 0.70
% set greek asserted
% set lowercase asserted
% set Greek asserted
% set Uppercase asserted
% \tolerance 10
% \hsize=150mm

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling trigsimp ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "trigsimp": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "trigsimp"
+++ FASLEND: hits = 1, misses = 7
Fast-loading "./reduce.img(trigsimp)"



*** Compiling trigsmp1 ... 


FASLOUT "trigsmp1": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "trigsmp1"
+++ FASLEND: hits = 4293, misses = 68



*** Compiling trigsmp2 ... 


FASLOUT "trigsmp2": IN files;  or type in expressions
When all done, execute FASLEND;
+++ trigsimp!* compiled, 16 + 28 bytes
+++ trigsimp compiled, 208 + 24 bytes
+++ trigsimp1 compiled, 845 + 356 bytes
+++ more_variables compiled, 12 + 12 bytes
+++ find_indets compiled, 36 + 8 bytes
+++ subs_symbolic_multiples compiled, 197 + 88 bytes
+++ behandle compiled, 49 + 48 bytes
+++ get_trig_arguments compiled, 49 + 20 bytes
+++ numberget!-simpfn compiled, 4 + 16 bytes
+++ numberget compiled, 22 + 12 bytes
+++ integer_content compiled, 45 + 16 bytes
+++ integer_content1 compiled, 31 + 16 bytes
+++ degree compiled, 18 + 20 bytes
+++ balanced compiled, 15 + 20 bytes
+++ coordinated compiled, 83 + 40 bytes
+++ trig2ord compiled, 107 + 60 bytes
+++ ord2trig compiled, 62 + 36 bytes
+++ subpoly2trig compiled, 80 + 56 bytes
+++ subpoly2hyp compiled, 69 + 52 bytes
+++ varget compiled, 34 + 48 bytes
+++ trigargcheck compiled, 43 + 40 bytes
+++ sub2poly compiled, 212 + 72 bytes
+++ triggcd compiled, 348 + 156 bytes
+++ trigfactorize compiled, 447 + 164 bytes
Completed FASL files for "trigsmp2"
+++ FASLEND: hits = 313, misses = 145

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling xcolor ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "xcolor": IN files;  or type in expressions
When all done, execute FASLEND;
+++ cerror compiled, 30 + 32 bytes
+++ removev not compiled (C version available)
+++ mkcopy not compiled (C version available)
+++ revv0 compiled, 30 + 8 bytes
+++ color0 compiled, 29 + 40 bytes
+++ chkcg compiled, 256 + 68 bytes
+++ afactor compiled, 63 + 44 bytes
+++ color1 compiled, 148 + 44 bytes
+++ removeg compiled, 79 + 48 bytes
+++ finde not compiled (C version available)
+++ removeg1 compiled, 207 + 64 bytes
+++ removeg2 compiled, 105 + 40 bytes
+++ split3gv compiled, 124 + 24 bytes
Completed FASL files for "xcolor"
+++ FASLEND: hits = 382, misses = 99
Fast-loading "./reduce.img(xcolor)"



*** Compiling cface ... 


FASLOUT "cface": IN files;  or type in expressions
When all done, execute FASLEND;
+++ sudim compiled, 17 + 36 bytes
+++ sptt compiled, 4 + 16 bytes
+++ simpqg compiled, 4 + 16 bytes
+++ simpg3 compiled, 4 + 16 bytes
+++ simpcv compiled, 31 + 40 bytes
+++ simpcgraph compiled, 54 + 52 bytes
+++ simpcgraph1 compiled, 142 + 60 bytes
Completed FASL files for "cface"
+++ FASLEND: hits = 64, misses = 36

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling wu ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "wu": IN files;  or type in expressions
When all done, execute FASLEND;
+++ wuconstantp not compiled (C version available)
+++ wureducedpolysp compiled, 15 + 12 bytes
+++ wureducedp compiled, 25 + 16 bytes
+++ deginvar compiled, 35 + 28 bytes
+++ symbollessp not compiled (C version available)
+++ wuorderp compiled, 58 + 24 bytes
+++ wulessp not compiled (C version available)
+++ wulessp!* compiled, 14 + 20 bytes
+++ totallessp compiled, 5 + 16 bytes
+++ totalcompare compiled, 38 + 32 bytes
+++ totalcompareconstants compiled, 84 + 32 bytes
+++ wusort compiled, 4 + 16 bytes
+++ collectvars compiled, 49 + 28 bytes
+++ collectpolyvars compiled, 4 + 12 bytes
+++ collectpolyvarsaux compiled, 26 + 12 bytes
+++ pickbasicset compiled, 64 + 20 bytes
+++ wupseudodivide compiled, 117 + 40 bytes
+++ simpwupseudodivide compiled, 41 + 32 bytes
+++ findremainder compiled, 23 + 12 bytes
+++ prin2t!* compiled, 5 + 20 bytes
+++ chrstrem compiled, 267 + 112 bytes
+++ simpchrstrem compiled, 89 + 40 bytes
+++ wu compiled, 326 + 100 bytes
+++ simpwu compiled, 431 + 108 bytes
Completed FASL files for "wu"
+++ FASLEND: hits = 235, misses = 94
Fast-loading "./reduce.img(wu)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling ztrans ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "ztrans": IN files;  or type in expressions
When all done, execute FASLEND;
+++ newrederr compiled, 35 + 36 bytes
+++ newrederr1 compiled, 27 + 20 bytes
+++ ztrans compiled, 94 + 56 bytes
Completed FASL files for "ztrans"
+++ FASLEND: hits = 28, misses = 38
Fast-loading "./reduce.img(ztrans)"

*** binomial already defined as operator 



*** Compiling ztrrules ... 


FASLOUT "ztrrules": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(residue)"
Fast-loading "./reduce.img(taylor)"
Fast-loading "./reduce.img(tayintro)"
Fast-loading "./reduce.img(tayutils)"
Fast-loading "./reduce.img(tayintrf)"
Fast-loading "./reduce.img(tayexpnd)"
Fast-loading "./reduce.img(taybasic)"
Fast-loading "./reduce.img(taysimp)"
Fast-loading "./reduce.img(taysubst)"
Fast-loading "./reduce.img(taydiff)"
Fast-loading "./reduce.img(tayconv)"
Fast-loading "./reduce.img(tayprint)"
Fast-loading "./reduce.img(tayfront)"
Fast-loading "./reduce.img(tayfns)"
Fast-loading "./reduce.img(tayrevrt)"
Fast-loading "./reduce.img(tayimpl)"
Fast-loading "./reduce.img(taypart)"
+++ do_invztrans compiled, 48 + 40 bytes
Completed FASL files for "ztrrules"
+++ FASLEND: hits = 8615, misses = 142

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling geoprover ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "geoprover": IN files;  or type in expressions
When all done, execute FASLEND;
+++ clear_ndg compiled, 7 + 24 bytes
+++ print_ndg compiled, 2 + 12 bytes
+++ add_ndg compiled, 20 + 28 bytes
+++ is_equal compiled, 5 + 12 bytes
+++ point compiled, 5 + 12 bytes
+++ line compiled, 11 + 16 bytes
+++ par_point compiled, 56 + 32 bytes
+++ pp_line compiled, 74 + 32 bytes
+++ intersection_point compiled, 164 + 76 bytes
+++ ortho_line compiled, 45 + 36 bytes
+++ par_line compiled, 57 + 36 bytes
+++ varpoint compiled, 66 + 36 bytes
+++ line_slider compiled, 112 + 64 bytes
+++ circle_slider compiled, 150 + 56 bytes
+++ sqrdist compiled, 44 + 32 bytes
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
+++ is_collinear compiled, 51 + 28 bytes
+++ is_concurrent compiled, 69 + 32 bytes
+++ is_parallel compiled, 36 + 28 bytes
+++ is_orthogonal compiled, 36 + 28 bytes
+++ on_line compiled, 44 + 32 bytes
+++ eq_dist compiled, 16 + 16 bytes
+++ l2_angle compiled, 89 + 48 bytes
+++ angle_sum compiled, 32 + 40 bytes
+++ eq_angle compiled, 22 + 16 bytes
+++ on_bisector compiled, 349 + 44 bytes
+++ rotate compiled, 129 + 52 bytes
+++ sym_line compiled, 175 + 52 bytes
+++ circle compiled, 14 + 16 bytes
+++ pc_circle compiled, 102 + 40 bytes
+++ circle_center compiled, 68 + 52 bytes
+++ circle_sqradius compiled, 85 + 60 bytes
+++ p3_circle compiled, 303 + 44 bytes
+++ on_circle compiled, 76 + 44 bytes
+++ other_cl_point compiled, 261 + 96 bytes
+++ radical_axis compiled, 108 + 44 bytes
+++ other_cc_point compiled, 13 + 16 bytes
+++ is_cl_tangent compiled, 210 + 52 bytes
+++ is_cc_tangent compiled, 332 + 52 bytes
+++ list2mat compiled, 39 + 16 bytes
+++ extractmat compiled, 229 + 68 bytes
+++ reduce_coords compiled, 120 + 60 bytes
+++ circle_inverse compiled, 127 + 44 bytes
+++ altitude compiled, 10 + 16 bytes
+++ centroid compiled, 22 + 16 bytes
+++ circumcenter compiled, 15 + 16 bytes
+++ csym_point compiled, 9 + 16 bytes
+++ fixedpoint compiled, 8 + 12 bytes
+++ is_concyclic compiled, 15 + 16 bytes
+++ median compiled, 10 + 16 bytes
+++ midpoint compiled, 14 + 24 bytes
+++ orthocenter compiled, 22 + 16 bytes
+++ other_incenter compiled, 26 + 20 bytes
+++ p3_angle compiled, 15 + 16 bytes
+++ p9_center compiled, 11 + 16 bytes
+++ p9_circle compiled, 23 + 16 bytes
+++ p_bisector compiled, 15 + 20 bytes
+++ pappus_line compiled, 37 + 16 bytes
+++ pedalpoint compiled, 9 + 16 bytes
+++ sqrdist_pl compiled, 10 + 16 bytes
+++ sym_point compiled, 12 + 20 bytes
+++ triangle_area compiled, 18 + 28 bytes
Completed FASL files for "geoprover"
+++ FASLEND: hits = 688, misses = 110
Fast-loading "./reduce.img(geoprover)"

 Geoprover  1.3a  Last update  December 30, 2002

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling rataprx ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "rataprx": IN files;  or type in expressions
When all done, execute FASLEND;
Completed FASL files for "rataprx"
+++ FASLEND: hits = 1, misses = 10
Fast-loading "./reduce.img(rataprx)"



*** Compiling decrep ... 


FASLOUT "decrep": IN files;  or type in expressions
When all done, execute FASLEND;
+++ paarp compiled, 4 + 12 bytes
+++ tidy compiled, 117 + 72 bytes
+++ digits2number compiled, 156 + 96 bytes
+++ number2digits compiled, 128 + 92 bytes
+++ rational2periodic compiled, 622 + 172 bytes
+++ nexttry compiled, 199 + 68 bytes
+++ per2rat compiled, 178 + 112 bytes
+++ print_periodic compiled, 247 + 84 bytes
Completed FASL files for "decrep"
+++ FASLEND: hits = 202, misses = 73



*** Compiling contfrac ... 


FASLOUT "contfrac": IN files;  or type in expressions
When all done, execute FASLEND;
+++ polynomqqq compiled, 109 + 48 bytes
+++ ttttype_ratpoly compiled, 44 + 32 bytes
+++ type_ratpoly compiled, 4 + 12 bytes
+++ vari compiled as link to idp
+++ polynomialp compiled, 18 + 28 bytes
+++ a_constant compiled as link to constant_exprp
Fast-loading "./reduce.img(taylor)"
Fast-loading "./reduce.img(tayintro)"
Fast-loading "./reduce.img(tayutils)"
Fast-loading "./reduce.img(tayintrf)"
Fast-loading "./reduce.img(tayexpnd)"
Fast-loading "./reduce.img(taybasic)"
Fast-loading "./reduce.img(taysimp)"
Fast-loading "./reduce.img(taysubst)"
Fast-loading "./reduce.img(taydiff)"
Fast-loading "./reduce.img(tayconv)"
Fast-loading "./reduce.img(tayprint)"
Fast-loading "./reduce.img(tayfront)"
Fast-loading "./reduce.img(tayfns)"
Fast-loading "./reduce.img(tayrevrt)"
Fast-loading "./reduce.img(tayimpl)"
Fast-loading "./reduce.img(taypart)"
+++ cfracall compiled, 135 + 80 bytes
+++ cfrac_ratpoly compiled, 155 + 80 bytes
+++ longdiv compiled, 183 + 76 bytes
+++ longdivdeg compiled, 27 + 28 bytes
+++ longdivlterm compiled, 34 + 32 bytes
+++ cfrac_nonratpoly compiled, 525 + 160 bytes
+++ adaptcfrac compiled, 126 + 92 bytes
+++ inv_cfrac_nonratpoly1 compiled, 131 + 76 bytes
+++ inv_cfrac_nonratpoly2 compiled, 144 + 84 bytes
+++ inv_cfracall compiled, 103 + 64 bytes
+++ print!-contfract compiled, 120 + 56 bytes
Completed FASL files for "contfrac"
+++ FASLEND: hits = 1665, misses = 145



*** Compiling contfr ... 


FASLOUT "contfr": IN files;  or type in expressions
When all done, execute FASLEND;
+++ contfract2 compiled, 107 + 56 bytes
+++ !:lessp compiled, 4 + 16 bytes
+++ rd!-fix compiled, 13 + 12 bytes
+++ contfract1 compiled, 90 + 64 bytes
+++ cont!-fract compiled, 28 + 24 bytes
Completed FASL files for "contfr"
+++ FASLEND: hits = 26, misses = 34



*** Compiling primitive ... 


FASLOUT "primitive": IN files;  or type in expressions
When all done, execute FASLEND;
+++ primitivesf compiled, 40 + 16 bytes
+++ coeffgcd compiled, 26 + 12 bytes
+++ solvelnrsys compiled, 53 + 52 bytes
Completed FASL files for "primitive"
+++ FASLEND: hits = 15, misses = 19



*** Compiling pade ... 


FASLOUT "pade": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(solve)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(solve1)"
Fast-loading "./reduce.img(ppsoln)"
Fast-loading "./reduce.img(solvelnr)"
Fast-loading "./reduce.img(glsolve)"
Fast-loading "./reduce.img(solvealg)"
Fast-loading "./reduce.img(solvetab)"
Fast-loading "./reduce.img(quartic)"
+++ taylorp compiled, 4 + 12 bytes
+++ pade compiled, 896 + 180 bytes
Completed FASL files for "pade"
+++ FASLEND: hits = 15, misses = 48

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling rtrace ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "rtrace": IN files;  or type in expressions
When all done, execute FASLEND;
+++ rtr_arv1qbfez6n3 compiled, 6 + 16 bytes
+++ unrtr_imuct3g4mv85 compiled, 6 + 16 bytes
+++ rtrst_iydsgpm4n049 compiled, 6 + 16 bytes
+++ unrtrst_imuct3g4mv85 compiled, 6 + 16 bytes
+++ rtr!* compiled, 59 + 20 bytes
+++ rtrace compiled, 18 + 12 bytes
+++ unrtrace compiled, 18 + 12 bytes
+++ rtraceset compiled, 27 + 24 bytes
+++ rtrace1 compiled, 231 + 148 bytes
+++ re!-rtrace1 compiled, 61 + 48 bytes
+++ unrtrace1 compiled, 37 + 36 bytes
+++ rtrout compiled, 16 + 20 bytes
+++ run!-rtraced!-procedure compiled, 110 + 80 bytes
+++ rtrace!-print compiled, 9 + 16 bytes
+++ rtrace!-setq!-print compiled, 11 + 16 bytes
+++ rtraced!-setq_a1qe17a0y91d compiled, 37 + 32 bytes
+++ rtraced!-setk compiled, 17 + 28 bytes
+++ rdbprint compiled, 18 + 36 bytes
+++ algpri1 compiled, 54 + 40 bytes
+++ algpriform compiled, 50 + 44 bytes
+++ is!-algebraic!? compiled, 24 + 24 bytes
+++ algebraic!-args compiled, 13 + 12 bytes
+++ is!-sform!? compiled, 55 + 24 bytes
+++ is!-sfquot!? compiled, 13 + 12 bytes
+++ algpri2 compiled, 6 + 12 bytes
+++ rdbprin2 compiled, 10 + 24 bytes
+++ rule!-trprint!* compiled, 29 + 36 bytes
+++ trrl compiled, 136 + 84 bytes
+++ trrlid compiled, 91 + 60 bytes
+++ trrules1 compiled, 83 + 32 bytes
+++ untrrl compiled, 80 + 48 bytes
+++ assoc!!2 compiled, 14 + 8 bytes
+++ untrrlid compiled, 44 + 32 bytes
Completed FASL files for "rtrace"
+++ FASLEND: hits = 378, misses = 144
Fast-loading "./reduce.img(rtrace)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling tmprint ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "tmprint": IN files;  or type in expressions
When all done, execute FASLEND;
+++ fmp!-switch compiled, 26 + 28 bytes
+++ texmacsp compiled, 7 + 16 bytes
+++ linelength compiled, 8 + 20 bytes
+++ fancy!-tex compiled, 7 + 24 bytes
+++ fancy!-out!-item compiled, 82 + 64 bytes
+++ set!-fancymode compiled, 27 + 52 bytes
+++ fancy!-output compiled, 97 + 92 bytes
+++ fancy!-out!-header compiled, 17 + 28 bytes
+++ fancy!-out!-trailer compiled, 9 + 24 bytes
+++ fancy!-flush compiled, 124 + 72 bytes
+++ fancy!-special!-symbol compiled, 17 + 24 bytes
+++ fancy!-prin2 compiled, 4 + 12 bytes
+++ fancy!-prin2!* compiled, 192 + 96 bytes
+++ fancy!-last!-symbol compiled, 6 + 12 bytes
+++ red!-char!-downcase not compiled (C version available)
+++ fancy!-prin2number compiled, 16 + 24 bytes
+++ fancy!-prin2number1 compiled, 38 + 36 bytes
+++ fancy!-esc compiled, 19 + 16 bytes
+++ fancy!-lower!-digits compiled, 20 + 28 bytes
+++ fancy!-lower!-digits1 compiled, 129 + 36 bytes
+++ fancy!-lower!-digitstrail compiled, 26 + 12 bytes

*** local variable u in procedure fancy-terpri* not used 
+++ fancy!-terpri!* compiled, 21 + 36 bytes
+++ fancy!-level_sdniqcjau4jc compiled, 24 + 40 bytes
+++ fancy!-begin compiled, 4 + 16 bytes
+++ fancy!-end compiled, 9 + 20 bytes
+++ fancy!-mode compiled, 11 + 20 bytes
+++ fancy!-maprin0 compiled, 10 + 24 bytes
+++ fancy!-maprint compiled, 274 + 124 bytes
+++ fancy!-convert compiled, 23 + 32 bytes
+++ fancy!-print!-function!-arguments compiled, 20 + 36 bytes
+++ fancy!-maprint!-atom compiled, 151 + 96 bytes
+++ fancy!-print!-indexlist compiled, 6 + 16 bytes
+++ fancy!-print!-indexlist1 compiled, 45 + 56 bytes
+++ fancy!-print!-one!-index compiled, 45 + 60 bytes
+++ fancy!-in!-brackets compiled, 88 + 60 bytes
+++ fancy!-adjust!-bkt!-levels compiled, 24 + 12 bytes
+++ fancy!-exptpri compiled, 183 + 112 bytes
+++ fancy!-inprint compiled, 272 + 160 bytes
+++ fancy!-inprint1 compiled, 43 + 36 bytes
+++ fancy!-inprint2 compiled, 51 + 36 bytes

*** local variable p in procedure fancy-inprintlist not used 
+++ fancy!-inprintlist compiled, 81 + 52 bytes
+++ fancy!-oprin compiled, 94 + 88 bytes
+++ fancy!-condpri0 compiled, 4 + 16 bytes
+++ fancy!-condpri compiled, 94 + 68 bytes
+++ fancy!-revalpri compiled, 5 + 16 bytes
+++ fancy!-unquote compiled, 44 + 16 bytes
+++ fancy!-patpri compiled, 15 + 24 bytes
+++ fancy!-boolvalpri compiled, 4 + 12 bytes
+++ fancy!-quotpri compiled, 72 + 60 bytes
+++ fancy!-maprint!-tex!-bkt compiled, 74 + 64 bytes
+++ fancy!-fail compiled, 9 + 24 bytes
+++ fancy!-prinfit compiled, 141 + 76 bytes
+++ print_format compiled, 14 + 16 bytes
+++ fancy!-print!-format compiled, 50 + 32 bytes

*** local variable y in procedure fancy-print-format1 not used 
+++ fancy!-print!-format1 compiled, 128 + 64 bytes
+++ fancy!-prefix!-operator compiled, 28 + 32 bytes
+++ fancy!-sqrtpri compiled, 5 + 16 bytes
+++ fancy!-sqrtpri!* compiled, 57 + 60 bytes
+++ fancy!-sub compiled, 104 + 92 bytes

*** local variable n in procedure fancy-factorial not used 
+++ fancy!-factorial compiled, 47 + 60 bytes
+++ fancy!-binomial compiled, 53 + 48 bytes
+++ fancy!-intpri compiled, 146 + 100 bytes
+++ fancy!-height compiled, 106 + 40 bytes
+++ fancy!-sumpri!* compiled, 160 + 104 bytes
+++ fancy!-sumpri compiled, 6 + 16 bytes
+++ fancy!-prodpri compiled, 6 + 16 bytes
+++ fancy!-limpri compiled, 88 + 84 bytes
+++ fancy!-listpri compiled, 43 + 56 bytes
+++ fancy!-sqreform compiled, 5 + 16 bytes
+++ fancy!-dfpri compiled, 55 + 56 bytes
+++ fancy!-partialdfpri compiled, 6 + 16 bytes
+++ fancy!-dfpri0 compiled, 151 + 64 bytes

*** local variable l in procedure fancy-dfpriindexed not used 
+++ fancy!-dfpriindexed compiled, 31 + 36 bytes
+++ fancy!-dfpriindexedx compiled, 68 + 16 bytes
+++ fancy!-rdprin compiled, 35 + 32 bytes
+++ fancy!-rdprin1 compiled, 123 + 48 bytes
+++ fancy!-cmpxprin compiled, 39 + 40 bytes
+++ fancy!-dn!:prin compiled, 21 + 20 bytes
+++ fancy!-setmatpri compiled, 4 + 12 bytes
+++ fancy!-matpri compiled, 4 + 12 bytes
+++ fancy!-matpri1 compiled, 16 + 24 bytes
+++ fancy!-matpri2 compiled, 461 + 88 bytes
+++ fancy!-matpri3 compiled, 83 + 56 bytes
+++ fancy!-matpriflat compiled, 21 + 44 bytes

*** local variable p in procedure fancy-matpriflat1 not used 
+++ fancy!-matpriflat1 compiled, 113 + 80 bytes

*** local variable p in procedure fancy-matfit not used 
+++ fancy!-matfit compiled, 129 + 60 bytes
+++ fancy!-sin compiled, 19 + 36 bytes
+++ fancy!-cos compiled, 19 + 36 bytes
+++ fancy!-tan compiled, 19 + 36 bytes
+++ fancy!-cot compiled, 19 + 36 bytes
+++ fancy!-sec compiled, 19 + 36 bytes
+++ fancy!-csc compiled, 19 + 36 bytes
+++ fancy!-asin compiled, 19 + 36 bytes
+++ fancy!-acos compiled, 19 + 36 bytes
+++ fancy!-atan compiled, 19 + 36 bytes
+++ fancy!-sinh compiled, 19 + 36 bytes
+++ fancy!-cosh compiled, 19 + 36 bytes
+++ fancy!-tanh compiled, 19 + 36 bytes
+++ fancy!-coth compiled, 19 + 36 bytes
+++ fancy!-exp compiled, 19 + 36 bytes
+++ fancy!-log compiled, 19 + 36 bytes
+++ fancy!-ln compiled, 19 + 36 bytes
+++ fancy!-max compiled, 19 + 36 bytes
+++ fancy!-min compiled, 19 + 36 bytes
+++ fancy!-repart compiled, 19 + 36 bytes
+++ fancy!-impart compiled, 19 + 36 bytes
+++ fancy!-bessel compiled, 35 + 36 bytes
+++ fancy!-hypergeometric compiled, 128 + 84 bytes
+++ fancy!-meijerg compiled, 146 + 68 bytes
+++ fancy!-texsym compiled, 50 + 48 bytes
+++ fancy!-texstring compiled, 48 + 32 bytes

*** nonlocal use of undeclared variable content in procedure fancy-texbox 
+++ content declared fluid
+++ fancy!-texbox compiled, 127 + 72 bytes
+++ fancy!-texfbox compiled, 24 + 40 bytes
+++ tm_bprompt compiled, 101 + 92 bytes
+++ tm_eprompt compiled, 14 + 28 bytes
+++ tm_coloredp compiled, 6 + 12 bytes
+++ tm_nconcn compiled, 11 + 8 bytes
+++ tm_prunelhead compiled, 11 + 8 bytes
+++ tm_pruneltail compiled, 8 + 12 bytes
+++ tm_pslp compiled, 5 + 16 bytes
+++ tm_color compiled, 68 + 40 bytes
+++ tm_uncolor compiled, 47 + 40 bytes
+++ tm_setpchar!-psl compiled, 10 + 24 bytes
+++ tm_setpchar!-csl compiled, 10 + 24 bytes
+++ tm_yesp!-psl compiled, 67 + 52 bytes
+++ tm_compute!-prompt!-string compiled, 4 + 16 bytes

*** nonlocal use of undeclared variable breaklevel* in procedure tm_break_prompt
 
+++ breaklevel!* declared fluid
+++ tm_break_prompt compiled, 10 + 32 bytes
Completed FASL files for "tmprint"
+++ FASLEND: hits = 1633, misses = 630
Fast-loading "./reduce.img(tmprint)"

+++ setpchar redefined

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling libreduce ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "libreduce": IN files;  or type in expressions
When all done, execute FASLEND;
+++ lr_sprint compiled as link to prin2
+++ lr_aprint compiled, 4 + 16 bytes
+++ lr_result compiled, 7 + 20 bytes
+++ lr_statcounter compiled, 7 + 20 bytes
+++ lr_mode compiled, 7 + 20 bytes
+++ lr_posttext compiled, 7 + 20 bytes
+++ lr_printer compiled, 15 + 24 bytes
+++ add2resultbuf compiled, 34 + 64 bytes
+++ lr_pslp compiled, 5 + 16 bytes
+++ lr_color compiled, 62 + 24 bytes
+++ lr_uncolor compiled, 36 + 16 bytes
+++ lr_setpchar!-psl compiled, 10 + 24 bytes
+++ lr_setpchar!-csl compiled, 5 + 20 bytes
+++ lr_yesp!-psl compiled, 67 + 52 bytes
Completed FASL files for "libreduce"
+++ FASLEND: hits = 151, misses = 76
Fast-loading "./reduce.img(libreduce)"

+++ setpchar redefined

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling qepcad ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "qepcad": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(redlog)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(rlami)"
Fast-loading "./reduce.img(rlsched)"
Fast-loading "./reduce.img(rlcont)"
Fast-loading "./reduce.img(rlhelp)"
Fast-loading "./reduce.img(ofsf)"
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"
Fast-loading "./reduce.img(linalg)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(lamatrix)"
Fast-loading "./reduce.img(gramschm)"
Fast-loading "./reduce.img(ludecom)"
Fast-loading "./reduce.img(cholesky)"
Fast-loading "./reduce.img(svd)"
Fast-loading "./reduce.img(simplex)"
Fast-loading "./reduce.img(tadjoint)"
Fast-loading "./reduce.img(factor)"
Fast-loading "./reduce.img(ezgcd)"
Fast-loading "./reduce.img(alphas)"
Fast-loading "./reduce.img(coeffts)"
Fast-loading "./reduce.img(ezgcdf)"
Fast-loading "./reduce.img(facmisc)"
Fast-loading "./reduce.img(facstr)"
Fast-loading "./reduce.img(interfac)"
Fast-loading "./reduce.img(linmodp)"
Fast-loading "./reduce.img(mhensfns)"
Fast-loading "./reduce.img(modpoly)"
Fast-loading "./reduce.img(multihen)"
Fast-loading "./reduce.img(unihens)"
Fast-loading "./reduce.img(bigmodp)"
Fast-loading "./reduce.img(degsets)"
Fast-loading "./reduce.img(facprim)"
Fast-loading "./reduce.img(facmod)"
Fast-loading "./reduce.img(facuni)"
Fast-loading "./reduce.img(imageset)"
Fast-loading "./reduce.img(pfactor)"
Fast-loading "./reduce.img(vecpoly)"
Fast-loading "./reduce.img(pfacmult)"
Fast-loading "./reduce.img(cgb)"
Fast-loading "./reduce.img(gb)"
Fast-loading "./reduce.img(dp)"
Fast-loading "./reduce.img(gbsc)"
Fast-loading "./reduce.img(ofsfsiat)"
Fast-loading "./reduce.img(ofsfsism)"
Fast-loading "./reduce.img(ofsfbnf)"
Fast-loading "./reduce.img(ofsfqe)"
Fast-loading "./reduce.img(ofsfopt)"
Fast-loading "./reduce.img(ofsfgs)"
Fast-loading "./reduce.img(ofsfmisc)"
Fast-loading "./reduce.img(ofsfcad)"
Fast-loading "./reduce.img(ofsfcadproj)"
Fast-loading "./reduce.img(ofsfanuex)"
Fast-loading "./reduce.img(ofsfxopt)"
Fast-loading "./reduce.img(ofsfdet)"
Fast-loading "./reduce.img(ofsftfc)"
Fast-loading "./reduce.img(ofsfhqe)"
+++ rl_qepcad!$ compiled, 12 + 32 bytes
+++ rl_qepcad compiled, 5 + 12 bytes
+++ qepcad_qepcad compiled, 65 + 64 bytes
+++ qepcad_qepcad1 compiled, 288 + 220 bytes
+++ qepcad_cadprint1 compiled, 54 + 60 bytes
+++ qepcad_cadprint2 compiled, 58 + 60 bytes
+++ qepcad_cadprinttval compiled, 17 + 32 bytes
+++ qepcad_cadprintop compiled, 11 + 20 bytes
+++ qepcad_ppricadtimes compiled, 37 + 32 bytes
Completed FASL files for "qepcad"
+++ FASLEND: hits = 91, misses = 93
Fast-loading "./reduce.img(qepcad)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling utf8 ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "utf8": IN files;  or type in expressions
When all done, execute FASLEND;
+++ prin2!* compiled, 8 + 20 bytes
+++ utf8_prin2!* compiled, 164 + 116 bytes
+++ scprint compiled, 21 + 36 bytes
+++ utf8_scprint compiled, 86 + 44 bytes
+++ utf8_dots compiled, 15 + 20 bytes
+++ utf8_tyo compiled, 16 + 8 bytes
+++ utf8_prin2 compiled as link to prin2
+++ utf8_indexsplit compiled, 47 + 16 bytes
+++ utf8_subscript compiled, 6 + 12 bytes
+++ exptpri compiled, 8 + 20 bytes
+++ utf8_exptpri compiled, 131 + 76 bytes
+++ utf8_supmixp compiled, 10 + 20 bytes
+++ utf8_supscript compiled, 6 + 12 bytes
+++ utf8_priabs compiled, 12 + 28 bytes
+++ utf8_pripartial compiled, 10 + 24 bytes
+++ utf8_pridiff compiled, 94 + 56 bytes
+++ utf8_pripowpartial compiled, 11 + 20 bytes
+++ utf8_priint compiled, 38 + 44 bytes
Completed FASL files for "utf8"
+++ FASLEND: hits = 291, misses = 145
Fast-loading "./reduce.img(utf8)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling lpdo ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "lpdo": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(redlog)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(rlami)"
Fast-loading "./reduce.img(rlsched)"
Fast-loading "./reduce.img(rlcont)"
Fast-loading "./reduce.img(rlhelp)"
+++ lpdo_set compiled, 48 + 36 bytes
+++ lpdo_weyl compiled, 16 + 28 bytes
+++ lpdo_rat compiled, 71 + 44 bytes
+++ lpdo_templp compiled, 14 + 20 bytes

*** local variable x in procedure quotelpdo not used 
+++ quotelpdo compiled, 2 + 12 bytes
+++ lpdo_pri!*lpdo compiled, 5 + 16 bytes
+++ lpdo_reval compiled, 10 + 20 bytes
+++ lpdo_simp compiled, 119 + 68 bytes
+++ lpdo_xpnd compiled, 22 + 28 bytes
+++ lpdo_txpnd compiled, 6 + 20 bytes
+++ lpdo_txpnd1 compiled, 68 + 16 bytes
+++ lpdo_polxpnd1 compiled, 322 + 48 bytes
+++ lpdo_tupl compiled, 159 + 20 bytes
+++ lpdo_mkid compiled, 11 + 12 bytes
+++ lpdo_simpatom compiled, 58 + 52 bytes
+++ lpdo_gettype compiled, 12 + 16 bytes
+++ lpdo_resimp compiled, 4 + 16 bytes
+++ lpdo_prep compiled, 49 + 20 bytes
+++ lpdo_preplpdotimes compiled, 42 + 32 bytes
+++ lpdo_mk!*lpdo compiled, 13 + 20 bytes
+++ lpdo_simp!*lpdo compiled, 9 + 12 bytes
+++ lpdo_simppartial compiled, 13 + 20 bytes
+++ lpdo_partialchk compiled, 9 + 20 bytes
+++ lpdo_simplpdotimes compiled, 38 + 16 bytes
+++ lpdo_multn compiled, 44 + 24 bytes
+++ lpdo_mult compiled, 4 + 12 bytes
+++ lpdo_cartprod compiled, 153 + 12 bytes
+++ lpdo_commute compiled, 9 + 12 bytes
+++ lpdo_commute2 compiled, 44 + 16 bytes
+++ lpdo_commute21 compiled, 186 + 48 bytes
+++ lpdo_ak compiled, 21 + 24 bytes
+++ lambda_m32a7sdw6p94 compiled, 4 + 12 bytes
+++ lpdo_compact compiled, 86 + 28 bytes
+++ lpdo_alinsert compiled, 30 + 16 bytes
+++ lambda_m32a7sdw6p94 compiled, 4 + 12 bytes
+++ lpdo_compactpt compiled, 71 + 40 bytes
+++ lpdo_alinsertpt compiled, 21 + 12 bytes
+++ lpdo_simpdifference compiled, 11 + 20 bytes
+++ lpdo_simpplus compiled, 38 + 16 bytes
+++ lpdo_addn compiled, 43 + 20 bytes
+++ lpdo_add compiled, 4 + 12 bytes
+++ lpdo_simpminus compiled, 4 + 16 bytes
+++ lpdo_minus compiled, 36 + 12 bytes
+++ lpdo_simpquotient compiled, 9 + 16 bytes
+++ lpdo_quot compiled, 55 + 24 bytes
+++ lpdo_simptimes compiled, 10 + 16 bytes
+++ lpdo_simpabs compiled, 10 + 16 bytes
+++ lpdo_simpexpt compiled, 79 + 48 bytes
+++ lpdo_simpdiff compiled, 5 + 12 bytes
+++ lpdo_simpdiff1 compiled, 98 + 64 bytes
+++ lpdo_idlp compiled, 13 + 12 bytes
+++ lpdo_smkn compiled, 17 + 20 bytes
+++ lpdo_partialv compiled, 21 + 20 bytes
+++ lpdo_partialdeg compiled, 29 + 28 bytes
+++ lpdo_partialbas compiled, 23 + 28 bytes
+++ lpdo_df compiled, 20 + 28 bytes
+++ lpdo_d2c compiled, 6 + 20 bytes
+++ lpdo_c2d compiled, 6 + 20 bytes
+++ lpdo_sub compiled, 59 + 8 bytes
+++ lpdo_exptpt compiled, 27 + 36 bytes
+++ lpdo_ord!$ compiled, 13 + 28 bytes
+++ lpdo_ord compiled, 30 + 16 bytes
+++ lpdo_monord compiled, 20 + 16 bytes
+++ lpdo_sym!$ compiled, 43 + 48 bytes
+++ lpdo_sym compiled, 65 + 64 bytes
+++ lpdo_ptl2sym compiled, 47 + 40 bytes
+++ lpdo_subst compiled, 69 + 24 bytes
+++ lpdo_s!$ compiled, 36 + 40 bytes
+++ lpdo_s compiled, 44 + 32 bytes
+++ lpdo_s1 compiled, 54 + 36 bytes

*** local variable prulel in procedure lpdo_fac$ not used 

*** local variable qrulel in procedure lpdo_fac$ not used 
+++ lpdo_fac!$ compiled, 67 + 48 bytes
+++ lpdo_fac compiled, 132 + 64 bytes
+++ lpdo_p2pp compiled, 11 + 28 bytes
+++ lpdo_q2qq compiled, 13 + 28 bytes
+++ lpdo_faclhsl compiled, 115 + 36 bytes
+++ lpdo_genfunp compiled, 15 + 8 bytes
+++ lpdo_facquantify compiled, 160 + 44 bytes
+++ lpdo_coeffs compiled, 47 + 24 bytes
+++ lpdo_mykernp compiled, 44 + 20 bytes
+++ lpdo_facx!$ compiled, 99 + 60 bytes
+++ lpdo_facx compiled, 212 + 76 bytes
+++ lpdo_absleq compiled, 114 + 52 bytes
+++ lpdo_allcoeffs compiled, 5 + 12 bytes
+++ lpdo_allcoeffs1 compiled, 55 + 20 bytes
+++ lpdo_ylist compiled, 65 + 20 bytes
+++ lpdo_coefs compiled, 16 + 12 bytes

*** local variable y in procedure lpdo_absleq_old not used 
+++ lpdo_absleq_old compiled, 37 + 40 bytes
+++ lpdo_ptl!$ compiled, 15 + 32 bytes
+++ lpdo_ptl compiled, 36 + 24 bytes
+++ lpdo_gp!$ compiled, 27 + 40 bytes
+++ lpdo_gdp!$ compiled, 79 + 48 bytes
+++ lpdo_sym2dp!$ compiled, 25 + 40 bytes
+++ lpdo_sym2dp compiled, 10 + 24 bytes
+++ lpdo_sym2dp1 compiled, 47 + 32 bytes
+++ lpdo_sym2dpv compiled, 37 + 16 bytes
+++ lpdo_mult1 compiled, 143 + 20 bytes
+++ lpdo_hrect!$ compiled, 13 + 28 bytes
+++ lpdo_hrect compiled, 165 + 68 bytes
+++ lpdo_hcirc!$ compiled, 13 + 28 bytes
+++ lpdo_hcirc compiled, 68 + 56 bytes
+++ lpdo_factorize!$ compiled, 43 + 40 bytes
+++ lpdo_factorize compiled, 249 + 96 bytes
+++ lpdo_fixsign compiled, 29 + 28 bytes
+++ lpdoglfac compiled, 13 + 24 bytes
+++ lpdogofac compiled, 21 + 32 bytes
+++ lpdo_factorizex!$ compiled, 89 + 48 bytes
+++ lpdo_factorizex compiled, 139 + 60 bytes
+++ lpdo_argnochk compiled, 35 + 28 bytes
Completed FASL files for "lpdo"
+++ FASLEND: hits = 964, misses = 283
Fast-loading "./reduce.img(lpdo)"
Fast-loading "./reduce.img(ofsf)"
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"
Fast-loading "./reduce.img(linalg)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(lamatrix)"
Fast-loading "./reduce.img(gramschm)"
Fast-loading "./reduce.img(ludecom)"
Fast-loading "./reduce.img(cholesky)"
Fast-loading "./reduce.img(svd)"
Fast-loading "./reduce.img(simplex)"
Fast-loading "./reduce.img(tadjoint)"
Fast-loading "./reduce.img(factor)"
Fast-loading "./reduce.img(ezgcd)"
Fast-loading "./reduce.img(alphas)"
Fast-loading "./reduce.img(coeffts)"
Fast-loading "./reduce.img(ezgcdf)"
Fast-loading "./reduce.img(facmisc)"
Fast-loading "./reduce.img(facstr)"
Fast-loading "./reduce.img(interfac)"
Fast-loading "./reduce.img(linmodp)"
Fast-loading "./reduce.img(mhensfns)"
Fast-loading "./reduce.img(modpoly)"
Fast-loading "./reduce.img(multihen)"
Fast-loading "./reduce.img(unihens)"
Fast-loading "./reduce.img(bigmodp)"
Fast-loading "./reduce.img(degsets)"
Fast-loading "./reduce.img(facprim)"
Fast-loading "./reduce.img(facmod)"
Fast-loading "./reduce.img(facuni)"
Fast-loading "./reduce.img(imageset)"
Fast-loading "./reduce.img(pfactor)"
Fast-loading "./reduce.img(vecpoly)"
Fast-loading "./reduce.img(pfacmult)"
Fast-loading "./reduce.img(cgb)"
Fast-loading "./reduce.img(gb)"
Fast-loading "./reduce.img(dp)"
Fast-loading "./reduce.img(gbsc)"
Fast-loading "./reduce.img(ofsfsiat)"
Fast-loading "./reduce.img(ofsfsism)"
Fast-loading "./reduce.img(ofsfbnf)"
Fast-loading "./reduce.img(ofsfqe)"
Fast-loading "./reduce.img(ofsfopt)"
Fast-loading "./reduce.img(ofsfgs)"
Fast-loading "./reduce.img(ofsfmisc)"
Fast-loading "./reduce.img(ofsfcad)"
Fast-loading "./reduce.img(ofsfcadproj)"
Fast-loading "./reduce.img(ofsfanuex)"
Fast-loading "./reduce.img(ofsfxopt)"
Fast-loading "./reduce.img(ofsfdet)"
Fast-loading "./reduce.img(ofsftfc)"
Fast-loading "./reduce.img(ofsfhqe)"

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(remake)"
Fast-loading "./reduce.img(user)"



*** Compiling mma ... 

Fast-loading "./reduce.img(compiler)"

FASLOUT "mma": IN files;  or type in expressions
When all done, execute FASLEND;
Fast-loading "./reduce.img(redlog)"
Fast-loading "./reduce.img(rltools)"
Fast-loading "./reduce.img(groebner)"
Fast-loading "./reduce.img(dipoly)"
Fast-loading "./reduce.img(a2dip)"
Fast-loading "./reduce.img(bcoeff)"
Fast-loading "./reduce.img(dip2a)"
Fast-loading "./reduce.img(dipoly1)"
Fast-loading "./reduce.img(dipvars)"
Fast-loading "./reduce.img(expvec)"
Fast-loading "./reduce.img(torder)"
Fast-loading "./reduce.img(vdp2dip)"
Fast-loading "./reduce.img(vdpcom)"
Fast-loading "./reduce.img(condense)"
Fast-loading "./reduce.img(dipprint)"
Fast-loading "./reduce.img(grinterf)"
Fast-loading "./reduce.img(grinter2)"
Fast-loading "./reduce.img(buchbg)"
Fast-loading "./reduce.img(groebcri)"
Fast-loading "./reduce.img(groesolv)"
Fast-loading "./reduce.img(groebopt)"
Fast-loading "./reduce.img(groebsea)"
Fast-loading "./reduce.img(groebsor)"
Fast-loading "./reduce.img(groebspa)"
Fast-loading "./reduce.img(groebfac)"
Fast-loading "./reduce.img(groebidq)"
Fast-loading "./reduce.img(kredelw)"
Fast-loading "./reduce.img(traverso)"
Fast-loading "./reduce.img(hille)"
Fast-loading "./reduce.img(groebnr2)"
Fast-loading "./reduce.img(groebman)"
Fast-loading "./reduce.img(glexconv)"
Fast-loading "./reduce.img(groebmes)"
Fast-loading "./reduce.img(groebrst)"
Fast-loading "./reduce.img(groebtra)"
Fast-loading "./reduce.img(groeweak)"
Fast-loading "./reduce.img(hilberts)"
Fast-loading "./reduce.img(hilbertp)"
Fast-loading "./reduce.img(hggroeb)"
Fast-loading "./reduce.img(kuechl)"
Fast-loading "./reduce.img(greduo)"
Fast-loading "./reduce.img(ioto)"
Fast-loading "./reduce.img(lto)"
Fast-loading "./reduce.img(sfto)"
Fast-loading "./reduce.img(rlami)"
Fast-loading "./reduce.img(rlsched)"
Fast-loading "./reduce.img(rlcont)"
Fast-loading "./reduce.img(rlhelp)"
Fast-loading "./reduce.img(ofsf)"
Fast-loading "./reduce.img(cl)"
Fast-loading "./reduce.img(clsimpl)"
Fast-loading "./reduce.img(clbnf)"
Fast-loading "./reduce.img(clnf)"
Fast-loading "./reduce.img(clqe)"
Fast-loading "./reduce.img(cltab)"
Fast-loading "./reduce.img(clmisc)"
Fast-loading "./reduce.img(clresolv)"
Fast-loading "./reduce.img(linalg)"
Fast-loading "./reduce.img(matrix)"
Fast-loading "./reduce.img(matsm)"
Fast-loading "./reduce.img(matpri)"
Fast-loading "./reduce.img(extops)"
Fast-loading "./reduce.img(bareiss)"
Fast-loading "./reduce.img(det)"
Fast-loading "./reduce.img(glmat)"
Fast-loading "./reduce.img(nullsp)"
Fast-loading "./reduce.img(rank)"
Fast-loading "./reduce.img(nestdom)"
Fast-loading "./reduce.img(resultnt)"
Fast-loading "./reduce.img(polydiv)"
Fast-loading "./reduce.img(cofactor)"
Fast-loading "./reduce.img(lamatrix)"
Fast-loading "./reduce.img(gramschm)"
Fast-loading "./reduce.img(ludecom)"
Fast-loading "./reduce.img(cholesky)"
Fast-loading "./reduce.img(svd)"
Fast-loading "./reduce.img(simplex)"
Fast-loading "./reduce.img(tadjoint)"
Fast-loading "./reduce.img(factor)"
Fast-loading "./reduce.img(ezgcd)"
Fast-loading "./reduce.img(alphas)"
Fast-loading "./reduce.img(coeffts)"
Fast-loading "./reduce.img(ezgcdf)"
Fast-loading "./reduce.img(facmisc)"
Fast-loading "./reduce.img(facstr)"
Fast-loading "./reduce.img(interfac)"
Fast-loading "./reduce.img(linmodp)"
Fast-loading "./reduce.img(mhensfns)"
Fast-loading "./reduce.img(modpoly)"
Fast-loading "./reduce.img(multihen)"
Fast-loading "./reduce.img(unihens)"
Fast-loading "./reduce.img(bigmodp)"
Fast-loading "./reduce.img(degsets)"
Fast-loading "./reduce.img(facprim)"
Fast-loading "./reduce.img(facmod)"
Fast-loading "./reduce.img(facuni)"
Fast-loading "./reduce.img(imageset)"
Fast-loading "./reduce.img(pfactor)"
Fast-loading "./reduce.img(vecpoly)"
Fast-loading "./reduce.img(pfacmult)"
Fast-loading "./reduce.img(cgb)"
Fast-loading "./reduce.img(gb)"
Fast-loading "./reduce.img(dp)"
Fast-loading "./reduce.img(gbsc)"
Fast-loading "./reduce.img(ofsfsiat)"
Fast-loading "./reduce.img(ofsfsism)"
Fast-loading "./reduce.img(ofsfbnf)"
Fast-loading "./reduce.img(ofsfqe)"
Fast-loading "./reduce.img(ofsfopt)"
Fast-loading "./reduce.img(ofsfgs)"
Fast-loading "./reduce.img(ofsfmisc)"
Fast-loading "./reduce.img(ofsfcad)"
Fast-loading "./reduce.img(ofsfcadproj)"
Fast-loading "./reduce.img(ofsfanuex)"
Fast-loading "./reduce.img(ofsfxopt)"
Fast-loading "./reduce.img(ofsfdet)"
Fast-loading "./reduce.img(ofsftfc)"
Fast-loading "./reduce.img(ofsfhqe)"
+++ rl_mma!$ compiled, 12 + 32 bytes
+++ rl_mma compiled, 5 + 12 bytes
+++ mma_mma compiled, 76 + 72 bytes

*** local variable w in procedure mma_mma1 not used 

*** local variable free in procedure mma_mma1 not used 
+++ mma_mma1 compiled, 198 + 180 bytes
+++ mma_cadprint compiled, 27 + 44 bytes
+++ mma_cadprint1 compiled, 52 + 56 bytes
+++ mma_cadprint2 compiled, 58 + 60 bytes
+++ mma_cadprinttval compiled, 9 + 24 bytes
+++ mma_cadprintop compiled, 19 + 32 bytes
+++ mma_scprint compiled, 5 + 20 bytes
+++ mma_myscprint compiled, 10 + 24 bytes
Completed FASL files for "mma"
+++ FASLEND: hits = 112, misses = 100
Fast-loading "./reduce.img(mma)"
Recompilation complete

The system is about to do a restart...
Reduce (Free CSL version), 23-Apr-13 ...
Fast-loading "./reduce.img(user)"


nil


"**** **** REDUCE FULLY REBUILD **** ****"

