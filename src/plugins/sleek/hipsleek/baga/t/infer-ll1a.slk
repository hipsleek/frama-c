data node {
     node next;
}.

pred ll<n> == self=null & n=0
     or self::node<q> * q::ll<n-1>
     inv n>=0.

// ll_body |- n>=0
// n>=0 |- ll_body -> fail
//
// base case: n>=0 & H1(self) & H2(n)|- self=null & n=0
// <=> H1(self) == self=null & H2(n) == n=0
// n>=0 & H1(self) & H2(n) <=> self=null & n=0
//
// rec case:  n>=0 & H1(self) & H2(n) |- self!=null & n-1>=0
// <=> H1(self) == self!=null & H2(n) == n>=1
// n>=0 & H1(self) & H2(n) <=> self!=null & n>=1
//
// new inv: (self=null & n=0) | (self!=null & n>=1)
// check: new inv |- ll_body -> valid

