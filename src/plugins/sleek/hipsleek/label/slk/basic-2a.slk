/*
// (1)
checkentail true & ["y","":y=0; "":y>0] |- false.
// overlapping branches (including common) are combined

checkentail true & ["y","x":y=0; "x":y>0] |- false.
// overlapping branches (including common) are combined
*/

checkentail true & ["y","x":y>1; "x":y>2; "z":y>3] |- false.
// overlapping branches (including common) are combined

/*
# basic-2a.slk --esl

checkentail true & ["y","x":y>1; "x":y>2; "z":y>3] |- false.

 should only have 2 unsat checks for y>1 & y>2  and y>3
 proof_id 2 is redundant

id: 1<:0; prover: OMEGA CALCULATOR; loc: _0:0_0:0; kind: Sleek_Entail(1)
 Sat:  2<y & 1<y
 res: SAT
 -------------------- 
 id: 2<:0; prover : CACHED ; loc: _0:0_0:0; kind: Sleek_Entail(1)
 Sat:  2<y & 1<y
 res: SAT
 -------------------- 
 id: 3<:0; prover: OMEGA CALCULATOR; loc: _0:0_0:0; kind: Sleek_Entail(1)
 Sat:  3<y
 res: SAT
 

*/