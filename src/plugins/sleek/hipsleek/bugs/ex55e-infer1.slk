data node {
	int val; 
	node next;	
}.

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> 
  inv n >= 0.

HeapPred H1(node x).
HeapPred H2(node x, int n).


// (9)
infer [H1]  H1(y) |- (exists a: y::node<a,null> & a>0).
print residue.


// (9)
infer [H1]  H1(y) |- y::node<a,null> & a>0.
print residue.


// (9)
infer [H1]  H1(y) |- y::node<a,null> .
print residue.
