data node { node next; }.

pred ls<p> == self = p 
	or self::node<next = r> * r::ls<p> & self!=p
	inv true.

checkentail a::ls<b> * a::node<z> * a::ls<z> |- a = b .

checkentail  a::node<z> * a::ls<z>  & a=b |- a = b .

checkentail a::node<q> * q::ls<b> * a::node<z> * a::ls<z> & a!=b |- a = b .

checkentail a::ls<b> * a::node<z> * a::ls<z> |- a = b & b = z.

checkentail a::node<z> * a::ls<z> & a = b |- b = z.

checkentail a::node<r> * r::ls<b> * a::node<z> * a::ls<z> & a != b |- false. //b = z.
