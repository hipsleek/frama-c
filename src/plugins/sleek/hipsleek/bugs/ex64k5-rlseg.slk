data node {
     int val;
     node next;
}.

// this is unusual predicate definition

pred rlseg<p:node> == self=p
  or self::node<_,q> * q::rlseg<p>.

lemma_safe "three" self::node<_,q>*q::rlseg<p>  -> self::rlseg<p1>* p1::node<_,p>.
// fail <==

//lemma_safe "three" self::rlseg<p1>* p1::node<_,p> <-> self::node<_,q>*q::rlseg<p> . 
// fail ==>
/*
# ex64k5.slk



!!! **astsimp.ml#4586:fnames:[self,p1,p]	 
"==>" implication: : Fail. (cex)(may) cause: OrL[
UnionR[UnionR[residue is forbidden.(1),residue is forbidden.(1)],residue is forbidden.(1)],
valid
]
	 "==>" implication: : Valid.

!!! **solver.ml#13660:lhs contra?:None	 "==>" implication: : Fail. (cex)(may) cause: OrL[
residue is forbidden.(1),
valid
]
	 "==>" implication: : Valid.


*/