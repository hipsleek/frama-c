data node{
 node next;
}.

relation R(node a).
HeapPred H(node a).


// (5) valid
//infer[R,z,inf_p]
//infer[fld5,z,inf_p]
infer[R,z]
R(fld5) & inf_p=null  & x!=null
|-x!=z & inf_p=z & fld5=null
  .
print residue.

/*
# ex52a4.slk

Entail (1) : Valid. 

Residue:
 <1>emp&x!=null & inf_p=null & R(fld5) & z=0 & fld5=null&{FLOW,(20,21)=__norm#E}[]
 inferred pure: [z=0]
 inferred rel: [RELASS [R]: ( R(fld5)) -->  fld5=null]

(==omega.ml#1151==)
infer_pure_m_1@6@5@4@3
infer_pure_m_1 inp1 :estate :( pr_entail_state_short : emp&x!=null & inf_p=null & R(fld5)&{FLOW,(20,21)=__norm#E}[]
 es_heap:emp
 es_infer_vars: [z]
 es_infer_vars_rel: [R],[z])
infer_pure_m_1 inp2 :lhs xpure : true & x!=null & inf_p=null
infer_pure_m_1 inp3 :lhs xpure0 : x!=null & inf_p=null & R(fld5)
infer_pure_m_1 inp4 :rhs xpure : fld5=null & inf_p=z & x!=z
infer_pure_m_1 inp5 :inf vars :[fld5,z]
infer_pure_m_1@6 EXIT:(new es,inf pure,rel_ass) :(None,Some( z=0 & fld5=null),[])

!!! **infer.ml#1367:RelInferred (rel_ass):[RELASS [R]: ( R(fld5)) -->  fld5=null]
(==infer.ml#1572==)
infer_pure_m_1@5@4@3
infer_pure_m_1 inp1 :estate :( pr_entail_state_short : emp&x!=null & inf_p=null & R(fld5)&{FLOW,(20,21)=__norm#E}[]
 es_heap:emp
 es_infer_vars: [z]
 es_infer_vars_rel: [R],[z])
infer_pure_m_1 inp2 :lhs xpure : R(fld5) & x!=null & inf_p=null
infer_pure_m_1 inp3 :lhs xpure0 : x!=null & inf_p=null & R(fld5)
infer_pure_m_1 inp4 :rhs xpure : fld5=null & inf_p=z & x!=z
infer_pure_m_1 inp5 :inf vars :[z]
infer_pure_m_1@5 EXIT:(new es,inf pure,rel_ass) :(None,Some( z=0),[( pr_entail_state_short : emp&inf_p=0 & fld5=null & R(fld5) & 1<=x&{FLOW,(20,21)=__norm#E}[]
 es_heap:emp
 es_infer_vars: [z]
 es_infer_vars_rel: [R],[RELASS [R]: ( R(fld5)) -->  fld5=null])])

*/