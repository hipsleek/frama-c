/**
 Left-leaning Red Black Tree
 Entailment testing.
 @author: Vu An Hoa
 */

data node {
	int val;
	int color; /* 0 for red, 1 for black */
	node left;
	node right;
}.

/* Red black tree with case analysis */
pred rbc<n, cl, bh, c> == self = null & n = 0 & bh = 1 & cl = 1 & c = 0
	or self::node<v, 1, l, r> * l::rbc<ln, 1, bh - 1, _> * r::rbc<rn, 1, bh - 1, _> 
       & cl = 1 & n = 1 + ln + rn & c = 1
    or self::node<v, 1, l, r> * l::rbc<ln, 0, bh - 1, _> * r::rbc<rn, 1, bh - 1, _>
       & cl = 1 & n = 1 + ln + rn & c = 2
    or self::node<v, 1, l, r> * l::rbc<ln, 0, bh - 1, _> * r::rbc<rn, 0, bh - 1, _>
       & cl = 1 & n = 1 + ln + rn & c = 3
	or self::node<v, 0, l, r> * l::rbc<ln, 1, bh, _> * r::rbc<rn, 1, bh, _>
	   & cl = 0 & n = 1 + ln + rn & c = 4
	inv n >= 0 & bh >= 1 & 0 <= cl <= 1 & 0 <= c <= 4.
	
pred rbs<n, bh> == 
	self::node<_,0,l,r> * l::rbc<ln,0,bh,4> * r::rbc<rn,1,bh,_> & ln + rn + 1 = n
	inv n >= 1 & bh >= 1 & self!=null.

//checkentail h::node<_,0,l,r> * l::rbc<_,1,bh,1> * r::rbc<_,1,bh,1> |- h::rbc<_,0,bh,4>.

//checkentail x::node<a,b,c,d> * y::node<m,n,p,q> & x = y |- a = m & b = n & c = p & d = q.

//checkentail h::node<_,0,lx,rx> * lx::rbc<rn,1,bh,_> * rx::rbc<ln,1,bh,_> & rn + ln + 1 = n - 1 & n >= 1 |- h::rbc<_,_,_,_>.

checkentail h::node<_,0,l,r> * l::rbc<ln,1,bh,1> * r::rbc<rn,1,bh,c> |- 1 <= c <= 3.

checkentail h::node<_,0,l,r> * l::rbc<ln,1,bh,1> * r::rbc<rn,1,bh,c> |- l != null & r != null.

checkentail h::node<_,0,lx,rx> * lx::rbc<ln,1,bh,_> * rx::rbc<rn,1,bh,1> & ln + rn = n
|- h::rbc<n+1,0,bh,4>.

checkentail h::node<_,0,lx,rx> * lx::rbc<ln,1,bh,_> * rx::rbc<rn,1,bh,_> & ln + rn = n |- h::rbc<n+1,0,bh,4>.

checkentail h::node<_,0,lx,rx> * lx::rbc<ln,lc,bh,_> * rx::rbc<rn,1,bh,_> 
            & lc != 0 & ln + rn = n |- h::rbc<n+1,0,bh,4> or h::rbs<n+1,bh>.
 
checkentail h::node<_,0,lx,rx> * lx::rbc<ln,lc,bh,_> * rx::rbc<rn,1,bh,_>
            & lc != 1 & ln + rn = n |- h::rbs<n+1,bh> or h::rbs<n+1,bh>.

// TO CHECK THIS ENTAILMENT, SLEEK MUST KNOW THAT IT NEED TO FORK THE PROBLEM
// INTO THE PREVIOUS TWO ENTAILMENT CHECKING!
checkentail h::node<_,0,lx,rx> * lx::rbc<ln,_,bh,_> * rx::rbc<rn,1,bh,_> 
            & ln + rn = n |- h::rbc<n+1,0,bh,4> or h::rbs<n+1,bh>. 