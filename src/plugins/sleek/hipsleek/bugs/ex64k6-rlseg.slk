data node {
     int val;
     node next;
}.

// this is unusual predicate definition

pred rlseg<p:node> == self=p
  or self::node<_,q> * q::rlseg<p>.

lemma_safe "three" 
  self::node<_,q>*q::rlseg<p> -> self::rlseg<p1>* p1::node<_,p>.
// fail ==>

//lemma_safe "three" self::rlseg<p1>* p1::node<_,p> <-> self::node<_,q>*q::rlseg<p> . 
// fail ==>
/*
# ex64k6.slk

# Why is this failing?

lemma_safe "three" 
  self::node<_,q>*q::rlseg<p> -> self::rlseg<p1>* p1::node<_,p>.


*/