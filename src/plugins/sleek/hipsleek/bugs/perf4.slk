data node { int val ; node next }.
 
pred lseg<p> == self = p 
or self::node<_,r> * r::lseg<p> & self!=p inv true.

checkentail x2::lseg<x1> * x2::lseg<x7> & x1!=x2 |- false.

checkentail
  x1::lseg<x2> * x1::lseg<x3> * x3::lseg<x2>
|- x1 = x2.


checkentail
  x1::lseg<x2> * x1::lseg<x3> * x3::lseg<x2> & ($ x1!=x2)
|- false.

checkentail
//  x3::lseg<x10>


  x2::lseg<x1>

* x2::lseg<x10>

* x2::lseg<x5>
* x5::lseg<x7>
* x7::lseg<x6>
* x6::lseg<x9>
* x9::lseg<x1>

//& (x2 = x10 | x2 = x5 | x2 = x1)
//& ($ x2 != x7) & ($ x2 != x3) & ($ x2 != x6) & ($ x7 != x10) & ($ x3 != x8) & ($ x4 != x9) & ($ x4 != x7) & ($ x4 != x8)
//& ($ x1 != x10)
& ($ x1 != x10)
& ($ x1 != x2)
& ($ x1 != x6)
//& (x1 != x6)
|- false.

checkentail x=0 & ($ x!=y) |- y!=0.

checkentail x=0 & (x!=y) |- y!=0.

checkentail x!=y |- y!=0. 
