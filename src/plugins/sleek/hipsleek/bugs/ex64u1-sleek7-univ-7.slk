data node { int val ; node next }.
//relation Univ(int x).

/*
pred lseg<n, p> == self = p & n = 0
         or self::node<next = r> * r::lseg<n - 1, p>
         inv n >= 0.
*/

pred lseg<n, p> == case {
     n=0 -> [] self = p & n = 0;
//   n!=0 ->  [] self::node<next = r> * r::lseg<n - 1, p>; 
     n!=0 ->  [] self::node<next = r> * r::lseg<b,p> & b=n-1; 
     }
     inv n >= 0.

lemma_unsafe self::lseg<n, p> & n = a + b & a,b >=0 -> self::lseg<a, r> * r::lseg<b, p>.

//lemma self::lseg<n, p> & n>=a & a>=0  -> self::lseg<a, r> * r::lseg<b, p> & n=a+b.
//above cannot work!

// 7
checkentail x::lseg<nn, p> & nn > 10 |- x::lseg<n1, r1> * r1::lseg<n2, r2> * r2::lseg<n3, r3> & n1 >= 1 & n2 >= 2 & n3 >= 5.
// valid

/*
# ex64u1.slk

n has not ben properly renamed..

n=b_114+a_113 & 0<=a_113 & 0<=b_114 & Univ(a_113) & Univ(b_114) & 10<nn & 
r1=r_120 & n1=a_113 & r1=r_120 & r2=p & n2=b_114 & r2=p&
*/
