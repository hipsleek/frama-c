// Valid.Valid.Valid.Valid.Fail.Fail.Valid

data node{int val; node next;}. 

pred ll<n> == self=null & n=0 or
     self::node<_, q> * q::ll<n-1> & n>0
   inv n>=0.


//7
/*
checkentail x::ll<nnn>@A * y::ll<mmm>@A & x=y |- nnn=mmm.
print residue.
expect Valid.

checkentail x::node<nnn,_>@A * y::node<mmm,_>@A & x=y |- nnn=mmm.
print residue.
expect Valid.

checkentail x::node<nnn,_>@A * x::node<mmm,_>@A  |- nnn=mmm.
print residue.
expect Valid.
*/

/*
checkentail x::node<nnn,_>@M * x::node<mmm,_>@M  |- nnn=mmm.
print residue.
expect Valid.
*/


checkentail x::node<nnn,_>@A * x::node<mmm,_>@M  |- nnn=mmm.
print residue.
expect Valid.

checkentail x::node<nnn,_>@M * x::node<mmm,_>@M  |- nnn=mmm.
print residue.
expect Valid.

checkentail x::node<nnn,_>@M * y::node<mmm,_>@M  |- nnn=mmm.
print residue.
expect Fail.

/* 
# ex47a

# why message appears twice?

WARNING: _0:0_0:0:* between overlapping heaps: ( x::node<nnn,Anon_15>@M, x::node<mmm,Anon_16>@M)

WARNING: _0:0_0:0:* between overlapping heaps: ( x::node<nnn,Anon_15>@M, x::node<mmm,Anon_16>@M)
[Warning] False ctx

*/