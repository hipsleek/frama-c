/* singly linked lists */

/* representation of a node */

data node {
	int val; 
	node next;	
}.

pred app5<> == self=null
        or self::node<_,q> * q::app5<>
  inv true.

pred ls<> == self=null
        or self::node<_,q> * q::ls<>
  inv true.

pred ll<> == self=null
        or self::node<_,q> * q::ll<>
  inv true.

pred U<> == self::app5<>
  inv true.

lemma_test self::app5<> <-> self::U<>.
//lemma_test self::U<> <-> self::app5<>. //Fails

pred_reuse [app5][ls].

pred_reuse [*][*].
print views.

/*
# ex21u3c2.slk

pred app5<> == self=null
        or self::node<_,q> * q::app5<>
  inv true.
pred U<> == self::app5<>
  inv true.
lemma_test self::app5<> <-> self::U<>.

# Why can't we prove trivial equality?

!!! 
Entailing lemma lem_13: Fail. Details below:
	 "==>" implication: : Fail. (cex)(may) cause: OrL[
do_unmatched_rhs : self_lem_13_left::U<>@M(must),
valid
]
	 "<==" implication: : Valid.

*/
