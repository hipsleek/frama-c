data node{
	int val;
	node next;
}.

pred zip<y> ==
  self=null & y=null
or self::node<_,p>*y::node<_,q>*p::zip<y>
inv true.

HeapPred P1(node a).
HeapPred P2(node a).

HeapPred G1(node a, node b).
HeapPred G2(node a, node@NI b).

// (1)
infer [P1,P2,G1] P1(a) * P2(b) |- G1(a,b).
print residue.

// (1)
infer [P1,P2,G2] P1(a) * P2(b) |- G2(a,b).
print residue.


infer [P1,P2,G1] G1(a,b) |- P1(a).
print residue.

infer [P1,P2,G1] G1(a,b) |- a::node<_,y>.
print residue.
