/* singly linked lists */

/* representation of a node */

data node {
	int val; 
	node next;	
}.


pred app5<> == self=null
        or self::node<_,q> * q::app5a<>
  inv true.

pred app5a<> == self=null 
	or self::node<_, q> * q::app5b<> 
  inv true.

pred app5b<> == self=null 
	or self::node<_, q> * q::app5<> 
  inv true.

pred_reuse [*][*].

//lemma_test self::app5<> <-> self::app5a<>.

/*
# ex21a6a.slk

pred app5<> == self=null
        or self::node<_,q> * q::app5a<>
  inv true.

pred app5a<> == self=null 
	or self::node<_, q> * q::app5b<> 
  inv true.

pred app5b<> == self=null 
	or self::node<_, q> * q::app5<> 
  inv true.

# deeper mutual recursion requires simultaneous lemma
  proving considerations.

*/
