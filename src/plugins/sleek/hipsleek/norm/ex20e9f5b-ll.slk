data node {
	int val; 
	node next; //#REC;	
}.


HeapPred H(node x,node@NI y).
HeapPred H2(node x,node@NI y,node@NI z).
HeapPred H3(node x,node@NI y).

/*
relAssume H(y,z) --> H2(y,x,z).

relAssume x::node<Anon_14,y> * H2(y,x,z) --> H(x,z).
                   
shape_derive_view [H].

print views.
*/

infer [@classic] y::node<_, _> |- y::node<_, _>.
print residue.

infer [H,H2,@classic] H2(x, y, _) |- H(x, y1).
print residue.

infer [H,H2,@classic] H2(x, y, _) & y = y1 |- H(x, y1).
print residue.

infer [H,H3,@classic] H3(x, y1) |- H(x, y).
print residue.
