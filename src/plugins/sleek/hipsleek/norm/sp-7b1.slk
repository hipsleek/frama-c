data node{
	int val;
	node next;
}.

HeapPred P1(node a).
HeapPred P2(node a).

//infer [] P1(x) |- P1(y) & y=x.
// fails

infer [P1] P1(x) |- P1(yyyy) & yyyy=x.
print residue.

/*
checkentail x::node<_,_> |- y::node<_,_> & y=x.
print residue.
*/
/*
<1>emp&x=y&{FLOW,(19,20)=__norm}[]
 inferred hprel: [P1(y) --> P1(y)]

Seems to be unsound. Did we not fix this
before? Did the recent conversion to emap
cause a problem here? Note that we
can use but must not remove equality from RHS.

How did x=yyyy got added to LHS?

It seems that a do_macth was used, but this isn't
quite right, as we are doing a folding process.
Below the LHS was strengthened with x=yyyy!


 ### action =  InferHeap => ( P1(yyyy), emp)
 ### estate =  P1(x)&{FLOW,(19,20)=__norm}[]
 ### conseq =  P1(yyyy)&{FLOW,(19,20)=__norm}[]


!!!:0: 0: do_match: using  P1(x) to prove  P1(yyyy)
!!!:0: 0: do_match: source LHS:  es_formula: emp&{FLOW,(19,20)=__norm}[]
 es_rhs_eqset: [yyyy:x]
 es_infer_hp_rel: [P1(x) --> P1(x)]
 es_unsat_flag: false
!!!:0: 0: do_match: source RHS:  emp&{FLOW,(19,20)=__norm}[]
!!!:0: 0: do_match (after): LHS:  es_formula: emp&x=yyyy&{FLOW,(19,20)=__norm}[]


*/

