data node{
     int val;
     node next#REC;
}.

pred_extn size[R]<k> ==
   k=0 // base case
   or R::size<i> & k=1+i // recursive case
   inv k>=0.
// infer/sort/der-2.slk
//pred llN<n> == extend ll<> with size[REC]<n> .

HeapPred zipNM(node@RO a, node b, int n:0, int m:1).

relDefn zipNM(x,y,n,m) <->
  x=null & y=null & n=0 & m=0
or x::node<_,p>*y::node<_,q>*zipNM(p,q, n1, m1) & n=n1+1 & m=m1+1.


pred_split [zipNM].


print residue.
