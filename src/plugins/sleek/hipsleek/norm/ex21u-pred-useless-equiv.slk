/* singly linked lists */

/* representation of a node */

data node {
	int val; 
	node next;	
}.

pred ll<> == self = null 
	or self::node<_, q> * q::ll<> 
  inv true.

pred lseg<p> == self = null 
	or self::node<_, q> * q::lseg<p> 
  inv true.

pred app2<y> == self::node<_,null> 
	or self::node<_, q> * q::app2<y> & q!=null 
  inv self!=null.


pred app3<> == self::node<_,null> 
	or self::node<_, q> * q::app3<> & q!=null 
  inv self!=null.

pred app4<y,z> == self::node<_,null> 
	or self::node<_, q> * q::app4<z,y> & q!=null 
  inv self!=null.

pred app5<y,z> == self::node<_,null> 
	or self::node<_, q> * q::app5<z,null> & q!=null 
  inv self!=null.

pred_elim_useless [ll].
//no change

pred_elim_useless [lseg].
//no change

pred_elim_useless [app2].
//elim y

pred_elim_useless [app3].
//no change

pred_elim_useless [app4].
// elim y,z

pred_elim_useless [app5].
// elim y,z

//pred_elim_useless [*].

/*
ex21u

Elim useless parameters..

*/