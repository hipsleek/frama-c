/* singly linked lists */

/* representation of a node */

data node {
	int val; 
	node next;	
}.

/*
pred ll<> == self = null 
	or self::node<_, q> * q::ll<> 
  inv true.

pred app3<> == self::node<_,null> 
	or self::node<_, q> * q::app3<> & q!=null 
  inv self!=null.
*/

pred app4<> == self=null
  or self::node<_,null> 
	or self::node<_, q> * q::app4<> & q!=null 
  inv true.


pred app5<> == self=null
  or self::node<_,q> * q::U<>
  inv true.
  
pred U<> == self=null 
  or self::app5<> & self!=null
  inv true.
  
pred_reuse [*][*].

print views.
pred_reuse_subs [*].
print views.

checkentail self::app4<> |- self::app5<>.

checkentail self::app5<> |- self::app4<>.

checkentail self::app5<> |- self::U<>.
checkentail self::U<> |- self::app5<>.
print views.

/*
# ex21u3.slk

HeapPred U(node y).

pred app5<> == self=null
        or self::node<_,q> * U(q)
  inv true.

lemma_infer [U,@classic] self::app4<> -> self::app5<>.

print residue.

shape_derive_view [U].

print views.

lemma_infer [U,@classic] self::app4<> <- self::app5<>.

print residue.
*/

