data node{
	int val;
	node next;
}.

pred zip<y> ==
  self=null & y=null
or self::node<_,p>*y::node<_,q>*p::zip<q>
inv true.

HeapPred P1(node a).
HeapPred P2(node a).
HeapPred H1(node a).
HeapPred H2(node a).

lemma_unsafe self::zip<y> <- P1(self) * P2(y).
print lemmas.

lemma_unsafe self::zip<y> -> P1(self) * P2(y).
print lemmas.

infer [] P1(x)*P2(y) |- x::zip<y>.
print residue.

/*
# sp-2b.slk

# How come the print lemmas operation are scheduled
entirely after the two lemma_unsafe??

Updated store with unsafe repo.

Updated store with unsafe repo.
Left Lemmas:[Lemma "lem_14":  self::zip<y>@M&{FLOW,(1,22)=__flow}[]==>]
Right Lemmas:[Lemma "lem_13":  self::zip<y>@M&{FLOW,(1,22)=__flow}[]<==]

Left Lemmas:[Lemma "lem_14":  self::zip<y>@M&{FLOW,(1,22)=__flow}[]==>]
Right Lemmas:[Lemma "lem_13":  self::zip<y>@M&{FLOW,(1,22)=__flow}[]<==]

*/

