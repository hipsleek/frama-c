# ex1a.ss (FIXED)

There is no transition but yet an error!

Termination checking result: 
(8)->(8) (ERR: invalid transition)  Term[17; n] ->  Loop{ 1:0}[]

see # ex1a-double-term.ss

checkentail !(v_bool_7_1324') & n'!=0 & 0<=n & n'=n & v_int_8_1322'=2 & 
v_int_8_1319'+1=n' & Term
 |-  emp&v_int_8_1319'<0 & Loop.

Entail 1: Fail.(must) cause: 0<=(1+v_int_8_1319') & (1+v_int_8_1319')!=0 |-  v_int_8_1319'<0. LOCS:[1;2;3] (must-bug)
<1>: (3) (ERR: invalid transition)  Term[] ->  Loop{ 0:0}[]
==================================================
# ex5d-bug

  requires x::lseg<n,null> & n!=0 & Term[n]
  ensures x::lseg<n,y>;
  requires x::lseg<n,null> & n!=0 & x=y & Term[n]
  ensures x::clist<n>;

 Why is there is non-decreasing issue?
 Seems like another multi pre/post issue
 which occurred at Line 19?

 Why did we have Term[7,pv_1448]? What happen to n_?

Termination checking result: 
(15)->(19) (MayTerm ERR: not decreasing)  Term[7; 0; n] ->  Term[7; 1; n_1595]

id: 14; caller: []; line: 19; classic: false; kind: PRE_REC; hec_num: 1; evars: []; infer_vars: [ pv_1447,pv_1448]; c_heap: emp
 checkentail x'::node<Anon_1488,q_1489> * q_1489::lseg{}<flted_7_1487,p_1486>&
v_bool_19_1446' & q_1489!=null & n!=0 & flted_14_1490=null & y'=y & x'=x & 
p_1486=flted_14_1490 & flted_7_1487+1=n & v_node_19_1443'=q_1489 & 
Term[7,pv_1447]&{FLOW,(4,5)=__norm#E}[]
 |-  (exists flted_16_55: v_node_19_1443'::lseg{}<n_1502,flted_16_55>&
flted_16_55=null & n_1502!=0 & v_node_19_1443'=y' & Term[7,pv_1448]&
{FLOW,(4,5)=__norm#E}[]. 
==================================================
# ex5-lemma-proof

. Why is it Lemma_16, not Lemma_17?
. Why this cannot be proven?
. Why is Lemma_14 sufficient?


Entailing lemma lem_16: Fail. (no cex)(must) cause: lor[ emp&flted_17_1472=0 & self_lem_16=q_1473 & flted_17_1472+1=n & 
Anon_1476=Anon_1471 & p_1477=x_1474&{FLOW,(6,10)=__Error#E}[], q_1493::node<Anon_1491,x_1494>&flted_17_1492!=0 & flted_8_1488+
1=flted_17_1492 & p_1487=q_1493 & flted_17_1492+1=n & Anon_1496=Anon_1489 & 
p_1497=q_1490&{FLOW,(6,10)=__Error#E}[]]

Entailing lemma lem_14: Valid.

Valid Lemmas : [lem_14:<==>] added to lemma store.

==================================================
# ex5g-bug

 Why is false post-cond not being checked
 for Loop? There is also no message indicating
 that term-checking is being done.

  requires x::clist<n> & Loop
  ensures true;

Checking procedure append$node~node... 
Procedure append$node~node SUCCESS.

==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
==================================================
