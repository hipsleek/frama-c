(set-logic AUFNIA)
(declare-fun t_618 () Int)
(declare-fun k_619 () Int)
(declare-fun v_int_24_635 () Int)
(declare-fun a () (Array Int Int))
(declare-fun i () Int)
(declare-fun j () Int)
(declare-fun v_int_24_588' () Int)
(declare-fun dom ((Array Int Int) Int Int) Bool)
(declare-fun sumarray ((Array Int Int) Int Int Int) Bool)
(declare-fun dom ((Array Int Int) Int Int) Bool)
(assert (forall (a (Array Int Int)) (low Int) (high Int) (= (dom a low high) true)))
(assert (forall (a (Array Int Int)) (i Int) (j Int) (s Int) (= (sumarray a i j s) (or (and (> i j) (= s 0)) (or (and (= i j) (= s (select a i))) (and (< i j) (sumarray a (+ i 1) j (- s (select a i)))))))))
(assert (forall (a (Array Int Int)) (low Int) (high Int) (= (dom a low high) (or (dom a (- low 1) high) (dom a low (+ high 1))))))
(assert (forall (a (Array Int Int)) (i Int) (j Int) (s Int) (= (sumarray a i j s) (or (and (> i j) (= s 0)) (or (and (= i j) (= s (select a i))) (and (< i j) (sumarray a i (- j 1) (- s (select a j)))))))))
(assert (dom a t_618 k_619))
(assert (<= i j))
(assert (dom a t_618 k_619))
(assert (<= t_618 i))
(assert (<= i k_619))
(assert (dom a t_618 k_619))
(assert (<= t_618 (+ 1 i)))
(assert (<= j k_619))
(assert (sumarray a (+ 1 i) j v_int_24_635))
(assert (= v_int_24_588' (+ v_int_24_635 (select a i))))
(assert (not (sumarray a i j v_int_24_588')))
(check-sat)
