(set-logic AUFNIA)
(declare-fun a_741 () (Array Int Int))
(declare-fun a () (Array Int Int))
(declare-fun v_int_38_740 () Int)
(declare-fun a' () (Array Int Int))
(declare-fun t () Int)
(declare-fun k () Int)
(declare-fun low () Int)
(declare-fun high () Int)
(declare-fun bnd ((Array Int Int) Int Int Int Int) Bool)
(declare-fun dom ((Array Int Int) Int Int) Bool)
(assert (forall (a (Array Int Int)) (low Int) (high Int) (= (dom a low high) true)))
(assert (forall (a (Array Int Int)) (i Int) (j Int) (low Int) (high Int) (= (bnd a i j low high) (or (> i j) (and (<= i j) (forall (?k Int) (or (< ?k i) (or (> ?k j) (and (<= low (select a ?k)) (<= (select a ?k) high))))))))))
;; manual lemma
(assert (forall (a (Array Int Int)) (i Int) (j Int) (low Int) (high Int) (=> (< i j) (=> (bnd a i j low high) (bnd a (+ i 1) (- j 1) low high)))
))
(assert (forall (a (Array Int Int)) (low Int) (high Int) (= (dom a low high) (or (dom a (- low 1) high) (dom a low (+ high 1))))))
(assert (dom a t k))
(assert (bnd a t k low high))
(assert (< t k))
(assert (<= t t))
(assert (<= t k))
(assert (<= k k))
(assert (dom a_741 t k))
(assert (= (select a_741 t) (select a k)))
(assert (= (select a_741 k) (select a t)))
(assert (forall (?m_743 Int) (or (= ?m_743 t) (or (= ?m_743 k) (= (select a_741 ?m_743) (select a ?m_743))))))
(assert (= (+ v_int_38_740 1) k))
(assert (dom a' (+ 1 t) v_int_38_740))
(assert (bnd a' (+ 1 t) v_int_38_740 low high))
(assert (< (+ 1 t) v_int_38_740))
(assert (not (bnd a' t k low high)))
(check-sat)
