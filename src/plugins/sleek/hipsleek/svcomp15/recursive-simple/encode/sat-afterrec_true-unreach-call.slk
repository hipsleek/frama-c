/*
void __error()
/*@
  requires emp & true
  ensures emp & true & flow __Error;
*/;
*/

/*
void f(int n)
/*@
  case {
  n<3 -> ensures emp & true;
  n>=3 -> ensures emp & true & flow __Error;
  }
 */
{
  if (n<3) return;
  n--;
  f(n);
  __error();
}

pred f_v(n, e) == n<3 & e=1
   or n>=3 & f(n-1, e1) & & e1=1 & e = 0.

*/

/*
void main()
/*@
  requires true
  ensures true;
*/
{
  f(2);
}
*/

pred main_v(e) == f_v(2, e1) & e1=1 & e=1
   \/ f_v(2, e1) & e1=0 & e=0.



checksat main_v(e) & e=0 .

expect unsat.

/*
   main_v(e) & e=0
== (1) f_v(2, e1) & e1=1 & e=1 & e=0 // unsat
                           ^^^^^^^^
  \/ (2) f_v(2, e1) & e1=0 & e=0 & e=0

== (2.1) n=2 & n<3 & e1=1 & e1=0 & e=0 & e=0 //unsat
                     ^^^^^^^^^^^
 \/ (2.2) n=2 & n>=3 & f_v(n-1, e11) & e11=1 & e1 = 0 & e1=0 & e=0 & e=0. //unsat
          ^^^^^^^^^^
== unsat

 */
