pred fact<x,r> == x=0 & r=1
   or self::fact<x-1,r1> & x>0 & r=x*r1
 inv x>=0 & r>=x.

checksat y::fact<x,r> & r=0.
expect sat.

checksat y::fact<x,r> & x=0 & r=2.
expect unsat.

# ex6.slk

# maybe can merge with default to get validate stuff?

CheckSat 1: SAT

Validate 1: Expecting UNKNOWN(sat)BUT got no residue


CheckSat 2: SAT

Validate 2: Expecting UNKNOWN(unsat)BUT got no residue

Unexpected: 1 2 
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
===============================================================
