/*
@M - mutable   (0)
@I - immutable (1)
@L - lending   (2)
@A - no access (3)
*/

//data cell {int val;}.

data node {
	int val; 
	node next;	
}.

pred ll<n, v1, v2> == self = null & n = 0 
	or self::node<a@v2, q> * 
    q::ll<n-1, v1, v2>@v1
  inv n >= 0.


checkentail x::ll<n,@A,@L> |- x::ll<n,@A,@M>. // BUG: should fail, but because  mismatched annotation
print residue.

checkentail x::ll<n,@A,@M> |- x::ll<n,@A,@L>. // BUG: should succeed
print residue.

checkentail @M<:f & f<:@A |-  f = @L.

checkentail x::node<_,_>@M |- x::node<_,_>@L.

infer [v] x::node<_,_>@v |- x::node<_,_>@I.
print residue.

checkentail f = @L |- f<:@M.
print residue.

checkentail f = @M |- f<:@L.
print residue.

checkentail  x::ll<n, @M, @M> & n>1 |- x::ll<n+1,_,_> & n>1.
print residue. 
