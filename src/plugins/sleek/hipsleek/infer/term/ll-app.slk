data node {
  int val;
  node next;
}.

pred ll<n> == self = null & n = 0 
	or self::node<_, q> * q::ll<n-1> 
  inv n >= 0.

ranking term_r(int n).

/* Obtained:
inferred rel: [RANKDEC [term_r,term_r]: ( n1=n - 1 & 2<=n | n=1 & n1=0) -->  (term_r(n1))<(term_r(n))]
TODO : why isn't LHS simplified?
*/

infer [term_r] x::node<_,q>*q::ll<n-1>*y::ll<m> & n1=n-1 & x1=q     
    |- q::ll<n1> * y::ll<m1> & term_r(n)>term_r(n1).
print residue.

infer [term_r] x::ll<n> * y::ll<m> & n>0  |- term_r(n)>=0 .
print residue.
