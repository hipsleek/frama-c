
!!!Full processing file "rel/insertion_sa.ss"
Parsing file "rel/insertion_sa.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&((sm=lg & n=1 & self!=null) | (sm<=lg & 2<=n & self!=null))&
{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&n=1 & self>0&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], ((n=1 & lg=sm) | (sm<=lg & 2<=n)))])
!!! neqs:[(x,xn_56),(x,v_node_39_1264)]
Checking procedure insert$node~int... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H,G]requires H(x,v@NI)&true
 ensures G(x,res,v@NI)&
true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(0)H(x,v@NI)&true --> x::node<val1,next1> * HP_1291(next1,v@NI)&
true(3,4),
 // PRE_REC
(1;2;0)HP_1291(next1,v@NI)&next1!=null & val1<v --> H(next1,v@NI)&
true(3,4),
 // POST
(1;0)HP_1291(next1,v@NI) * x::node<val1,next1> * res::node<v,x>&
v<=val1 --> G(x,res,v@NI)&
true(3,4),
 // POST
(1;2;0)G(next1,xn1,v@NI) * res::node<val1,xn1>&next1!=null & 
val1<v --> G(x,res,v@NI)&
true(3,4),
 // POST
(2;2;0)v1::node<v,tmp1> * HP_1291(next1,v@NI) * res::node<val1,v1>&
next1=null & val1<v & tmp1=null --> G(x,res,v@NI)&
true(3,4)]

Procedure insert$node~int SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H(x1,v2) ::=  [x1::node<val,next> * HP_1291(next,v2)&x1!=null],
 G(x2,res1,v3) ::=  [x2::node<val,next> * HP_1291(next,v3) * res1::node<v3,x2>&v3<=val; 
G(next,xn,v3) * res1::node<val,xn>&val<v3 & next!=null & x2=res1; 
v1::node<v3,tmp> * res1::node<val,v1>&val<v3 & x2=res1 & tmp=null],
 HP_1291(next2,v4) ::=  [emp&next2=null; next2::node<val,next> * HP_1291(next,v4)&val2<v4]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H(x1,v2) ::= x1::node<val,next> * HP_1291(next,v2)&x1!=null(3,4),
 G(x2,res1,v3) ::= 
 G(next,xn,v3) * res1::node<val,xn>&val<v3 & next!=null & x2=res1
 or v1::node<v3,tmp> * res1::node<val,v1>&val<v3 & x2=res1 & tmp=null
 or x2::node<val,next> * HP_1291(next,v3) * res1::node<v3,x2>&v3<=val
 (3,4),
 HP_1291(next2,v4) ::= 
 next2::node<val,next> * HP_1291(next,v4)&val2<v4
 or emp&next2=null
 (3,4)]
*************************************
Stop Omega... 28 invocations 
0 false contexts at: ()

!!! log(small):(0.096077,381)
Total verification time: 0.41331 second(s)
	Time spent in main process: 0.384112 second(s)
	Time spent in child processes: 0.029198 second(s)

