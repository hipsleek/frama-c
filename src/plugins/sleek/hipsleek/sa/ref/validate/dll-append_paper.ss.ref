
!!!Full processing file "validate/dll-append_paper.ss"
Parsing file "validate/dll-append_paper.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&(self=null | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=null)])
!!! SCall neqs:[]
!!! neqs:[(y,x)]
Checking procedure dll_append$node~node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ HP_1248,HP_1249,G]requires HP_1248(x) * HP_1249(y)&
true
 ensures G(x,y)&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(0)HP_1248(x)&true --> x::node<prev2,next2> * HP_1254(prev2) * 
HP_1255(next2)&
true(3,4),
 // PRE_REC
(1;0)HP_1255(next2)&next2!=null --> HP_1248(next2)&
true(3,4),
 // PRE_REC
(1;0)HP_1249(y)&true --> HP_1249(y)&
true(3,4),
 // BIND
(2;0)HP_1249(y)&true --> y::node<prev1,next1> * HP_1313(prev1) * 
HP_1314(next1)&
true(3,4),
 // POST
(1;0)x::node<prev2,next2> * HP_1254(prev2) * G(next2,y)&
next2!=null --> G(x,y)&
true(3,4),
 // POST
(2;0)HP_1254(prev2) * HP_1255(next2) * x::node<prev2,y> * HP_1314(next1) * 
y::node<x,next1>&next2=null --> G(x,y)&
true(3,4)]

Procedure dll_append$node~node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ HP_1248(x1) ::=  [x1::node<DP,next> * HP_1255(next)&x1!=null],
 HP_1249(y1) ::=  [y1::node<DP2,DP1>],
 G(x3,y2) ::=  [GP_1370(x3,x2) * x2::node<DP,y2> * y2::node<x2,DP1>],
 GP_1370(x3,x2) ::=  [
  x3::node<DP,next> * GP_1370(next,x2)&next!=null
  or emp&x3=x2
  ],
 HP_1255(next3) ::=  [emp&next3=null; next3::node<DP,next> * HP_1255(next)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ HP_1248(x1) ::= x1::node<DP,next> * HP_1255(next)&x1!=null(3,4),
 HP_1249(y1) ::= y1::node<DP2,DP1>(3,4),
 G(x3,y2) ::= GP_1370(x3,x2) * x2::node<DP,y2> * y2::node<x2,DP1>(3,4),
 GP_1370(x3,x2) ::= 
 x3::node<DP,next> * GP_1370(next,x2)&next!=null
 or emp&x3=x2
 (3,4),
 H(x,y) ::= HP_1248(x) * HP_1249(y),
 HP_1255(next3) ::= 
 next3::node<DP,next> * HP_1255(next)
 or emp&next3=null
 (3,4)]
*************************************
Stop Omega... 7 invocations 
0 false contexts at: ()

!!! log(small):(0.061639,319)
Total verification time: 0.366392 second(s)
	Time spent in main process: 0.350167 second(s)
	Time spent in child processes: 0.016225 second(s)

