
!!!Full processing file "validate/ll-delete.ss"
Parsing file "validate/ll-delete.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

Checking procedure whiledel$node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H1,G1]requires H1(x)&true
 ensures G1(x,x')&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(1;0)H1(x)&x!=null --> x::node<val1,next1> * HP_1239(next1)&
true(3,4),
 // PRE_REC
(1;0)HP_1239(next1)&true --> H1(next1)&
true(3,4),
 // POST
(1;0)x::node<val1,next1> * G1(next1,x')&true --> G1(x,x')&
true(3,4),
 // POST
(2;0)H1(x)&x=null & x=null --> G1(x,x')&
true(3,4)]

Procedure whiledel$node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H1(x1) ::=  [emp&x1=null; x1::node<val2,next2> * H1(next2)],
 G1(x4,x3) ::=  [GP_1285(x4,x2)&x3=null & x2=null],
 GP_1285(x4,x2) ::=  [
  x4::node<val,next> * GP_1285(next,x2)
  or emp&x4=x2
  ]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H1(x1) ::= 
 x1::node<val2,next2> * H1(next2)
 or emp&x1=null
 (3,4),
 G1(x4,x3) ::= GP_1285(x4,x2)&x3=null & x2=null(3,4),
 GP_1285(x4,x2) ::= 
 x4::node<val,next> * GP_1285(next,x2)
 or emp&x4=x2
 (3,4)]
*************************************

!!! formula1: emp&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([], true),
([self], true)])
!!! formula1: emp&(self!=null | self=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([], self=null),
([self], true)])
!!! formula1: emp&x3=null&{FLOW,(1,28)=__flow}[]
!!! formula1_under: hfalse&false&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], x_1283=0),
([], x_1283=0)])
Checking procedure delete$node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H2,G2]requires H2(x)&true
 ensures G2(x)&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // PRE
(0)H2(x)&true --> x::H1<>&
true(3,4),
 // POST
(0)x::GP_1285<x2>&x2=null --> G2(x)&
true(3,4)]

Procedure delete$node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H2(x5) ::=  [x5::H1<>],
 G2(x6) ::=  [x6::GP_1285<x2>&x2=null]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H2(x5) ::= x5::H1<>(3,4),
 G2(x6) ::= x6::GP_1285<x2>&x2=null(3,4)]
*************************************
Stop Omega... 15 invocations 
0 false contexts at: ()

!!! log(small):(0.04083,288)
Total verification time: 0.32523 second(s)
	Time spent in main process: 0.307086 second(s)
	Time spent in child processes: 0.018144 second(s)

