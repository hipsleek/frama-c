
!!!Full processing file "validate/ll-back.ss"
Parsing file "validate/ll-back.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&self!=null&{FLOW,(1,28)=__flow}[]
!!! formula1_under: hfalse&false&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true)])
!!! formula1: emp&(self=null | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=null)])
Checking procedure for_aux$node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H1,G1]requires H1(ptr)&true
 ensures G1(ptr')&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // PRE_REC
(2;0)ptr'::node<old1'> * H1(old1')&true --> H1(ptr')&
true(3,4),
 // POST
(1;0)H1(ptr')&true --> G1(ptr')&
true(3,4),
 // POST
(2;0)G1(ptr')&true --> G1(ptr')&
true(3,4)]

Procedure for_aux$node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H1(ptr') ::=  [
  ptr'::node<old'> * H1(old')
  or emp&ptr'=DP'
  ],
 G1(ptr5) ::=  [hfalse; H1(ptr5)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H1(ptr') ::= 
 ptr'::node<old'> * H1(old')
 or emp&ptr'=DP'
 (3,4),
 G1(ptr5) ::= H1(ptr5)(3,4)]
*************************************

!!! formula1: emp&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([], true),
([self], true)])
!!! formula1: emp&{FLOW,(1,28)=__flow}[]
!!! formula1_under: hfalse&false&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], true)])
Checking procedure main$node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ G2]requires emp&true
 ensures G2(ptr')&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // POST
(0)ptr'::H1<>&true --> G2(ptr')&
true(3,4)]

Procedure main$node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ G2(ptr6) ::=  [ptr6::H1<>]]
*************************************

*************************************
*******relational definition ********
*************************************
[ G2(ptr6) ::= ptr6::H1<>(3,4)]
*************************************
Stop Omega... 21 invocations 
0 false contexts at: ()

!!! log(small):(0.042205,325)
Total verification time: 0.344716 second(s)
	Time spent in main process: 0.326412 second(s)
	Time spent in child processes: 0.018304 second(s)

