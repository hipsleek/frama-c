
!!!Full processing file "validate/tll-parent.ss"
Parsing file "validate/tll-parent.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&(self!=null | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self>0&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true)])
!!! formula1: emp&((self=ll & self!=null) | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self>0&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true)])
Checking procedure set_right$node~node~node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H,G]requires H(p@NI,x,t@NI)&true
 ensures G(p@NI,x,res@NI,t)&
true{,(3,4)=__norm};

dprint: validate/tll-parent.ss:31: ctx:  List of Failesc Context: [FEC(0, 0, 1  [])]

Successful States:
[
 Label: []
 State:HP_1393(parent1,p,t) * HP_1394(left1,p,t) * HP_1395(right1,p,t) * HP_1396(next1,p,t) * x::node<p,left1,right1,next1>&{FLOW,(3,4)=__norm}[]
       es_ho_vars_map: []HP_1393(parent,p,t) * HP_1394(left,p,t) * HP_1395(right,p,t) * HP_1396(next,p,t) * x::node<p,left,right,next>

 ]

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(0)H(p@NI,x,t@NI)&true --> x::node<parent1,left1,right1,next1> * 
HP_1393(parent1,p@NI,t@NI) * HP_1394(left1,p@NI,t@NI) * 
HP_1395(right1,p@NI,t@NI) * HP_1396(next1,p@NI,t@NI)&
true(3,4),
 // PRE_REC
(2;0)HP_1395(right1,p@NI,t@NI)&
right1!=null |#| x'::node<p,left1,right1,next1>&
true --> H(x'@NI,right1,t@NI)&
true(3,4),
 // PRE_REC
(2;0)HP_1394(left1,p@NI,t@NI)&true |#| x'::node<p,left1,right1,next1>&
right1!=null --> H(x'@NI,left1,l1'@NI)&
true(3,4),
 // POST
(1;0)HP_1394(left1,p@NI,t@NI) * HP_1395(right1,p@NI,t@NI) * 
res::node<p,left1,right1,t>&right1=null --> G(p@NI,x,res@NI,t)&
true(3,4),
 // POST
(2;0)HP_1396(next1,p@NI,t@NI) * x::node<p,left1,right1,next1> * 
G(x@NI,right1,l1@NI,t) * G(x@NI,left1,res@NI,l1)&
right1!=null --> G(p@NI,x,res@NI,t)&
true(3,4)]

Procedure set_right$node~node~node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H(p1,x1,t1) ::=  [HP_1693(x1)],
 G(p2,x2,res1,t2) ::=  [x2::node<p2,left,right,DP1> * G(x2,right,l,t2) * G(x2,left,res1,l)&
right!=null; x2::node<p2,DP,right,t2>&right=null & x2=res1],
 HP_1693(x1) ::=  [x1::node<DP2,DP,right2,DP1>&right2=null; x1::node<DP2,left2,right2,DP1> * 
HP_1693(left2) * HP_1693(right2)&right2!=null]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H(p1,x1,t1) ::= HP_1693(x1)(3,4),
 G(p2,x2,res1,t2) ::= 
 x2::node<p2,DP,right,t2>&right=null & x2=res1
 or x2::node<p2,left,right,DP1> * G(x2,right,l,t2) * G(x2,left,res1,l)&
    right!=null
 (3,4),
 HP_1693(x1) ::= 
 x1::node<DP2,left2,right2,DP1> * HP_1693(left2) * HP_1693(right2)&
 right2!=null
 or x1::node<DP2,DP,right2,DP1>&right2=null
 (3,4)]
*************************************
Stop Omega... 28 invocations 
0 false contexts at: ()

!!! log(small):(0.081336,429)
Total verification time: 0.425439 second(s)
	Time spent in main process: 0.404312 second(s)
	Time spent in child processes: 0.021127 second(s)

