
!!!Full processing file "validate/tree-parent-2.ss"
Parsing file "validate/tree-parent-2.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&(self!=null | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self>0&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true)])
Checking procedure trav$node~node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H,G]requires H(p@NI,x)&true
 ensures G(p@NI,x)&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(0)H(p@NI,x)&true --> x::node<parent1,left1,right1> * 
HP_1309(parent1,p@NI) * HP_1310(left1,p@NI) * HP_1311(right1,p@NI)&
true(3,4),
 // PRE_REC
(1;0)HP_1311(right1,p@NI)&right1!=null |#| x::node<p,left1,right1>&
true --> H(x@NI,right1)&
true(3,4),
 // PRE_REC
(1;0)HP_1310(left1,p@NI)&left1!=null |#| x::node<p,left1,right1>&
right1!=null --> H(x@NI,left1)&
true(3,4),
 // POST
(1;0)x::node<p,left1,right1> * G(x@NI,right1) * G(x@NI,left1) * 
HP_1309(p,p@NI)&left1!=null & right1!=null --> G(p@NI,x)&
true(3,4),
 // POST
(2;0)x::node<p,left1,right1> * HP_1310(left1,p@NI) * HP_1311(right1,p@NI) * 
HP_1309(p,p@NI)&left1=null & right1=null --> G(p@NI,x)&
true(3,4)]

Procedure trav$node~node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H(p1,x1) ::=  [x1::node<parent,left,right>&right=null & left=null & parent=p1 & x1!=null; 
x1::node<parent,left,right> * H(x1,right)&right!=null & left=null & 
parent=p1 & x1!=null; x1::node<parent,left,right> * H(x1,left) * H(x1,right)&
right!=null & left!=null & parent=p1 & x1!=null],
 G(p2,x2) ::=  [x2::node<p2,left,right> * G(x2,right) * G(x2,left)&right!=null & 
left!=null; x2::node<p2,left,right>&right=null & left=null]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H(p1,x1) ::= 
 x1::node<parent,left,right> * H(x1,right)&right!=null & left=null & 
 parent=p1 & x1!=null
 or x1::node<parent,left,right> * H(x1,left) * H(x1,right)&right!=null & 
    left!=null & parent=p1 & x1!=null
 or x1::node<parent,left,right>&right=null & left=null & parent=p1 & x1!=null
 (3,4),
 G(p2,x2) ::= 
 x2::node<p2,left,right>&right=null & left=null
 or x2::node<p2,left,right> * G(x2,right) * G(x2,left)&right!=null & 
    left!=null
 (3,4)]
*************************************
Stop Omega... 16 invocations 
0 false contexts at: ()

!!! log(small):(0.07596,389)
Total verification time: 0.393415 second(s)
	Time spent in main process: 0.374976 second(s)
	Time spent in child processes: 0.018439 second(s)

