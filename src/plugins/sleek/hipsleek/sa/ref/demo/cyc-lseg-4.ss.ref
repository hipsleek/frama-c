
!!!Full processing file "demo/cyc-lseg-4.ss"
Parsing file "demo/cyc-lseg-4.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

WARNING: demo/cyc-lseg-4.ss_17:10_17:27:the result type __norm is not covered by the throw list[]

!!! formula1: emp&(self=null | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=null)])
!!! formula1: emp&(self=null | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=null)])
Checking procedure trav$node... 
Procedure trav$node SUCCESS.

Checking procedure outer$node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H,G]requires H(x)&true
 ensures G(x,x'@NI)&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(1;0)H(x)&x!=null --> x::node<next1,down1> * HP_1297(next1) * HP_1298(down1)&
true(3,4),
 // PRE
(1;0)HP_1298(down1)&true --> down1::ll<>&
true(3,4),
 // PRE_REC
(1;0)HP_1297(next1)&true --> H(next1)&
true(3,4),
 // POST
(1;0)x::node<next1,down1> * G(next1,x'@NI) * down1::ll<>&true --> G(x,x'@NI)&
true(3,4),
 // POST
(2;0)H(x)&x=null & x=null --> G(x,x'@NI)&
true(3,4)]

Procedure outer$node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H(x1) ::=  [emp&x1=null; x1::node<next2,down2> * H(next2) * down2::ll<>],
 G(x4,x3) ::=  [GP_1366(x4,x2)&x3=null & x2=null],
 GP_1366(x4,x2) ::=  [
  x4::node<next,down> * GP_1366(next,x2) * down::ll<>
  or emp&x4=x2
  ]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H(x1) ::= 
 x1::node<next2,down2> * H(next2) * down2::ll<>
 or emp&x1=null
 (3,4),
 G(x4,x3) ::= GP_1366(x4,x2)&x3=null & x2=null(3,4),
 GP_1366(x4,x2) ::= 
 x4::node<next,down> * GP_1366(next,x2) * down::ll<>
 or emp&x4=x2
 (3,4)]
*************************************
Stop Omega... 11 invocations 
0 false contexts at: ()

!!! log(small):(0.100018,562)
Total verification time: 0.369791 second(s)
	Time spent in main process: 0.3524 second(s)
	Time spent in child processes: 0.017391 second(s)

