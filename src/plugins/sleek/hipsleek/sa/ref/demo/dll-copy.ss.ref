
!!!Full processing file "demo/dll-copy.ss"
Parsing file "demo/dll-copy.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! SCall neqs:[(n,v_null_type_23_1227),(n,newprev),(n,v_int_25_1237),(newprev,n)]
!!! neqs:[(n,v_null_type_23_1227),(n,v_int_25_1237),(newprev,n)]
Checking procedure copy_while$dllist~dllist~dllist... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H1,G1]requires H1(cur,n,newprev)&true
 ensures G1(n')&
true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(1;0)H1(cur,n,newprev)&cur!=null --> cur::dllist<val2,prev2,next2> * 
HP_1322(prev2,n@NI,newprev@NI) * HP_1323(next2,n@NI,newprev@NI) * 
HP_1324(n,newprev,cur@NI)&
true(3,4),
 // BIND
(1;0)HP_1324(n,newprev,cur@NI)&true --> newprev::dllist<val1,prev1,next1> * 
HP_1335(prev1,n@NI,cur@NI) * HP_1336(next1,n@NI,cur@NI) * 
HP_1337(n,newprev@NI,cur@NI)&
true(3,4),
 // PRE_REC
(1;0)HP_1323(next2,n@NI,newprev@NI) * newprev::dllist<val1,prev1,n'> * 
n'::dllist<val2,newprev,v1> * HP_1335(prev1,n@NI,cur@NI)&
v1=null |#| cur::dllist<val2,prev2,next2>&true --> H1(next2,n',newprev')&
true(3,4),
 // POST
(1;0)G1(n')&true --> G1(n')&
true(3,4),
 // POST
(2;0)H1(cur,n',newprev)&cur=null --> G1(n')&
true(3,4)]

Procedure copy_while$dllist~dllist~dllist SUCCESS.

!!! shape inference for flow:(3,4)
!!! formula1: emp&((newprev2!=null & self!=null) | self=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&((newprev2!=self & newprev2!=self & self>0) | self=null)&
{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([], self=null),
([newprev_1514,self], true)])
Context of Verification Failure: 1 File "demo/dll-copy.ss",Line:18,Col:10
Last Proving Location: 1 File "",Line:0,Col:0

ERROR: at demo/dll-copy.ss_29:2_29:34 
Message: split_components: don't expect OR
 
 --error:  at:(Program not linked with -g, cannot print stack backtrace)


*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[]
*************************************

Checking procedure copy$dllist... Proving binding in method copy$dllist for spec  EAssume 
   emp&{FLOW,(3,4)=__norm}[]
   , Line 35

( [(,0 ); (,1 )]) bind: node  curr_42'::dllist<val_54_1211',prev_54_1212',next_54_1213'>@L cannot be derived from context
demo/dll-copy.ss_54:15_54:23

(Cause of Bind Failure) List of Failesc Context: [FEC(1, 0, 0 )]
Failed States:
[
 Label: [(,0 ); (,1 )]
 State:
        fe_kind: MAY
        fe_name: separation entailment
        fe_locs: {
                  fc_message: 
                   do_unmatched_rhs : curr_42'::dllist<val_54_1211',prev_54_1212',next_54_1213'>@L
                  fc_current_lhs_flow: {FLOW,(3,10)=__MayError}}
[[ COND ==>  UnmatchedRHSData ==> ]]
 ]demo/dll-copy.ss_54:15_54:23

Context of Verification Failure: 1 File "demo/dll-copy.ss",Line:35,Col:10
Last Proving Location: 1 File "demo/dll-copy.ss",Line:54,Col:15

Procedure copy$dllist FAIL.(2)

Exception Failure("Proving precond failed") Occurred!
(Program not linked with -g, cannot print stack backtrace)

Error(s) detected when checking procedure copy$dllist

!!! proc.proc_name:copy$dllistStop Omega... 8 invocations 
0 false contexts at: ()

!!! log(small):(0.120751,447)
Total verification time: 0.439044 second(s)
	Time spent in main process: 0.415826 second(s)
	Time spent in child processes: 0.023218 second(s)

