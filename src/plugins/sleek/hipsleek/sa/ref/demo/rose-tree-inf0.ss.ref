
!!!Full processing file "demo/rose-tree-inf0.ss"
Parsing file "demo/rose-tree-inf0.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

Checking procedure check_child$node~tree~node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ Hc,Gc]requires Hc(l,par@NI,prv@NI)&true
 ensures Gc(l,par@NI,prv@NI)&
res{,(3,4)=__norm};

!!! >>>>>> HIP gather infer pre <<<<<<
!!!Inferred Heap: []
!!!Inferred Pure: [ forall(prev_30_1313:((par'!=par | prev_30_1313<=prv)) & ((par'!=par | 
prv<=prev_30_1313))), forall(parent_30_1314:((prv'!=prv | parent_30_1314<=par)) & ((prv'!=prv | 
par<=parent_30_1314))), forall(parent_30_1314:((prev_30_1313<=prv | parent_30_1314<=par)) & 
((prv<=prev_30_1313 | parent_30_1314<=par)) & ((prev_30_1313<=prv | 
par<=parent_30_1314)) & ((prv<=prev_30_1313 | par<=parent_30_1314)))]
*************************************
*******relational assumptions ********
*************************************
[ // BIND
(2;0)Hc(l,par@NI,prv@NI)&l!=null --> l::node<child1,next1,prev1,parent1> * 
HP_1315(child1,par@NI,prv@NI) * HP_1316(next1,par@NI,prv@NI) * 
HP_1317(prev1,par@NI,prv@NI) * HP_1318(parent1,par@NI,prv@NI)&
true(3,4),
 // PRE_REC
(1;2;0)HP_1316(next1,par@NI,prev1@NI)&
true |#| l::node<child1,next1,prev1,par>&true --> Hc(next1,par@NI,l@NI)&
true(3,4),
 // PRE
(1;2;0)HP_1315(child1,par@NI,prev1@NI)&true --> Ht(child1)&
true(3,4),
 // POST
(1;0)Hc(l,par@NI,prv@NI)&l=null --> Gc(l,par@NI,prv@NI)&
true(3,4),
 // POST
(1;2;0)HP_1317(prev1,par@NI,prev1@NI) * HP_1318(par,par@NI,prev1@NI) * 
l::node<child1,next1,prev1,par> * Gc(next1,par@NI,l@NI)&
true --> Gc(l,par@NI,prev1@NI)&
true(3,4)]

Procedure check_child$node~tree~node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ Hc(l1,par1,prv1) ::=  [emp&l1=null; l1::node<DP,next2,prev2,parent2> * Hc(next2,par1,l1)&
parent2=par1 & prv1=prev2],
 Gc(l2,par2,prv2) ::=  [emp&l2=null; l2::node<child,next,prv2,par2> * Gc(next,par2,l2)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ Hc(l1,par1,prv1) ::= 
 l1::node<DP,next2,prev2,parent2> * Hc(next2,par1,l1)&parent2=par1 & 
 prv1=prev2
 or emp&l1=null
 (3,4),
 Gc(l2,par2,prv2) ::= 
 l2::node<child,next,prv2,par2> * Gc(next,par2,l2)
 or emp&l2=null
 (3,4)]
*************************************
Stop Omega... 15 invocations 
0 false contexts at: ()

!!! log(small):(0.153628,490)
Total verification time: 0.592707 second(s)
	Time spent in main process: 0.551739 second(s)
	Time spent in child processes: 0.040968 second(s)

