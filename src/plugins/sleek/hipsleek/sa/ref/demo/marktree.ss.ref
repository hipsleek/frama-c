
!!!Full processing file "demo/marktree.ss"
Parsing file "demo/marktree.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&(self=null | (v=0 & self!=null) | (v=1 & self!=null) | (v=2 & 
self!=null))&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], 0<=v & v<=2),
([], self=null)])
Checking procedure mark$node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H,G]requires H(x)&true
 ensures EXISTS(_: G(x,Anon_15@NI)&true&
{,(3,4)=__norm}[];

assert/assume:demo/marktree.ss:38: 1:  : failed


*************************************
*******relational assumptions ********
*************************************
[ // BIND
(2;0)H(x)&x!=null --> x::node<val1,left1,right1> * HP_1316(left1) * 
HP_1317(right1)&
true(3,4),
 // PRE_REC
(2;2;0)HP_1316(l1')&true --> H(l1')&
true(3,4),
 // PRE_REC
(2;2;0)HP_1317(r1')&true --> H(r1')&
true(3,4),
 // POST
(1;2;0)x::node<val1,left1,right1> * HP_1316(left1) * HP_1317(right1)&
true --> G(x,Anon3@NI)&
true(3,4),
 // POST
(1;0)H(x)&x=null --> G(x,Anon3@NI)&
true(3,4),
 // POST
(2;2;0)x::node<v1,left1,right1> * G(left1,Anon1@NI) * G(right1,Anon2@NI)&
true --> G(x,Anon3@NI)&
true(3,4)]

Procedure mark$node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H(x1) ::=  [emp&x1=null; x1::node<val2,left2,right2> * H(left2) * H(right2)],
 G(x2,Anon4) ::=  [HP_1473(x2)],
 HP_1473(x2) ::=  [emp&x2=null; x2::node<val,left,right> * H(left) * H(right); 
x2::node<val,left,right> * HP_1473(left) * HP_1473(right)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H(x1) ::= 
 x1::node<val2,left2,right2> * H(left2) * H(right2)
 or emp&x1=null
 (3,4),
 G(x2,Anon4) ::= HP_1473(x2)(3,4),
 HP_1473(x2) ::= 
 x2::node<val,left,right> * H(left) * H(right)
 or x2::node<val,left,right> * HP_1473(left) * HP_1473(right)
 or emp&x2=null
 (3,4)]
*************************************
Stop Omega... 40 invocations 
0 false contexts at: ()

!!! log(small):(0.087499,430)
Total verification time: 0.412804 second(s)
	Time spent in main process: 0.384721 second(s)
	Time spent in child processes: 0.028083 second(s)

