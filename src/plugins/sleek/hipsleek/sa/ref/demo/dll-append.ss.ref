
!!!Full processing file "demo/dll-append.ss"
Parsing file "demo/dll-append.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&(self=tl | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=tl)])
!!! formula1: emp&(self=null | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=null)])
!!! SCall neqs:[]
!!! neqs:[(l1,l2)]
Checking procedure dll_append$node~node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ HP_1275,HP_1276,G]requires HP_1275(l1) * HP_1276(l2)&
true
 ensures G(l1,l2)&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(0)HP_1275(l1)&true --> l1::node<next2,prev2> * HP_1281(next2) * 
HP_1282(prev2)&
true(3,4),
 // PRE_REC
(1;0)HP_1281(next2)&next2!=null --> HP_1275(next2)&
true(3,4),
 // PRE_REC
(1;0)HP_1276(l2)&true --> HP_1276(l2)&
true(3,4),
 // BIND
(1;2;0)HP_1276(l2)&l2!=null --> l2::node<next1,prev1> * HP_1368(next1) * 
HP_1369(prev1)&
true(3,4),
 // POST
(1;0)l1::node<next2,prev2> * G(next2,l2) * HP_1282(prev2)&
next2!=null --> G(l1,l2)&
true(3,4),
 // POST
(1;2;0)HP_1282(prev2) * HP_1281(next2) * l1::node<l2,prev2> * 
HP_1368(next1) * l2::node<next1,l1>&next2=null --> G(l1,l2)&
true(3,4),
 // POST
(2;2;0)l1::node<l2,prev2> * HP_1276(l2) * HP_1282(prev2) * HP_1281(next2)&
l2=null & next2=null --> G(l1,l2)&
true(3,4)]

Procedure dll_append$node~node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ HP_1275(l) ::=  [l::node<next,DP> * HP_1281(next)&l!=null],
 HP_1276(l1) ::=  [emp&l1=null; (htrue)/&\l1::node<DP2,DP1>; htrue; htrue&l1!=null],
 G(l3,l2) ::=  [emp&l3=DP2; emp&l3=null & l2=DP; l3::node<next,DP> * G(next,l2)&next!=null],
 HP_1281(next3) ::=  [emp&next3=null; next3::node<next,DP> * HP_1281(next)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ HP_1275(l) ::= l::node<next,DP> * HP_1281(next)&l!=null(3,4),
 HP_1276(l1) ::= emp(3,4),
 G(l3,l2) ::= 
 emp&l3=null & l2=DP
 or l3::node<next,DP> * G(next,l2)&next!=null
 or emp&l3=DP2
 (3,4),
 H(l1,l2) ::= HP_1275(l1) * HP_1276(l2),
 HP_1281(next3) ::= 
 next3::node<next,DP> * HP_1281(next)
 or emp&next3=null
 (3,4)]
*************************************
Stop Omega... 17 invocations 
0 false contexts at: ()

!!! log(small):(0.081838,416)
Total verification time: 0.38725 second(s)
	Time spent in main process: 0.366826 second(s)
	Time spent in child processes: 0.020424 second(s)

