
!!!Full processing file "demo/swl-0-set.ss"
Parsing file "demo/swl-0-set.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&((self=null & self!=s & B={}) | (exists(B1:exists(v:B=union({v},B1))) & 
self!=s & self!=null))&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&B={} & self!=s & self=null&{FLOW,(1,28)=__flow}[]
!!!  xxxx bag: :bagOmega Error Exp:Globals.Illegal_Prover_Format("Omega.omega_of_exp: array, bag or list constraint  union({v},B1)")
 Formula: exists(B1:exists(v:B=union({v},B1))) & exists(nxt:exists(s_20:s_20=s & 
nxt!=s_20)) & self!=s

!!! baga_over(unfolded):Some([([self], self!=s & exists(nxt:exists(s_20:s_20=s & nxt!=s_20)) & 
exists(B1:exists(v:B=union({v},B1)))),
([], self=null & self!=s & B={})])
!!! formula1: emp&((self=p & B={}) | (exists(B1:exists(v:B=union({v},B1))) & self!=p & 
self!=null))&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&B={}&{FLOW,(1,28)=__flow}[]
!!!  xxxx bag: :bagOmega Error Exp:Globals.Illegal_Prover_Format("Omega.omega_of_exp: array, bag or list constraint  union({v},B1)")
 Formula: exists(B1:exists(v:B=union({v},B1))) & exists(p_19:p_19=p) & self!=p

!!! baga_over(unfolded):Some([([self], self!=p & exists(p_19:p_19=p) & exists(B1:exists(v:B=union({v},B1)))),
([], self=p & B={})])
Checking procedure lscan$node~node~node... 
Mona is restarting ... cycle limit reached

Mona is restarting ... cycle limit reached

Procedure lscan$node~node~node SUCCESS.
Stop Omega... 51 invocations 
0 false contexts at: ()

!!! log(small):(5.926702,3915)
Total verification time: 4.091666 second(s)
	Time spent in main process: 3.547515 second(s)
	Time spent in child processes: 0.544151 second(s)

