
!!!Full processing file "hip/ll-append3.ss"
Parsing file "hip/ll-append3.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&(self=null | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=null)])
!!! formula1: emp&(self=p | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=p)])
!!! SCall neqs:[]
!!! neqs:[(x,y)]
Checking procedure append$node~node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H1,G1]requires EXISTS(flted: H1(x) * y::node<a,flted>&flted=null&
[]
 ensures EXISTS(a_55,flted_92_53: G1(x,y) * y::node<a_55,flted_92_53>&
flted_92_53=null & a_55=a&{,(3,4)=__norm}[];
check 1 fail

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(0)H1(x)&true --> x::node<val1,next1> * HP_1300(next1)&
true(3,4),
 // PRE_REC
(2;0)HP_1300(next1)&next1!=null --> H1(next1)&
true(3,4),
 // POST
(1;0)x::node<val1,y> * HP_1300(next1)&next1=null --> G1(x,y)&
true(3,4),
 // POST
(2;0)x::node<val1,next1> * G1(next1,y)&next1!=null --> G1(x,y)&
true(3,4)]

Procedure append$node~node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H1(x1) ::=  [x1::node<val,next> * HP_1300(next)&x1!=null],
 G1(x3,y1) ::=  [GP_1409(x3,x2) * x2::node<val,y1>],
 GP_1409(x3,x2) ::=  [
  x3::node<val,next> * GP_1409(next,x2)&next!=null
  or emp&x3=x2
  ],
 HP_1300(next2) ::=  [emp&next2=null; next2::node<val,next> * HP_1300(next)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H1(x1) ::= x1::node<val,next> * HP_1300(next)&x1!=null(3,4),
 G1(x3,y1) ::= GP_1409(x3,x2) * x2::node<val,y1>(3,4),
 GP_1409(x3,x2) ::= 
 x3::node<val,next> * GP_1409(next,x2)&next!=null
 or emp&x3=x2
 (3,4),
 HP_1300(next2) ::= 
 next2::node<val,next> * HP_1300(next)
 or emp&next2=null
 (3,4)]
*************************************
Stop Omega... 14 invocations 
0 false contexts at: ()

!!! log(small):(0.079503,366)
Total verification time: 0.358678 second(s)
	Time spent in main process: 0.338455 second(s)
	Time spent in child processes: 0.020223 second(s)

