
!!!Full processing file "hip/bt-search-1.ss"
Parsing file "hip/bt-search-1.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&(self=null | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=null)])
!!! neqs:[]
Checking procedure search$node2~int... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H1,G1]requires H1(x)&true
 ensures G1(x)&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(1;0)H1(x)&x!=null --> x::node2<xval1,xleft1,xright1> * HP_1256(xleft1) * 
HP_1257(xright1)&
true(3,4),
 // PRE_REC
(1;2;1;0)HP_1257(xright1)&true --> H1(xright1)&
true(3,4),
 // PRE_REC
(2;2;1;0)HP_1256(xleft1)&true --> H1(xleft1)&
true(3,4),
 // POST
(1;1;0)x::node2<xval1,xleft1,xright1> * HP_1256(xleft1) * HP_1257(xright1)&
true --> G1(x)&
true(3,4),
 // POST
(1;2;1;0)x::node2<xval1,xleft1,xright1> * HP_1256(xleft1) * G1(xright1)&
true --> G1(x)&
true(3,4),
 // POST
(2;2;1;0)x::node2<xval1,xleft1,xright1> * G1(xleft1) * HP_1257(xright1)&
true --> G1(x)&
true(3,4),
 // POST
(2;0)H1(x)&x=null --> G1(x)&
true(3,4)]

Procedure search$node2~int SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H1(x1) ::=  [emp&x1=null; x1::node2<xval2,xleft2,xright2> * H1(xleft2) * H1(xright2)],
 G1(x2) ::=  [emp&x2=null; x2::node2<xval,xleft,xright> * H1(xleft) * H1(xright); 
x2::node2<xval,xleft,xright> * G1(xleft) * H1(xright)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H1(x1) ::= 
 x1::node2<xval2,xleft2,xright2> * H1(xleft2) * H1(xright2)
 or emp&x1=null
 (3,4),
 G1(x2) ::= 
 x2::node2<xval,xleft,xright> * H1(xleft) * H1(xright)
 or x2::node2<xval,xleft,xright> * G1(xleft) * H1(xright)
 or emp&x2=null
 (3,4)]
*************************************
Stop Omega... 15 invocations 
0 false contexts at: ()

!!! log(small):(0.059616,305)
Total verification time: 0.392356 second(s)
	Time spent in main process: 0.375664 second(s)
	Time spent in child processes: 0.016692 second(s)

