
!!!Full processing file "hip/ex1b.ss"
Parsing file "hip/ex1b.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&(self=null | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=null)])
!!! formula1: emp&(self=p | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=p)])
Checking procedure foo1$node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H1,H2]requires H1(x)&true
 ensures H2(x)&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(1;0)H1(x)&x!=null --> x::node<val1,next1> * HP_1264(next1)&
true(3,4),
 // PRE_REC
(1;0)HP_1264(next1)&true --> H1(next1)&
true(3,4),
 // POST
(1;0)x::node<val1,next1> * H2(next1)&true --> H2(x)&
true(3,4),
 // POST
(2;0)H1(x)&x=null --> H2(x)&
true(3,4)]

Procedure foo1$node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H1(x1) ::=  [emp&x1=null; x1::node<val2,next2> * H1(next2)],
 H2(x2) ::=  [emp&x2=null; x2::node<val,next> * H2(next)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H1(x1) ::= 
 x1::node<val2,next2> * H1(next2)
 or emp&x1=null
 (3,4),
 H2(x2) ::= 
 x2::node<val,next> * H2(next)
 or emp&x2=null
 (3,4)]
*************************************

Checking procedure foo2$node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H3,H4]requires H3(x)&true
 ensures H4(x)&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(0)H3(x)&true --> x::node<val3,next3> * HP_1332(next3)&
true(3,4),
 // PRE_REC
(1;0)HP_1332(next3)&next3!=null --> H3(next3)&
true(3,4),
 // POST
(1;0)x::node<val3,next3> * H4(next3)&next3!=null --> H4(x)&
true(3,4),
 // POST
(2;0)x::node<val3,next3> * HP_1332(next3)&next3=null --> H4(x)&
true(3,4)]

Procedure foo2$node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H3(x3) ::=  [x3::node<val3,next3> * HP_1332(next3)&x3!=null],
 H4(x4) ::=  [x4::node<val3,next3> * H4(next3)&next3!=null; x4::node<val3,next3>&
next3=null],
 HP_1332(next4) ::=  [emp&next4=null; next4::node<val3,next3> * HP_1332(next3)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H3(x3) ::= x3::node<val3,next3> * HP_1332(next3)&x3!=null(3,4),
 H4(x4) ::= 
 x4::node<val3,next3>&next3=null
 or x4::node<val3,next3> * H4(next3)&next3!=null
 (3,4),
 HP_1332(next4) ::= 
 next4::node<val3,next3> * HP_1332(next3)
 or emp&next4=null
 (3,4)]
*************************************
Stop Omega... 16 invocations 
0 false contexts at: ()

!!! log(small):(0.052665,343)
Total verification time: 0.349743 second(s)
	Time spent in main process: 0.327721 second(s)
	Time spent in child processes: 0.022022 second(s)

