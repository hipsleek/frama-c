
!!!Full processing file "hip/ll-append2.ss"
Parsing file "hip/ll-append2.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! SCall neqs:[]
!!! neqs:[(x,y)]
Checking procedure append$node~node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H1,H2,G1,G2]requires H1(x) * H2(y)&true
 ensures G1(x,x') * G2(y,y')&
true{,(3,4)=__norm};

dprint: hip/ll-append2.ss:24: ctx:  List of Failesc Context: [FEC(0, 0, 1  [(,1 ); (,2 )])]

Successful States:
[
 Label: [(,1 ); (,2 )]
 State:(exists v1': x::node<val1,next1> * G1(next1,v1') * G2(y,y')&next1!=null & !(v2')&{FLOW,(3,4)=__norm})[]
       es_ho_vars_map: []EXISTS(v1': x::node<val,next> * G1(next,v1') * G2(y,y')&!(v2') & next!=null)[]

 ]

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(0)H1(x)&true --> x::node<val1,next1> * HP_1232(next1)&
true(3,4),
 // PRE_REC
(2;0)HP_1232(next1)&next1!=null --> H1(next1)&
true(3,4),
 // PRE_REC
(2;0)H2(y)&true --> H2(y)&
true(3,4),
 // POST
(1;0)HP_1232(next1) * x::node<val1,y>&next1=null --> G1(x,x')&
true(3,4),
 // POST
(1;0)H2(y)&true --> G2(y,y')&
true(3,4),
 // POST
(2;0)x::node<val1,next1> * G1(next1,v1)&next1!=null --> G1(x,x')&
true(3,4),
 // POST
(2;0)G2(y,y')&true --> G2(y,y')&
true(3,4)]

Procedure append$node~node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H1(x1) ::=  [x1::node<val,next> * HP_1232(next)&x1!=null],
 H2(y1) ::=  [htrue&y1=DP & y'=y1],
 G1(x2,x3) ::=  [x3::node<val,y>&x3=x2; x3::node<val,y> * G1(y,v1)&y=v1 & y!=null & x3=x2],
 G2(y2,y3) ::=  [hfalse; emp&y3=y2 & y2=DP],
 HP_1232(next2) ::=  [emp&next2=null; next2::node<val,next> * HP_1232(next)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H1(x1) ::= x1::node<val,next> * HP_1232(next)&x1!=null(3,4),
 H2(y1) ::= htrue&y1=DP & y'=y1(3,4),
 G1(x2,x3) ::= 
 x3::node<val,y> * G1(y,v1)&y=v1 & y!=null & x3=x2
 or x3::node<val,y>&x3=x2
 (3,4),
 G2(y2,y3) ::= emp&y3=y2 & y2=DP(3,4),
 HP_1232(next2) ::= 
 next2::node<val,next> * HP_1232(next)
 or emp&next2=null
 (3,4)]
*************************************
Stop Omega... 3 invocations 
0 false contexts at: ()

!!! log(small):(0.046753,262)
Total verification time: 0.326144 second(s)
	Time spent in main process: 0.312114 second(s)
	Time spent in child processes: 0.01403 second(s)

