
!!!Full processing file "paper/sll-append_paper.ss"
Parsing file "paper/sll-append_paper.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&(self=y | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=y)])
!!! formula1: emp&(self=null | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=null)])
Checking procedure sll_append$node~node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H,G]requires H(x,y@NI)&true
 ensures G(x,y)&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(0)H(x,y@NI)&true --> x::node<next1> * HP_1244(next1,y@NI)&
true(3,4),
 // PRE_REC
(1;0)HP_1244(next1,y@NI)&next1!=null --> H(next1,y@NI)&
true(3,4),
 // POST
(1;0)x::node<next1> * G(next1,y)&next1!=null --> G(x,y)&
true(3,4),
 // POST
(2;0)x::node<y> * HP_1244(next1,y@NI)&next1=null --> G(x,y)&
true(3,4)]

Procedure sll_append$node~node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H(x1,y1) ::=  [x1::node<next> * HP_1315(next)&x1!=null],
 G(x3,y2) ::=  [GP_1321(x3,x2) * x2::node<y2>],
 GP_1321(x3,x2) ::=  [
  x3::node<next> * GP_1321(next,x2)&next!=null
  or emp&x3=x2
  ],
 HP_1315(next2) ::=  [emp&next2=null; next2::node<next> * HP_1315(next)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H(x1,y1) ::= x1::node<next> * HP_1315(next)&x1!=null(3,4),
 G(x3,y2) ::= GP_1321(x3,x2) * x2::node<y2>(3,4),
 GP_1321(x3,x2) ::= 
 x3::node<next> * GP_1321(next,x2)&next!=null
 or emp&x3=x2
 (3,4),
 HP_1315(next2) ::= 
 next2::node<next> * HP_1315(next)
 or emp&next2=null
 (3,4)]
*************************************
Stop Omega... 14 invocations 
0 false contexts at: ()

!!! log(small):(0.049791,303)
Total verification time: 0.326558 second(s)
	Time spent in main process: 0.306398 second(s)
	Time spent in child processes: 0.02016 second(s)

