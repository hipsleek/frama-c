
!!!Full processing file "bugs/lsgB.ss"
Parsing file "bugs/lsgB.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! neqs:[]
Checking procedure lsg$node2~node2... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ SLSEG,G]requires SLSEG(l,e)&true
 ensures G(l,e)&true{,(3,4)=__norm};

!!! >>>>>> HIP gather infer pre <<<<<<
!!!Inferred Heap: []
!!!Inferred Pure: [ (l!=0 | 0<=e), (l!=0 | e<=0)]
*************************************
*******relational assumptions ********
*************************************
[ // BIND
(2;0)SLSEG(l,e)&l!=null & l!=e --> HP_1259(n1,e@NI) * HP_1261(e,l@NI) * 
l::node2<n1,s1> * HP_1260(s1,e@NI)&
true(3,4),
 // PRE_REC
(2;0)HP_1259(n1,e@NI) * HP_1261(e,l@NI)&l!=e --> SLSEG(n1,e)&
true(3,4),
 // POST
(1;0)SLSEG(e,e)&true --> G(l,e)&
true(3,4),
 // POST
(2;0)HP_1260(s1,e@NI) * l::node2<n1,s1> * G(n1,e)&l!=e --> G(l,e)&
true(3,4)]

Procedure lsg$node2~node2 SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ SLSEG(l1,e1) ::=  [emp&l1=e1; l1::node2<n2,DP> * SLSEG(n2,e1)&l1!=e1],
 G(l2,e2) ::=  [emp&l2=e2; l2::node2<n,DP> * G(n,e2)&l2!=e2]]
*************************************

*************************************
*******relational definition ********
*************************************
[ SLSEG(l1,e1) ::= 
 l1::node2<n2,DP> * SLSEG(n2,e1)&l1!=e1
 or emp&l1=e1
 (3,4),
 G(l2,e2) ::= 
 l2::node2<n,DP> * G(n,e2)&l2!=e2
 or emp&l2=e2
 (3,4)]
*************************************
Stop Omega... 14 invocations 
0 false contexts at: ()

!!! log(small):(0.065314,305)
Total verification time: 0.368848 second(s)
	Time spent in main process: 0.347414 second(s)
	Time spent in child processes: 0.021434 second(s)

