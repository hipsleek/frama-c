
!!!Full processing file "bugs/ll-last2.ss"
Parsing file "bugs/ll-last2.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

!!! formula1: emp&(self=null | (self!=null & self!=null))&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], (1<=self | self<=(0-1))),
([], self=null)])
!!! formula1: emp&(self=p | self!=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], true),
([], self=p)])
Checking procedure foo$node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H,G]requires H(x)&true
 ensures G(x,res)&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(2;0)H(x)&x!=null --> x::node<val2,next2> * HP_1279(next2)&
true(3,4),
 // BIND
(2;2;0)HP_1279(next2)&next2!=null --> next2::node<val1,next1> * 
HP_1310(next1)&
true(3,4),
 // PRE_REC
(2;2;2;0)HP_1310(next1)&next1!=null --> H(next1)&
true(3,4),
 // POST
(1;0)H(x)&res=null & x=null --> G(x,res)&
true(3,4),
 // POST
(1;2;0)HP_1279(next2) * res::node<val2,next2>&next2=null --> G(x,res)&
true(3,4),
 // POST
(1;2;2;0)x::node<val2,res> * res::node<val1,next1> * HP_1310(next1)&
next1=null --> G(x,res)&
true(3,4),
 // POST
(2;2;2;0)x::node<val2,next2> * next2::node<val1,next1> * G(next1,res)&
next1!=null --> G(x,res)&
true(3,4)]

Procedure foo$node SUCCESS.

!!! shape inference for flow:(3,4)