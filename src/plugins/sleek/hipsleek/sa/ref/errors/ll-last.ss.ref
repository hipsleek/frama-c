
!!!Full processing file "errors/ll-last.ss"
Parsing file "errors/ll-last.ss" by default parser...

!!! processing primitives "["prelude.ss"]
Starting Omega...oc
Starting z3... 

Checking procedure f_r_1200_while_20_6$node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H1,G1]requires H1(x)&true
 ensures G1(x,x')&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // BIND
(0)H1(x)&true --> x::node<val1,next1> * HP_1233(next1)&
true(3,4),
 // PRE_REC
(1;0)HP_1233(next1)&next1!=null --> H1(next1)&
true(3,4),
 // POST
(1;0)x::node<val1,next1> * G1(next1,x')&next1!=null --> G1(x,x')&
true(3,4),
 // POST
(2;0)HP_1233(next1) * x::node<val1,next1>&next1=null --> G1(x,x')&
true(3,4)]

Procedure f_r_1200_while_20_6$node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H1(x1) ::=  [x1::node<val,next> * HP_1233(next)&x1!=null],
 G1(x4,x3) ::=  [GP_1292(x4,x2) * x2::node<val,next>&next=null & x3=x2],
 GP_1292(x4,x2) ::=  [
  x4::node<val,next> * GP_1292(next,x2)&next!=null
  or emp&x4=x2
  ],
 HP_1233(next2) ::=  [emp&next2=null; next2::node<val,next> * HP_1233(next)]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H1(x1) ::= x1::node<val,next> * HP_1233(next)&x1!=null(3,4),
 G1(x4,x3) ::= GP_1292(x4,x2) * x2::node<val,next>&next=null & x3=x2(3,4),
 GP_1292(x4,x2) ::= 
 x4::node<val,next> * GP_1292(next,x2)&next!=null
 or emp&x4=x2
 (3,4),
 HP_1233(next2) ::= 
 next2::node<val,next> * HP_1233(next)
 or emp&next2=null
 (3,4)]
*************************************

!!! formula1: emp&(self!=null | self=null)&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&self=null&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([], self=null),
([self], true)])
!!! formula1: emp&{FLOW,(1,28)=__flow}[]
!!! formula1_under: emp&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([], true),
([self], true)])
!!! formula1: emp&self!=null&{FLOW,(1,28)=__flow}[]
!!! formula1_under: hfalse&false&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self], (1<=self | self<=(0-1)))])
!!! formula1: emp&x3!=null&{FLOW,(1,28)=__flow}[]
!!! formula1_under: hfalse&false&{FLOW,(1,28)=__flow}[]
!!! baga_over(unfolded):Some([([self,x_1290], true),
([x_1290], true)])
Checking procedure get_last$node... 


******************************
   ******* SPECIFICATION ********
******************************
 infer[ H,G]requires H(x)&true
 ensures G(x,res)&true{,(3,4)=__norm};

*************************************
*******relational assumptions ********
*************************************
[ // PRE
(1;0)H(x)&x!=null --> x::node<val2,next3> * HP_1430(next3)&
true(3,4),
 // PRE
(1;0)HP_1430(next1)&true --> next1::HP_1233<>&
true(3,4),
 // POST
(1;0)res::node<val1,next1> * x::GP_1292<res>&next1=null --> G(x,res)&
true(3,4),
 // POST
(2;0)H(res)&res=null & res=null --> G(x,res)&
true(3,4)]

Procedure get_last$node SUCCESS.

!!! shape inference for flow:(3,4)
*********************************************************
*******relational definition (flow= (3,4))********
*********************************************************
[ H(x5) ::=  [emp&x5=null; x5::node<val3,next4> * next4::HP_1233<>],
 G(x6,res1) ::=  [emp&res1=null & x6=null; x6::GP_1292<res1> * res1::node<val,next>&
next=null]]
*************************************

*************************************
*******relational definition ********
*************************************
[ H(x5) ::= 
 x5::node<val3,next4> * next4::HP_1233<>
 or emp&x5=null
 (3,4),
 G(x6,res1) ::= 
 x6::GP_1292<res1> * res1::node<val,next>&next=null
 or emp&res1=null & x6=null
 (3,4)]
*************************************
Stop Omega... 23 invocations 
0 false contexts at: ()

!!! log(small):(0.074593,402)
Total verification time: 0.371816 second(s)
	Time spent in main process: 0.349355 second(s)
	Time spent in child processes: 0.022461 second(s)

