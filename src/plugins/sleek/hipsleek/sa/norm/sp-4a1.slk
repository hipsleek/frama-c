data node{
	int val;
	node next;
}.

//useless parameters

HeapPred P1(node a).
HeapPred P2(node a).

pred ll<n:node> == self=null
   or self::node<_,p>*p::ll<n>
inv true.


lemma_infer [P1] self::ll<n> -> P1(self) .
print residue.

/*
# sp-4a1.slk

Temp Lemma(s) inferred as valid in current context.
 <1>emp&{FLOW,(1,22)=__flow}[]
 inferred hprel: [// Verify_Lemma
emp&self_lem_12=null --> P1(self_lem_12); 
// Verify_Lemma
P1(p_40) * 
self_lem_12::node<Anon_39,p_40>@M --> P1(self_lem_12)]


*/


/*
// this is for independent paramters, just like zip.
 (a) add lemma
 (b) unfold LHS and for infer_cmd
 (c) collect result from
*/


