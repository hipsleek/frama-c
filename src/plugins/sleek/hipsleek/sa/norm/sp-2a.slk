data node{
	int val;
	node next;
}.

pred zip<y> ==
  self=null & y=null
or self::node<_,p>*y::node<_,q>*p::zip<q>
inv true.

HeapPred P1(node a).
HeapPred P2(node a).
HeapPred H1(node a).
HeapPred H2(node a).

lemma_unsafe self::zip<y> <- P1(self) * P2(y).

infer [H1,H2] H1(x)*H2(y) |- x::zip<y>.
print residue.

/*
# I think we should schedule a right_to_left lemma here

*/

