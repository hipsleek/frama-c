/*


 (true)norm \/ (true)Err |- (true)norm --> fail

 {(true)norm ; (true)Err} |- (true)norm \/ (true)Err --> valid

 (true)norm |- (true)norm \/ (true)Err --> valid

 (true)norm |- (true)Err --> fail

 (true)norm |- (true)MayErr --> valid

 (true)Err <--> (true)Err \/ (false)Err

*/

/*

   S1 & F1 |- D * R1
   S2 & F2 |- D * R2
-------------------------------
    S1 & F1
    or s2 & F2  |- D * (R1 \/ R2)


    if F<:Fi
        S  |- Si * Ri
    else R1={}
   R = R1 U R2
 ----------------------------------
   S & F |- S1 & F1 or S2 & F2 * R


   x=null |- x::node(..) --> (x=null) & Error

   true   |- x::node(..) --> (true) & MayError

   [x] true   |- x::node(..) --> {x=null & Error, x::node<..> & OK} 

*/


//1.
checkentail true & flow __norm   |-  true & flow __norm .
expect Valid.

//2.
checkentail  x=1 & flow __Error  |-   x>0 & flow __Error  .
expect Valid.


//3.
checkentail  false  |-   x>0 & flow __norm  .
expect Valid.


//4.
checkentail  x=1 & flow __Error  |-   x>0 & flow __norm  .
expect Fail.



//5.
checkentail  x=1 & flow __norm  |-   x>0 & flow __Error.
expect Fail.


//6.
checkentail x=1 & flow __norm  or true & flow __Error  |- true & flow __norm.
print residue.
expect Fail.


//7.
checkentail true & flow __norm  or x=1 & flow __Error  |- 
    true & flow __norm    or     x>2 & flow __Error
   .
expect Fail.


//8.
checkentail y=0 & flow __norm   or x=1 & flow __Error  |- 
   x>0 & flow __Error  or  true & flow __norm
   .
expect Fail.



//9.
checkentail { y=0 & flow __norm   ; x=1 & flow __Error }  |- 
   x>0 & flow __Error  or  true & flow __norm
   .
print residue.
expect Valid.


//10.
checkentail { y=0 & flow __norm   ; x=1 & flow __Error }  |- 
   x>0 & flow __Error  or  y<0 & flow __norm
   .
print residue.
expect Valid.

//11.
checkentail { y=0 & flow __norm   ; x=1 & flow __Error }  |- 
   x=0 & flow __Error  or  true & flow __norm
   .
print residue.
expect Valid.


//12
checkentail { y=0 & flow __norm   ; x=1 & flow __Error }  |- 
   true & flow __norm
.
print residue.
expect Valid.

//13
checkentail { y=0 & flow __norm   ; x=1 & flow __Error }  |- 
   true & flow __MayError
.
print residue.
expect Valid.
