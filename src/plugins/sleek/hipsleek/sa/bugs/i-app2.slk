data node{
	int val;
        node prev;
	node next;
}.

HeapPred H1(node a, node b).
HeapPred HP_4(node a, node b).
HeapPred HP_3(node a, node b).

relAssume H1
 H1(c,y) --> c::node<val_16_751',p,next_16_752'>@M 
    * HP_3(p,y) * HP_4(next_16_752',y)&true.

relAssume H1
 HP_4(t_31',y)&t_31'!=null --> H1(t_31',y)&true.

relAssume HP_4
  HP_4(n,y) & n=null --> emp.

shape_infer [H1,HP_4][].

/*
[ H1(c_28,y_29) ::= c_28::node<val_16_751',p,next_16_752'>@M * (HP_4(next_16_752',y_29))&true,
 HP_4(n_30,y_31) ::= 
 emp&n_30=null
 or n_30::node<val_16_751',p,next_16_752'>@M * (HP_4(next_16_752',y_31))&true
 ]

--sa-useless

[ H1(c_28,y_29) ::= c_28::node<val_16_751',p,next_16_752'>@M * (HP_4(next_16_752'))&true,
 HP_4(n_30) ::= 
 emp&n_30=null
 or n_30::node<val_16_751',p,next_16_752'>@M * (HP_4(next_16_752'))&true
 ]


*/

