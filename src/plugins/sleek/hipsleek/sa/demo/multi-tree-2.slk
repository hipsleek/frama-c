data tree {
  node children;
}.

data node {
  tree child;
  node sibling;
}.

/*
ptree<> ==
  self::tree<c>*c::sll<>;

sll<> ==
  self=null
or  self::node<c,n>*c::ptree<> * n::sll<>;
*/

HeapPred H(tree a).
PostPred G(tree a).
HeapPred H2(node a).
PostPred G2(node a).
HeapPred H_7(tree a).
HeapPred H_8(node a).
HeapPred H_9(node a).

relAssume
 H2(l)&l!=null --> l::node<child_38_955,sibling_38_956>@M * 
  H_7(child_38_955) * H_8(sibling_38_956).

relAssume
 H_8(sibling_38_956) --> H2(sibling_38_956).

relAssume
 H_7(child_38_955) --> H(child_38_955).

relAssume
 H2(l)&l=null --> emp.

relAssume
 H(t)&t!=null --> t::tree<children_30_986>@M * H_9(children_30_986).

relAssume
 H_9(children_30_986) --> H2(children_30_986).

/*
relAssume
 H(t) --> emp&t!=null. // this seems spurious!

relAssume
 l::node<child_38_955,sibling_38_956>@M * G2(sibling_38_956) * 
  G(child_38_955) --> G2(l).

relAssume
 emp & l=null --> G2(l).

relAssume
 t::tree<children_30_986>@M * G2(children_30_986)&
  children_30_986=null --> G(t).

relAssume
 t::tree<children_30_986>@M * G2(children_30_986)&
  children_30_986!=null --> G(t).
*/

shape_infer [H,H2,H_7,H_8,H_9][].


/*
# multi-tree-2.slk

GOT

[ H(t_56) ::= t_56::tree<children_30_986>@M * H2(children_30_986),
 H_9(children_30_57) ::= H2(children_30_57),
 H_8(sibling_38_58) ::= H2(sibling_38_58),
 H_7(child_38_59) ::= child_38_59::tree<children_30_55>@M * H2(children_30_55),
 H2(l_60) ::= 
 H2(sibling_38_45) * l_60::node<child_38_46,sibling_38_45>@M * 
 child_38_46::tree<children_30_54>@M * H2(children_30_54)
 or emp&l_60=null
 ]

PROBLEM : H_7 is unnecessarily unfolded.

ALGO
====

1. First confirm the simple "equiv" definitions H_7.H_8,H_9

 H_8(sibling_38_956) --> H2(sibling_38_956).
 H_7(child_38_955) --> H(child_38_955).
 H_9(children_30_986) --> H2(children_30_986).

Confirmed as:
 H_8(sibling_38_956) <-> H2(sibling_38_956).
 H_7(child_38_955) <-> H(child_38_955).
 H_9(children_30_986) <-> H2(children_30_986).

2. Try confirm the next simplest:

 H(t)&t!=null --> t::tree<children_30_986>@M * H_9(children_30_986).

 Apply simplification (e.g. rewriting) 

 H(t)&t!=null --> t::tree<children_30_986>@M * H2(children_30_986).

3. Try confirm the next simplest:

  H2(l)&l!=null --> l::node<child_38_955,sibling_38_956>@M * 
    H_7(child_38_955) * H_8(sibling_38_956).
  H2(l)&l=null --> emp.

 Apply simplification (e.g. rewriting) 

  H2(l)&l!=null --> l::node<child_38_955,sibling_38_956>@M * 
    H(child_38_955) * H2(sibling_38_956).
  H2(l)&l=null --> emp.

 Combine conjuctively:
  H2(l) = l::node<child_38_955,sibling_38_956>@M * 
       H(child_38_955) * H2(sibling_38_956) & l!=null
  or l=null --> emp.


*/


