data node{
	int val;
	node next;
}.

HeapPred H1(node a, node b).
HeapPred HP_4(node a, node b).
HeapPred G1(node a, node b).

relAssume 
 H1(c,y) --> c::node<val_16_751',next_16_752'>@M 
    * HP_4(next_16_752',y)&true.

relAssume 
 HP_4(t_31',y)&t_31'!=null --> H1(t_31',y)&true.

relAssume 
 c::node<_,t>@M * G1(t,y) &t!=null 
 --> G1(c,y)&true.

relAssume 
 HP_4(next_16_788,y) * c::node<val_16_787,y>@M&
  next_16_788=null --> G1(c,y).

/*
relAssume 
  HP_4(n,y) & n=null --> emp.

relAssume 
  c::node<_,p,y>@M --> G1(c,y)&true.

relAssume 
 HP_3(p,y) * HP_4(n,y) * c::node<_,p,y>@M & n=null --> G1(c,y)&true.
*/

shape_infer [H1,HP_4][G1].

/*

[ H1(c_87,y_88) ::= c_87::node<val_16_751',next_16_752'>@M * (HP_4(next_16_752',y_88))&true,
 HP_4(next_16_89,y_90) ::= 
 emp&next_16_89=null
 or next_16_89::node<val_16_751',next_16_752'>@M * (HP_4(next_16_752',y_90))&
    true
 ,
 G1(c_91,y_92) ::= c_91::node<Anon_11,t>@M * (HP_93(t,y_92))&true,
 HP_93(t,y_92) ::= 
 emp&t=y_92
 or t::node<Anon_11,t_94>@M * (HP_93(t_94,y_92))&true
 ]

*/

