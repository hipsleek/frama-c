data node{
	int val;
	node next;
}.

PostPred HP_4(node a, node@NI b).
PostPred HP_5(node a, node@NI b).

pred G<x> ==
     self::node<val_29_788,null>@M&self=x 
or x::node<val_29_788,next_29_789> * HP_5(next_29_789,self) * 
     self::node<val_34_802,null>
inv self!=null.

pred G5<t> ==
   self=t & self!=null
   or self::node<_,nn>*nn::G5<t>
inv self!=null.

infer [HP_4,HP_5]
 t_32'::G<next_29_789> & next_29_789!=null 
  |- t_32'::node<val_34_802,next_34_803>@M * 
    HP_4(next_34_803,next_29_789) * HP_5(next_29_789,t_32').

print residue.

/*
# single.slk

 inferred hprel: [emp&next_34_803=null --> HP_4(next_34_803,next_29_789@NI)&
                   true; 
                  emp&next_29_789=t_32' & 
                   next_29_789!=null --> HP_5(next_29_789,t_32'@NI)&true; 
                  emp&next_34_803=null --> HP_4(next_34_803,next_29_789@NI)&
                   true; 
                  next_29_789::node<val_29_62,next_29_63>@M * 
                   HP_5(next_29_63,t_32'@NI)&
                   true --> HP_5(next_29_789,t_32'@NI)&true]

Thus:
 n=null -> HP_4(n,_)

 n=t & n!=null
  or n::node<_,nn>*HP_5(nn,t) --> HP_5(n,t)

Hence:
 HP_4(n,_) ::= n=null
 HP_5(n,t) ::= 
   n=t & n!=null
   or n::node<_,nn>*HP_5(nn,t) --> HP_5(n,t)

*/