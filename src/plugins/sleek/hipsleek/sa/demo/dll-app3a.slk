data node{
	node next;
	node prev;
}.

HeapPred G(node a,node b).
HeapPred H(node a,node b).
HeapPred HP_9(node a,node@NI b).
HeapPred HP_0(node a,node@NI b).
HeapPred HP_1(node a,node@NI b).
HeapPred HP_2(node a,node@NI b).
HeapPred HP_3(node a,node@NI b).

relAssume
 H(l1,l2)&true --> l1::node<next_16_7,prev_16_8> * 
  HP_9(next_16_7,l2) * HP_0(prev_16_8,l2) * 
  HP_1(l2,l1).

relAssume 
 HP_9(next_16_7,l2) * HP_1(l2,l1) &
  next_16_7!=null --> H(next_16_7,l2).

relAssume 
 HP_9(next_16_7,l2)&next_16_7=null --> emp.

relAssume 
 HP_1(l2,l1) --> l2::node<next_21_810,prev_21_811> * 
  HP_2(next_21_810,l1) * HP_3(prev_21_811,l1).
/*
 HP_0(prev_16_8,l2) * l1::node<next_16_7,prev_16_8> * 
  G(next_16_7,l2)&next_16_7!=null --> G(l1,l2).

 HP_0(prev_16_8,l2) * l1::node<l2,prev_16_8> * 
 HP_2(next_21_810,l1) * l2::node<next_21_810,l1> --> G(l1,l2).
*/
