data node{
	node prev;
	node next;
}.

HeapPred HP_7(node a,node b).
HeapPred HP_8(node a,node b).
HeapPred HP_9(node a).

infer [HP_7,HP_8,HP_9] 
HP_7(next_46_815,l2) * HP_8(prev_46_816,l2) * HP_9(l2) *
l1::node<l2,prev_46_816> 
& next_46_815=null 
& next_46_815=next_50_834 
& l2!=null 
 |-  l2::node<next_51_793',prev_51_794'>@M.

print residue.
/*
GOT
===
 <1>l1::node<l2,prev_46_816>@M[Orig] * (HP_31(next_51_29,next_50_834)) * (HP_32(prev_51_30,next_50_834))&next_46_815=null & next_46_815=next_50_834 & l2!=null & next_51_29=next_51_793' & prev_51_30=prev_51_794'&{FLOW,(19,20)=__norm}[]
 inferred hprel: [(HP_7(next_46_815,l2)) * (HP_8(prev_46_816,l2)) * 
                   (HP_9(l2))&l2!=null & 
                   next_46_815=null --> l2::node<next_51_29,prev_51_30>@M * 
                   (HP_31(next_51_29,next_46_815)) * 
                   (HP_32(prev_51_30,next_46_815))&true]

EXPECT something simpler
========================
 inferred hprel: 
   HP_9(l2)&l2!=null --> l2::node<next_51_29,prev_51_30>@M * 
                   HP_31(next_51_29) * 
                   HP_32(prev_51_30)&true]

*/
