data node{
	int val;
	node prev;
	node next;
}.


HeapPred G(node a).
HeapPred H(node a).
HeapPred HP_0(node a).
HeapPred HP_1(node a).

Declare_Unknown [HP_1].

relAssume 
 H(x)&true --> x::node<key_31_797,left_31_798,right_31_799> * 
  HP_0(left_31_798) * HP_1(right_31_799).

relAssume 
 HP_0(left)&left!=null --> H(left).

/*
relAssume 
 H(left)&left=null --> emp&true.
*/

shape_infer [H,HP_0][].

/*

# tree-6c8.slk

GOT:

[ HP_0(left_31) ::=  left_31::node<key_31_797,left_31_798,right_31_799>@M * HP_0(left_31_798) * 
HP_1(right_31_799)&true,
 H(x_32) ::=  x_32::node<key_31_797,left_31_798,right_31_799>@M * HP_0(left_31_798) * 
HP_1(right_31_799)&true,
 HP_1(a) ::= NONE]

====

 HP_0(left_31) ::=  H(left_31)&true,
 H(x_32) ::=  x_32::node<key_31_797,left_31_798,right_31_799>@M 
    * H(left_31_798) * HP_1(right_31_799)&true,
 HP_1(a) ::= NONE

WHY left!=null dropped?

EXPECT:
=======
 HP_0(left) ::=  H(left) & left!=null,
 H(x_32) ::=  x_32::node<key_31_797,left_31_798,right_31_799>@M 
    * H(left_31_798) * HP_1(right_31_799)&true,
 HP_1(a) ::= NONE

which can be expanded to:

 HP_0(left) ::=  left::node<key_31_797,left_31_798,right_31_799>@M 
    * H(left_31_798) * HP_1(right_31_799)&true,
 H(x_32) ::=  x_32::node<key_31_797,left_31_798,right_31_799>@M 
    * H(left_31_798) * HP_1(right_31_799)&true,
 HP_1(a) ::= NONE


*/