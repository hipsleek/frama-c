data node{
	int val;
	node next;
}.

pred ll<> == self = null  or self::node<_, q> * q::ll<>.

pred ltwo<p:node> == p::ll<> & self = null  or 
   self::node<_, q> * p::node<_,r> * q::ltwo<r>.

HeapPred H1(node a, node b).
HeapPred H2(node a).
HeapPred H3(node a).
HeapPred G1(node a).//, node b).
HeapPred G2(node a).
HeapPred G3(node a, node b).

/*
infer  [H1,G1] H1(x,y) & x=null
 |-  G1(x).
print residue.
*/

/*
infer  [H2,H3,G1,G2] H2(x) * H3(y) & x=null
 |-  G1(x) * G2(y).
print residue.
*/

/*
infer  [H1,G1,G2] H1(x,y) & x=null
 |-  G1(x) * G2(y).
print residue.
*/

infer  [H1,G3] H1(x,y) & x=null
 |-  G3(x,y).
print residue.