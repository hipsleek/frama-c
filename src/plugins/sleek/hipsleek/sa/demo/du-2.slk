
data node {
 int key;
 node left;
 node right;
}.

PostPred G(node a).

relAssume
 x::node<k,left,right> 
  & left=null & right!=null--> G(x).

relAssume 
 x::node<k,left,right> *left::node<_,_,_> 
  & right=null--> G(x).

shape_infer [][G].

/*
# du-2.slk  --pred-disj-unify

Problem : How come GP_36 is not picking right!=null?
    This is unsound. Otherwise, disj-unify is performing
    a weakening process, and may only be applied to post-pred.
    We may want to consider a version of disj-unify that
    is equivalence-preserving...

GOT
===
 G(x_34) ::=  x_34::node<k,left,right>@M * GP_35(left) * GP_36(right),
 GP_35(left) ::=  emp&left=null
      or left::node<Anon_11,Anon_12,Anon_13>@M&true
 GP_36(right) ::=  emp&right=null,



*/
