// non-linear RHS is harder to handle..

checkentail true |- (exists b: 0<=b*a<=1).
print residue.
// fail?

/*
# ex2c1.slk -tp z3

Can messages be suppressed or are they from simplify?

!!! **solver.ml#8270:super_smart_xpure:falseOmega Error Exp:Globals.Illegal_Prover_Format("[omega.ml] Non-linear arithmetic is not supported by Omega.")
 Formula: exists(b_17:(b_17*a)<=1 & 0<=(b_17*a))
Omega Error Exp:Globals.Illegal_Prover_Format("[omega.ml] Non-linear arithmetic is not supported by Omega.")
 Formula: exists(b_17:(b_17*a)<=1 & 0<=(b_17*a))

!!! split_ante1 : true
!!! split_ante1_sym : trueOmega Error Exp:Globals.Illegal_Prover_Format("[omega.ml] Non-linear arithmetic is not supported by Omega.")
 Formula: exists(b_17:(b_17*a)<=1 & 0<=(b_17*a))

=======

# ex2b.slk -tp oc -dre ".*nonlinear"

checkentail true |- (exists b: 0<b*a<=1).

(==omega.ml#520==)
drop_nonlinear_formula@24
drop_nonlinear_formula inp1 : not(exists(b_33:(b_33*a)<=1 & 0<(b_33*a)))
drop_nonlinear_formula@24 EXIT: not(exists(b_33:false & false))

checkentail true |- (exists b: b*a>=0).
print residue.
// valid?

checkentail true |- (exists b: 0<=b*a<=1).
print residue.
// valid?

*/