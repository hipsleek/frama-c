//Valid.Fail.Fail.Valid.Fail.Fail.
data node { int val ; node next }.

/*
pred lseg<n, p> == case {
     n=0 -> [] self = p & n = 0;
     n!=0 ->  [] self::node<next = r> * r::lseg<n - 1, p>; 
     }
     inv n >= 0.
*/

pred lseg<n, p> == self = p & n = 0
     or self::node<next = r> * r::lseg<n - 1, p>
     inv n >= 0.

lemma_safe "V2" self::lseg<n, p> &  n = a + b & a,b >=0 <- self::lseg<a, r> * r::lseg<b, p>.


