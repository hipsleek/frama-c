/*
[RELDEFN post_1215: ( res=2222 & 1<=x) -->  post_1215(x,res),
RELDEFN post_1215: ( x+1111=res & res<=1111) -->  post_1215(x,res)]
*/

relation post2(int x, int rr).

//relation post3(int x, int rr, int flow_n).

infer [post2] res=2222 & 1<=x & flow __Exc |- post2(x,res) & flow __flow.
print residue.

infer [post2,@flow] res=2222 & 1<=x & flow __Exc  |- post2(x,res) & flow __flow.
print residue.

infer [post2,@flow] res=2222 & 1<=x   |- post2(x,res) & flow __flow.
print residue.

infer [post2] res=2222 & 1<=x   |- post2(x,res) & flow __flow.
print residue.
/*
# slk-exc3.slk

infer [post2] res=2222 & 1<=x & flow __Exc |- post2(x,res) & flow __flow.

infer [post2,@flow] res=2222 & 1<=x & flow __Exc  |- post2(x,res) & flow __flow.

First case should be without [flow]!

Residue:
 <1>emp&res=2222 & 1<=x&{FLOW,(22,23)=__Exc}[]
 inferred rel: [RELDEFN post2[[flow]]: ( res=2222 & 1<=x) -->  post2(x,res)]

Second case should have 22<=flow<=23 also

Residue:
 <1>emp&res=2222 & 1<=x&{FLOW,(22,23)=__Exc}[]
 inferred rel: [RELDEFN post2[[flow]]: ( res=2222 & 1<=x) -->  post2(x,res)]


*/



