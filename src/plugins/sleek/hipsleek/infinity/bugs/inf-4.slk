
data node {
	int val; 
	node next; 
}.

pred  sortll<mi> == self=null & mi=\inf
   or self::node<mi, p> * p::sortll<m2> & mi<=m2
inv true.

//(4) Fail
checkentail true |- v=max(v,-w).

//(45) Fail
checkentail true |- \inf+8 != -\inf.

/*
# inf-4.slk

Starting Omega...oc
Omega Error format: self=0 & mi=\inf
Omega Error format: ((self=0 & mi=\inf) | self>0)
Omega Error format: exists(m2:((m2=\inf | exists(p:p>0))) & mi<=m2)

*/
