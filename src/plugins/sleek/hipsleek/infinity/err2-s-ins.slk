data node {
	int val; 
	node next; 
}.

pred  sortll<mi> == self=null & mi=\inf
   or self::node<mi, p> * p::sortll<m2> & mi<=m2
inv true.

//(1) valid
checkentail res=null |- res::sortll<m> & m=\inf.
print residue.
/*
 UNSOUND to have false
 <1>hfalse&false&{FLOW,(19,20)=__norm}[]

*/

//(2) valid
checkentail res=null |- res::sortll<m> .
print residue.
/* 
 UNSOUND to have false
 <1>hfalse&false&{FLOW,(19,20)=__norm}[]
*/


checkentail res=null |- res::sortll<m> & m>=1.

checkentail res=null |- res::sortll<m> & m=1.

checkentail m=\inf |- m>=1.
